         TITLE '***** LSTVTOC3 - PRINT DISK PACK MAP ***'
LSTVTOC3  SVLNK R3
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* THIS PROGRAM READS THE FILE OUTPUT FROM LSTVTOC2 AFTER IT IS SORTED
* IN ORDER BY VOLUME SERIAL NBR AND BEGINNING EXTENT ADDRESS. ONE
* RECORD OCCURS FOR EACH EXTENT ON THE PACK. DISK PACK MAP DATA IS
* PRINTED FOR EACH INPUT RECOD.
* AUTHOR R. THORNTON    MAR, 1973
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* APRIL,1983   J.SCHNELLMANN
* ADDED CODE TO INDICATE VSAM DSORG
* INPUT FILE MODIFIED TO INCLUDE SECOND BYTE OF DSORG INFORMATION
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*
         OPEN  (PRINT1,OUTPUT,INPUT1)  OPEN FILES
         USING INRECD,R6
*
*
*
MAINLINE EQU   *                       *** MAINLINE ROUTINE ***
         GET   INPUT1                  READ INPUT RECORD
         LR    R6,R1                   GET RECORD ADDRESS
         CLC   INVOL,HDGVOL            SAME VOLUME
         BE    FORMAT                  YES
         BAL   R9,ENDVOL               NO, NEW VOLUME
         LH    R1,TRKCYL               GET NBR TRKS/CYL
         CVD   R1,DTRKCYL              AND CONVERT TO PACKED
         MVC   HDGVOL,INVOL            NEW VOLSER TO HEADING
         BAL   R9,HEADING              PERFORM HEADING ROUTINR
*
*
*
FORMAT   EQU   *                       *** BEGIN PRINT FORMAT
         LH    R12,INLOCC              GET LOWER CYLINDER NBR
         MH    R12,TRKCYL              MULTIPLY BY NBR HEADS/CYL
         AH    R12,INLOHH              ADD LOWER HEAD NBR = REL TRK
         BZ    COMPNXT                 ZERO, BRANCH
         ICM   R12,12,=XL2'00'         CLEAR HIGH ORDER 2 BYTES
         BCTR  R12,R0                  NOT ZERO, SUBTRACT 1
         CH    R12,LASTRAK             CONTIGUOUS TO LAST EXTENT
         BE    COMPNXT                 YES, O.K.
         CLI   NEWVOL,0                NEW VOLUME
         BNE   UNDEFX                  NO
         MVI   NEWVOL,1                YES, RESET NEW VOL SWITCH
         B     COMPNXT                 GO PROCESS
UNDEFX   MVI   PRT,C'*'                BEGIN PRINT FILL
         MVC   PRT+1(87),PRT           FILL PRINT WITH *'S
         MVC   PRT+29(18),=C' UNDEFINED EXTENT ' FLAG HOLE IN EXTENTS
         STH   R12,UNDENDT             SAVE END OF UNDEF XTNT TRK NO
         CVD   R12,WK1                 CONVERT HIGH TRK NBR
         DP    WK1,PTRKCYL             COMPUTE CYLS AND TRKS
         UNPK  PENDCYL,WK1+3(3)        UNPACK TO PRINT
         OI    PENDCYL+3,C'0'          CLEAR SIGN
         MVI   PDASH2,C'.'             DELIMITER
         UNPK  PENDHD,WK1+6(2)         UNPACK TO PRINT
         OI    PENDHD+1,C'0'           CLEAR SIGN
         SR    R12,R12                 CLEAR FOR INSERT
         ICM   R12,3,LASTRAK           GET END OF LAST EXTENT
         LA    R12,1(R12)              ADD 1
         CVD   R12,WK1                 CONVERT TO PACKED
         DP    WK1,PTRKCYL             COMPUTE CYLS AND TRKS
         UNPK  PBEGCYL,WK1+3(3)        UNPACK TO PRINT
         OI    PBEGCYL+3,C'0'          CLEAR SIGN
         MVI   PDASH1,C'.'             DELIMITER
         UNPK  PBEGHD,WK1+6(2)         UNPACK TO PRINT
         OI    PBEGHD+1,C'0'           CLEAR SIGN
         LH    R12,UNDENDT             GET END OF UNDEF XTNT TRK NO
         SH    R12,LASTRAK             COMPUTE NBR TRKS
         CVD   R12,WK1                 CONVERT
         AP    TUNAL,WK1               ADD TO TOTAL UNALLOCATED TRKS
         DP    WK1,PTRKCYL             DIVIDE BY TRKS/CYL
         MVC   PCYLALL,=X'4020206B202020'
         ED    PCYLALL,WK1+3           EDIT CYLINDERS ALLOCATED
         MVI   PPD1,C'.'               DELIMITER
         UNPK  PHDALL,WK1+6(2)         TRACKS TO PRINT
         OI    PHDALL+1,C'0'           CLEAR SIGN
         MVC   PCYLUN(10),PCYLALL      SHOW ALL UNUSED
         AP    TUNUS,WK1(6)            ADD TO TOTAL UNUSED CYL
         BAL   R9,PRINT                GO PRINT
COMPNXT  LH    R12,INHICC              GET UPPER EXTENT CYLINDER NBR
         MH    R12,TRKCYL              MULTIPLY BY NBR HEADS/CYLINDER
         AH    R12,INHIHH              ADD UPPER EXTENT HEAD NBR
         STH   R12,LASTRAK             SAVE LAST TTR FOUND
         MVC   PDSN,INDSN              DATASET NAME
         CLI   INDSN,C'*'              IS IT VTOC OR UNALLOCATED
         BE    FMX                     YES
         MVC   PDSORG,=C'IS'           INDICATE ISAM
         TM    INDSORG,X'80'           IS IT ISAM
         BO    MVU                     YES
MVDA     MVC   PDSORG,=C'DA'           INDICATE DA ORGANIZATION
         TM    INDSORG,X'20'           IS IT DA
         BO    MVU                     YES
MVPS     MVC   PDSORG,=C'PS'           INDICATE PS ORGANIZATION
         TM    INDSORG,X'40'           IS IT PS
         BO    MVU                     YES
MVPO     MVC   PDSORG,=C'PO'           INDICATE PARTITIONED ORG
         TM    INDSORG,X'02'           IS IT PO
         BO    MVU                     YES
MVVS     MVC   PDSORG,=C'VS'           INDICATE VSAM     JES 4/83
         TM    INDSORG+1,X'08'         IS IT VSAM        JES 4/83
         BO    MVU                     YES               JES 4/83
MVQUES   MVC   PDSORG,=C'??'           INDICATE UNKNOWN ORGANIZATION
MVU      MVC   PRECFM,=C'U  '          INIDICATE UNDEFINED RECFM
         TM    INRECFM,X'C0'           IS IT UNDEFINED
         BO    CKBK                    YES
MVF      MVC   PRECFM,=C'F  '          INDICATE FIXED RECFM
         TM    INRECFM,X'80'           IS IT FIXED
         BO    CKBK                    YES
         MVC   PRECFM,=C'V  '          INDICATE VARIABLE RECFM
         TM    INRECFM,X'40'           IS IT VARIABLE
         BO    CKBK                    YES
         MVI   PRECFM,C'?'             UNKNOWN RECFM
CKBK     TM    INRECFM,X'10'           IS IT BLOCKED
         BZ    MVED1                   NO
MVB      MVC   PRECFM+1(1),=C'B'       INDICATE BLOCKED
MVED1    MVC   PLRECL,=X'4020206B202020'
         ED    PLRECL,LRECL+2          EDIT LOGICAL RECD LENGTH
         MVC   PBKSIZ,=X'4020206B202020'
         ED    PBKSIZ,BLKSIZE+2        EDIT BLOCKSIZE
         MVC   PKEY,=X'40202020'       EDIT WORD
         ED    PKEY,KEYLEN+3           EDIT KEY LENGTH
         MVC   PUSE,=X'402020204B2020' EDIT WORD
         ED    PUSE,PCTUSE+2           EDIT PERCENT USE
         MVC   WK1(2),INVSEQ           MOVE TO ALIGN
         LH    R12,WK1                 GET VOL SEQ NBR
         CVD   R12,WK1                 CONVERT TO PACKED
         UNPK  PVLSEQ,WK1              UNPACK TO PRINT
         OI    PVLSEQ+1,C'0'           CLEAR SIGN
         SR    R12,R12                 CLEAR WORK REG
         IC    R12,INSEQ               PICK UP EXTENT SEQ NBR
         CVD   R12,WK1                 CONVERT TO PACKED
         UNPK  PEXTM,WK1               UNPACK TO PRINT
         OI    PEXTM+1,C'0'            CLEAR SIGN
         NI    INTYP,X'07'             CLEAR ALL BUT TYPE BITS
         SR    R12,R12                 CLEAR WORK REG
         IC    R12,INTYP               PICK UP EXTENT TYPE
         MH    R12,=H'10'              MULTIPLY BY TBL ENTRY LENGTH
         LA    R12,XTLITBL(R12)        GET LITERAL ADDRESS
         MVC   PXTYP,0(R12)            MOVE LITERAL
FMX      MVC   WK1(2),INLOCC           MOVE TO ALIGN
         LH    R12,WK1                 GET LOWER CYLINDER NBR
         CVD   R12,WK1                 CONVERT TO PACKED
         UNPK  PBEGCYL,WK1             UNPACK TO PRINT
         OI    PBEGCYL+3,C'0'          CLEAR SIGN
         MVI   PDASH1,C'.'             DELIMITER
         MVC   WK1(2),INLOHH           MOVE TO ALIGN
         LH    R12,WK1                 GET LOW HEAD NBR
         CVD   R12,WK1                 CONVERT TO PACKED
         UNPK  PBEGHD,WK1              UNPACK TO PRINT
         OI    PBEGHD+1,C'0'           CLEAR SIGN
         MVC   WK1(2),INHICC           MOVE TO ALIGN
         LH    R12,WK1                 GET UPPER CYLINDER NBR
         CVD   R12,WK1                 CONVERT TO PACKED
         UNPK  PENDCYL,WK1             UNPACK TO PRINT
         OI    PENDCYL+3,C'0'          CLEAR SIGN
         MVI   PDASH2,C'.'             DELIMITER
         MVC   WK1(2),INHIHH           MOVE TO ALIGN
         LH    R12,WK1                 GET UPPER HEAD NBR
         CVD   R12,WK1                 CONVERT TO PACKED
         UNPK  PENDHD,WK1              UNPACK TO PRINT
         OI    PENDHD+1,C'0'           CLEAR SIGN
         MVC   PCYLALL,=X'4020206B202020'
         MVC   WK1(2),INALLOC          MOVE TO ALIGN
         LH    R12,WK1                 GET NBR TRACKS ALLOCATED
         CVD   R12,WK1                 CONVERT TO PACKED
         AP    TALLOC,WK1              ADD TO TOTAL ALLOCATED TRKS
         B     DP1                     GO EDIT
ADDUN    AP    TUNAL,WK1               ADD TO TOTAL UNALLOCATED TRKS
DP1      DP    WK1,PTRKCYL             DIVIDE BY TRKS/CYL
         ED    PCYLALL,WK1+3           EDIT CYLINDERS ALLOCATED
         MVI   PPD1,C'.'               DELIMITER
         UNPK  PHDALL,WK1+6(2)         TRACKS TO PRINT
         OI    PHDALL+1,C'0'           CLEAR SIGN
         CLI   INUNUS,C'?'             UNUSED SPACE AVAILABLE
         BNE   EDUNUS                  YES, GO EDIT
         MVC   PCYLUN+3(7),=C'UNKNOWN' UNKNOWN UNUSED SPACE
         B     PLINE                   GO PRINT THE LINE
EDUNUS   MVC   PCYLUN,=X'4020206B202020' EDIT WORD TO PRINT
         MVC   WK1(2),INUNUS           MOVE TO ALIGN
         LH    R12,WK1                 GET UNUSED TRACKS
         CVD   R12,WK1                 CONVERT TO PACKED
         DP    WK1,PTRKCYL             DIVIDE BY TRKS/CYL
         CLI   INDSN,C'*'              IS IT VTOC OR UNALLOCATED
         BE    MVED2                   YES
         AP    TUNUS,WK1(6)            ADD TO TOTAL UNUSED CYL
MVED2    ED    PCYLUN,WK1+3            EDIT UNUSED CYLINDERS
         MVI   PPD2,C'.'               DELIMITER
         UNPK  PHDUN,WK1+6(2)          UNUSED TRACKS TO PRINT
         OI    PHDUN+1,C'0'            CLEAR SIGN
PLINE    BAL   R9,PRINT                GO PRINT THE LINE
         B     MAINLINE                AND READ NEXT RECORD
*
*
*
PRINT    EQU   *                       *** PRINT SUBROUTINE ***
         PUT   PRINT1,PRTLINE          WRITE THE LINE
         AP    LINCT,=P'1'             ADD 1 TO LINE COUNTER
         CLI   PCC,C' '                SINGLE SPACED
         BE    CLRPRT                  YES
         AP    LINCT,=P'1'             ADD ANOTHER
         CLI   PCC,C'0'                DOUBLE SPACED
         BE    CLRPRT                  YES
         AP    LINCT,=P'1'             ADD THIRD
CLRPRT   MVI   PCC,C' '                SET SINGLE SPACING
         MVC   PRT,PCC                 CLEAR PRINT LINE
         CP    LINCT,=P'61'            END OF PAGE
         BCR   LO,R9                   NO
         ST    R9,P9                   SAVE RETURN ADDRESS
         BAL   R9,HEADING              PERFORM HEADING ROUTINE
         L     R9,P9                   RESTORE RETURN ADDRESS
         BR    R9                      RETURN
*
*
*
ENDVOL   EQU   *                       *** END OF VOLUME ROUTINE ***
         CLI   HDGVOL,X'FF'            FIRST TIME
         BCR   EQ,R9                   YES, EXIT
         ST    R9,EV9                  SAVE RETURN ADDRESS
         DP    TALLOC,PTRKCYL          DIVIDE BY TRKS/CYL
         DP    TUNAL,PTRKCYL           DIVIDE BY TRKS/CYL
         UNPK  TALC,TALLOC(7)          TOTAL ALLOCATED
         UNPK  TUNC,TUNAL(7)           TOTAL UNALLOCATED
         UNPK  TUSD,TUNUS              TOTAL UNUSED BUT ALLOCATED
         OI    TALC+2,C'0'             CLEAR SIGN
         OI    TUNC+2,C'0'             CLEAR SIGN
         OI    TUSD+2,C'0'             CLEAR SIGN
         ZAP   TALLOC,=P'0'            TOTAL ALLOC TO ZERO
         ZAP   TUNAL,=P'0'             SET TOTAL UNUSED TO ZERO
         ZAP   TUNUS,=P'0'             SET TOTAL UNUSED TO ZERO
         MVC   PRTLINE,TOTLINE         VOLUME TOTAL LINE TO PRINT
         BAL   R9,PRINT                PRINT PACK TOTAL LINE
         MVC   LASTRAK,XFF             INITIALIZE LAST TRACK FOUND
         MVI   NEWVOL,0                SHOW NEW VOLUME
         L     R9,EV9                  GET RETURN ADDRESS
         BR    R9                      RETURN
*
*
*
HEADING  EQU   *                       *** HEADING SUBROUTINE ***
         MVC   PRTLINE,HDG1            HEADING LINE 1 TO PRINT
         ZAP   LINCT,=P'0'             LINE COUNTER TO ZERO
         ST    R9,H9                   SAVE RETURN ADDRESS
         BAL   R9,PRINT                GO PRINT THE HEADER
         MVC   PRTLINE,HDG2            SECOND HEADER TO PRINT
         BAL   R9,PRINT                GO PRINT IT
         MVI   PCC,C'0'                DOUBLE SPACE NEXT LINE
         L     R9,H9                   RESTORE RETUN ADDR
         BR    R9                      RETURN
*
*
*
EOJ      EQU   *                       *** END OF JOB ROUTINE ***
         BAL   R9,ENDVOL               PRINT END OF VOLUME TOTAL
         MVC   PRTLINE(30),=C'-***** END OF LSTVTOC3 LISTING'
         BAL   R9,PRINT                PRINT LAST LINE
         CLOSE (INPUT1,,PRINT1)        CLOSE FILES
         L     R13,4(R13)              GET CALLER'S SAVE AREA ADDR
         LM    R14,R12,12(R13)         RESTORE HIS REGISTERS
         SR    R15,R15                 SET RETURN CODE = 0
         BR    R14                     GOBACK TO CALLER
*
*
*
*                         ***** WORKING STORAGE AND FILES *****
*
*
EV9      DS    F
P9       DS    F
H9       DS    F
LO       EQU   4                       MASK FOR BRANCH LOW
EQ       EQU   8                       BR EQUAL MASK
DTRKCYL  DS    D
         ORG   *-2
PTRKCYL  DS    PL2
         ORG
WK1      DS    D                       WORK AREA
LASTRAK  DC    X'FFFF'                   LAST TRACK ADDR FOUND
XFF      DC    X'FFFF'                   CONSTANT HALFWORD HEX F'S
NEWVOL   DC    X'00'
LINCT    DC    PL2'0'                  PRINT LINE COUNTER
TALLOC   DC    PL9'0'                  TOTAL ALLOCATED TRACKS
TUNUS    DC    PL9'0'                  TOTAL UNALLOCATED CYLINDERS
TUNAL    DC    PL9'0'                  TOTAL UNALLOCATED TRACKS
XTLITBL  DS    0CL10                   LITERALS FOR EXTENT TYPE
         DC    CL10'UNKNOWN'
         DC    CL10'   PRIME'
         DC    CL10'     OFLO'
         DC    CL10'  PRIM/OFLO'
         DC    CL10'     INDX'
         DC    CL10' PRIM/INDX'
         DC    CL10'OFLO/INDX'
         DC    CL10'PRM/OFL/IX'
HDG1     DS    0CL133                  *** HEADING LINE 1 ***
         DC    CL40'1LSTVTOC3'
         DC    CL28'*** DISK PACK MAP FOR VOLUME'
         DC    C' '
HDGVOL   DC    X'FFFFFFFFFFFF'
         DC    CL58' ***'
*
*
*
HDG2     DS    0CL133                  *** HEADING LINE 2 ***
         DC    CL31'0DATA SET NAME'
         DC    CL35'DSORG RECFM  LRECL BLKSIZE KEYLEN'
         DC    CL33'PCT USE VOLSEQ    TYPE     EXTM'
         DC    CL34'BEGIN   END  CYL ALLOC  CYL UNUSED'
*
*
*
TOTLINE  DS    0CL133                  PACK TOTAL LINE
         DC    CL27'-TOTAL ALLOCATED CYLINDERS'
TALC     DS    CL3                     TOTAL ALLOCATED CYL
         DC    CL30', TOTAL UNALLOCATED CYLINDERS'
TUNC     DS    CL3                     TOTAL UNALLOCATED CYLINDERS
         DC    C', '
         DC    CL29'TOTAL ALLOCATED BUT UNUSED'
TUSD     DS    CL3                     UNUSED CYLINDERS
         DC    CL41' '
*
*
*
PRTLINE  DS    0CL133                  *** PRINT LINE ***
PCC      DS    CL1                     CARRIAGE CONTROL
PRT      DS    0CL132                  PRINT DATA
PDSN     DS    CL30                    DSNAME
         DS    CL2
PDSORG   DS    CL2                     DSORG
         DS    CL3
PRECFM   DS    CL3                     RECFM
         DS    CL1
PLRECL   DS    CL7                     LRECL
         DS    CL1
PBKSIZ   DS    CL7                     BLKSIZE
         DS    CL3
PKEY     DS    CL4                     KEY LENGTH
         DS    CL2
PUSE     DS    CL7                     PERCENT TRACK USE
         DS    CL3
PVLSEQ   DS    CL2                     VOL SEQUENCE NBR
         DS    CL3
PXTYP    DS    CL10                    EXTENT TYPE
         DS    CL3
PEXTM    DS    CL2                     EXTENT M
         DS    CL1
PBEGCYL  DS    CL4                     BEGIN CYLINDER
PDASH1   DS    CL1                     DASH
PBEGHD   DS    CL2                     BEGIN HEAD NBR
         DS    CL1
PENDCYL  DS    CL4                     ENDING CYLINDER
PDASH2   DS    CL1                     DASH
PENDHD   DS    CL2                     ENDING HEAD NBR
PCYLALL  DS    CL7                     CYLINDERS ALLOCATED
PPD1     DS    CL1                     PERIOD
PHDALL   DS    CL2                     TRKS ALLOCATED
         DS    CL1
PCYLUN   DS    CL7                     UNUSED CYLINDERS
PPD2     DS    CL1                     PERIOD
PHDUN    DS    CL2                     UNUSED TRACKS
*
*
*
INRECD   DSECT ,                       *** INPUT RECORD ***
INDSN    DS    CL44                    DSNAME
INEXT    DS    0XL22                   EXTENT INFORMATION
INTYP    DS    XL1                     EXTENT TYPE, BIT7=PRIME,
*                                      BIT6=OFLO, BIT5=INDEX
INSEQ    DS    XL1                     EXTENT SEQUENCE
INLOCC   DS    H                       LOWER CYLINDER NBR
INLOHH   DS    H                       LOWER HEAD NBR
INHICC   DS    H                       UPPER CYLINDER NBR
INHIHH   DS    H                       UPPER HEAD NBR
INVOL    DS    CL6                     VOL SER NBR
INALLOC  DS    H                       TRACKS ALLOCATED IN EXTENT
INUNUS   DS    H                       NBR UNUSED TRACKS
INVSEQ   DS    XL2                     VOLUME SEQ NBR
INRECFM  DS    XL1                     RECFM
INDSORG  DS    XL2                     DSORG            JES 4/83
INALTYP  DS    XL1                     SPACE ALLOCATION TYPE
CYLVOL   DS    H                       CYLINDERS ON THE VOLUME
TRKCYL   DS    H                       TRACKS PER CYLINDER
BYTRK    DS    H                       BYTES PER TRACK
BLKC     DS    H                       KEYED BLOCK CONSTANT
NBLKC    DS    H                       DECREMENT FOR NO KEY IN BLOCK
UNDENDT  DS    H                       SIZE OF UNDEFINED EXTENT
LRECL    DS    PL5                     LRECL
BLKSIZE  DS    PL5                     BLKSIZE
KEYLEN   DS    PL5                     KEY LENGTH
RKP      DS    PL5                     REL. KEY POSITION
CYLOV    DS    PL5                     OFLO TRKS/CYL
CORIX    DS    PL5                     BYTES FOR HIGH INDEX
NBRIX    DS    PL5                     NBR INDEX LEVELS
OVRECS   DS    PL5                     NBR OFLO RECORDS
FULCOV   DS    PL5                     NBR FULL CYL OFLO AREAS
BLKFCTR  DS    PL5                     BLOCKING FACTOR
BLKTRK   DS    PL5                     NBR BLOCKS PER TRACK
SECALL   DS    PL5                     NBR SECONDARY TRKS REQUESTED
NRECDS   DS    PL5                     NBR RECORDS ON FILE
PCTUSE   DS    PL5                     PERCENTAGE TRACK USE
OVTRKS   DS    PL5                     NBR REMAINING OFLO TRKS
TKSUSED  DS    PL5                     TOTAL TRACKS ALLOC TO DATASET
LSTVTOC3  CSECT
*
*
*
INPUT1   DCB   DSORG=PS,MACRF=GL,RECFM=FB,DDNAME=INPUT1,EODAD=EOJ
PRINT1   DCB   DSORG=PS,MACRF=PM,LRECL=133,BLKSIZE=133,RECFM=FBA,      X
               DDNAME=PRINT1
         END
