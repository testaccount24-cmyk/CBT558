         TITLE '***** EXCPIO: EXCP SUBROUTINE *****'
         PRINT NOGEN
EXCPIO   SVLNK R3,R4,,SUB
**********************************************************************
*  GENERALIZED EXCP SUBROUTINE FOR TECHNICAL PROGRAMS. CALLER PASSES *
*  A PARAMETER BLOCK CONTAINING FIELDS IDENTIFYING THE PARAMETERS    *
*  NEEDED TO FULFILL THE REQUEST. THIS SUBROUTINE MUST RESIDE BELOW  *
*  THE 16M LINE, AND MUST BE ENTERED IN 24-BIT ADDRESSING MODE.      *
*  THE PARAMETER LIST MUST CONTAIN POINTERS TO AN AREA FORMATTED AS  *
*  THE EXCPARMS DSECT AND TO AN ERROR MESSAGE AREA LARGE ENOUGH FOR  *
*  UP TO 6 80-BYTE ERROR LINES.                                      *
*                                                                    *
*  AUTHOR R. THORNTON NOV 1992                                       *
**********************************************************************
*
***********************************************************************
* POINT TO THE PARAMETER AREA AND INITIALIZE FIELDS                   *
***********************************************************************
         MVC   ERRMSGA,4(R1)           SAVE POINTER TO ERROR MSG AREA
         L     R5,0(R1)                POINT TO CALLER'S PARAMETERS
         USING EXCPARMS,R5
         MVC   RETCODE,BLANKS          CLEAR RETURN
         MVC   ERRNLINE,H0                 INFO FIELDS
         MVC   ERRILINE,H0             CLEAR I/O ERROR LINE COUNT
         XC    FMT4ADDR,FMT4ADDR       CLEAR FORMAT 4 DSCB ADDRESS
         XC    FMT1ADDR,FMT1ADDR       CLEAR FORMAT 1 DSCB ADDRESS
         XC    FMT3ADDR,FMT3ADDR       CLEAR FORMAT 3 DSCB ADDRESS
         XC    CKDADDR,CKDADDR         CLEAR COUNT-KEY-DATA ADDRESS
***********************************************************************
* ON FIRST ENTRY ONLY, ALLOCATE A FILE FOR USE BY EXCP USING DYNALLOC *
* AND OPEN THE DCB USED FOR EXCP OPERATIONS. IF EITHER OPERATION      *
* FAILS, RETURN WITH A CODE AND ERROR MESSAGE.                        *
***********************************************************************
INITIAL  NOP   MAINLINE                FIRST TIME SWITCH
         MVI   INITIAL+1,X'F0'         SET FIRST TIME SWITCH
RETDYN   CALL  DYNALLOC,(DAPARM1,DAPARM2) ALLOCATE A TEMPORARY DATASET
         CLC   RETRNCD,ZEROS           ANY ERROR?
         BE    OPENEXCP                NO
         CLC   ERRRET,CHAR0410         DSNAME IN USE?
         BNE   PRTBADA                 NO
         CLI   DDN+5,C'9'              ALREADY TRIED 9 TIMES?
         BE    PRTBADA                 YES
         IC    R9,DDN+5                NO, GET LAST BYTE OF DDNAME
         LA    R9,1(R9)                ADD 1
         STC   R9,DDN+5                UPDATE DDNAME
         B     RETDYN                  GO TRY AGAIN
PRTBADA  MVC   RETCODE,RETD1           INDICATE DYNALLOC ERROR
         MVC   DYNRTCD,ERRRET          ERROR RETURN CODE TO MESSAGE
         MVC   DYNINFO,INFORET         INFO RETURN CODE TO MESSAGE
         MVC   ERRNLINE,H2             TWO MESSAGE LINES
         L     R1,ERRMSGA              MOVE
         MVC   0(160,R1),MSGD1             ERROR LINES
         B     RETURN                  RETURN
OPENEXCP OPEN  (DADCB,OUTPUT)          OPEN FILE FOR EXCP
         TM    DADCB+48,X'10'          WAS OPEN SUCCESSFUL?
         BZ    INDOPNFL                NO
         L     R1,DADCB+44             @ DEB FOR INPUT1 FILE
         MVC   SAVUCB,33(R1)           SAVE DEB UCB ADDRESS
         MVC   SAVEBGNC,38(R12)        SAVE DEB START EXTENT
         MVC   SAVEENDC,42(R12)        SAVE DEB END EXTENT
         B     MAINLINE                GO PROCESS REQUEST
INDOPNFL MVC   RETCODE,RETO1           INDICATE OPEN FAILURE
         MVC   ERRNLINE,H1             ONE MESSAGE LINE
         L     R1,ERRMSGA              MOVE MESSAGE
         MVC   0(80,R1),MSGO1              TO USER AREA
         B     RETURN                  RETURN
***********************************************************************
*   MAINLINE ROUTINE. PROCESS PARAMETER LIST TO IDENTIFY REQUESTED    *
*   ACTION AND PERFORM THE APPROPRIATE ROUTINES.                      *
***********************************************************************
MAINLINE CLI   COMMAND,READNEXT        READ NEXT BLOCK REQUEST?
         BNE   TRYSCH                  NO
         BAS   R9,EXCPREAD             YES, GO READ NEXT BLOCK
         B     RETURN                  RETURN TO CALLER
TRYSCH   CLI   COMMAND,SEARCH          SEARCH FOR RECORD BY KEY?
         BNE   TRYVOL                  NO
         BAS   R9,KEYREAD              GO READ BY KEY
         B     RETURN                  RETURN TO CALLER
TRYVOL   CLI   COMMAND,ALLOCVOL        VOLUME REQUEST?
         BNE   TRYDSN                  NO
         BAS   R9,VOLUME               YES, GO ALLOCATE IT
         B     RETURN                  RETURN TO CALLER
TRYDSN   CLI   COMMAND,DSNALLOC        DSNAME REQUEST?
         BNE   TRYCAT                  NO
         BAS   R9,DSNAMEA              YES, GO ALLOCATE IT
         B     RETURN                  RETURN TO CALLER
TRYCAT   CLI   COMMAND,CATALLOC        CATALOG VOLSER  REQUEST?
         BNE   TRYREW                  NO
         BAS   R9,CATALOG              YES, GO READ CATALOG
         B     RETURN                  RETURN TO CALLER
TRYREW   CLI   COMMAND,REWRTLST        REWRITE LAST RECORD REQUEST?
         BNE   BADREQ                  NO
         BAS   R9,REWRITE              GO REWRITE LAST BLOCK
         B     RETURN                  YES
BADREQ   MVC   RETCODE,RETR1           INDICATE INVALID REQUEST CODE
         MVC   ERRNLINE,H1             ONE MESSAGE LINE
         L     R1,ERRMSGA              MOVE MESSAGE
         MVC   0(80,R1),MSGR1              TO CALLER'S AREA
         B     RETURN                  RETURN
***********************************************************************
*        LOOK THROUGH THE UCB TABLE IN O/S FOR THE REQUESTED VOLUME.  *
*        IF A UCB IS FOUND, PUT ITS ADDRESS IN THE DEB FOR THE EXCP   *
*        FILE, CONVERT THE UCB VTOC ADDRESS FROM TTR TO CCHHR FORM TO *
*        READ THE  FORMAT 4 DSCB. SET THE DEB EXTENTS FOR THE VTOC.   *
***********************************************************************
VOLUME   ST    R9,VOL9                 SAVE RETURN ADDRESS
         XC    WORK100,WORK100         CLEAR FOR EACH NEW INVOCATION
VLSLOOP  SMODE KEY=0,STATE=S
         UCBSCAN ADDRESS,WORKAREA=WORK100,UCBPTR=ADDRUCB,              X
               NOPIN,DYNAMIC=YES,RANGE=ALL,DEVCLASS=DASD
         ST    R15,SAV15               SAVE RETURN CODE
         SMODE KEY=NZERO,STATE=P
         CLC   SAV15,FZERO             FOUND UCB?
         BNE   NOVOL                   NO
         L     R2,ADDRUCB              YES, GET THE UCB ADDRESS
         USING UCBOB,R2
         TM    UCBSTAT,UCBONLI         IS IT ONLINE?
         BZ    VLSLOOP                 NO
         CLC   UCBVOLI,VOLSER          FOUND UCB FOR THIS VOLSER?
         BNE   VLSLOOP                 NO, CONTINUE SEARCH
         B     GOTUCB                  GO PROCESS UCB
NOVOL    MVC   RETCODE,RETR2           INDICATE VOLSER NOT AVAILABLE
         MVC   ERRNLINE,H1             ONE MESSAGE LINE
         L     R1,ERRMSGA              MOVE MESSAGE
         MVC   0(80,R1),MSGR2              TO CALLER'S AREA
         B     RETURN                  RETURN
GOTUCB   STCM  R2,7,UCBADDR            SAVE UCB ADDRESS IN EXCPARMS
         SR    R10,R10                 CLEAR FOR DIVIDE
         SR    R11,R11                 CLEAR FOR INSERT
         ICM   R11,3,UCBVTOC           PICK UP VTOC START TRACK
         CLI   UCBUNTYP,X'0B'          IS IT A 3350?
         BE    GOT3350                 YES
         CLI   UCBUNTYP,X'0E'          IS IT A 3380?
         BE    GOT3380                 YES
         CLI   UCBUNTYP,X'0F'          IS IT A 3390?
         BE    GOT3390                 YES
INVDVC   MVC   RETCODE,RETR3           INDICATE UNSUPPORTED DEVICE
         MVC   ERRNLINE,H1             ONE MESSAGE LINE
         L     R1,ERRMSGA              MOVE MESSAGE
         MVC   0(80,R1),MSGR3              TO CALLER'S AREA
         B     RETURN                  RETURN
GOT3350  D     R10,F30                 COMPUTE CYL-HD
         B     SETVTOC                 CONTINUE
GOT3380  D     R10,F15                 COMPUTE CYL-HD
         B     SETVTOC                 CONTINUE
GOT3390  D     R10,F15                 COMPUTE CYL-HD
SETVTOC  STCM  R11,3,CURRBGNC          SAVE VTOC CYLINDER NBR
         STCM  R10,3,CURRBGNH          SAVE VTOC HEAD NUMBER
         MVC   THISCHR,CURRBGNC        SET UP NEXT SEARCH CCHHR
         MVI   THISCHR+4,0             SET VTOC BEGIN RECORD
         DROP  R2
         MVC   CURRENDC(4),CURRBGNC    SET EXTENT END = START
         MVI   XTNTS,1                 INDICATE SINGLE EXTENT
         BAS   R9,EXCPREAD             GO READ FORMAT 4 DSCB
         CLC   RETCODE,BLANKS          ANY ERROR?
         BE    VOLCKID                 NO
BADVREC  MVC   RETCODE,RETV1           INDICATE INVALID FORMAT4
         MVC   ERRNLINE,H1             ONE MESSAGE LINE
         L     R1,ERRMSGA              MOVE MESSAGE
         MVC   0(80,R1),MSGV1              TO CALLER'S AREA
         B     RETURN                  RETURN
VOLCKID  LA    R1,RKEYDATA             POINT TO INPUT AREA
         CLI   DS4IDFMT-DSCBFMT4(R1),C'4' POSSIBLE FORMAT 4 DSCB?
         BNE   BADVREC                 NO
         CLI   RKEYDATA,X'04'          POSSIBLE FORMAT 4 DSCB?
         BNE   BADVREC                 NO
         CLC   RKEYDATA+1(43),RKEYDATA IS IT THE FORMAT 4 DSCB?
         BNE   BADVREC                 NO
         MVC   DSCB4CKD,RCOUNT         MOVE FORMAT 4 CNT, KEY, DATA
         LA    R1,DSCB4CKD             SET FORMAT 4
         ST    R1,FMT4ADDR                 DSCB ADDRESS FOR CALLER
         MVC   CURRBIN(10),DS4VTOCE    SET CURRENT EXTENT TO VTOC
         XC    CURRBIN,CURRBIN         CLEAR BIN
         MVI   XTNTS,1                 INDICATE SINGLE EXTENT
         MVC   THISCHR,CURRBGNC        SET UP NEXT SEARCH CCHHR
         MVI   THISCHR+4,0                     TO VTOC
VOLXIT   L     R9,VOL9                 GET RETURN ADDRESS
         BR    R9                      RETURN
***********************************************************************
*        KEYREAD READS A RECORD WHOSE KEY IS EQUAL TO (EQ) OR GREATER *
*        THAN OR EQUAL TO (GE) THE KEY IN THE SRCHKEY FIELD.          *
***********************************************************************
KEYREAD  ST    R9,KR9                  SAVE RETURN ADDRESS
         SR    R1,R1                   CLEAR FOR INSERT
         IC    R1,KEYLENG              GET KEY LENGTH
         BCTR  R1,0                    COMPUTE MOVE LENGTH CODE
         EX    R1,MVKEY                MOVE SEARCH KEY TO RKEYDATA
         LA    R1,RKEYDATA+1(R1)       POINT TO START OF DATA AREA
         STCM  R1,7,KRDADR                AND PUT ADDRESS IN READ CCW
         MVC   SCHKYLN,KEYLENG         MOVE KEY LENGTH TO CCW
         MVI   KSCH,X'29'              SET COMMAND FOR SEARCH KEY EQUAL
         CLC   SRCHTYPE,EQ             REQUEST FOR EQUAL?
         BE    POINTK                  YES
         MVI   KSCH,X'69'              NO, SET FOR SRCH KEY GTR/EQL
         CLC   SRCHTYPE,GE             IS IT GREATER/EQUAL?
         BE    POINTK                  YES
         MVC   RETCODE,RETK1           INDICATE SRCHTYPE INVALID
         MVC   ERRNLINE,H1             ONE MESSAGE LINE
         L     R1,ERRMSGA              MOVE MESSAGE
         MVC   0(80,R1),MSGK1              TO CALLER'S AREA
         B     RETURN                  RETURN
POINTK   LA    R1,CMDCHNK              @ CCWS TO LOCATE RECORD BY KEY
         BAS   R9,EXCP                 CALL EXCP ROUTINE
         CLC   RETCODE,BLANKS          ANY ERROR?
         BNE   KRXIT                   YES, STOP PROCESSING I/O
         MVC   THISCHR,RCOUNT          SET UP CURRENT CCHHR ADDRESS
         CLI   CMDCHNK,X'69'           WAS THIS AN EQUAL/HIGH SEARCH?
         BNE   KRXIT                   NO, EQUAL SEARCH SO ALL THROUGH
         LA    R1,CMDCHNKD             YES, POINT TO READ KEY+DATA CCWS
         BAS   R9,EXCP                     AND GO READ ACTUAL KEY
         CLC   RETCODE,BLANKS          ANY ERROR?
         BNE   KRXIT                   YES
         MVC   THISCHR,RCOUNT          SET UP CURRENT CCHHR ADDRESS
KRXIT    L     R9,KR9                  GET RETURN ADDRESS
         BR    R9                      AND RETURN
MVKEY    MVC   RKEYDATA(1),SRCHKEY     MOVE SEARCH KEY TO KEYDATA
***********************************************************************
*        SEARCH THE VTOC FOR THE DSNAME SPECIFIED. WHEN FOUND,        *
*        ESTABLISH THE FILE EXTENTS USING THE FORMATS 1 AND 3 DSCB'S. *
*        SET UP KEYLEN FOR THE VTOC.                                  *
***********************************************************************
DSNAMEA  ST    R9,DSN9                 SAVE RETURN ADDRESS
         MVC   CURRBGNC(8),DS4VTOCE+2  SET VTOC EXTENT AS CURRENT
         MVC   THISCHR,CURRBGNC        SET UP SEARCH ADDRESS
         MVI   THISCHR+4,0             START AT 1ST RECORD ON TRACK
         MVI   XTNTS,1                 INDICATE SINGLE EXTENT
         MVC   RKEYDATA(44),DSNAME     PUT DSNAME IN KEY AREA
         MVI   SCHKYLN,44              SET SEARCH KEY LENGTH = 44
         LA    R1,RKEYDATA+44          SET DATA ADDRESS
         STCM  R1,7,KRDADR                 IN READ DATA CCW
         MVI   KSCH,X'29'              MAKE SEARCH KEY EQUAL
         LA    R1,CMDCHNK              @ CMD CHAIN SRCH BY KEY, READ
         BAS   R9,EXCP                 CALL EXCP ROUTINE
         CLC   RETCODE,BLANKS          ANY EXCEPTIONAL CONDITION?
         BE    SETFRMT1                NO
         MVC   RETCODE,RETV2           INDICATE DSNAME NOT IN VTOC
         MVC   ERRNLINE,H1             ONE MESSAGE LINE
         L     R1,ERRMSGA              MOVE MESSAGE
         MVC   0(80,R1),MSGV2              TO CALLER'S AREA
         B     RETURN                  RETURN
SETFRMT1 MVC   DSCB1CKD,RCOUNT         MOVE FORMAT 1 CNT, KEY, DATA
         LA    R1,DSCB1CKD             SET FORMAT 1
         ST    R1,FMT1ADDR                 DSCB ADDRESS FOR CALLER
         CLC   DS1PTRDS,XZROS          IS THERE A FORMAT 3?
         BE    SET1EXT                 NO
         MVC   THISCHR,DS1PTRDS        YES, SET UP TO READ FORMAT 3
         IC    R9,THISCHR+4            BACK UP TO
         BCTR  R9,0                        PRECEDING
         STC   R9,THISCHR+4                    RECORD
         BAS   R9,EXCPREAD             GO READ FORMAT 3 DSCB
         CLC   RETCODE,BLANKS          ANY ERROR?
         BNE   ERRFMT3                 YES
         CLC   RKEYDATA(4),HEX0303     IS IT A FORMAT 3?
         BE    MOVE3                   YES
ERRFMT3  MVC   RETCODE,RETV3           INDICATE FMT3 ERROR
         MVC   ERRNLINE,H1             ONE MESSAGE LINE
         L     R1,ERRMSGA              MOVE MESSAGE
         MVC   0(80,R1),MSGV3              TO CALLER'S AREA
         B     RETURN                  RETURN
MOVE3    MVC   DSCB3CKD,RCOUNT         MOVE FORMAT 3 CNT, KEY, DATA
         LA    R1,DSCB3CKD             SET FORMAT 3
         ST    R1,FMT3ADDR                 DSCB ADDRESS FOR CALLER
         MVC   EXTADNL+20(40),DS3EXT1  MOVE LAST 13 EXTENTS
         MVC   EXTADNL+60(90),DS3EXT5  MOVE LAST 13 EXTENTS
SET1EXT  MVC   CURRBIN(30),DS1EXT1     MOVE 1ST 3 EXTENTS
         XC    CURRBIN,CURRBIN         CLEAR BIN NBR
         MVC   THISCHR,CURRBGNC        SET UP CCHHR FOR NEXT RECORD
         MVI   THISCHR+4,0             START AT 1ST RECORD ON TRACK
         MVC   XTNTS,DS1NOEPV          SET NUMBER EXTENTS
         SR    R10,R10                 CLEAR FOR INSERT
         IC    R10,DS1NOEPV            GET NBR EXTENTS
         LA    R11,CURRXTNT            POINT TO EXTENT SAVE AREA
         CLI   DS1NOEPV,0              ANY EXTENTS?
         BNE   DSNXIT                  YES
         MVC   RETCODE,RETV4           INDICATE DSNAME HAS 0 EXTENTS
         MVC   ERRNLINE,H1             ONE MESSAGE LINE
         L     R1,ERRMSGA              MOVE MESSAGE
         MVC   0(80,R1),MSGV4              TO CALLER'S AREA
         B     RETURN                  RETURN
DSNXIT   L     R9,DSN9                 GET RETURN ADDRESS
         BR    R9                      EXIT
***********************************************************************
*        READ THE CATALOG USING THE SPECIFIED DATASET NAME. IF AN     *
*        ENTRY IS FOUND, ALLOCATE THE VOLUME BY CALLING THE VOLUME    *
*        ROUTINE, THEN ALLOCATE THE DATASET BY CALLING THE DSNAMEA    *
*        ROUTINE.                                                     *
***********************************************************************
CATALOG  ST    R9,CAT9                 SAVE RETURN ADDRESS
         MVC   FINDDSN,DSNAME          SET DSNAME FOR CAMLST
         LOCATE BYDSN                  READ CATALOG FOR SPEC DSNAME
         LTR   R15,R15                 SUCCESSFUL CATALOG READ?
         BZ    GOTCAT                  YES
         MVC   RETCODE,RETC1           INDICATE DSNAME NOT IN CTLG
         MVC   ERRNLINE,H1             ONE MESSAGE LINE
         L     R1,ERRMSGA              MOVE MESSAGE
         MVC   0(80,R1),MSGC1              TO CALLER'S AREA
         B     RETURN                  RETURN
GOTCAT   MVC   VOLSER,LOCAREA+6        SET UP VOLSER FOR VOLUME
         BAS   R9,VOLUME               GO ALLOCATE VOLUME
         CLC   ERRILINE,H0             ANY I/O ERROR?
         BNE   CATXIT                  YES
         CLC   ERRNLINE,H0             ANY OTHER ERROR?
         BNE   CATXIT                  YES
         BAS   R9,DSNAMEA              GO ALLOCATE DATASET
CATXIT   L     R9,CAT9                 GET RETURN ADDRESS
         BR    R9                      EXIT
***********************************************************************
*           REWRITE LAST RECORD READ (KEY AND DATA)                   *
***********************************************************************
REWRITE  ST    R9,REW9                 SAVE RETURN ADDRESS
         MVC   WRITCCW+6(2),RCOUNT+6   DATA LENGTH TO WRITE CCW
         MVI   WRITCCW,X'05'           SET COMMAND TO WRITE DATA
         CLI   RCOUNT+5,0              ANY KEY?
         BE    SETWCNT                 NO
         MVI   WRITCCW,X'0D'           SET COMMAND TO WRITE KEY+DATA
         SR    R1,R1                   CLEAR WORK REG
         IC    R1,RCOUNT+5             PICK UP KEY LENGTH
         AH    R1,WRITCCW+6            ADD DATA LENGTH
         STH   R1,WRITCCW+6            KEY+DATA LENGTH TO CCW
SETWCNT  LA    R1,CMDCHNW              @ WRITE COMMAND CHAIN
         BAS   R9,EXCP                 ISSUE WRITE COMMAND
         CLC   RETCODE,BLANKS          NORMAL COMPLETION?
         BE    REWXIT                  YES
         MVC   RETCODE,RETI2           INDICATE ERROR REWRITING
         MVC   ERRNLINE,H1             ONE MESSAGE LINE
         L     R1,ERRMSGA              MOVE MESSAGE
         MVC   0(80,R1),MSGI2              TO CALLER'S AREA
         B     RETURN                  RETURN
REWXIT   L     R9,REW9                 GET RETURN ADDRESST
         BR    R9                      EXIT
***********************************************************************
*        READ NEXT BLOCK USING EXCP. THE THISCHR FIELD MUST CONTAIN   *
*        THE CCHHR SEARCH ADDRESS BEFORE PERFORMING THIS ROUTINE.     *
***********************************************************************
EXCPREAD ST    R9,XRD9                 SAVE RETURN ADDRESS
         LA    R1,CMDCHNR              @ CCWS TO READ RECORD 0
         CLI   THISCHR+4,0             WANT FIRST RECORD ON TRACK?
         BH    XRDLST                  NO
         LA    R1,CMDCHNR0             YES, USE ALTERNATE CCW'S
XRDLST   BAS   R9,EXCP                 CALL EXCP ROUTINE
         L     R9,XRD9                 GET RETURN ADDRESS
         BR    R9                      EXIT
***********************************************************************
*        ISSUE EXCP TO PERFORM THE OPERATION SET UP BY EXCPREAD,      *
*        WRITE,   OR REWRITE. SET EXCEPTION INDICATOR AS APPROPRIATE. *
*        THE CALLER MUST PLACE THE ADDRESS OF THE COMMAND CHAIN TO BE *
*        EXECUTED IN R1 AND THE CHR SEARCH ADDRESS IN THISCHR BEFORE  *
*        PERFORMING THIS ROUTINE. ON RETURN, THE RECORD FOLLOWING THAT*
*        POINTED TO BY THISCHR IS IN THE RCOUNT-KEYDATA FIELDS, AND   *
*        THISCHR IS SET TO THE CCHHR OF THE RECORD JUST READ.         *
***********************************************************************
EXCP     ST    R9,EXCP9                SAVE RETURN ADDRESS
         ST    R1,DACCWAD              STORE COMMAND ADDRESS
         MVC   DASRCH,THISCHR          SET IOB SEARCH ADDRESS
TSTXOPN  TM    DADCB+48,X'10'          IS THE EXCP FILE OPEN?
         BZ    EXCPCLSD                EXCP FILE NOT OPEN ERROR
         L     R12,DADCB+44            @ DEB FOR INPUT1 FILE
         CLC   25(3,R12),DCBADDR+1     DEBDCBAD POINTS TO DADCB?
         BNE   DEBDCBPT                DEB/DCB CHAINING ERROR
         ICM   R2,7,UCBADDR            GET UCB ADDRESS
         CLI   2(R2),X'FF'             IS THIS A UCB?
         BNE   INVLDUCB                NO, INVALID UCB ERROR
         SMODE KEY=0,STATE=P           GET IN KEY ZERO
         STCM  R2,7,33(R12)            CHANGE DEB UCB ADDRESS
         MVC   38(4,R12),CURRBGNC      SET DEB START EXTENT
         MVC   42(4,R12),CURRENDC      SET DEB END EXTENT
         SMODE KEY=NZERO,STATE=P       GET IN NORMAL KEY
         B     REISSUE                 CONTINUE
EXCPCLSD MVC   RETCODE,RETO2           INDICATE EXCP DCB NOT OPEN
         MVC   ERRNLINE,H1             ONE MESSAGE LINE
         L     R1,ERRMSGA              MOVE MESSAGE
         MVC   0(80,R1),MSGO2              TO CALLER'S AREA
         B     RETURN                  RETURN
DEBDCBPT MVC   RETCODE,RETD2           INDICATE DCB<->DEB PTR ERROR
         MVC   ERRNLINE,H1             ONE MESSAGE LINE
         L     R1,ERRMSGA              MOVE MESSAGE
         MVC   0(80,R1),MSGD2              TO CALLER'S AREA
         B     RETURN                  RETURN
INVLDUCB MVC   RETCODE,RETU1           INDICATE INVALID UCB ADDRESS
         MVC   ERRNLINE,H1             ONE MESSAGE LINE
         L     R1,ERRMSGA              MOVE MESSAGE
         MVC   0(80,R1),MSGU1              TO CALLER'S AREA
         B     RETURN                  RETURN
REISSUE  MVC   RETCODE,BLANKS          CLEAR ERROR INDICATOR
         XC    THISCHR,THISCHR         ZERO OUT NEXT COUNT AREA
         EXCP  DAIOB                   READ COUNT, KEY, AND DATA
         WAIT  ECB=DAECB               AWAIT COMPLETION
         CLI   DAECB,X'7F'             GOOD READ
         BE    EXCPCHEK                YES
         CLI   DAECB,X'42'             IS IT EOE?
         BNE   SETXHE                  NO
         SR    R15,R15                 CLEAR FOR INSERT
         IC    R15,XTNTS               GET NBR REMAINING EXTENTS
         BCT   R15,NEWXTNT             DECREMENT NUMBER EXTENTS
         MVC   RETCODE,RETE1           INDICATE END OF EXTENT RANGE
         MVC   ERRNLINE,H1             SET NBR MSG LINES
         L     R1,ERRMSGA              MOVE ERROR
         MVC   0(80,R1),MSGE1              MESSAGE LINE
         B     EXCPEXIT                BRANCH IF NO MORE EXTENTS
NEWXTNT  MVC   CURRXTNT,EXTADNL        SHIFT IN NEXT EXTENT
         XC    CURRBIN,CURRBIN         CLEAR BIN NUMBER
         MVC   THISCHR(4),CURRBGNC     SET UP NEXT RECORD CCHH
         MVI   THISCHR+4,0             START AT 1ST RECORD ON TRACK
         STC   R15,XTNTS               UPDATE EXTENT COUNT
         L     R1,DACCWAD              GET CCW ADDRESS
         B     REISSUE                 AND GO REISSUE COMMAND
SETXHE   MVC   RETCODE,RETI1           INDICATE HARD I/O ERROR
         CLI   DAECB,X'41'             I/O ERROR INDICATED
         BNE   EXHDERR                 NO
         TM    DAUNST,1                IS IT EOF RECORD
         BO    ENDF                    YES
EXHDERR  BAS   R9,HARDERR              NO, HARD I/O ERROR
         B     EXCPEXIT                EXIT
EXCPCHEK LA    R1,RCOUNT               POINT TO I/O AREA
         CLI   COMMAND,READNEXT        THIS A READ NEXT REQUEST?
         BE    SETTHIS                 YES
         CLI   COMMAND,SEARCH          THIS A READ BY KEY REQUEST?
         BNE   EXCPEXIT                NO
SETTHIS  MVC   THISCHR,RCOUNT          SET THIS CCHHR = NEXT COUNT
         ST    R1,CKDADDR              YES, SAVE RECORD ADDRESS
         B     EXCPEXIT                EXIT
ENDF     MVC   RETCODE,RETF1           INDICATE EOF RECORD
         MVC   ERRNLINE,H1             SET NBR ERROR MESSAGE LINES
         L     R1,ERRMSGA              MOVE MESSAGE
         MVC   0(80,R1),MSGF1              TO CALLER'S AREA
EXCPEXIT L     R9,EXCP9                GET RETURN ADDRESS
         BR    R9                      EXIT
***********************************************************************
*       PRINT HARD I/O ERROR DATA                                     *
***********************************************************************
HARDERR  ST    R9,HE9                  SAVE RETURN ADDRESS
         MVC   ERRILINE,H4             SET MINIMUM NBR LINES
         ICM   R15,8,DAECBCC           PICK UP ECB COMPLETION CODE
         BAS   R9,HEXPRNT              GO MAKE PRINTABLE
         MVC   IOECC,WORK              MOVE TO PRINT
         ICM   R15,15,DACSW            1ST 4 BYTES OF CSW
         BAS   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOECSW1,WORK            MOVE TO PRINT
         ICM   R15,15,DACSW+4          2ND 4 BYTES OF CSW
         BAS   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOECSW2,WORK            MOVE TO PRINT
         L     R14,DANXCCW             POINT TO NEXT CCW
         LA    R14,0(R14)              CLEAR HIGH ORDER BYTE
         SH    R14,H8                  BACK UP TO FAILING CCW
         C     R14,CCHNSTRA            THIS ONE OF MY CCW'S?
         BL    UNKNCCW                 NO
         C     R14,CCHNENDA            THIS ONE OF MY CCW'S?
         BNH   FORMCCWD                YES
UNKNCCW  MVC   IOECCW1,QUESTION        UNKNOWN CCW
         MVC   IOECCW2,QUESTION        UNKNOWN CCW
         MVC   IOEBYTS,BLANKS          IGNORE BYTES READ
         MVC   IOECD1,BLANKS           IGNORE DATA READ
         MVC   IOECD2,BLANKS           IGNORE DATA READ
         MVC   IOECD3,BLANKS           IGNORE DATA READ
         B     HECHNAM                 CONTINUE
FORMCCWD ICM   R15,15,0(R14)           1ST 4 BYTES OF FAILING CCW
         BAS   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOECCW1,WORK            MOVE TO PRINT
         ICM   R15,15,4(R14)           2ND 4 BYTES OF FAILING CCW
         BAS   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOECCW2,WORK            MOVE TO PRINT
         LH    R15,6(R14)              PICK UP CCW LENGTH
         SH    R15,DARESID             COMPUTE BYTES READ
         CVD   R15,DBLWD               CONVERT TO PACKED
         UNPK  IOEBYTS,DBLWD           UNPACK TO PRINT
         L     R14,0(R14)              GET CCW DATA ADDRESS
         ICM   R15,15,0(R14)           POINT TO CCW DATA
         BAS   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOECD1,WORK             MOVE TO PRINT
         ICM   R15,15,4(R14)           PICK UP NEXT 4 BYTES
         BAS   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOECD2,WORK             MOVE TO PRINT
         ICM   R15,15,8(R14)           PICK UP NEXT 4 BYTES
         BAS   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOECD3,WORK             MOVE TO PRINT
         OI    IOEBYTS+4,C'0'          CLEAR SIGN
HECHNAM  MVC   IOECHNM,ADR0LIT         ASSUME CMDCHNR0
         CLC   DACCWAD+1(3),CCHNADR0+1 IS IT CMDCHNR0?
         BE    ERRSCH                  YES
         MVC   IOECHNM,CHNRLIT         NO, ASSUME CMDCHNR
         CLC   DACCWAD+1(3),CCHNADR+1  IS IT CMDCHNR?
         BE    ERRSCH                  YES
         MVC   IOECHNM,CHNWLIT         NO, ASSUME CMDCHNW
         CLC   DACCWAD+1(3),CCHNW+1    IS IT CMDCHNW?
         BE    ERRSCH                  YES
         MVC   IOECHNM,CHNKLIT         ASSUME CMDCHNK
         CLC   DACCWAD+1(3),CCHNK+1    IS IT CMDCHNK?
         BE    ERRSCH                  YES
         MVC   IOECHNM,CHNKDLIT        ASSUME CMDCHNKD
         CLC   DACCWAD+1(3),CCHNKD+1   IS IT CMDCHNKD?
         BE    ERRSCH                  YES
         MVC   IOECHNM,QUESTION        UNKNOWN CCW CHAIN
ERRSCH   ICM   R15,15,DASRCH           PICK UP SEARCH CCHH
         BAS   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOESRCH(8),WORK         MOVE TO PRINT
         ICM   R15,8,DASRCH+4          PICK UP SEARCH RECORD NBR
         BAS   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOESRCH+8(2),WORK       MOVE TO PRINT
         ICM   R15,12,DAUCSNS          PICK UP SENSE BYTES
         BAS   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOESNS,WORK             MOVE TO PRINT
         MVC   IOERR4+15(16),CONDARE   "CONDITIONS ARE:" LITERAL
         LA    R14,IOERR4+31           POINT TO CONDITION DESCRIPTION
         MVC   CONDEND,IOE4END         SET END OF LINE ADDRESS
         CLI   DAECBCC,X'41'           IS IT PERMANENT I/O ERROR?
         BNE   IOE1                    NO
         LA    R15,0                   LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE1     CLI   DAECBCC,X'42'           IS IT EXTENT VIOLATION?
         BNE   IOE2                    NO
         LA    R15,1                   LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE2     CLI   DAECBCC,X'44'           IS IT INTERCEPTED?
         BNE   IOE3                    NO
         LA    R15,2                   LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE3     TM    DAUNST,X'20'            IS IT UNIT CHECK?
         BZ    IOE4                    NO
         LA    R15,3                   LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE4     TM    DAUNST,X'10'            IS IT UNIT EXCEPTION?
         BZ    IOE5                    NO
         LA    R15,4                   LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE5     TM    DACHST,X'40'            IS IT WRONG LENGTH RECORD?
         BZ    IOE6                    NO
         LA    R15,5                   LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE6     TM    DACHST,X'20'            IS IT CHANNEL PROGRAM CHECK?
         BZ    IOE7                    NO
         LA    R15,6                   LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE7     TM    DACHST,X'10'            IS IT PROTECTION CHECK?
         BZ    IOE8                    NO
         LA    R15,7                   LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE8     TM    DACHST,X'08'            IS IT CHANNEL DATA CHECK?
         BZ    IOE9                    NO
         LA    R15,8                   LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE9     TM    DACHST,X'04'            IS IT CHANNEL CONTROL CHECK?
         BZ    IOE10                   NO
         LA    R15,9                   LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE10    TM    DACHST,X'02'            IS IT INTERFACE CONTROL CHECK?
         BZ    IOE11                   NO
         LA    R15,10                  LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE11    TM    DAUCSNS,X'80'           IS IT COMMAND REJECT?
         BZ    IOE12                   NO
         LA    R15,11                  LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE12    TM    DAUCSNS,X'10'           IS IT EQUIPMENT CHECK?
         BZ    IOE13                   NO
         LA    R15,12                  LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE13    TM    DAUCSNS,X'08'           IS IT DATA CHECK?
         BZ    IOE14                   NO
         LA    R15,13                  LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE14    TM    DAUCSNS,X'04'           IS IT OVERRUN?
         BZ    IOE15                   NO
         LA    R15,14                  LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE15    TM    DAUCSNS,X'02'           IS IT TRK CONDITION CHECK?
         BZ    IOE16                   NO
         LA    R15,15                  LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE16    TM    DAUCSNS,X'01'           IS IT SEEK CHECK?
         BZ    IOE17                   NO
         LA    R15,16                  LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE17    TM    DAUCSNS+1,X'80'         IS IT DATA CHECK IN COUNT?
         BZ    IOE18                   NO
         LA    R15,17                  LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE18    TM    DAUCSNS+1,X'40'         IS IT WRITE TRACK OVERRUN?
         BZ    IOE19                   NO
         LA    R15,18                  LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE19    TM    DAUCSNS+1,X'20'         IS IT END OF CYLINDER ON M-T?
         BZ    IOE20                   NO
         LA    R15,19                  LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE20    TM    DAUCSNS+1,X'10'         IS IT INVALID COMMAND SEQUENCE?
         BZ    IOE21                   NO
         LA    R15,20                  LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE21    TM    DAUCSNS+1,X'08'         IS IT NO RECORD FOUND?
         BZ    IOE22                   NO
         LA    R15,21                  LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE22    TM    DAUCSNS+1,X'04'         IS IT FILE PROTECTED?
         BZ    IOE23                   NO
         LA    R15,22                  LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE23    TM    DAUCSNS+1,X'02'         IS IT MISSING ADDRESS MARKER?
         BZ    IOE24                   NO
         LA    R15,23                  LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
IOE24    TM    DAUCSNS+1,X'01'         IS IT OVERFLOW INCOMPLETE?
         BZ    HEXIT                   NO
         LA    R15,24                  LITERAL SUBSCRIPT
         BAS   R9,CONDPRT              GO PRINT
HEXIT    L     R9,HE9                  GET RETURN ADDRESS
         BR    R9                      EXIT
***********************************************************************
*        ROUTINE TO CONVERT HEX TO PRINTABLE CHARACTERS (2 CHARACTERS *
*        PER HEX BYTE. ON ENTRY, HEX TO BE CONVERTED IS IN R15. THE   *
*        CHARACTER EQUIVALENT IS PLACED IN THE FIRST 8 BYTES OF WORK. *
***********************************************************************
HEXPRNT  STCM  R15,15,WORK              SAVE HEX VALUE
         UNPK  WORK(9),WORK(5)          CONVERT TO 1 NIBBLE PER BYTE
         MVZ   WORK(8),XZROS            CLEAR ZONES FOR TRANSLATE
         TR    WORK(8),TRTBLA           TRANSLATE TO PRINTABLE
         BR    R9                       EXIT
***********************************************************************
*        PRINT I/O ERROR CONDITION LITERALS                           *
***********************************************************************
CONDPRT  ST    R9,CND9                 SAVE RETURN ADDRESS
         MH    R15,H30                 GET OFFSET TO LITERAL
         LA    R15,CONDTBL(R15)        POINT TO LITERAL
         ST    R15,LITADR              SAVE LITERAL ADDRESS
CHKLENG  L     R15,LITADR              POINT TO LITERAL
         LR    R1,R14                  POINT TO CURRENT PRINT ADDR
         AH    R1,0(R15)               ADD THIS LITERAL LENGTH
         C     R1,CONDEND              PAST END OF PRINT LINE?
         BH    LINEFULL                YES
         LH    R1,0(R15)               NO, GET LITERAL LENGTH
         EX    R1,MOVLTRL              MOVE TO PRINT
         AH    R14,0(R15)              STEP PAST LITERAL
         LA    R14,1(R14)              ADD A SPACE
         B     CNDXIT                  AND EXIT
LINEFULL LH    R1,ERRILINE             GET TOTAL MESSAGE LINE COUNT
         CH    R1,H7                   MESSAGE FULL?
         BNL   CNDXIT                  YES, QUIT
         LA    R1,1(R1)                NO, INCREMENT
         STH   R1,ERRILINE                 LINE COUNTER
         CH    R1,H5                   NOW IN LINE 5?
         BNE   LFTRY6                  NO
         LA    R14,IOERR5+15           POINT TO NEXT PRINT LOC
         MVC   CONDEND,IOE5END         SET LINE END ADDRESS
         B     CHKLENG                 CONTINUE
LFTRY6   CH    R1,H6                   NOW IN LINE 5?
         BNE   LFIS7                   NO
         LA    R14,IOERR6+15           POINT TO NEXT PRINT LOC
         MVC   CONDEND,IOE6END         SET LINE END ADDRESS
         B     CHKLENG                 CONTINUE
LFIS7    LA    R14,IOERR7+15           POINT TO NEXT PRINT LOC
         MVC   CONDEND,IOE7END         SET LINE END ADDRESS
         B     CHKLENG                 CONTINUE
CNDXIT   L     R9,CND9                 GET RETURN ADDRESS
         BR    R9                      EXIT
MOVLTRL  MVC   0(1,R14),2(R15)         EXECUTED MOVE
***********************************************************************
*        PROCESSING COMPLETE, RETURN TO CALLER                        *
***********************************************************************
RETURN   L     R12,DADCB+44            @ DEB FOR INPUT1 FILE
         ICM   R2,7,SAVUCB             GET UCB ADDRESS
         SMODE KEY=0,STATE=P           GET IN KEY ZERO
         STCM  R2,7,33(R12)            RESET DEB UCB ADDRESS
         MVC   38(4,R12),SAVEBGNC      RESET DEB START EXTENT
         MVC   42(4,R12),SAVEENDC      RESET DEB END EXTENT
         SMODE KEY=NZERO,STATE=P       GET IN NORMAL KEY
         CLC   ERRILINE,H0             ANY I/O ERROR?
         BE    EXIT1                   NO
         L     R1,ERRMSGA              POINT TO USER ERROR MSG AREA
         LA    R2,IOERR1               POINT TO 1ST I/O ERROR MSG
         CLC   ERRNLINE,H0             ANY ERROR MESSAGE QUEUED?
         BE    HARDONLY                NO
         LH    R12,ERRNLINE            GET CURRENT NBR ERROR LINES
         MH    R12,H80                 COMPUTE OFFSET TO NEXT LINE
         LA    R1,0(R1,R12)                AND POINT TO IT
         LH    R12,ERRNLINE            UPDATE
         AH    R12,ERRILINE                TOTAL
         STH   R12,ERRNLINE                    ERROR LINES
         B     GETIOCT                 GO MOVE I/O ERROR MESSAGE
HARDONLY MVC   RETCODE,RETI1           SET ERROR RETURN CODE
         MVC   ERRNLINE,ERRILINE       SET NBR ERROR LINES
GETIOCT  LH    R12,ERRILINE            GET NBR I/O ERROR LINES
MOVEIO   MVC   0(80,R1),0(R2)          MOVE AN I/O ERROR MSG LINE
         LA    R1,80(R1)               TO NEXT USER AREA LINE
         LA    R2,80(R2)               TO NEXT I/O ERROR LINE
         BCT   R12,MOVEIO              LOOP TO MOVE I/O ERROR MSG
EXIT1    L     R13,4(R13)              GET CALLER'S SAVE AREA ADDR
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGS
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN TO CALLER
***********************************************************************
*        EXCPIO PARAMETER AREA (DOUBLEWORD BOUNDARY ALIGNED)          *
***********************************************************************
EXCPARMS DSECT ,                       CALLER'S PARAMETER AREA
COMMAND  DS    CL1                     COMMAND (REQUEST) CODE
READNEXT EQU   C'N'                      READ NEXT BLOCK REQUEST
ALLOCVOL EQU   C'V'                      ALLOCATE VOLUME REQUEST
DSNALLOC EQU   C'D'                      ALLOCATE DSNAME ON VOLUME
CATALLOC EQU   C'C'                      ALLOCATE DSNAME VIA CATALOG
REWRTLST EQU   C'R'                      REWRITE LAST RECORD READ
SEARCH   EQU   C'S'                      SEARCH USING SRCHKEY
KEYLENG  DS    XL1                     KEY LENGTH IF COMMAND=S
SRCHTYPE DS    CL2                     KEY SEARCH TYPE: EQ OR GE
RETCODE  DS    CL2                     RETURN CODE: BLANK=O.K.,
*                                        BLANK = SUCCESSFUL,
*                                        C1=DATASET NOT IN CATALOG
*                                        D1=DYNALLOC FAIL FOR WORK
*                                        D2=DEB<->DCB PTR ERROR
*                                        E1=END OF ALLOCATED EXTENT
*                                        F1=EOF RECORD READ
*                                        I1=HARD I/O ERROR
*                                        I2=I/O ERROR ON REWRITE
*                                        O1=OPEN FAILED FOR WORK FILE
*                                        O2=EXCP FILE NOT OPEN
*                                        R1=INVALID REQUEST CODE
*                                        R2=VOLUME REQUESTED NOT AVAIL
*                                        R3=UNSUPPORTED DEVICE
*                                        U1=INVALID UCB ADDRESS
*                                        V1=INVALID FORMAT4 DSCB
*                                        V2=DSNAME NOT IN VTOC
*                                        V3=FORMAT3 DSCB I/O ERROR
*                                        V4=DATASET HAS NO EXTENTS
FMT4ADDR DS    A                       ADDRESS OF FORMAT 4 DSCB
FMT1ADDR DS    A                       ADDRESS OF FORMAT 1 DSCB
FMT3ADDR DS    A                       ADDRESS OF FORMAT 3 DSCB
CKDADDR  DS    A                       ADDRESS OF RECORD READ
ERRNLINE DS    H                       NBR LINES OF ERROR MESSAGE
THISCHR  DS    XL5                     CCHHR ADDRESS FOR READ, WRITE
DSNAME   DS    CL44                    DATASET NAME
UCBADDR  DS    AL3                     UCB ADDRESS
VOLSER   DS    CL6                     VOLUME SERIAL NUMBER
XTNTS    DS    XL1                     NUMBER OF EXTENTS REMAINING
CURRXTNT DS    0XL10                   CURRENT EXTENT
CURRBIN  DS    XL2                       BIN NUMBER (ZEROS)
CURRBGNC DS    XL2                       BEGINNING CYLINDER
CURRBGNH DS    XL2                       BEGINNING HEAD (TRACK)
CURRENDC DS    XL2                       ENDING CYLINDER
CURRENDH DS    XL2                       ENDING HEAD (TRACK)
EXTADNL  DS    15XL10                  15 ADDITIONAL EXTENTS BBCCHHCCHH
SRCHKEY  DS    CL256                   KEY FOR SEARCH
EXCPEND  EQU   *                       END OF PARAMETER AREA
EXCPIO   CSECT
***********************************************************************
*        PARAMETERS FOR THE DYNALLOC SUBROUTINE                       *
***********************************************************************
*
DAPARM1  DS    0F                      * 1ST PARAMETER FOR DYNALLOC *
DDN      DC    CL8'INPUT1'             DDNAME
         DC    CL44'&&DADCB'           DATASET NAME
         DC    XL8'00'                 MEMBER NAME
         DC    XL3'00'                 DISPOSITION:
*                                    BYTE1: 0=OLD,M=MOD,N=NEW,S=SHR
*                                    BYTE2: U=UNCATLG,C=CATLG,D=DELETE
*                                    K=KEEP; BYTE3: SAME AS BYTE2
         DC    CL8'DISK'               UNIT NAME
         DC    XL2'00'                 UNIT COUNT
         DC    XL6'00'                 VOLUME SERIAL NUMBER
         DC    XL1'00'                 LABEL TYPE:
*                                      N=NL, S=SL, B=BLP
         DC    XL2'00'                 DATASET SEQUENCE NBR (TAPE)
         DC    XL1'00'                 F: FREE=CLOSE
         DC    XL2'00'                 RETENTION PERIOD IN DAYS
         DC    XL3'00'                 RECORDING FORMAT:
*                                      BYTE1: F=FIXED, V=VARIABLE,
*                                      U=UNDEFINED; BYTE2: B=BLOCKED,
*                                      BYTE3: A=ASA CONTROL CHARACTERS
         DC    XL2'00'                 LOGICAL RECORD LENGTH
         DC    XL2'00'                 BLOCK SIZE
         DC    XL1'00'                 TAPE DENSITY: 1=1600,6=6250
         DC    XL2'00'                 BUFNO
         DC    XL2'00'                 KEY LENGTH
         DC    XL1'00'                 DATASET ORGANIZATION:
*                                      V=VSAM, P=PDS, D=DIRECT, S=SEQ
         DC    CL1'C'                  SPACE TYPE:
*                                      C=CYL, T=TRK
         DC    XL2'01'                 PRIMARY SPACE AMOUNT
         DC    XL2'00'                 SECONDARY SPACE AMOUNT
         DC    CL1'00'                 R=RLSE
         DC    XL2'00'                 NBR DIRECTORY BLOCKS
         DC    XL5'00'                 EXPIRATION DATE YYDDD
*
*
*
DAPARM2  DS    0F                      2ND PARAMETER FOR DYNALLOC
         DC    CL1'A'                  REQUEST CODE:
*                                      A=ALLOCATE A DATASET
*                                      V=VOLSER FEEDBACK
RETRNCD  DC    CL2' '                  DYNALLOC RETURN CODE
ERRRET   DC    CL4' '                  ERROR RETURN CODE
INFORET  DC    CL4' '                  INFO RETURN CODE
***********************************************************************
*        COMMON DATA AREAS                                            *
***********************************************************************
DBLWD    DS    D                       DOUBLEWORD WORK AREA
         DS    0D                      DOUBLEWORD ALIGN WORK100
WORK100  DC    XL100'00'               WORK AREA FOR CVTUCBSC
SAVUCB   DC    A(0)                    ORIGINAL UCB ADDRESS FOR EXCP
CCHNADR0 DC    A(CMDCHNR0)             ADDRESS OF CMDCHNR0
CCHNADR  DC    A(CMDCHNR)              ADDRESS OF CMDCHNR
CCHNW    DC    A(CMDCHNW)              ADDRESS OF CMDCHNW
CCHNK    DC    A(CMDCHNK)              ADDRESS OF CMDCHNK
CCHNKD   DC    A(CMDCHNKD)             ADDRESS OF CMDCHNKD
CCHNSTRA DC    A(BEGNCCWS)             ADDRESS OF START OF CCW AREA
CCHNENDA DC    A(ENDOCCWS)             ADDRESS OF END OF CCW AREA
ADDRUCB  DC    A(0)                    UCB ADDR FROM IOSVSUCB
ERRMSGA  DC    A(0)                    POINTER TO USER'S ERROR MSG AREA
DCBADDR  DC    A(DADCB)                ADDRESS OF THE EXCP DCB
VOL9     DC    A(0)                    R9 SAVE FOR VOLUME ROUTINE
HE9      DC    A(0)                    R9 SAVE FOR HARDERR ROUTINE
DSN9     DC    A(0)                    R9 SAVE FOR DSNAMEA ROUTINE
RC9      DC    A(0)                    R9 SAVE FOR READCHR ROUTINE
KR9      DC    A(0)                    R9 SAVE FOR KEYREAD ROUTINE
XRD9     DC    A(0)                    R9 SAVE FOR EXCPREAD ROUTINE
REW9     DC    A(0)                    R9 SAVE FOR REWRITE ROUTINE
CND9     DC    A(0)                    R9 SAVE FOR CONDPRNT ROUTINE
LITADR   DC    A(0)                    R15 SAVE FOR CONDPRNT ROUTINE
EXCP9    DC    A(0)                    R9 SAVE FOR EXCP ROUTINE
CAT9     DC    A(0)                    R9 SAVE FOR CATALOG ROUTINE
SAV15    DC    F'0'                    SAVE AREA FOR R15 AFTER UCBSCAN
FZERO    DC    F'0'                    CONSTANT ZERO
F30      DC    F'30'                   CONSTANT 30
F15      DC    F'15'                   CONSTANT 15
SAVEBGNC DS    XL4                     ORIGINAL EXTENT START
SAVEENDC DS    XL4                     ORIGONAL EXTENT END
ERRILINE DC    H'0'                    NBR LINES OF I/O ERROR MSG
H0       DC    H'0'                    CONSTANT ZERO
H1       DC    H'1'                    CONSTANT 1
H2       DC    H'2'                    CONSTANT 2
H3       DC    H'3'                    CONSTANT 3
H4       DC    H'4'                    CONSTANT 4
H5       DC    H'5'                    CONSTANT 5
H6       DC    H'6'                    CONSTANT 6
H7       DC    H'7'                    CONSTANT 7
H8       DC    H'8'                    CONSTANT 8
H30      DC    H'30'                   CONSTANT 30
H44      DC    H'44'                   CONSTANT 44
H80      DC    H'80'                   CONSTANT EIGHTY
         DS    0F
WORK     DS    CL11                    WORK AREA
EQ       DC    CL2'EQ'
GE       DC    CL2'GE'
ZEROS    DC    CL8'00000000'           CONSTANT ZEROS
ADR0LIT  DC    CL8'CMDCHNR0'
CHNRLIT  DC    CL8'CMDCHNR'
CHNWLIT  DC    CL8'CMDCHNW'
CHNKLIT  DC    CL8'CMDCHNK'
CHNKDLIT DC    CL8'CMDCHNKD'
CHAR0410 DC    CL4'0410'               CONSTANT 0410
CHAR3350 DC    CL4'3350'               CONSTANT 3350
CHAR3380 DC    CL4'3380'               CONSTANT 3380
CHAR3390 DC    CL4'3390'               CONSTANT 3390
TRTBLA   DC    C'0123456789ABCDEF'     TRANSLATE TABLE
BLANKS   DC    CL80' '                 CONSTANT BLANKS
QUESTION DC    CL8'????????'           QUESTION MARKS
CONDARE  DC    CL16'CONDITIONS ARE: '
XZROS    DC    XL8'00'                 HEX ZEROS
HEX0303  DC    XL4'03030303'           CONSTANT 0303030
DSCB1CKD DS    0CL148                  FORMAT 1 COUNT, KEY, DATA
DSCB1CNT DS    CL8                     FORMAT 1 COUNT RECORD
DSCBFMT1 DS    0CL140   *** FORMAT 1 DSCB DESCRIPTION ***
DS1DSNAM DS    CL44          DATA SET NAME
DS1FMTID DS    CL1           FORMAT 1 IDENTIFIER, X'F1'
DS1DSSN  DS    CL6           VOLSER OF FIRST VOLUME
DS1VOLSQ DS    XL2           VOLUME SEQUENCE NBR
DS1CREDT DS    XL3           CREATION DATE, BINARY, YDD
DS1EXPDT DS    XL3           EXPIRATION DATE, BINARY, YDD
DS1NOEPV DS    XL1           NBR EXTENTS ON THIS VOLUME
DS1NOBDB DS    XL1           NBR BYTES USED IN LAST DIRECTORY BLOCK
         DS    XL1           RESERVED
DS1SYSCD DS    CL13          SYSTEM CODE
DS1REFD  DS    XL3           LAST REFERENCED DATE (IF USED)
         DS    XL4           RESERVED
DS1DSORG DS    XL2           DATA SET ORGANIZATION. BYTE1:
*                              BIT0-IS, BIT1-PS, BIT2-DA, BIT6-PO
*                              BIT7-UNMOVABLE. BYTE2: BIT4-VSAM
DS1RECFM DS    XL1           RECORD FORMAT, BITS01=10-F, BITS01=01-V,
*                              BITS01=11-U, BIT2-TRKOFLO, BIT3-BLOCKED
*                              BIT4-ASA CTL CHAR, BIT5-MACH CTL CHAR
DS1OPTCD DS    XL1           DCB OPTION CODES, SAME AS DCBOPTCD
DS1BLKL  DS    XL2           BLOCKSIZE
DS1LRECL DS    XL2           LOGICAL RECORD LENGTH (0 FOR RECFM=U)
DS1KEYL  DS    XL1           KEYLENGTH, 0=NO KEY
DS1RKP   DS    XL2           RELATIVE KEY POSITION
DS1DSIND DS    XL1           DATA SET INDICATORS, BIT0-LAST VOLUME,
*                            BITS 3 (10) AND 5 (04) ARE PASSWORD
*                            INDICATORS:
*                             X'10' = READ AND WRITE PROTECTED
*                             X'14' = WRITE PROTECTED ONLY
*                             BOTH BITS OFF = NOT PROTECTED
*                             BOTH BITS ON FOR VSAM
DS1SCALO DS    XL1           PRIMARY ALLOCATION TYPE
*                              BITS01=01-
*                              BITS01=00-TRKS REL TO SPEC LOC,
*                              BITS01=01-BLOCKS, BITS01=11-CYLINDERS,
*                              BITS01=10-TRACKS,
*                              BIT4-CONTIG, BITS5-7-OTHER
DS1SCAL  DS    XL3           SECONDARY ALLOCATION QUANTITY
DS1LSTAR DS    XL3           TTR OF LAST BLOCK WRITTEN (PS AND PO ONLY)
DS1TRBAL DS    XL2           BYTES REM ON TRK AFTER LAST BLOCK
         DS    XL2           RESERVED
DS1EXT1  DS    XL10          FIRST EXTENT - SEE EXTENT DSECT
DS1EXT2  DS    XL10          SECOND EXTENT DESCRIPTION
DS1EXT3  DS    XL10          THIRD EXTENT DESCRIPTION
DS1PTRDS DS    XL5           CCHHR POINTER TO A FORMAT 2 DSCB (IS ONLY)
*                              OR TO A FORMAT 3 IF OVER 3 EXTENTS AND
*                              DSORG=PS OR PO, ZEROS IF UNUSED
DSCB3CKD DS    0CL148                  FORMAT 3 COUNT, KEY, DATA
DSCB3CNT DS    CL8                     FORMAT 3 COUNT RECORD
DSCBFMT3 DS    0CL140   *** FORMAT 3 DSCB DESCRIPTION ***
DS3KEYID DS    XL4           KEY IDENTIFIER, X'03030303'
DS3EXT1  DS    XL10          1ST EXTENT DESCRIPTION, SEE EXTENT DSECT
DS3EXT2  DS    XL10          2ND EXTENT DESCRIPTION
DS3EXT3  DS    XL10          3RD EXTENT DESCRIPTION
DS3EXT4  DS    XL10          4TH EXTENT DESCRIPTION
DS3FMTID DS    CL1           FORMAT IDENTIFIER, X'F3'
DS3EXT5  DS    XL10          5TH EXTENT DESCRIPTION
DS3EXT6  DS    XL10          6TH EXTENT DESCRIPTION
DS3EXT7  DS    XL10          7TH EXTENT DESCRIPTION
DS3EXT8  DS    XL10          8TH EXTENT DESCRIPTION
DS3EXT9  DS    XL10          9TH EXTENT DESCRIPTION
DS3EXT10 DS    XL10          10TH EXTENT DESCRIPTION
DS3EXT11 DS    XL10          11TH EXTENT DESCRIPTION
DS3EXT12 DS    XL10          12TH EXTENT DESCRIPTION
DS3EXT13 DS    XL10          13TH EXTENT DESCRIPTION
         DS    XL5           RESERVED
*
DSCB4CKD DS    0CL148                  FORMAT 4 COUNT, KEY, DATA
DSCB4CNT DS    CL8                     FORMAT 4 COUNT RECORD
DSCBFMT4 DS    0CL140   *** FORMAT 4 DSCB DESCRIPTION ***
DS4DSNAM DS    XL44          IDENTIFIER, ALL HEX '04'S
DS4IDFMT DS    CL1           FORMAT IDENTIFIER, X'F4'
DS4HPCHR DS    XL5           CCHHR ADDR OF HIGHEST ADDRESS PREVIOUSLY
*                              USED FOR A FORMAT 1 DSCB
DS4DSREC DS    XL2           NBR OF AVAILABLE BLANK DSCB'S IN VTOC
DS4HCCHH DS    XL4           CCHH ADDR OF NEXT ALT TRK AVAILABLE
DS4NOATK DS    XL2           NBR OF REMAINING ALT TRKS
DS4VTOCI DS    XL1           INDICATORS, 80=DOS BIT, 40=INDEX WAS
*                              DISABLED, 10=DOS STACKED PACK, 08=
*                              DOS CONVERTED VTOC, 04=DIRF BIT, 02=
*                              DIRF RECLAIMED, 01=INDEXED VTOC USED
DS4NOEXT DS    XL1           X'01' TO INDICATE VTOC IS 1 EXTENT
         DS    XL2           RESERVED
DS4DEVSZ DS    0XL4          DEVICE SIZE
DS4NOCYL DS    XL2             NBR LOGICAL CYLINDERS
DS4TKLC  DS    XL2             NUMBER OF TRKS PER LOGICAL CYLINDER
DS4DEVTK DS    XL2           NBR BYTES PER TRK AFTER HA AND R0
DS4DEVI  DS    XL1           CONSTANT FOR KEYED BLOCK
DS4DEVL  DS    XL1           CONSTANT FOR LAST BLOCK
DS4DEVK  DS    XL1           CONSTANT FOR NO KEY IN BLOCK
DS4DEVFG DS    XL1           DEVICE INDICATORS
DS4DEVTL DS    XL2           DEVICE TOLERANCE
DS4DEVDT DS    XL1           NBR OF DSCB'S PER TRACK
DS4DEVDB DS    XL1           NUMBER DIRECTORY BLOCKS/TRACK
DS4AMTIM DS    XL8           VSAM TIME STAMP
DS4VSIND DS    XL1           80=OWNED BY VSAM CATALOG
DS4VSCRA DS    XL2           REL TRK OF CRA
DS4R2TIM DS    XL8           CATALOG MATCH TIME STAMP
         DS    XL5           RESERVED
DS4F6PTR DS    XL5           CCHHR ADDR OF 1ST FMT 6 DSCB
DS4VTOCE DS    XL10          VTOC EXTENT, SEE EXTENT DSECT
         DS    XL25          RESERVED
*
*
*
EXTENT   DSECT ,        *** EXTENT DESCRIPTION ***
EXTYP    DS    XL1           EXTENT TYPE, X'00'-UNUSED EXTENT FIELD,
*                              X'01'-EXTENT FOR DATA RECDS (PRIM DATA)
*                              X'02'-OVERFLOW AREA EXTENT
*                              X'04'-INDEX AREA FOR I S
*                              X'40'-USER LABEL EXTENT
*                              X'80'-SHARED EXTENT
*                              X'81' EXTENT IS ON CYLINDER BOUNDARIES
EXTSEQ   DS    XL1           EXTENT SEQUENCE, BEGINS AT 0 FOR ALL BUT
*                              I S. FOR I S, NBR STARTS AT 1 FOR EACH
*                              VOLUME
EXTLOLIM DS    XL4           CCHH ADDR OF EXTENT LOWER LIMIT
EXTUPLIM DS    CL4           CCHH ADDR OF EXTENT UPPER LIMIT
EXCPIO   CSECT
*******************************************************************
*        HARD ERROR CONDITION LITERALS                            *
*******************************************************************
CONDTBL  DC    H'19',CL28'PERMANENT I/O ERROR,        '
         DC    H'16',CL28'EXTENT VIOLATION,           '
         DC    H'11',CL28'INTERCEPTED,                '
         DC    H'10',CL28'UNIT CHECK,                 '
         DC    H'14',CL28'UNIT EXCEPTION,             '
         DC    H'19',CL28'WRONG LENGTH RECORD,        '
         DC    H'21',CL28'CHANNEL PROGRAM CHECK,      '
         DC    H'16',CL28'PROTECTION CHECK,           '
         DC    H'18',CL28'CHANNEL DATA CHECK,         '
         DC    H'21',CL28'CHANNEL CONTROL CHECK,      '
         DC    H'23',CL28'INTERFACE CONTROL CHECK,    '
         DC    H'14',CL28'COMMAND REJECT,             '
         DC    H'15',CL28'EQUIPMENT CHECK,            '
         DC    H'10',CL28'DATA CHECK,                 '
         DC    H'07',CL28'OVERRUN,                    '
         DC    H'21',CL28'TRACK CONDITION CHECK,      '
         DC    H'10',CL28'SEEK CHECK,                 '
         DC    H'19',CL28'DATA CHECK IN COUNT,        '
         DC    H'19',CL28'WRITE TRACK OVERRUN,        '
         DC    H'22',CL28'END OF CYLINDER ON M-T,     '
         DC    H'25',CL28'INVALID COMMAND SEQUENCE,   '
         DC    H'15',CL28'NO RECORD FOUND,            '
         DC    H'14',CL28'FILE PROTECTED,             '
         DC    H'22',CL28'MISSING ADDRESS MARKER,     '
         DC    H'19',CL28'OVERFLOW INCOMPLETE,        '
*******************************************************************
*        ERROR MESSAGE TEXT  LINES                                *
*******************************************************************
RETC1    DC    CL2'C1'
MSGC1    DC    CL80'EXCPIO: DSNAME NOT FOR A CATALOGED DATASET'
RETD1    DC    CL2'D1'
MSGD1    DC    CL80'EXCPIO: UNABLE TO ALLOCATE WORK DATASET:'
         DC    CL39'        DYNALLOC ERROR, RETURN CODE IS '
DYNRTCD  DS    CL4
         DC    CL22', INFO RETURN CODE IS '
DYNINFO  DS    CL4
         DC    CL11' '
RETD2    DC    CL2'D2'
MSGD2    DC    CL80'EXCPIO: EXCP FILE DCBDEBAD AND/OR DEBDCBAD POINTERSX
               INVALID'
RETE1    DC    CL2'E1'
MSGE1    DC    CL80'EXCPIO: END OF ALLOCATED EXTENTS'
RETF1    DC    CL2'F1'
MSGF1    DC    CL80'EXCPIO: END OF FILE RECORD READ'
RETK1    DC    CL2'K1'
MSGK1    DC    CL80'EXCPIO: SEARCH KEY TYPE INVALID, USE EQ OR GE'
RETI1    DC    CL2'I1'
IOERR1   DS    0CL80                   I/O ERROR LINE 1
         DC    CL21'*** I/O ERROR: ECBCC='
IOECC    DS    CL2
         DC    CL6', CSW='
IOECSW1  DS    CL8
         DC    CL1' '
IOECSW2  DS    CL8
         DC    CL14', FAILING CCW='
IOECCW1  DS    CL8
         DC    CL1' '
IOECCW2  DS    CL8
         DC    CL3' '
*
IOERR2   DS    0CL80                  I/O ERROR LINE 2
         DC    CL21'               SENSE='
IOESNS   DS    CL4
         DC    CL19', COMMAND CHAIN IS '
IOECHNM  DS    CL8
         DC    CL17', SEARCH ADDRESS='
IOESRCH  DS    CL10
         DC    CL1' '
*
IOERR3   DS    0CL80                 I/O ERROR LINE 3
         DC    CL26'               BYTES READ='
IOEBYTS  DS    CL5
         DC    CL22', DATA AT CCW ADDRESS='
IOECD1   DS    CL8
         DC    CL1' '
IOECD2   DS    CL8
         DC    CL1' '
IOECD3   DS    CL8
         DC    CL1' '
*
IOERR4   DS    CL80                   I/O ERROR LINE 4
IOERR5   DS    CL80                   I/O ERROR LINE 5
IOERR6   DS    CL80                   I/O ERROR LINE 6
IOERR7   DS    CL80                   I/O ERROR LINE 7
CONDEND  DS    A                       END OF CURRENT CONDITION LINE
IOE4END  DC    A(IOERR4+78)            END OF CONDITION LINE 1
IOE5END  DC    A(IOERR5+78)            END OF CONDITION LINE 2
IOE6END  DC    A(IOERR6+78)            END OF CONDITION LINE 3
IOE7END  DC    A(IOERR7+78)            END OF CONDITION LINE 4
RETI2    DC    CL2'I2'
MSGI2    DC    CL80'EXCPIO: ERROR OCCURRED REWRITING RECORD'
RETO1    DC    CL2'O1'
MSGO1    DC    CL80'EXCPIO: UNABLE TO OPEN EXCP DATASET'
RETO2    DC    CL2'O2'
MSGO2    DC    CL80'EXCPIO: EXCD FILE DCB NOT OPEN. CALLS OUT OF ORDER'
RETR1    DC    CL2'R1'
MSGR1    DC    CL80'EXCPIO: INVALID COMMAND/REQUEST CODE'
RETR2    DC    CL2'R2'
MSGR2    DC    CL80'EXCPIO: REQUESTED VOLUME SERIAL NOT AVAILABLE'
RETR3    DC    CL2'R3'
MSGR3    DC    CL80'EXCPIO: DEVICE TYPE NOT SUPPORTED, MUST BE DASD'
RETU1    DC    CL2'U1'
MSGU1    DC    CL80'EXCPIO: THE ADDRESS IN UCBADDR DOES NOT POINT TO A X
               VALID UCB'
RETV1    DC    CL2'V1'
MSGV1    DC    CL80'EXCPIO: INVALID VTOC FORMAT 4 RECORD'
RETV2    DC    CL2'V2'
MSGV2    DC    CL80'EXCPIO: UNABLE TO ALLOCATE THE DSNAME'
RETV3    DC    CL2'V3'
MSGV3    DC    CL80'EXCPIO: ERROR READING FORMAT 3 DSCB'
RETV4    DC    CL2'V4'
MSGV4    DC    CL80'EXCPIO: DATASET HAS NO EXTENTS'
RETV5    DC    CL2'V5'
MSGV5    DC    CL80'EXCPIO: ERROR READING FORMAT 1 DSCB'
***********************************************************************
*       CAMLST PARAMETERS                                             *
***********************************************************************
BYDSN    CAMLST NAME,FINDDSN,,LOCAREA READ CATALOG LIST
LOCAREA  DS    CL265                   CATALOG INFORMATION AREA
FINDDSN  DC    CL44' '                 DSNAME TO BE FOUND IN CATALOG
***********************************************************************
*       COMMAND CHAINS FOR EXCP                                       *
***********************************************************************
BEGNCCWS DS    0D                       BEGINNING OF CCW AREA
CMDCHNR0 CCW   X'39',DASRCH,X'40',4     SEARCH HOME ADDRESS EQUAL
         CCW   X'08',*-8,0,0            TIC
         CCW   X'1E',RCOUNT,X'20',32767 READ CKD
*
CMDCHNR  CCW   X'31',DASRCH,X'40',5    SEARCH FOR PRECEDING RECORD
         CCW   8,*-8,0,0               TIC
         CCW   X'9E',RCOUNT,X'20',32767 READ CKD MULTI TRK
*
CMDCHNW  CCW   X'31',DASRCH,X'40',5    SEARCH FOR CURRENT RECORD
         CCW   8,*-8,0,0               TIC
WRITCCW  CCW   X'05',RKEYDATA,0,32767  WRITE DATA (OR KEY+DATA)
*
CMDCHNK  CCW   X'39',DASRCH,X'40',4     SEARCH HOME ADDRESS EQUAL
         CCW   X'08',CMDCHNK,0,0        TIC
KRDCT    CCW   X'92',RCOUNT,X'40',8     READ COUNT RECORD M-T
KSCH     CCW   X'29',RKEYDATA,X'40',5   SEARCH KEY EQUAL
SCHKYLN  EQU   KSCH+7,1                   KEY LENGTH
         CCW   8,KRDCT,0,0              TIC
KRDDATA  CCW   X'06',*,X'20',32767      READ DATA PAST KEY
KRDADR   EQU   KRDDATA+1,3                DATA ADDRESS
*
CMDCHNKD CCW   X'31',DASRCH,X'40',5     SEARCH ID EQUAL
         CCW   X'08',CMDCHNKD,0,0       TIC
         CCW   X'0E',RKEYDATA,X'20',32767 READ KEY AND DATA
ENDOCCWS EQU   *                       END OF CCW AREA
***********************************************************************
*        EXCP FILE, VTOC RECORDS, INPUT DATA AREA                     *
***********************************************************************
         PRINT GEN
DAIOB    EXCPIOB CCW=CMDCHNR,DDNAME=INPUT1
         DS    0D
         LTORG
RCOUNT   DS    XL8                     THIS RECORD'S COUNT
RKEYDATA DS    CL256                   THIS RECORD'S KEY AND DATA
         DS    CL32768
         PRINT NOGEN
         CVT   DSECT=YES               GENERATE CVT DSECT
         IEFUCBOB ,                    GENERATE UCB DSECT
EXCPIO   CSECT
         END
