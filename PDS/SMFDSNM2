         TITLE '***** STRIP TYPE 30 RECORDS FROM AN SMF FILE *****'
         PRINT NOGEN
SMFDSNM2 CSECT
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  COPY THE PROGRAM BASE REG
         USING SMFDSNM2,R3
         B     INIT1                   GO TO INITIALIZATION
         DC    CL8'SMFDSNM2'           PROGRAM NAME
SAVE     DS    18F                     REGISTER SAVE AREA
INIT1    LA    R15,SAVE                POINT TO MY SAVE AREA
         ST    R15,8(R13)              CHAIN FORWARD
         ST    R13,SAVE+4              CHAIN BACKWARD
         LR    R13,R15                 POINT R13 TO MY SAVE
*
**********************************************************************
*  STRIP ALL TYPE 30 SMF RECORDS FOR THE JOBLOG NUMBERS GIVEN ON     *
*  THE READER1 FILE. THE READER1 FILE HAS HARD-CODED RECFM=FB, AND IS*
*  EXPECTED TO BE FORMATTED AS THOUGH OUTPUT FROM SMFDSNAM. ONLY THE *
*  JOBNAME, READER START AND CREATION DATE/TIME FIELDS ARE USED.     *
*                                                                    *
*  DDNAME RECFM LRECL IN/OUT CONTENT                                 *
*  INPUT1   VBS 32760+INPUT  SMF DATA  (LOGICAL RECORDS BUILT BY PGM)*
*  READER1   FB   100 INPUT  JOBLOG INPUT FILE FROM SMFDSNAM         *
*  PRINT1    FB   150 OUTPUT SMF ACTIVITY LISTING FOR SPECIFIED DSNAM*
*                                                                    *
*  AUTHOR R. THORNTON MAR 1991                                       *
**********************************************************************
*
***********************************************************************
*        INITIALIZATION                                               *
***********************************************************************
*
OPENS    OPEN  (PRINT1,OUTPUT,INPUT1,,READER1)
         L     R2,=F'65536'             GET SMF RECORD AREA LENGTH
         STORAGE OBTAIN,LENGTH=(2),ADDR=SMFRECDA GET SMF RECD AREA
         BAS   R9,HEADER                PRINT HEADER
         L     R12,JBLGTBLA             POINT TO DSNAME TABLE
         USING JBLGTBL,R12
         LA    R11,1000                 MAX TABLE ENTRIES
TBLOAD   GET   READER1                  READ NEXT DSNAME CARD
         LR    R10,R1                   COPY RECORD ADDRESS
         USING JLOGRECD,R10
         CLI   JLOGJBN,C'A'             THIS A TABLE RECORD?
         BL    TBLOAD                   NO, READ AGAIN
         MVC   JBLGJBN,JLOGJBN          MOVE JOB NAME TO TABLE
         PACK  JBLGRSD,JLOGRSD          READER START DATE TO TABLE
         PACK  DBLWD,JLOGRST            PACK READER START TIME
         CVB   R1,DBLWD                 CONVERT TO BINARY
         ST    R1,JBLGRST               READER START TIME TO TABLE
         PACK  JBLGDTE,JLOGDTE          RECORD CREATE DATE TO TABLE
         PACK  DBLWD,JLOGTME            PACK RECORD CREATE TIME
         CVB   R1,DBLWD                 CONVERT TO BINARY
         ST    R1,JBLGTME               RECORD CREATE TIME TO TABLE
         MVC   JBLGDDN,JLOGDDN          MOVE JOB NAME TO TABLE
         MVC   JBLGDSN,JLOGDSN          MOVE JOB NAME TO TABLE
         ST    R12,JBLGTBND             SAVE LAST ENTRY ADDRESS
         LA    R12,L'JBLGNTRY(R12)      POINT TO NEXT ENTRY
         BCT   R11,TBLOAD               CONTINUE LOAD
ENDCTL   MVI   0(R12),X'FF'             SET TABLE STOPPER
         DROP  R10
***********************************************************************
*        MAINLINE PROCESSING                                          *
***********************************************************************
MAINLINE BAS   R9,GETSMF                GET INPUT AREA ADDRESS
         USING SMFRCD30,R10
BEGINSS  ICM   R11,15,SMF30SOF         SUBSYSTEM SECTION OFFSET
         BZ    MAINLINE                NO SUBSYSTEM SECTION
         AR    R11,R10                 SUBSYSTEM SECTION ADDRESS
         USING SMF30PSS,R11
         MVC   SUBTYPE,SMF30TYP+1      SAVE TYPE 30 SUB-TYPE
         DROP  R11
BEGINID  ICM   R11,15,SMF30IOF         IDENTIFICATION SECT OFFSET
         BZ    MAINLINE                NO IDENTIFICATION SECTION
         AR    R11,R10                 IDENTIFICATION SECT ADDRESS
         USING SMF30ID,R11
         L     R12,JBLGTBLA            POINT TO 1ST TABLE ENTRY
B2CKJOBN CLC   JBLGJBN,SMF30JBN        LOOKING FOR THIS JOBNAME?
         BNE   B2STEP                  NO
         CLC   JBLGRST(8),SMF30RST     CHECK READER START TIME/DATE
         BE    JLOGOUT                 FOUND ONE, GO TO OUTPUT
B2STEP   LA    R12,L'JBLGNTRY(R12)     STEP TO NEXT ENTRY
         CLI   0(R12),X'FF'            END OF TABLE?
         BNE   B2CKJOBN                NO
         B     MAINLINE                YES, GO READ SMF FILE
*BEGINIO  ICM   R11,15,SMF30UOF         I/O ACTIVITY SECTION OFFSET
*         BZ    BEGINCS                 NO I/O ACTIVITY SECTION
*         AR    R11,R10                 I/O ACTIVITY SECTION ADDRESS
*         USING SMF30URA,R11
*         DROP  R11
*BEGINCS  ICM   R11,15,SMF30TOF         COMPLETION SECTION OFFSET
*         BZ    BEGINPA                 NO COMPLETION SECTION
*         AR    R11,R10                 COMPLETION SECTION ADDRESS
*         USING SMF30CMP,R11
*         DROP  R11
*BEGINPA  ICM   R11,15,SMF30COF         PROCESSOR SECTION OFFSET
*         BZ    BEGINEX                 NO PROCESSOR SECTION
*         AR    R11,R10                 PROCESSOR SECTION ADDRESS
*         USING SMF30CAS,R11
*         DROP  R11
*BEGINEX  ICM   R11,15,SMF30EOF         EXCP SECTION OFFSET
*         BZ    BEGINAS                 NO EXCP SECTION
*         AR    R11,R10                 EXCP SECTION ADDRESS
*         USING SMF30EXP,R11
*         DROP  R11
*BEGINAS  ICM   R11,15,SMF30AOF         ACCOUNTING SECTION OFFSET
*         BZ    BEGINSP                 NO ACCOUNTING SECTION
*         AR    R11,R10                 ACCOUNTING SECTION ADDRESS
*         USING SMF30ACS,R11
*         DROP  R11
*BEGINSP  ICM   R11,15,SMF30ROF         STORAGE SECTION OFFSET
*         BZ    BEGINPS                 NO STORAGE SECTION
*         AR    R11,R10                 STORAGE SECTION ADDRESS
*         USING SMF30SAP,R11
*         DROP  R11
*BEGINPS  ICM   R11,15,SMF30POF         PERFORMANCE SECTION OFFSET
*         BZ    BEGINOS                 NO PERFORMANCE SECTION
*         AR    R11,R10                 PERFORMANCE SECTION ADDRESS
*         USING SMF30PRF,R11
*         DROP  R11
*BEGINOS  ICM   R11,15,SMF30OOF         OPERATOR SECTION OFFSET
*         BZ    JLOGOUT                 NO OPERATOR SECTION
*         AR    R11,R10                 OPERATOR SECTION ADDRESS
*         USING SMF30OPS,R11
*          DROP  R11
JLOGOUT  MVC   PRTJJBN,JBLGJBN         JOB NAME TO OUTPUT
         UNPK  PRTJRSD,SMF30RSD        READER START DATE OUTPUT
         L     R1,SMF30RST             GET READER START TIME
         CVD   R1,DBLWD                CONVERT TO PACKED
         UNPK  PRTJRST,DBLWD           READER START TIME TO OUTPUT
         OI    PRTJRST+7,C'0'          CLEAR SIGN
         UNPK  PRTJDTE,SMF30DTE        RECORD CREATE DATE OUTPUT
         ICM   R1,15,SMF30TME          GET RECORD CREATE TIME
         CVD   R1,DBLWD                CONVERT TO PACKED
         UNPK  PRTJTME,DBLWD           CREATE TIME TO OUTPUT
         OI    PRTJTME+7,C'0'          CLEAR SIGN
         MVC   PRTJSID,SMF30SID        SYSTEM ID TO OUTPUT
         SR    R1,R1                   CLEAR FOR INSERT
         IC    R1,SUBTYPE              GET SUBTYPE
         CVD   R1,DBLWD                CONVERT TO PACKED
         UNPK  PRTJSTP,DBLWD           SMF TYPE 30 SUB-TYPE TO OUTPUT
         OI    PRTJSTP+1,C'0'
         MVC   PRTJPGM,SMF30PGM        PROGRAM NAME TO OUTPUT
         MVC   PRTJSTM,SMF30STM        STEP NAME TO OUTPUT
         MVC   PRTJUIF,SMF30UIF        USER ID TO OUTPUT
         MVC   PRTJJNM,SMF30JNM        JES2 JOB NUMBER TO OUTPUT
         MVC   PRTJUSR,SMF30USR        PROGRAMMER NAME TO OUTPUT
         MVI   PRTJFLG,C' '            CLEAR PRINT FLAG
         MVC   PRTJDDN,BLANKS          CLEAR DDNAME
         MVC   PRTJDSN,BLANKS          CLEAR DSNAME
         CLC   SMF30DTE,JBLGDTE        WAS IT THIS STEP?
         BL    PUTJLOG                 NO
         BH    SETJFLG                 YES
         CLC   SMF30TME,JBLGTME        WAS IT THIS STEP?
         BL    PUTJLOG                 NO
SETJFLG  MVI   PRTJFLG,C'*'            SHOW THIS STEP FOR INPUT
         MVC   PRTJDDN,JBLGDDN         PRINT DDNAME
         MVC   PRTJDSN,JBLGDSN         PRINT DSNAME
         MVI   JBLGDTE,X'FF'           FORCE HI CREATE DATE
PUTJLOG  DS    0H                      OUTPUT STEP
         CLI   PRTJFLG,C'*'            WAS THIS THE STEP?  !!!!!!!!!!!!
         BNE   MAINLINE                NO                  !!!!!!!!!!!!
         BAS   R9,PRINT                PRINT DETAIL LINE
*        CLI   SUBTYPE,5               WAS THIS JOB TERMINATION?!!!!!!!
*        BNE   MAINLINE                NO                  !!!!!!!!!!!!
CLEANTBL L     R1,JBLGTBND             POINT TO LAST ENTRY
         C     R1,JBLGTBLA             WAS THIS THE LAST ENTRY?
         BE    EOJ                     YES
         MVC   JBLGNTRY,0(R1)          NO, MOVE LAST ENTRY HERE
         MVI   0(R1),X'FF'             SET NEW TABLE STOPPER
         SH    R1,JBLGLENG             BACK UP TO NEXT-TO-LAST ENTRY
         ST    R1,JBLGTBND             SET NEW END ADDRESS
         B     MAINLINE                GO READ AGAIN
         DROP  R10
***********************************************************************
*        PRINT ROUTINE                                                *
***********************************************************************
PRINT    PUT   PRINT1,PRTLINE           PRINT DATA LINE
         AP    LINECT,P1                INCREMENT LINE COUNTER
         CLI   PRTCC,C' '               SINGLE SPACED?
         BE    CLRPLIN                  YES
         AP    LINECT,P1                NO, ADD 1 MORE FOR DOUBLESPACED
CLRPLIN  MVC   PRTLINE,BLANKS           CLEAR PRINT LINE
         CP    LINECT,ENDPAGE           END OF PAGE?
         BLR   R9                       NO, RETURN
***********************************************************************
*        HEADING ROUTINE                                              *
***********************************************************************
HEADER   AP    PAGECT,P1                INCREMENT PAGE COUNTER
         MVC   HPAGE,PAGEDIT            EDIT PAGE
         ED    HPAGE,PAGECT                NUMBER TO HEADER
         PUT   PRINT1,HEADER1           PRINT HEADER
         PUT   PRINT1,HEADER2           PRINT HEADER
         PUT   PRINT1,HEADER3           PRINT HEADER
         PUT   PRINT1,HEADER4           PRINT HEADER
         ZAP   LINECT,P6                INITIALIZE LINE COUNTER
         BR    R9                       RETURN
*
***********************************************************************
*        ASSEMBLE NEXT SMF RECORD IN SMFRECD (GOTTEN) AREA            *
*        FOR EFFICIENCY, ONLY TYPE 30  RECORDS ARE ASSEMBLED.         *
*        ON RETURN, R10 WILL POINT TO THE NEXT SMF RECORD, FULLY      *
*        ASSEMBLED. RECORD LENGTH WILL BE RIGHT JUSTIFIED IN THE      *
*        SMFLEN FULLWORD. DO NOT USE THE RDW OF THE RECORD AREA, AS   *
*        THIS WILL ONLY BE ACCURATE FOR RECORDS CONTAINED COMPLETELY  *
*        IN ONE BLOCK WHICH ARE PROCESSED IN THE INPUT BLOCK.         *
***********************************************************************
GETSMF   GET   INPUT1                   READ NEXT SMF SEGMENT
         CLI   2(R1),X'01'              IS IT FIRST SEGMENT OF A RECD?
         BH    GETSMF                   NO
         CLI   5(R1),X'1E'              IS IT A TYPE 30 RECORD?
         BNE   GETSMF                   NO
SAVADLN  ST    R1,LASTSEGA              SAVE ITS ADDRESS
         LH    R2,0(R1)                 GET RECORD LENGTH
         ST    R2,SMFLEN                AND SAVE IT
         CLI   2(R1),X'00'              IS IT A COMPLETE RECORD?
         BH    GOTFIRST                 NO
         LR    R10,R1                   COPY RECORD ADDRESS
         BR    R9                       RETURN
GOTFIRST L     R10,SMFRECDA             R10 ALWAYS POINTS TO SMF RECD
         LR    R14,R1                   COPY SEGMENT ADDRESS
         LH    R15,0(R14)               GET SEGMENT LENGTH
         LR    R1,R15                   COPY LENGTH
         LR    R0,R10                   COPY RECORD AREA ADDRESS
         MVCL  R0,R14                   MOVE 1ST SEGMENT TO AREA
GETSEGMT GET   INPUT1                   GET NEXT SEGMENT OF RECORD
         ST    R1,LASTSEGA              SAVE ITS ADDRESS
         CLI   2(R1),X'01'              FIRST SEGMENT AGAIN?
         BH    OKNOT1                   NO
         WTO   'SMFDSNM2: SEGMENT 1 FOUND BEFORE END OF RECORD',       X
               ROUTCDE=11
         ABEND 111,DUMP
OKNOT1   CLI   2(R1),X'04'              VALID SEGMENT TYPE?
         BL    GOTMIDL                  YES
         WTO   'SMFDSNM2: INVALID SEGMENT TYPE IN RECORD',             X
               ROUTCDE=11
         ABEND 222,DUMP
GOTMIDL  LA    R14,4(0,R1)              COPY SEGMENT (DATA) ADDRESS
         LH    R2,2(R1)                 GET SEGMENT LENGTH
         SH    R2,=H'4'                 DEDUCT RDW SIZE
         LR    R1,R2                    COPY LENGTH FOR MOVE
         LR    R15,R1                   COPY LENGTH
         LR    R0,R10                   COPY RECORD AREA ADDRESS
         A     R0,SMFLEN                COMPUTE JOIN POINT ADDRESS
         A     R2,SMFLEN                COMPUTE LENGTH SO FAR
         C     R2,=F'65536'             WILL IT EXCEED AREA SIZE?
         BL    SETLENG                  NO, OK TO CONTINUE
         WTO   'SMFDSNM2: RECORD EXCEEDS 65536 BYTES, AREA OVERFLOW',  X
               ROUTCDE=11
         ABEND 333,DUMP
SETLENG  ST    R2,SMFLEN                UPDATE LENGTH
         MVCL  R0,R14                   MOVE THIS SEGMENT TO AREA
         L     R1,LASTSEGA              POINT TO THIS SEGMENT
         CLI   2(R1),X'03'              IS IT AN INTERMEDIATE SEGMENT?
         BE    GETSEGMT                 YES
         BR    R9                       NO, LAST SEGMENT, RETURN
*
***********************************************************************
*        END OF JOB                                                   *
***********************************************************************
*
EOJ      CLOSE (PRINT1,,INPUT1,,READER1) CLOSE FILES
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         L     R14,12(R13)             PICK UP RETURN ADDRESS
         L     R15,RETCODE             GET RETURN CODE
         LM    R0,R12,20(R13)          RESTORE CALLER'S REGS
         BR    R14                     RETURN TO CALLER
*
*
***********************************************************************
*        DATA DEFINITIONS                                             *
***********************************************************************
*
SMFRECDA DS    A                       POINTER TO SMF RECORD AREA
SMFLEN   DS    F                       TOTAL SMF RECORD LENGTH
LASTSEGA DS    A                       ADDRESS OF LAST SMF SEGMENT
H4       DC    H'4'                     CONSTANT 4
LINECT   DC    PL2'0'                   PRINT LINE COUNTER
P1       DC    P'1'                     CONSTANT 1
P6       DC    P'6'                     CONSTANT 6
BLANKS   DC    CL150' '                 CONSTANT BLANKS
ENDPAGE  DC    P'56'                    END OF PAGE LINE COUNTER
PAGECT   DC    PL2'0'                   PAGE COUNTER
PAGEDIT  DC    X'40202020'              PAGE EDIT WORD
HPAGE    DS    CL4                      PAGE NUMBER
DBLWD    DS    D                       WORK AREA
JBLGTBLA DC    A(JLOGAREA)             JOBLOG TABLE AREA ADDRESS
JBLGTBND DC    A(JLOGAREA)             JOBLOG TABLE END ADDRESS
RETCODE  DC    F'0'                    RETURN CODE
JBLGLENG DC    AL2(L'JBLGNTRY)         LENGTH OF TABLE ENTRY
SUBTYPE  DC    XL1'00'                 SMF TYPE 30 SUB-TYPE
*
PRTLINE  DS    0CL150                   PRINT LINE
PRTCC    DC    CL1'1'                    CARRIAGE CONTROL
PRTJFLG  DC    CL1' '                    FLAG FOR THIS STEP
PRTJJBN  DC    CL8'        '             JOB NAME
PRTJRSD  DC    CL6'      '               READER START DATE
PRTJRST  DC    CL8'        '             READER START TIME
PRTJDTE  DC    CL6'      '               CREATE DATE
PRTJTME  DC    CL8'        '             CREATE TIME
PRTJSID  DC    CL4'    '                 SMF SYSTEM IDENTIFIER
PRTJSTP  DC    CL2'  '                   TYPE 30 SUB-TYPE
PRTJPGM  DC    CL8'        '             PROGRAM NAME
PRTJSTM  DC    CL8'        '             STEP NAME
PRTJUIF  DC    CL8'        '             USERID
PRTJJNM  DC    CL8'        '             JES2 JOB NUMBER
PRTJUSR  DC    CL20' '                   PROGRAMMER NAME
PRTJDDN  DC    CL8' '                    DDNAME
PRTJDSN  DC    CL44' '                   DATASET NAME
         DC    CL2' '
*
HEADER1  DS    0CL150                  OUTPUT RECORD FOR PARM=JOBLOG
         DC    CL1'1'                    CARRIAGE CONTROL
         DC    CL1'F'                    FLAG FOR THIS STEP
         DC    CL8'        '             JOB NAME
         DC    CL6' RDR  '               READER START DATE
         DC    CL8' RDR    '             READER START TIME
         DC    CL6' REC  '               CREATE DATE
         DC    CL8' REC    '             CREATE TIME
         DC    CL4'SMF '                 SMF SYSTEM IDENTIFIER
         DC    CL2'ST'                   TYPE 30 SUB-TYPE
         DC    CL8'        '             PROGRAM NAME
         DC    CL8'        '             STEP NAME
         DC    CL8'        '             USERID
         DC    CL8' JES2   '             JES2 JOB NUMBER
         DC    CL20' '                   PROGRAMMER NAME
         DC    CL8' '                    DDNAME
         DC    CL44' '                   DATASET NAME
         DC    CL2' '
*
HEADER2  DS    0CL150                  OUTPUT RECORD FOR PARM=JOBLOG
         DC    CL1'0'                    CARRIAGE CONTROL
         DC    CL1'L'                    FLAG FOR THIS STEP
         DC    CL8' JOB    '             JOB NAME
         DC    CL6' STRT'                READER START DATE
         DC    CL8' STRT   '             READER START TIME
         DC    CL6' CREA'                CREATE DATE
         DC    CL8' CREATE '             CREATE TIME
         DC    CL4'SYST'                 SMF SYSTEM IDENTIFIER
         DC    CL2'UY'                   TYPE 30 SUB-TYPE
         DC    CL8' PROGRAM'             PROGRAM NAME
         DC    CL8' STEP   '             STEP NAME
         DC    CL8' USER   '             USERID
         DC    CL8' JOB    '             JES2 JOB NUMBER
         DC    CL20' PROGRAMMER'         PROGRAMMER NAME
         DC    CL8' '                    DDNAME
         DC    CL44' DATASET'            DATASET NAME
         DC    CL2' '
*
HEADER3  DS    0CL150                  OUTPUT RECORD FOR PARM=JOBLOG
         DC    CL1' '                    CARRIAGE CONTROL
         DC    CL1'G'                    FLAG FOR THIS STEP
         DC    CL8' NAME   '             JOB NAME
         DC    CL6' DATE '               READER START DATE
         DC    CL8' TIME   '             READER START TIME
         DC    CL6' DATE '               CREATE DATE
         DC    CL8' TIME   '             CREATE TIME
         DC    CL4'ID  '                 SMF SYSTEM IDENTIFIER
         DC    CL2'BP'                   TYPE 30 SUB-TYPE
         DC    CL8' NAME   '             PROGRAM NAME
         DC    CL8' NAME   '             STEP NAME
         DC    CL8' ID     '             USERID
         DC    CL8' NBR    '             JES2 JOB NUMBER
         DC    CL20' NAME'               PROGRAMMER NAME
         DC    CL8' DDNAME '             DDNAME
         DC    CL44' NAME'               DATASET NAME
         DC    CL2' '
*
HEADER4  DS    0CL150                  OUTPUT RECORD FOR PARM=JOBLOG
         DC    CL1' '                    CARRIAGE CONTROL
         DC    1C'_'                     FLAG FOR THIS STEP
         DC    8C'.'                     JOB NAME
         DC    6C'_'                     READER START DATE
         DC    8C'.'                     READER START TIME
         DC    6C'_'                     READER START DATE
         DC    8C'.'                     READER START TIME
         DC    4C'_'                     SMF SYSTEM IDENTIFIER
         DC    2C'.'                     TYPE 30 SUB-TYPE
         DC    8C'_'                     PROGRAM NAME
         DC    8C'.'                     STEP NAME
         DC    8C'_'                     USERID
         DC    8C'.'                     JES2 JOB NUMBER
         DC    20C'_'                    PROGRAMMER NAME
         DC    8C'.'                     DDNAME
         DC    44C'_'                    DATASET NAME
         DC    CL2' '
*
***********************************************************************
*        FILE DEFINITIONS                                             *
***********************************************************************
*
READER1  DCB   DSORG=PS,MACRF=GL,DDNAME=READER1,EODAD=ENDCTL,          X
               RECFM=FB,LRECL=100
PRINT1   DCB   DSORG=PS,MACRF=PM,DDNAME=PRINT1,                        X
               RECFM=FBA,LRECL=150
INPUT1   DCB   DSORG=PS,MACRF=GL,DDNAME=INPUT1,EODAD=EOJ,              X
               RECFM=VBS,LRECL=X
*
***********************************************************************
*        DSECTS                                                       *
***********************************************************************
JLOGRECD DSECT ,                        INPUT (FROM SMFSTR14)
JLOGJBN  DS    CL8                          JOBNAME
JLOGRSD  DS    CL6                          READER START DATE
JLOGRST  DS    CL8                          READER START TIME
JLOGDTE  DS    CL6                        CREATION DATE
JLOGTME  DS    CL8                        CREATION TIME
JLOGSID  DS    CL4                        SYSTEM ID
JLOGRTY  DS    CL2                        SMF RECORD TYPE
JLOGVOLS DS    CL6                        VOLSER OF SMF TAPE
JLOGDDN  DS    CL8                        DDNAME
JLOGDSN  DS    CL44                       DSNAME
*
JBLGTBL  DSECT ,                        JOBLOG TABLE DESCRIPTOR
JBLGNTRY DS    0CL76                      JOBLOG TABLE ENTRY
JBLGJBN  DS    CL8                          JOB NAME
JBLGRST  DS    XL4                          READER START TIME
JBLGRSD  DS    PL4                          READER START DATE
JBLGTME  DS    XL4                          RECORD CREATE TIME
JBLGDTE  DS    PL4                          RECORD CREATE DATE
JBLGDDN  DS    CL8                          DDNAME
JBLGDSN  DS    CL44                         DSNAME
*******************************************************************
*                   DSECTS                                        *
*******************************************************************
         PRINT GEN
         IFASMFR 30
SMFDSNM2 CSECT
*
***********************************************************************
*        REGISTER EQUATES                                             *
***********************************************************************
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         LTORG
*
*        INPUT AREA FOR SMF RECORD
*
         DS    0F
SMFRECD  DS    0CL32768                SMF RECORD INPUT AREA
SMFRDW   DS    XL4                     SMF RECORD RDW
SMFHDR   DS    CL32764                 SMF RECORD DATA
*
*        JOBLOG TABLE
*
         DS    0F
JLOGAREA DS    1000CL(L'JBLGNTRY)      AREA FOR JOBLOG TABLE
         DC    X'FF'                   END OF TABLE
         END
