BAL      SVLNK R3
* PROGRAM TO REFORMAT BAL SOURCE PROGRAM
*
*
* AUTHOR R THORNTON MARCH 1974
*
*
         L     R1,0(R1)                GET PARM ADDRESS
         CLC   0(2,R1),=H'0'           ANY PARM DATA
         BE    OPENS                   NO
         CLC   2(4,R1),=C'DOTS'        PUT DOTS IN COL 40
         BNE   OPENS                   NO, UNIDENTIFIED PARM
         MVI   DOTSW+1,0               NOP DOTS BRANCH
OPENS    OPEN  (OUTPUT1,OUTPUT,INPUT1) OPEN FILES
GET      GET   INPUT1,INCARD
         MVI   LITIND,0                RESET LITERAL INDICATOR
         MVI   LASTOP,0                RESET LAST OPERAND CHAR
         MVI   OUTCARD,C' '            BEGIN OUTPUT CARD CLEAR
         MVC   OUTCARD+1(79),OUTCARD   FINISH CLEARING
         MVC   OUTSEQ,INSEQ            SEQUENCE NBR TO OUTPUT
         LA    R1,INCARD               GET COL 1 ADDR OF INPUT
         LA    R2,OUTCARD              GET COL 1 ADDR OF OUTPUT
         CLI   CONTIN,0                THIS CARD A CONTINUATION
         MVI   CONTIN,0                RESET IT ANYHOW
         BNE   OPERANDS                YES, GO PROCESS OPERANDS
CKLBL    EQU   *                       CHECK FOR LABEL ON INPUT
         CLI   0(R1),C' '              ANY LABEL
         BE    NOLBL                   NO
         CLI   0(R1),C'*'              IS IT A COMMENT
         BE    COMMENT                 YES
LBLOOP   MVC   0(1,R2),0(R1)           1 LABEL CHAR TO OUTPUT
         LA    R1,1(R1)                TO NEXT INPUT COLUMN
         LA    R2,1(R2)                TO NEXT OUTPUT COLUMN
         C     R1,ENDIN                AT END OF INPUT CARD
         BNL   ERRCARD                 YES, ERROR
         CLI   0(R1),C' '
         BNE   LBLOOP                  LOOP THRU LABEL
VALBL    EQU   *                       VALIDATE LABEL
         CLI   OUTSP1,C' '             OVER 8 CHARACTERS
         BNE   ERRCARD                 YES, ERROR
         B     NOLBL                   GO TO OP CODE FORMAT
COMMENT  EQU   *                       COMMENTS AND EXCEPTIONS
         PUT   OUTPUT1,INCARD          COPY INPUT TO OUTPUT
         B     GET                     GO GET NEXT INPUT
ERRCARD  MVC   OUTCARD,INCARD          COPY INPUT TO OUTPUT
         MVC   OUTCARD+69(2),=C'*/'    FLAG AS ERROR
         B     CKBACK                  GO CHECK CONTINUED
NOLBL    EQU   *                       LOOK FOR OP CODE
         LA    R1,1(R1)                TO NEXT INPUT COLUMN
         C     R1,ENDIN                AT INPUT END
         BNL   ERRCARD                 YES, ERROR
         CLI   0(R1),C' '              IS IT BLANK
         BE    NOLBL                   YES, CONTINUE SEARCH
         LA    R2,OUTOPER              GET OUTPUT OP-CODE ADDR
OPLOOP   EQU   *                       COPY OP CODE TO OUTPUT
         MVC   0(1,R2),0(R1)           OP CODE CHARACTER TO OUTPUT
         LA    R1,1(R1)                TO NEXT INPUT COLUMN
         LA    R2,1(R2)                TO NEXT OUTPUT COLUMN
         C     R2,ENDOUT               AT OUTPUT END
         BNL   ERRCARD                 YES, ERROR
         C     R1,ENDIN                AT INPUT END
         BNL   ERRCARD                 YES, ERROR
         CLI   0(R1),C' '              END OF OP CODE
         BNE   OPLOOP                  CONTINUE OP CODE COPY
OPERANDS EQU   *                       COPY OPERANDS TO OUTPUT
         LA    R2,1(R2)                STEP PAST LAST CHAR MOVED
         CLI   OUTSP2,C' '             OP CODE SPILLED OVER
         BNE   OUTADROK                YES
         LA    R2,OUTOPND              NO, SET OPERAND ADDR TO COL 16
OUTADROK CLI   0(R1),C' '              INPUT COLUMN BLANK
         BNE   CKOPCD                  NO
         LA    R1,1(R1)                TO NEXT INPUT COLUMN
         C     R1,ENDIN                AT INPUT END
         BNL   OUTPUT                  YES, NO OPERANDS
         B     OUTADROK                CONTINUE TO FIND OPERANDS
CKOPCD   LA    R11,OCTBL               OP CODE TABLE ADDRESS
OPLKUP   CLC   OUTOPER,0(R11)          FOUND OP CODE IN TBL
         BE    OPNDFMT                 YES, GO FORMAT OPERANDS
         LA    R11,8(R11)              STEP TO NEXT ENTRY
         CLI   0(R11),X'FF'            END OF TABLE
         BNE   OPLKUP                  NO, CONTINUE SEARCH
OPNDLOOP EQU   *                       MOVE OPERANDS TO OUTPUT
         CLI   0(R1),C' '              POSSIBLE END OF OPERANDS
         BE    CKINLIT                 YES
OPNDMOVE MVC   0(1,R2),0(R1)           MOVE OPERAND CHARACTER
         MVC   LASTOP,0(R2)            SAVE LAST CHAR MOVED
         CLI   0(R1),C''''             CHARACTER MOVED WAS '
         BNE   OPNDSTEP                NO
         XC    LITIND,QUOTE            INVERT LITERAL INDIC
OPNDSTEP LA    R1,1(R1)                TO NEXT INPUT COLUMN
         LA    R2,1(R2)                TO NEXT OUTPUT COLUMN
         C     R1,ENDIN                AT INPUT END
         BNL   ERRCARD                 YES, ERROR
         C     R2,ENDOUT               AT OUTPUT END
         BNL   ERRCARD                 YES, ERROR
         B     OPNDLOOP                LOOP THRU OPERANDS
CKINLIT  EQU   *                       FOUND BLANK, IN LITERAL?
         CLI   LITIND,0                LITERAL IN PROGRESS
         BE    BEGNCOMT                NO
         B     OPNDMOVE                YES, CONTINUE OPERAND MOVE
OPNDFMT  EQU   *                       FORMAT INSTRUCTION OPERANDS
         MVC   OPFMT,5(R11)            SAVE OPERAND CODES
         MVI   PARIND,0                RESET IN PAREN INDIC
         MVI   LITIND,0                RESET IN LITERAL INDIC
         MVI   NEWOP,1                 INDIC NEW OPERAND
CKNEW    EQU   *                       CHECK IF NEW OPERAND
         CLI   NEWOP,0                 NEW OPERAND
         BE    COPYCHAR                NO
         CLI   NEWOP,1                 NEW OPERAND
         BE    NEWOPND                 YES
         CLI   NEWOP,2                 BEGIN OF SUB-OPND 1
         BE    SUBOP1                  YES
SUBOP2   EQU   *                       SECOND SUB-OPERAND
         CLI   OPFMT,C'X'              INDEXED OPERAND
         BE    CKNOR                   YES
         CLI   OPFMT,C'L'              STRG OPND WITH LENGTH
         BE    CKNOR                   YES
         B     RESOP                   NEITHER, RESET INDIC
SUBOP1   EQU   *                       SUB-OPERAND 1
         CLI   OPFMT,C'X'              INDEXED STRG OPERAND
         BE    CKNOR                   YES
         CLI   OPFMT,C'D'              DISPL-BASE OPERAND
         BE    CKNOR                   YES
         B     RESOP                   NEITHER, RESET INDIC
NEWOPND  EQU   *                       START OF NEW OPERAND
         CLI   OPFMT,C'R'              REGISTER OPERAND
         BNE   RESOP                   NO, RESET INDIC
CKNOR    TM    0(R1),C'0'              FIRST CHARACTER NUMERIC
         BNO   RESOP                   NO, RESET INDIC
         MVI   0(R2),C'R'              YES, PREFIX 'R' TO REG NBR
         LA    R2,1(R2)                STEP TO NEXT OUTPUT COLUMN
         C     R2,ENDOUT               AT OUTPUT END
         BNL   ERRCARD                 YES, ERROR
RESOP    EQU   *                       RESET OPERAND INDICATOR
         MVI   NEWOP,0                 INDICATE WITHIN OPERAND
COPYCHAR EQU   *                       COPY AND CHECK OPERANDS
         CLI   0(R1),C''''             NEXT CHARACTER IS '
         BE    OPQUOT                  YES
         CLI   LITIND,0                CURRENTLY IN LITERAL
         BNE   MOVIT                   YES, DON'T CHECK FURTHER
         CLI   0(R1),C'('              NEXT CHARACTER IS (
         BE    OPLP                    YES
         CLI   0(R1),C')'              NEXT CHARACTER IS )
         BE    OPRP                    YES
         CLI   0(R1),C','              NEXT CHARACTER IS COMMA
         BE    OPCOMA                  YES
         CLI   0(R1),C' '              NEXT CHARACTER IS BLANK
         BE    BEGNCOMT                YES, END OF OPERANDS
MOVIT    MVC   0(1,R2),0(R1)           MOVE CHARACTER TO OUTPUT
         MVC   LASTOP,0(R1)            SAVE LAST CHARACTER MOVED
         LA    R1,1(R1)                STEP TO NEXT INPUT COLUMN
         LA    R2,1(R2)                TO NEXT OUTPUT COLUMN
         C     R1,ENDIN                AT INPUT END
         BNL   ERRCARD                 YES, ERROR
         C     R2,ENDOUT               AT OUTPUT END
         BNL   ERRCARD                 YES, ERROR
         B     CKNEW                   GO CHECK
OPQUOT   EQU   *                       FOUND QUOTE NEXT CHARACTER
         CLI   LASTOP,C'L'             LAST CHARACTER WAS L
         BNE   BEGNQUT                 NO, GO START LITERAL
         CLI   LITIND,0                CURRENTLY IN LITERAL
         BE    MOVIT                   NO, LENGTH ATTRIBUTE
BEGNQUT  XC    LITIND,QUOTE            NO, INVERT LITERAL INDIC
         B     MOVIT                   GO MOVE TO OUTPUT
OPLP     EQU   *                       FOUND LEFT PAREN
         MVI   NEWOP,2                 INDICATE 1ST SUB-OPERAND
         MVI   PARIND,1                INDICATE IN PARENTHESIS
         B     MOVIT                   GO MOVE TO OUTPUT
OPRP     EQU   *                       FOUND RIGHT PAREN
         MVI   PARIND,0                RESET IN PARENTHESIS INDIC
         B     MOVIT                   GO MOVE TO OUTPUT
OPCOMA   EQU   *                       FOUND COMMA
         CLI   PARIND,0                IN PARENTHESIS
         BE    INNEW                   NO, NEW OPERAND
         MVI   NEWOP,3                 YES, INDICATE 2ND SUB-OPERAND
         B     MOVIT                   GO MOVE TO OUTPUT
INNEW    EQU   *                       AT NEW OPERAND
         MVI   NEWOP,1                 INDICATE AT NEW OPERAND
         MVC   OPFMT,OPFMT+1           SHIFT FORMAT INDICATORS
         B     MOVIT                   GO MOVE TO OUTPUT
BEGNCOMT EQU   *                       BEGIN COMMENTS MOVE
         LA    R2,1(R2)                STEP OVER 1 COLUMN
         C     R2,=A(OUTCARD+39)       ALREADY AT OR PAST COMMENT START
         BNL   FINDCOMT                YES
         L     R2,=A(OUTCARD+39)       GET NORMAL COMMENT ADDR
DOTSW    B     FINDCOMT                NOP IF PARM=DOTS
         MVI   0(R2),C'.'              SET DOT IN COL 40
FINDCOMT EQU   *                       FIND 1ST COMMENT CHARACTER
         CLI   0(R1),C' '              FOUND CHARACTER
         BNE   COMTLOOP                YES
         LA    R1,1(R1)                TO NEXT INPUT COLUMN
         C     R1,ENDIN                AT INPUT END
         BNL   CKCONTIN                YES
         B     FINDCOMT                CONTINUE SEARCH
COMTLOOP EQU   *                       MOVE COMMENT TO OUTPUT
         MVC   0(1,R2),0(R1)           MOVE 1 CHARACTER
         LA    R1,1(R1)                TO NEXT INPUT COLUMN
         LA    R2,1(R2)                TO NEXT OUTPUT COLUMN
         C     R1,ENDIN                AT INPUT END
         BE    CKCONTIN                YES
         C     R2,ENDOUT               AT OUTPUT END
         BE    CKCONTIN                YES
         CLI   0(R1),C' '              MOVED A BLANK
         BNE   COMTLOOP                NO
CKNXBK   CLI   1(R1),C' '              NEXT IS BLANK, TOO
         BNE   COMTLOOP                NO
         LA    R1,1(R1)                TO NEXT INPUT COLUMN
         C     R1,ENDIN                AT INPUT END
         BNL   CKCONTIN                YES
         B     CKNXBK                  CONTINUE MOVE
CKCONTIN EQU   *                       CHECK FOR CONTINUATION
         CLI   LASTOP,C','             LAST OPERAND CHAR IS ,
         BNE   CKBACK                  NO, IGNORE COL 72
         CLI   INCONT,C' '             INPUT COLUMN 72 BLANK
         BNE   CTNUED                  NO, CONTINUED
CKBACK   LA    R1,INCARD+70            ADDR INPUT COLUMN 71
BACKLOOP EQU   *                       SEARCH BACK FOR LAST CHARACTER
         CLI   0(R1),C' '              CHARACTER IS BLANK
         BNE   CHKLCT                  NO
         BCTR  R1,R0                   BACK UP 1 COLUMN
         B     BACKLOOP                CONTINUE SEARCH
CHKLCT   EQU   *                       CHECK FOR LOGICAL CONTINUATION
         CLI   0(R1),C'|'              CONTINUATION DESIRED
         BNE   OUTPUT                  NO
         BCTR  R2,R0                   ADDR OF LAST CHAR IN OUTPUT
         CLI   0(R2),C'|'              CONTIN CHARACTER
         BNE   CTNUED                  NO
         MVI   0(R2),C' '              WIPE CONTIN CHAR
CTNUED   EQU   *                       INDICATE CONTINUED TO NEXT CARD
         MVI   OUTCONT,C'X'            INDICATE CONTINUATION IN OUTPUT
OUTPUT   CLI   OUTCONT,C' '            CONTINUATION INDICATED
         BE    OUTWRIT                 NO
         MVI   CONTIN,C'X'             INDICATE NEXT CARD IS CONTINUATI
OUTWRIT  EQU   *                       WRITE OUTPUT SOURCE CARD
         PUT   OUTPUT1,OUTCARD         WRITE OUTPUT
         B     GET
EOJ      EQU   *                       END OF JOB
         CLOSE (OUTPUT1,,INPUT1)       CLOSE FILES
         L     R13,4(R13)              GET CALLERS SAVE POINTER
         LM    R14,R12,12(R13)         RESTORE HIS REGS
         BR    R14                     RETURN TO CALLER
*
*
*
QUOTE    DC    C''''                   QUOTE
OPFMT    DS    CL3                     OPERAND FORMAT INDICATORS
         DC    C' '                    OPERAND BLANK SHIFT
PARIND   DC    X'00'                   PARENTHESIS INDICATOR, 1= IN PAR
NEWOP    DC    X'00'                   OPERAND INDICATOR, 0=IN OPERAND,
*                                       1=AT NEW OPERAND,
*                                       2=AT 1ST SUB-OPERAND
*                                       3=AT 2ND SUB-OPERAND
CONTIN   DC    X'00'                   CONTINUED CARD INDIC
LASTOP   DC    C' '                    LAST OPERAND CHARACTER
LITIND   DC    X'00'                   LITERAL INDICATOR
ENDIN    DC    A(INCONT)               ADDR OF LAST INPUT DATA COLUMN
ENDOUT   DC    A(OUTCONT)              ADDR OF LAST OUTPUT DATA COLUMN
INCARD   DS    0CL80                   INPUT CARD
         DS    CL71
INCONT   DS    CL1                     CONTINUATION COLUMN
INSEQ    DS    CL8                     SEQUENCE NUMBER
*
*
*
OUTCARD  DS    0CL80                   OUTPUT SOURCE CARD
OUTLBL   DS    CL8                     LABEL
OUTSP1   DS    CL1                     SPACE
OUTOPER  DS    CL5                     OP CODE
OUTSP2   DS    CL1                     SPACE
OUTOPND  DS    CL56                    DATA COLUMNS
OUTCONT  DS    CL1                     CONTINUATION COLUMN
OUTSEQ   DS    CL8                     SEQUENCE NUMBER
OUTPUT1  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT1,                       X
               RECFM=FB,LRECL=80
INPUT1   DCB   DSORG=PS,MACRF=GM,DDNAME=INPUT1,EODAD=EOJ,              X
               RECFM=FB,LRECL=80
*
*
*
         LTORG
*
*
*
OCTBL    DS    0CL8                    TABLE OF OP-CODES AND OPERAND TY
*                                       R=REGISTER OPERAND
*                                       X=INDEXED STRG OPERAND
*                                       D=DISPL-BASE OPERAND
*                                       I=IMMED/MASK OPERAND
*                                       L=DISPL-LENGTH-BASE OPERAND
         DC    CL8'AR   RR'
         DC    CL8'A    RX'
         DC    CL8'AP   LL'
         DC    CL8'AH   RX'
         DC    CL8'ALR  RR'
         DC    CL8'AL   RX'
         DC    CL8'NR   RR'
         DC    CL8'N    RX'
         DC    CL8'NI   DI'
         DC    CL8'NC   LD'
         DC    CL8'BALR RR'
         DC    CL8'BAL  RX'
         DC    CL8'BCR  IR'
         DC    CL8'BR   R'
         DC    CL8'NOPR R'
         DC    CL8'NOP  IX'
         DC    CL8'BC   IX'
         DC    CL8'B    X'
         DC    CL8'BE   X'
         DC    CL8'BER  R'
         DC    CL8'BNE  X'
         DC    CL8'BNER R'
         DC    CL8'BH   X'
         DC    CL8'BHR  R'
         DC    CL8'BNH  X'
         DC    CL8'BNHR R'
         DC    CL8'BL   X'
         DC    CL8'BLR  R'
         DC    CL8'BO   X'
         DC    CL8'BOR  R'
         DC    CL8'BZ   X'
         DC    CL8'BNL  X'
         DC    CL8'BNLR R'
         DC    CL8'BNO  X'
         DC    CL8'BZR  R'
         DC    CL8'BCTR RR'
         DC    CL8'BP   X'
         DC    CL8'BCT  RX'
         DC    CL8'BPR  R'
         DC    CL8'BXH  RRD'
         DC    CL8'BM   X'
         DC    CL8'BXLE RRD'
         DC    CL8'BMR  R'
         DC    CL8'CR   RR'
         DC    CL8'BNP  X'
         DC    CL8'C    RX'
         DC    CL8'BNPR R'
         DC    CL8'CP   LL'
         DC    CL8'BNM  X'
         DC    CL8'CH   RX'
         DC    CL8'BNMR R'
         DC    CL8'CLR  RR'
         DC    CL8'BNZ  X'
         DC    CL8'CL   RX'
         DC    CL8'BNZR R'
         DC    CL8'CLC  LD'
         DC    CL8'BNOR R'
         DC    CL8'CLI  DI'
         DC    CL8'CLM  RID'
         DC    CL8'CLCL RR'
         DC    CL8'CVB  RX'
         DC    CL8'CVD  RX'
         DC    CL8'DR   RR'
         DC    CL8'DROP RRR'
         DC    CL8'D    RX'
         DC    CL8'DP   LL'
         DC    CL8'ED   LD'
         DC    CL8'EDMK LD'
         DC    CL8'XR   RR'
         DC    CL8'X    RX'
         DC    CL8'XI   DI'
         DC    CL8'XC   LD'
         DC    CL8'EX   RX'
         DC    CL8'HIO  D'
         DC    CL8'HDV  D'
         DC    CL8'IC   RX'
         DC    CL8'ICM  RID'
         DC    CL8'ISK  RR'
         DC    CL8'LR   RR'
         DC    CL8'L    RX'
         DC    CL8'LA   RX'
         DC    CL8'LTR  RR'
         DC    CL8'LCR  RR'
         DC    CL8'LCTL RRD'
         DC    CL8'LH   RX'
         DC    CL8'LM   RRD'
         DC    CL8'LNR  RR'
         DC    CL8'LPR  RR'
         DC    CL8'LPSW D'
         DC    CL8'LRA  RX'
         DC    CL8'MC   DI'
         DC    CL8'MVI  DI'
         DC    CL8'MVC  LD'
         DC    CL8'MVCL RR'
         DC    CL8'MVN  LD'
         DC    CL8'MVO  LL'
         DC    CL8'MVZ  LD'
         DC    CL8'MR   RR'
         DC    CL8'M    RX'
         DC    CL8'MP   LL'
         DC    CL8'MH   RX'
         DC    CL8'OR   RR'
         DC    CL8'O    RX'
         DC    CL8'OI   DI'
         DC    CL8'OC   LD'
         DC    CL8'PACK LL'
         DC    CL8'PTLB D'
         DC    CL8'RDD  DI'
         DC    CL8'RRB  D'
         DC    CL8'SCK  D'
         DC    CL8'SCKC D'
         DC    CL8'SPT  D'
         DC    CL8'SPM  R'
         DC    CL8'SSK  RR'
         DC    CL8'SSM  D'
         DC    CL8'SRP  LLI'
         DC    CL8'SLDA RD'
         DC    CL8'SLDL RD'
         DC    CL8'SLA  RD'
         DC    CL8'SLL  RD'
         DC    CL8'SRDA RD'
         DC    CL8'SRDL RD'
         DC    CL8'SRA  RD'
         DC    CL8'SRL  RD'
         DC    CL8'SIO  D'
         DC    CL8'SIOF D'
         DC    CL8'ST   RX'
         DC    CL8'STIDCD'
         DC    CL8'STC  RX'
         DC    CL8'STCM RID'
         DC    CL8'STCK D'
         DC    CL8'STCKCD'
         DC    CL8'STCTLRRD'
         DC    CL8'STIDPD'
         DC    CL8'STPT D'
         DC    CL8'STH  RX'
         DC    CL8'STM  RRD'
         DC    CL8'STNSMDI'
         DC    CL8'STOSMDI'
         DC    CL8'SR   RR'
         DC    CL8'S    RX'
         DC    CL8'SP   LL'
         DC    CL8'SH   RX'
         DC    CL8'SLR  RR'
         DC    CL8'SL   RX'
         DC    CL8'SVC  I'
         DC    CL8'TS   D'
         DC    CL8'TCH  D'
         DC    CL8'TIO  D'
         DC    CL8'TM   DI'
         DC    CL8'TR   LD'
         DC    CL8'TRT  LD'
         DC    CL8'UNPK LL'
         DC    CL8'USINGRRR'
         DC    CL8'WRD  DI'
         DC    CL8'ZAP  LL'
         DC    CL8'AXR  RR'
         DC    CL8'ADR  RR'
         DC    CL8'AD   RX'
         DC    CL8'AER  RR'
         DC    CL8'AE   RX'
         DC    CL8'AWR  RR'
         DC    CL8'AW   RX'
         DC    CL8'AUR  RR'
         DC    CL8'AU   RX'
         DC    CL8'CDR  RR'
         DC    CL8'CD   RX'
         DC    CL8'CER  RR'
         DC    CL8'CE   RX'
         DC    CL8'DDR  RR'
         DC    CL8'DD   RX'
         DC    CL8'DER  RR'
         DC    CL8'DE   RX'
         DC    CL8'HDR  RR'
         DC    CL8'HER  RR'
         DC    CL8'LTDR RR'
         DC    CL8'LTER RR'
         DC    CL8'LCDR RR'
         DC    CL8'LCER RR'
         DC    CL8'LDR  RR'
         DC    CL8'LD   RX'
         DC    CL8'LNDR RR'
         DC    CL8'LNER RR'
         DC    CL8'LPDR RR'
         DC    CL8'LPER RR'
         DC    CL8'LRDR RR'
         DC    CL8'LRER RR'
         DC    CL8'LER  RR'
         DC    CL8'LE   RX'
         DC    CL8'MXR  RR'
         DC    CL8'MDR  RR'
         DC    CL8'MD   RX'
         DC    CL8'MXDR RR'
         DC    CL8'MXD  RX'
         DC    CL8'MER  RR'
         DC    CL8'ME   RX'
         DC    CL8'STD  RX'
         DC    CL8'STE  RX'
         DC    CL8'SXR  RR'
         DC    CL8'SDR  RR'
         DC    CL8'SD   RX'
         DC    CL8'SER  RR'
         DC    CL8'SE   RX'
         DC    CL8'SWR  RR'
         DC    CL8'SW   RX'
         DC    CL8'SUR  RR'
         DC    CL8'SU   RX'
         DC    X'FF'
         END
