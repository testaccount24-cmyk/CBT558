         TITLE 'RAN/SEQ I/O ROUTINE FOR THE ENDEVOR STAGE2 FILE'
         PRINT NOGEN
STAGE2IO CSECT
STAGE2IO AMODE 24
STAGE2IO RMODE 24
***********************************************************************
* THIS ROUTINE PROVIDES SEQUENTIAL AND RANDOM I/O CAPABILITY FOR THE  *
* ENDEVOR STAGE2 FILES, FOR EXAMPLE EADMIN.ENDEVOR.STAGE2             *
*                                                                     *
* STANDARD LINKAGE CONVENTIONS ARE USED. THE PARAMETER LIST ADDRESSED *
* BY REG 1 CONTAINS THE FOLLOWING ADDRESSES:                          *
*     1. ADDRESS OF A ONE-BYTE I/O OPERATION REQUEST. CONTENT OF THIS *
*        BYTE MAY BE ONE OF THE FOLLOWING:                            *
*         . O=OPEN FILE.                                              *
*         . R=RANDOM READ BY KEY.                                     *
*         . P=POSITION TO KEY AND BEGIN SEQUENTIAL READ.              *
*         . C=CLOSE FILE REQUEST.                                     *
*         . S=READ FORWARD.                                           *
*     2. ADDRESS OF THE KEY.                                          *
*     3. ADDRESS OF THE RECORD WORK AREA. MUST BE AT LEAST 1017 BYTES *
*     4. ADDRESS OF A ONE-BYTE EXCEPTION INDICATOR:                   *
*         . SET TO BLANK ON ENTRY.                                    *
*         . SET TO N FOR NO RECORD FOUND (RANDOM).                    *
*         . SET TO E FOR END OF FILE (SEQUENTIAL).                    *
* ERROR CONDITIONS CAUSING ABEND U0888:                               *
*         . INVALID REQUEST CODE RECEIVED.                            *
*         . UNRECOVERABLE VSAM PHYSICAL AND LOGICAL ERRORS            *
*     AUTHOR R. THORNTON, OCT 2000                                    *
***********************************************************************
***********************************************************************
*                  ***** MAINTENANCE CHANGES *****                    *
***********************************************************************
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
*
         USING STAGE2IO,R3
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     GETPARM                 BRANCH AROUND CONSTANTS
         DC    CL8'STAGE2IO'           PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
***********************************************************************
* GET CALLER'S PARAMETER ADDRESSES AND USE THE REQUEST CODE TO        *
* DETERMINE WHICH ROUTINE TO PERFORM. ABEND IF INVALID REQUEST CODE.  *
***********************************************************************
GETPARM  LM    R4,R7,0(R1)             LOAD CALLING PARAMETERS
*                                        REG4=@REQUEST CODE.
*                                        REG5=@RECORD KEY.
*                                        REG6=@RECORD AREA.
*                                        REG7=@EXCEPTION INDICATOR.
         MVI   0(R7),C' '              CLEAR EXCEPTION INDICATOR
         CLI   0(R4),FWD               READ NEXT SEQUENTAIL RECORD?
         BE    FWDREAD                 YES
         CLI   0(R4),RANREAD           RANDOM READ REQUEST?
         BE    RANRD                   YES
         CLI   0(R4),POINT             POSITION TO KEY REQUEST?
         BE    PNTRECD                 YES
         CLI   0(R4),OPEN              OPEN REQUEST?
         BE    OPNFILE                 YES
         CLI   0(R4),CLOSE             CLOSE REQUEST?
         BE    CLOSFILE                YES
         WTO   'STAGE2IO: INVALID REQUEST CODE RECEIVED',ROUTCDE=11
         B     ABEND                   AND TERMINATE ABNORMALLY
***********************************************************************
* THIS ROUTINE OPENS THE ENDVDATA FILE                                *
***********************************************************************
OPNFILE  OPEN  ENDVDATA                OPEN THE FILE
         ST    R15,SAVE15              STORE REG 15
         LTR   R15,R15                 SUCCESSFUL?
         BZ    RETURN                  YES
         CLI   SAVE15+3,X'7F'          OPEN SUCCESSFUL?
         BH    OPNFAIL                 NO
         CLI   SAVE15+3,X'4C'          OPEN SUCCESSFUL?
         BNL   RETURN                  YES
OPNFAIL  WTO   'STAGE2IO: OPEN FAILED',ROUTCDE=11
         B     ABEND                   TERMINATE WITH ERROR
***********************************************************************
* THIS ROUTINE IS FOR REQUEST CODE 'P', TO POSITION TO A GIVEN KEY    *
* TO BEGIN A NEW RANGE FOR SEQUENTIAL PROCESSING. THE KEY SUPPLIED IS *
* GENERIC, AND MUST CONTAIN LOW VALUES (BINARY ZEROS) BEYOND THE LAST *
* POSITION OF INTEREST. AFTER POSITIONING USING POINT, A RECORD IS    *
* READ INTO THE CALLER'S RECORD AREA.                                 *
***********************************************************************
PNTRECD  MODCB RPL=ENDVRPL,AREA=(6),ARG=(5),OPTCD=(SEQ,FWD,KGE)
         LTR   R15,R15                 MODIFICATION SUCCESSFUL?
         BZ    START                   YES
         ST    R15,SAVE15              SAVE RETURN CODE
         WTO   'STAGE2IO: POSITIONING MODCB FAILED',ROUTCDE=11
         B     ABEND                   TERMINATE WITH ERROR
START    POINT RPL=ENDVRPL             POINT AT OR BEYOND KEY
         LTR   R15,R15                 POINT SUCCESSFUL?
         BZ    FWDREAD                 YES
         WTO   'STAGE2IO: POSITIONING POINT FAILED',ROUTCDE=11
         B     ABEND                   TERMINATE WITH ERROR
***********************************************************************
* THIS ROUTINE READS THE NEXT SEQUENTIAL RECORD INTO THE RECORD AREA  *
***********************************************************************
FWDREAD  MODCB RPL=ENDVRPL,AREA=(6),ARG=(5),OPTCD=(SEQ,FWD)
         LTR   R15,R15                 MODIFICATION SUCCESSFUL?
         BZ    FWDGET                  YES
         ST    R15,SAVE15              SAVE RETURN CODE
         WTO   'STAGE2IO: FORWARD MODCB FAILED',ROUTCDE=11
         B     ABEND                   TERMINATE WITH ERROR
FWDGET   GET   RPL=ENDVRPL             READ FORWARD
         LTR   R15,R15                 SUCCESSFUL READ?
         BZ    RETURN                  YES
         B     BADVSM                  GO HANDLE ERROR
***********************************************************************
* THIS ROUTINE READS A RECORD RANDOMLY, FOR THE FULL KEY SUPPLIED     *
* BY THE CALLER. THE RECORD FOUND IS MOVED TO THE CALLER'S AREA.      *
***********************************************************************
RANRD    MODCB RPL=ENDVRPL,AREA=(6),ARG=(5),OPTCD=(DIR,KEQ)
         LTR   R15,R15                 SUCCESSFUL READ?
         BZ    RANGET                  YES
         ST    R15,SAVE15              SAVE RETURN CODE
         WTO   'STAGE2IO: RANDOM READ MODCB FAILED',ROUTCDE=11
         B     ABEND                   TERMINATE WITH ERROR
RANGET   GET   RPL=ENDVRPL             READ RECORD FOR GIVEN KEY
         LTR   R15,R15                 SUCCESSFUL READ?
         BZ    RETURN                  YES
         B     BADVSM                  NO, GO HANDLE ERROR
***********************************************************************
* THIS ROUTINE CLOSES THE FILE AND RESETS INDICATORS TO PERMIT THE    *
* CALLER TO RE-OPEN AND CONTINUE PROCESSING IF DESIRED.               *
***********************************************************************
CLOSFILE CLOSE ENDVDATA                CLOSE THE FILE
         ST    R15,SAVE15              STORE REG 15
         LTR   R15,R15                 SUCCESSFUL CLOSE?
         BZ    RETURN                  YES
         CLI   SAVE15+3,X'81'          OPEN SUCCESSFUL?
         BL    RETURN                  YES
CLOSFAIL WTO  'STAGE2IO: ERROR CLOSING FILE',ROUTCDE=11
         B     ABEND                   TERMINATE WITH ERROR
***********************************************************************
* COMMON ROUTINE TO RETURN CONTROL TO THE CALLER.                     *
***********************************************************************
RETURN   L     R13,4(R13)              GET CALLER'S SAVE ADDR
         LM    R14,R12,12(R13)         RESTORE HIS REGS
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN TO CALLER
***********************************************************************
* THIS ROUTINE ANALYZES ERROR CONDITIONS REPORTED BY VSAM AND EITHER  *
* SENDS AN EXCEPTION INDICATION TO THE CALLER, OR WRITES A MESSAGE    *
* AND ABENDS WITH U0888.                                              *
***********************************************************************
BADVSM   ST    R15,SAVE15              SAVE REG 15
         CLI   SAVE15+3,8              LOGICAL ERROR?
         BNE   PHYSERR                 NO
         SHOWCB RPL=ENDVRPL,AREA=FEEDBACK,LENGTH=4,FIELDS=(FDBK)
CHECK1   CLI   FEEDBACK+3,4            END OF FILE DURING SEQUENTIAL?
         BE    QEOF                    YES
         CLI   FEEDBACK+3,16           RECORD NOT FOUND?
         BE    NORECFD                 YES
         B     LOGCERR                 NEITHER, MUST BE ERROR
NORECFD  MVI   0(R7),NRF               INDICATE NO RECORD FOUND
         B     RETURN                  RETURN TO CALLER
QEOF     MVI   0(R7),EOF               INDICATE END OF FILE
         B     RETURN                  RETURN TO CALLER
LOGCERR  WTO   'STAGE2IO: LOGICAL ERROR ON FILE',ROUTCDE=11
         B     VSAMMESG                GO SEND VSAM ERROR MESSAGE
PHYSERR  WTO   'STAGE2IO: PHYSICAL ERROR ON FILE',ROUTCDE=11
VSAMMESG MVC   VSMERRTX,ERRMSG+12      PRINTABLE TEXT TO MSG
         LA    R1,VSMERRMG             POINT TO MESSAGE
         SVC   35                      ISSUE WTO
ABEND    ABEND 888,DUMP                TERMINATE WITH ERROR
***********************************************************************
*        DATA, WORK, AND STORAGE AREAS
***********************************************************************
*
OPEN     EQU   C'O'                    OPEN REQUEST
CLOSE    EQU   C'C'                    CLOSE REQUEST
RANREAD  EQU   C'R'                    RANDOM READ REQUEST
POINT    EQU   C'P'                    POSITION TO KEY AND READ
FWD      EQU   C'S'                    READ NEXT SEQ RECORD
BLANK    EQU   C' '                    BLANK
LOGREC   EQU   16                      OFFSET TO LRECL IN DECB
EOF      EQU   C'E'                    END OF FILE INDICATOR
NRF      EQU   C'N'                    NO RECORD FOUND INDICATOR
SAVE15   DC    F'0'                    SAVE AREA FOR REG 15
FEEDBACK DC    F'0'                    HOLD AREA FOR ABEND CODES
ERRMSG   DC    CL128' '                VSAM ERROR MESSAGE AREA
VSMERRMG DS    0F                      WTO LENGTH ERROR MESSAGE
         DC    AL2(VSMERRND-VSMERRTX)  AREA LENGTH
         DC    X'8000'                 MCS FLAGS
VSMERRTX DC    CL116' '                VSAM ERROR MESSAGE TEXT
         DC    X'0000'                 DESCRIPTOR FLAGS
         DC    X'0020'                 ROUTE FLAGS
VSMERRND EQU   *
ENDVDATA ACB   DDNAME=STAGE2,MACRF=(KEY,DIR,SEQ,IN,OUT),AM=VSAM,       X
               STRNO=3
ENDVRPL  RPL   ACB=ENDVDATA,AM=VSAM,OPTCD=(KEY,MVE),AREALEN=1017,      X
               MSGAREA=ERRMSG,MSGLEN=128
*********************************************************************
*             REGISTER EQUATES                                      *
*********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
