  TITLE '*** SCANLDM2: SCAN A LOAD LIBRARY FOR 8-BYTE STRINGS ***'
***********************************************************************
* SCANS MEMBERS OF AN INPUT LOAD MODULE LIBRARY FOR 8-BYTE ALFANUMERIC*
* STRINGS BEGINNING WITH AN ALPHABETIC CHARACTER. WHEN FOUND, IF THE  *
* FIRST 7 BYTES DO NOT MATCH THE FIRST 7 BYTES OF THE MEMBER NAME, A  *
* RECORD IS WRITTEN CONTAINING THE MEMBER NAME AND THE STRING FOUND.  *
* PURPOSE IS TO TRY TO IDENTIFY DYNAMIC CALLS TO OTHER PROGRAMS.      *
*                                                                     *
* NAMES OF MEMBERS TO BE SCANNED IN THE SYSLIB FILE ARE ENTERED IN    *
* COLUMNS 1-8 OF THE SYSIN FILE.                                      *
*                                                                     *
* AUTHOR R THORNTON DEC 1994                                          *
***********************************************************************
*
SCANLDM2 CSECT
         STM   R14,R12,12(R13)         SAVE REGISTERS
         LR    R3,R15                  SET CSECT BASE GPR
         USING SCANLDM2,R3
         LA    R15,SAVE                POINT TO MY SAVE AREA
         ST    R15,8(R13)              SET LSA
         ST    R13,SAVE+4              SET HSA
         LR    R13,R15                 POINT R13 TO MY SAVE AREA
***********************************************************************
*        OPEN FILES                                                   *
***********************************************************************
OPENS    OPEN  (SYSPRINT,OUTPUT,OUTPUT1,OUTPUT,SYSLIB,,SYSIN)
         LH    R12,SYSLIB+62           GET BLOCKSIZE
         GETMAIN EU,LV=(R12),A=BLKADDR GET STORAGE FOR BLOCK
***********************************************************************
*             MAINLINE ROUTINE                                        *
***********************************************************************
MAINLINE GET   SYSIN,MEMBER            READ NEXT MEMBER RECORD
         MVC   PRTMEM,MEMBER           MEMBER NAME TO PRINT
         FIND  SYSLIB,MEMBER,D         FIND MEMBER BY NAME
         LTR   R15,R15                 ANY ERROR
         BNZ   MISSMEMB                YES, MISSING MEMBER
         MVI   TEXTEXP,0               CLEAR TEXT EXPECTED INDICATOR
READBLOK L     R12,BLKADDR             POINT TO RECORD AREA
         READ  INDECB,SF,SYSLIB,(R12),'S' READ NEXT BLOCK
         CHECK INDECB                  WAIT FOR COMPLETION
         CLI   TEXTEXP,1               TEXT RECORD EXPECTED?
         BE    GOTTEXT                 YES
         TM    0(R12),X'01'            CONTROL OR CONTROL AND ESD RECD?
         BZ    READBLOK                NO
         MVI   TEXTEXP,1               YES, INDICATE TEXT EXPECTED
         B     READBLOK                GO READ TEXT RECORD
GOTTEXT  MVI   TEXTEXP,0               CLEAR TEXT EXPECTED INDICATOR
         LH    R12,SYSLIB+82           LRECL FROM DCB
         A     R12,BLKADDR             COMPUTE ENDING ADDRESS +1
         SH    R12,H7                  COMPUTE SCAN END ADDRESS
         ST    R12,BLKENDA             SAVE ENDING ADDRESS
         L     R1,BLKADDR              POINT TO RECORD BYTE 1
SCANCKND C     R1,BLKENDA              STILL WITHIN BLOCK?
         BNL   READBLOK                NO
         SR    R2,R2                   CLEAR FOR TRT
         L     R12,BLKENDA             GET END OF BLOCK ADDRESS
         SR    R12,R1                  SUBTRACT CURRENT SCAN POSITION
         CH    R12,H255                OVER 256 BYTES LEFT?
         BNH   SCANEX                  NO
         LH    R12,H255                YES, LIMIT SCAN TO 256 BYTES
SCANEX   EX    R12,SCANTRT             POSSIBLE 1ST BYTE OF STRING?
         LR    R12,R2                  SAVE TABLE BYTE
         BNZ   SCANCKIN                YES
SCANADV  LA    R1,256(R1)              STEP OVER 256 BYTES
         B     SCANCKND                CONTINUE SCAN
SCANTRT  TRT   0(1,R1),SCANTBL         EXECUTED TRT
SCANCKIN C     R1,BLKENDA              FOUND WITHIN BLOCK?
         BNL   READBLOK                NO
CPRSTRG  TRT   0(8,R1),SCANTBL2        FOUND AN 8-BYTE A/N STRING?
         BNZ   PASS1                   NO
         CLC   MEMBER(7),0(R1)         STRING = MEMBER NAME?
         BE    PASS1                   YES, SKIP IT
         LR    R12,R1                  COPY 1ST BYTE ADDRESS
         LA    R11,8                   SCAN 8 BYTES
         MVI   GOTBLNK,0               CLEAR INDICATOR
SCANIMBD CLI   0(R12),C' '             AT A BLANK?
         BE    SCANIBLK                YES
         CLI   GOTBLNK,1               NO, HAVE I FOUND A BLANK?
         BE    PASS1                   YES, SKIP IF IMBEDDED BLANK
         B     SCANISTP                CONTINUE IMBEDDED BLANK SEARCH
SCANIBLK MVI   GOTBLNK,1               SHOW BLANK FOUND
SCANISTP LA    R12,1(R12)              ADVANCE TO NEXT BYTE
         BCT   R11,SCANIMBD            CONTINUE
GOT1     BAS   R9,OUTPUT               GO WRITE OUTPUT RECORD
PASS1    LA    R1,1(R1)                ADVANCE TO NEXT BYTE IN BLOCK
         B     SCANCKND                CONTINUE SCAN
***********************************************************************
*             WRITE AN OUTPUT RECORD                                  *
***********************************************************************
OUTPUT   MVC   OTMEMB,MEMBER           MEMBER NAME TO OUTPUT
         MVC   OTSTRG,0(R1)            STRING TO OUTPUT RECORD
         LR    R12,R1                  SAVE R1 ACROSS PUT
         PUT   OUTPUT1,OUTREC          WRITE OUTPUT RECORD
         LA    R1,7(R12)               POINT PAST THE STRING FOUND
         BR    R9                      RETURN TO CALLER
***********************************************************************
*             END OF MEMBER                                           *
***********************************************************************
***********************************************************************
*             MEMBER NOT FOUND IN DIRECTORY                           *
***********************************************************************
MISSMEMB MVC   PRTNBR,=CL12'NOT FOUND   ' MESSAGE
         PUT   SYSPRINT,PRTLINE        WRITE PRINT LINE
         B     MAINLINE                LOOP THROUGH INPUT FILE
***********************************************************************
*             END OF JOB                                              *
***********************************************************************
EOJ      CLOSE (SYSLIB,,SYSPRINT,,OUTPUT1,,SYSIN) CLOSE FILES
         L     R13,SAVE+4              POINT TO CALLER'S SAVE AREA
         L     R14,12(R13)             RESTORE RETURN REG: R14
         SR    R15,R15                 SET RETURN CODE
         LM    R0,R12,20(R13)          RESTORE CALLER'S REGS 0-12
         BR    R14                     RETURN
***********************************************************************
*        STORAGE AND FILE AREAS                                       *
***********************************************************************
*
SAVE     DS    18F                     SAVE AREA FOR CALLED PGMS
H0       DC    H'0'                    BINARY 0
H7       DC    H'7'                    BINARY 7
H255     DC    H'255'                  BINARY 255
CSWRESID DC    H'0'                    RESIDUAL COUNT FROM CSW
P0       DC    P'0'                    PACKED 0
P1       DC    P'1'                    PACKED 1
TEXTEXP  DC    X'00'                   1 = TEXT RECORD EXPECTED
GOTBLNK  DC    X'00'                   1 = BLANK BYTE FOUND
TOTLEDIT DC    XL12'402020206B2020206B202120' EDIT MASK FOR TOTAL
STRING   DS    CL104                   PARM DATA FROM EXEC
SCANTBL  DC    256X'00'                TRT SCAN TABLE
         ORG   SCANTBL+C'@'
         DC    C'@'
         ORG   SCANTBL+C'#'
         DC    C'#'
         ORG   SCANTBL+C'$'
         DC    C'$'
         ORG   SCANTBL+C'A'
         DC    C'ABCDEFGHI'
         ORG   SCANTBL+C'J'
         DC    C'JKLMNOPQR'
         ORG   SCANTBL+C'S'
         DC    C'STUVWXYZ'
         ORG
*
SCANTBL2 DC    256X'FF'
         ORG   SCANTBL2+C' '
         DC    X'00'
         ORG   SCANTBL2+C'@'
         DC    X'00'
         ORG   SCANTBL2+C'#'
         DC    X'00'
         ORG   SCANTBL2+C'$'
         DC    X'00'
         ORG   SCANTBL2+C'A'
         DC    XL9'000000000000000000'
         ORG   SCANTBL2+C'J'
         DC    XL9'000000000000000000'
         ORG   SCANTBL2+C'S'
         DC    XL8'0000000000000000'
         ORG   SCANTBL2+C'0'
         DC    XL10'00000000000000000000'
         ORG
*
BLKADDR  DS    A
BLKENDA  DS    A
REMBYTS  DC    H'0'
LRECL    DS    H
NEXREC   DS    A
MEMBER   DS    CL8
         DS    CL72
*
PRTLINE  DS    0CL80                   PRINT LINE
PRTMEM   DC    CL8' '
         DC    CL1' '
PRTNBR   DC    CL12' '
         DC    CL59' '
*
OUTREC   DS    0CL16                   OUTPUT RECORD
OTSTRG   DS    CL8                     STRING FOUND
OTMEMB   DS    CL8                     MEMBER NAME
***********************************************************************
*             DCB'S                                                   *
***********************************************************************
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FB,LRECL=80
*
OUTPUT1  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT1,                       X
               RECFM=FB,LRECL=16
*
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=EOJ,               X
               RECFM=FB,LRECL=80
*
SYSLIB   DCB   DDNAME=SYSLIB,DSORG=PO,MACRF=R,EODAD=MAINLINE
         LTORG
SCANLDM2 CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         LTORG
         END
