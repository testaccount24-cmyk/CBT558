         TITLE ' READFMEM - SUBROUTINE TO READ MEMBER OF A RECFM=F PDS'
READFMEM CSECT
         REQU
**********************************************************************
* SUBROUTINE TO FIND, READ, AND PASS RECORD ADDRESSES FOR THE MEMBER *
* OF A PDS TO THE CALLING PROGRAM. STANDARD LINKAGE CONVENTIONS ARE  *
* USED WITH THE FOLLOWING PARAMETER REQUIREMENTS -                   *
* OPEN - FIRST POSITION IS O, NEXT 8 ARE DDNAME                      *
* FIND - FIRST POSITION IS F, NEXT IS T IF TTR IS SUPPLIED, OR N IF  *
*        NAME IS SUPPLIED, NEXT 3 ARE TTR OF BEGINNING OF MEMBER FOR *
*        T REQUESTS, OR NEXT 8 ARE MEMBER NAME IF N IS REQUESTED.    *
* READ - FIRST PARAMETER IS R. SECOND PARAMETER IS THE ADDRESS OF A  *
*        FULLWORD WHICH WILL CONTAIN THE ADDRESS OF THE RECORD READ. *
* CLOSE - FIRST PARAMETER IS C.                                      *
* EOF - END OF FILE IS INDICATED BY RETURNING A HEX FF IN THE FIRST  *
*        POSITION OF THE RECORD ADDRESS FIELD.                       *
*                                                                    *
* AUTHOR R THORNTON, OCT 1986.                                       *
**********************************************************************
         USING READFMEM,R3             ESTABLISH ADDRESSABILITY
         STM   R14,R12,12(R13)         SAVE CALLING PROG REGISTERS
         LR    R3,R15                  INITIALIZE BASE REG
         ST    R13,SAVE+4              SAVE RETURN POINTER
         LA    R15,SAVE                GET SAVE AREA ADDR
         ST    R15,8(R13)              STORE FORWARD POINTER
         LR    R13,R15                 INITIALIZE SAVE AREA POINTER
         L     R4,0(R1)                GET FIRST PARAMETER ADDRESS
         L     R5,4(R1)                GET SECOND PARAMETER ADDRESS
         CLI   0(R4),C'O'              OPEN REQUESTED
         BE    OPEN                    YES
         CLI   0(R4),C'F'              FIND MEMBER REQUESTED
         BE    FIND                    YES
         CLI   0(R4),C'R'              READ REQUESTED
         BE    READ                    YES
         CLI   0(R4),C'C'              CLOSE REQUESTED
         BE    CLOSE                   YES
INVPRM   WTO   'READFMEM: INVALID PARAMETER RECEIVED',ROUTCDE=11
         ABEND 201,DUMP                INVALID PARAMETER
RETURN   L     R13,SAVE+4              GET RETURN POINTER
         LM    R14,R12,12(R13)         RESTORE CALLING PROGRAM REGISTER
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN TO CALLER
*                                                                    *
**********************************************************************
*        OPEN INPUT PDS                                              *
**********************************************************************
*                                                                    *
OPEN     MVC   PDS+40(8),1(R4)         MOVE DDNAME TO DCB
         OPEN  PDS                     OPEN FILE FOR INPUT
         LH    R12,PDS+62              GET BLOCKSIZE
         GETMAIN EU,LV=(R12),A=BLKADDR GET STORAGE FOR BLOCK
         L     R1,4(R13)               POINTER TO CALLER'S SAVE
         LA    R12,PDS                 @ DCB
         LA    R12,0(R12)              CLEAR HI-ORDER
         ST    R12,24(R1)              SAVE DCB @ IN REG 1 FOR CALLER
         MVI   READSW,1                INDICATE READ REQUIRED
         B     RETURN                  GO BACK TO CALLER
*                                                                    *
**********************************************************************
*        CLOSE INPUT PDS                                             *
**********************************************************************
*                                                                    *
CLOSE    CLOSE PDS                     CLOSE FILE
         MVI   READSW,1                INDICATE READ REQUIRED
         B     RETURN                  GO BACK TO CALLER
*                                                                    *
**********************************************************************
*        FIND (POSITION TO) SPECIFIED MEMBER                         *
**********************************************************************
*                                                                    *
FIND     MVI   READSW,1                INDICATE READ REQUIRED
         SR    R0,R0                   SET R0 TO ZERO
         CLI   1(R4),C'N'              FIND IS FOR NAME
         BE    FINDNAME                YES
         CLI   1(R4),C'T'              FIND IS FOR TTR
         BNE   INVPRM                  NO, ERROR
         MVC   RELTTR,2(R4)            MOVE TTR FOR FIND
         FIND  PDS,RELTTR,C            FIND MEMBER BY TTR
         B     RETURN                  GO BACK TO CALLER
FINDNAME MVC   MEMBER,2(R4)            MOVE MEMBER NAME FOR FIND
         FIND  PDS,MEMBER,D            FIND MEMBER BY NAME
         LTR   R15,R15                 ANY ERROR
         BZ    RETURN                  NO, RETURN TO CALLER
         MVI   2(R4),0                 INDICATE NOT FOUND
         B     RETURN                  GO BACK TO CALLER
*                                                                    *
**********************************************************************
*        READ NEXT RECORD FROM MEMBER, RETURN RECORD ADDRESS         *
**********************************************************************
*                                                                    *
READ     CLI   READSW,1                READ REQUIRED?
         BE    READBLOK                YES
         L     R12,RECDADDR            POINT TO CURRENT RECORD
         AH    R12,PDS+82              @ NEXT RECORD (+ DCBLRECL)
         C     R12,ENDBLOK             STILL WITHIN BLOCK?
         BL    SAMBLK                  YES
READBLOK L     R12,BLKADDR             GET BLOCK ADDRESS
         READ  INDECB,SF,PDS,(R12),'S' READ NEXT BLOCK
         CHECK INDECB                  WAIT FOR COMPLETION
         LR    R1,R12                  COPY INPUT BLOCK ADDRESS
         AH    R1,PDS+90               @ END OF BLOCK (+ DCBPRECL)
         BCTR  R1,0                    BACK UP TO LAST BYTE
         ST    R1,ENDBLOK              SAVE END OF BLOCK ADDRESS
         MVI   READSW,0                INDICATE NO READ REQUIRED
         TM    PDS+36,X'10'            BLOCKED RECORDS?
         BO    SAMBLK                  YES
         MVI   READSW,1                INDICATE READ REQUIRED
SAMBLK   ST    R12,RECDADDR            SAVE CURRENT RECORD ADDRESS
         ST    R12,0(R5)               GIVE IT TO CALLER, TOO
         B     RETURN                  GO BACK TO CALLER
*                                                                    *
**********************************************************************
*        END OF FILE ROUTINE                                         *
**********************************************************************
*                                                                    *
EOF      MVI   0(R5),X'FF'             INDICATE EOF TO CALLER
         B     RETURN                  GO BACK TO CALLER
*                                                                    *
**********************************************************************
*        DATA AREAS                                                  *
**********************************************************************
*                                                                    *
SAVE     DS    18F
RECDADDR DC    A(0)                    CURRENT RECORD ADDRESS
ENDBLOK  DC    A(0)                    END OF BLOCK ADDRESS
BLKADDR  DS    F
READSW   DC    XL1'1'                  '1' = READ REQUIRED
RELTTR   DS    CL3
         DC    X'00'
MEMBER   DS    CL8
*                                                                    *
**********************************************************************
*        FILE DEFINITIONS                                            *
**********************************************************************
*                                                                    *
PDS      DCB   DDNAME=PDS,DSORG=PO,MACRF=R,EODAD=EOF
         END
