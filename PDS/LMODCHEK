         TITLE '***** SHOW CSECT SOURCE LOCATIONS *****'
LMODCHEK SVLNK R3,R4
         PRINT NOGEN
***********************************************************************
* PURPOSE: TO IDENTIFY THE SOURCE OF ALL COMPONENTS OF A LOAD MODULE  *
*          IN ORDER TO DETERMINE WHETHER OR NOT AN UNWANTED TEST LEVEL*
*          CSECT MAY BE INCLUDED WHEN A PROGRAM IS PUT INTO ENDEVOR   *
*          STAGE 1. EACH LOAD MODULE TO BE ANALYZED IS ANALYZED TO    *
*          IDENTIFY ALL THE INCLUDED CSECTS. FOR EACH CSECT FOUND,    *
*          THE SYSLIB CONCATENATION IS SEARCHED TO LOCATE A MEMBER BY *
*          THAT NAME. A LISTING IS PRODUCED SHOWING EACH CSECT, AND   *
*          WHERE IT WAS FOUND IN THE SYSLIB CONCATENATION. THE USER   *
*          SHOULD QUESTION ANY MODULES THAT ARE SHOWN TO BE FROM THE  *
*          ENDEVOR TEST LIBRARY.                                      *
* PROCESSING SUMMARY:                                                 *
* 1. INITIALIZE: OPEN FILES, GET STORAGE FOR SYMBOL TABLE, ETC.       *
* 2. READ A SYSIN FILE RECORD, WHICH MUST CONTAIN A LOAD MODULE MEMBER*
*    NAME IN COLUMNS 1-8. ISSUE A BLDL TO THE INLIB FILE FOR THE NAME *
*    GIVEN IN THE SYSIN FILE RECORD.                                  *
* 3. READ AND PROCESS THE DATA RECORDS COMPRISING THE LOAD MODULE,    *
*    STORING CSECT NAMES IN THE SYMBOL TABLE.                         *
* 4. SORT THE MEMBER NAMES IN THE SYMBOL TABLE IN ALFANUMERIC ORDER.  *
* 5. COPY SORTED CSECT NAMES TO THE BLDL PARAMETER AREA.              *
* 6. ISSUE A BLDL TO THE SYSLIB FILE USING THE LIST ABOVE.            *
* 7. PRINT A REPORT HAVING ONE LINE PER CSECT SHOWING THE CSECT NAME, *
*    AND LIBRARY IN WHICH IT WAS FOUND.                               *
* 8. REPEAT STEPS 1-6 UNTIL SYSIN FILE IS EXHAUSTED.                  *
*                                                                     *
* FILES USED BY THIS PROGRAM INCLUDE THE FOLLOWING:                   *
*     DDNAME SYSIN:    RECFM=FB,LRECL=80 - INPUT CONTROL CARD FILE.   *
*     DDNAME INLIB:    RECFM=U -  INPUT LOAD MODULE LIBRARY.          *
*     DDNAME SYSLIB:   RECFM=U -  INPUT LOAD MODULE LIBRARY.          *
*     DDNAME SYSPRINT: RECFM=FBA,LRECL=133 - CSECT REPORT             *
*                                                                     *
* AUTHOR R THORNTON - SEP 2000 (USING CSECTLST AS THE BASIS)          *
***********************************************************************
* PHASE 1: OPEN FILES, AND GET STORAGE FOR THE SYMBOL AND RLD TABLES. *
***********************************************************************
*********************************************************************
*        PROCESS PARM FIELD                                         *
*********************************************************************
         L     R2,0(R1)                GET PARM FIELD ADDR
         CLC   0(2,R2),H0              ANY PARM DATA?
         BE    OPENS                   NO, CONTINUE
         CLC   0(2,R2),H5              VALID PARM LENGTH?
         BNE   BADPARM                 NO
         CLC   2(5,R2),=CL5'FLAGQ'     PARM=FLAGQ?
         BE    PARMOK                  YES, OK
BADPARM  WTO   'INVALID PARM ON EXEC STATEMENT - IGNORED',ROUTCDE=11
         B     OPENS                   CONTINUE
PARMOK   MVI   FLAGSW,1                SET FLAG SWITCH
OPENS    OPEN  (SYSPRINT,OUTPUT,INLIB,,SYSLIB,,SYSIN) OPEN FILES
         TIME  DEC,TIMEDATE,ZONE=LT,DATETYPE=MMDDYYYY,LINKAGE=SYSTEM
         ED    EDDATE,DATE             EDIT DATE WITH SLASHES
         MVC   HDATE,EDDATE+1          EDIT DATE TO HEADING
         L     R1,16                   POINT TO CVT
         L     R1,0(R1)                POINT TO NEW-OLD WORDS
         L     R1,0(R1)                POINT TO MY TCB
         L     R1,12(R1)               POINT TO MY TIOT
         LA    R1,24(R1)               POINT TO FIRST TIOT DD ENTRY
PH1CKDD  CLC   4(8,R1),=CL8'INLIB'     THIS THE ENTRY FOR INLIB?
         BE    PH1DOIN                 YES
         CLC   4(8,R1),=CL8'SYSLIB'    THIS THE ENTRY FOR SYSLIB?
         BE    PH1DOSY                 YES
PH1DDSTP SR    R2,R2                   CLEAR FOR INSERT
         IC    R2,0(R1)                GET ENTRY LENGTH
         LTR   R2,R2                   END OF TIOT?
         BZ    PH1STOR                 YES
         AR    R1,R2                   STEP TO NEXT DD ENTRY
         B     PH1CKDD                 LOOP THRU TIOT
PH1DOIN  SR    R2,R2                   CLEAR FOR INSERT
         ICM   R2,7,12(R1)             GET JFCB POINTER
         MVC   DSNAME,16(R2)           SAVE INLIB'E DSNAME
         CLC   SYSLIBDD,F0             GOT SYSLIB DD ENTRY ADDRESS?
         BNE   PH1STOR                 YES
         B     PH1DDSTP                NO, CONTINUE
PH1DOSY  ST    R1,SYSLIBDD             SAVE SYSLIB DD ENTRY ADDRESS
         CLI   DSNAME,C' '             ALREADY FOUND INLIB'S ENTRY?
         BE    PH1DDSTP                NO, CONTINUE
PH1STOR  STORAGE OBTAIN,LENGTH=65535   GET BUFFER STORAGE
         ST    R1,BUFAD                SAVE BUFFER ADDRESS
         STORAGE OBTAIN,LENGTH=38000   GET SYMBOL TABLE STORAGE
         ST    R1,SYMTBAD              SAVE SYMBOL TABLE ADDRESS
         ST    R1,CURRSYM              SAVE CURRENT SYMBOL ADDR
         MVI   0(R1),X'FF'             TABLE END INDIC
         A     R1,ENDSYM               COMPUTE END ADDR
         ST    R1,ENDSYM               STORE TBL END ADDR
         STORAGE OBTAIN,LENGTH=32767   GET STORAGE FOR TEXT
         ST    R1,TXTSTRT              SAVE TEXT ADDR
***********************************************************************
* PHASE 2: READ NEXT CONTROL CARD AND ISSUE BLDL FOR THE MODULE.      *
***********************************************************************
PHASE2   GET   SYSIN,CTLCARD           READ CONTROL CARD
         MVC   MEMBER,CCMEMB           MOVE MEMBER NAME TO BLDL LIST
         BAL   R9,HEADING              PRINT HEADING
         BLDL  INLIB,BLDLIST           ISSUE BLDL
         LTR   R15,R15                 ANY ERRORS
         BZ    GOTMEM                  NO
         MVC   PRTREC,MISSMEM1         ERROR MESSAGE LINE 1
         BAL   R9,PRINT                PRINT IT
         MVC   MISSMBR,MEMBER          MEMBER NAME TO MESSAGE
         MVC   PRTREC,MISSMEM2         MEMBER NOT IN PDS MESSAGE
         BAL   R9,PRINT                PRINT ERROR LINE
         MVC   PRTREC,MISSMEM3         ERROR MESSAGE LINE 3
         BAL   R9,PRINT                PRINT IT
         B     PHASE2                  GO READ NEXT CONTROL CARD
GOTMEM   MVI   CCAT,0                  INSURE TTR0
         POINT INLIB,TTRMOD            POINT TO 1ST BLOCK OF MODULE
         MVC   CURRSYM,SYMTBAD         RESET TABLE ADDRESS
***********************************************************************
* PHASE3 READ DATA RECORDS COMPRISING THE LOAD MODULE AND PROCESS.    *
*        BUILD THE SYMBOL TABLE FOR THE MODULE THE CESDREC AND        *
*        CNTLRECS ROUTINES ARE PART OF THIS PROCESS. ON COMPLETION,   *
*        PERFORMS PHASE4, THEN BRANCHES TO PHASE2.                    *
***********************************************************************
PHASE3   L     R6,BUFAD                GET BUFFER ADDRESS
         READ  DECB,SF,INLIB,(6),'S'   READ BLOCK FROM MEMBER
         CHECK DECB                    AWAIT COMPLETION
         CLI   0(R6),X'20'             CESD RECORD
         BNE   TESTOTHR                NO
         BAS   R9,CESDREC              PROCESS CESD RECORDS
         B     PHASE3                  GO READ AGAIN
TESTOTHR CLI   0(R6),1                 IT IS CONTROL
         BE    PERFORM                 YES
         CLI   0(R6),5                 IS IT CONTROL
         BE    PERFORM                 YES
         CLI   0(R6),13                IS IT CONTROL
         BE    PERFORM                 YES
         CLI   0(R6),3                 IS IT CTL AND RLD
         BE    PERFORM                 YES
         CLI   0(R6),7                 IS IT CTL AND RLD
         BE    PERFORM                 YES
         CLI   0(R6),15                IS IT CTL AND RLD
         BE    PERFORM                 YES
         CLI   0(R6),2                 IS IT RLD?
         BE    RLDREC                  YES
         CLI   0(R6),6                 IS IT RLD?
         BE    RLDREC                  YES
         CLI   0(R6),14                IS IT RLD?
         BNE   PHASE3                  NONE OF THESE, SKIP
RLDREC   TM    0(R6),X'08'             LAST RECORD IN MEMBER?
         BNO   PHASE3                  NO, SKIP IT
         BAS   R9,PHASE4               NO, GO SORT CSECTS
         B     PHASE2                  AND READ NEXT CONTROL CARD
PERFORM  BAS   R9,CNTLRECS             PROCESS CONTROL RECORD
         TM    PROCESS,X'40'           MODULE PROCESSING DONE
         BZ    PHASE3                  NO, GO READ AGAIN
         BAS   R9,PHASE4               NO, GO SORT CSECTS
         B     PHASE2                  AND READ NEXT CONTROL CARD
****************************************************************
* PROCESS LOAD MODULE CONTROL RECORDS. THESE RECORDS PRECEDE   *
* TEXT RECORDS, WHICH ARE READ AND PLACED IN STORAGE IN CONTIG-*
* UOUS LOCATIONS.                                              *
****************************************************************
CNTLRECS ST    R9,CT9                  SAVE RETURN ADDR
         L     R9,TXTSTRT              POINT TO TEXT STORAGE AREA
READTEXT READ  DECB,SF,,(9),MF=E       READ FOLLOWING TEXT RECORD
         CHECK DECB                    AWAIT COMPLETION
         SR    R8,R8                   CLEAR WORK
         TM    0(R6),X'08'             RECD PRECEDES LAST RECD OF MBR?
         BZ    CNCKTYP                 NO
         OI    PROCESS,X'40'           YES, SHOW END OF FILE
CNCKTYP  TM    0(R6),X'02'             CONTROL AND RLD?
         BO    CNPASRLD                YES
         LA    R12,16(R6)              @ CESD ENTRY NBR
         B     CNCKESD                 CONTINUE
CNPASRLD LH    R12,6(R6)               GET RLD SECTION LENGTH
         LA    R12,16(R6,R12)          @ CESD ENTRY NBR
CNCKESD  LH    R11,4(R6)               LENGTH OF CONTROL INFO SECTION
         SRL   R11,2                   COMPUTE NBR CNTL ENTRIES
         SR    R10,R10                 OFFSET TO 1ST BYTE
         SR    R9,R9                   INITIALIZE TEXT OFFSET
         SR    R1,R1                   CLEAR FOR INSERT
CNCKESD1 L     R1,SYMTBAD              POINT TO SYMBOL TABLE
         USING SYMTBL,R1
SYMNDCK1 CLI   0(R1),X'FF'             END OF TABLE?
         BNE   CPRESDID                NO
         XC    SYMENT,SYMENT           YES, CLEAR ENTRY
         MVC   EXTSYM,=C'????????'     SYMBOL NAME UNKNOWN
         MVI   TYPSYM,X'FF'            UNKNOWN TYPE
         MVC   SYMESDID,0(R12)         SET ESD ID
         MVI   SYMENT+L'SYMENT,X'FF'   SET NEW TABLE END
CPRESDID CLC   SYMESDID,0(R12)         FOUND CORRECT ENTRY?
         BE    NEXTCTL                 YES
         LA    R1,L'SYMENT(R1)         STEP TO NEXT ENTRY
         B     SYMNDCK1                CONTINUE
         DROP  R1
NEXTCTL  AH    R10,2(R12)              UPDATE TEXT OFFSET
         LA    R12,4(R12)              TO NEXT CNTL ENTRY
         BCT   R11,CNCKESD1            LOOP THRU CNTL ENTRIES
CTXIT    L     R9,CT9                  GET RETURN ADDR
         BR    R9                      EXIT
****************************************************************
* PROCESS COMPOSITE ESD RECORDS. DATA FROM THESE RECORDS IS    *
* PLACED IN THE SYMBOL TABLE.                                  *
****************************************************************
CESDREC  ST    R9,CES9                 SAVE RETURN
         L     R7,CURRSYM              GET SYMBOL TBL ADDR
         USING SYMTBL,R7
         LH    R10,4(R6)               GET ESD ID OF 1ST ITEM
         LH    R8,6(R6)                NBR BYTES OF ESD DATA
         SRL   R8,4                    COMPUTE NBR ENTRIES
         LA    R6,8(R6)                STEP TO 1ST RECORD ESD ITEM
CESDNXT  C     R7,ENDSYM               END OF TABLE
         BNL   SYMFULL                 YES, ERROR
         MVC   EXTSYM,0(R6)            SYMBOL NAME
         MVC   TYPSYM,8(R6)            TYPE
         NI    TYPSYM,X'0F'            CLEAR BITS 0-3
         MVC   SYMIND,8(R6)            INDICATOR BYTE
         NI    SYMIND,X'0F'            CLEAR BITS 4-7
         TM    8(R6),X'14'             POSSIBLE ENTAB/SEGTAB
         BNO   CEMVAD                  NO
         TM    8(R6),X'03'             IS IT ENTAB/SEGTAB
         BNZ   CEMVAD                  NO
         MVC   TYPSYM(2),=X'0F00'      SHOW ENTAB/SEGTAB
CEMVAD   MVC   SYMADDR,9(R6)           ADDRESS OF SYMBOL
         MVC   SYMSEG,12(R6)           SEGMENT WHERE DEFINED
         MVC   SYMLENG,13(R6)          LENGTH OR LR ESD ID
         STCM  R10,3,SYMESDID          ESD ID
         CLI   TYPSYM,0                IS THIS AN SD?
         BE    ADVNC                   YES
         CLI   TYPSYM,4                IS IT AN UNNAMED CSECT?
         BNE   ADVNC2                  NO
ADVNC    LA    R7,L'SYMENT(R7)         TO NEXT TBL ENTRY LOCATION
ADVNC2   LA    R10,1(R10)              ADD 1 TO ESD COUNTER
         LA    R6,16(R6)               TO NEXT ESD ITEM IN INPUT
         BCT   R8,CESDNXT              LOOP THRU INPUT RECORD
         MVI   0(R7),X'FF'             SET END OF TABLE INDIC
         ST    R7,CURRSYM              SAVE NEXT TABLE ADDR
CESDEXIT L     R9,CES9                 GET RETURN ADDR
         BR    R9                      EXIT
         DROP  R7
SYMFULL  WTO   'LMODCHEK: SYMBOL TABLE FULL. EXPAND AND RERUN',        X
               ROUTCDE=11
         ABEND 777,DUMP                TERMINATE IN ERROR
****************************************************************
* PHASE 4: PROCESS THE CSECT NAMES IN THE SYMBOL TABLE. FOR    *
*          EACH CSECT NAME, ISSUE A BLDL TO THE SYSLIB FILE,   *
*          AND FORMAT AND PRINT A LINE TO THE REPORT.          *
*          AT END, BRANCHES TO PHASE2.                         *
****************************************************************
PHASE4   ST    R9,PH4RET               SAVE RETURN ADDRESS
         L     R11,SYMTBAD             POINT TO SYMBOL TABLE
         USING SYMTBL,R11
PH4CKND  CLI   0(R11),X'FF'            END OF TABLE?
         BE    PHASE2                  YES, ALL DONE
         CLI   TYPSYM,0                IS IT A NAMED SD (CSECT)?
         BE    PH4BLDL                 YES
PH4BUMP  LA    R11,L'SYMENT(R11)       ADVANCE TO NEXT ENTRY
         B     PH4CKND                 GO CHECK THIS ENTRY
PH4BLDL  XC    BLDLNTRY,BLDLNTRY       CLEAR BLDL ENTRY
         MVC   PCSECT,EXTSYM           MOVE CSECT NAME TO PRINT LINE
         MVC   BLDLNAME,EXTSYM         MOVE CSECT NAME TO BLDL PARM
         BLDL  SYSLIB,BLDLFF,NOCONNECT,BYPASSLLA ISSUE BLDL
         LTR   R15,R15                 FOUND OK?
         BZ    PH4ENT                  YES
         MVC   PDSNAME,=CL44'(CSECT NOT FOUND IN SYSLIB)'
PH4ENT   MVC   PENTPT,BLANKS           ASSUME THIS IS NOT ENTRY
         SR    R14,R14                 GET CSECT RELATIVE
         ICM   R14,7,SYMADDR             ADDRESS WITHIN RUN UNIT
         SR    R15,R15                 GET LINKEDIT ASSIGNED
         ICM   R15,7,LKEPA               ENTRY POINT ADDRESS
         CR    R15,R14                 IS ENTRY IN THIS CSECT?
         BL    PH4WHERE                NO
         SR    R1,R1                   GET RELATIVE END OF
         ICM   R1,7,SYMLENG               CSECT ADDRESS
         AR    R14,R1                         WITHIN RUN UNIT
         CR    R15,R14                 IS ENTRY POINT IN THIS CSECT?
         BNL   PH4WHERE                NO
         MVC   PENTPT,=CL15'ENTRY POINT ==>' INDICATE ENTRY CSECT
PH4WHERE CLI   BLDLR,0                 WAS CSECT FOUND IN SYSLIB?
         BNE   PH4WHICH                YES
         MVC   PDSNAME,=CL44'(CSECT NOT FOUND IN SYSLIB)'
         B     PH4PRNT                 AND GO PRINT
PH4WHICH L     R1,SYSLIBDD             @ SYSLIB TIOT DD ENTRY
         SR    R2,R2                   CLEAR FOR INSERT
         IC    R2,BLDLK                GET CONCATENATION NUMBER
         CVD   R2,DBLWORD              CONVERT TO PACKED
         MVI   PCONCAT,C'('            DELIMIT CONCAT. NBR
         CP    DBLWORD,P10             LESS THAN 10?
         BNL   PH4CHKH                 NO
         UNPK  PCONCAT+1(1),DBLWORD    SINGLE DIGIT CONCAT
         OI    PCONCAT+1,C'0'          CLEAR SIGN
         MVI   PCONCAT+2,C')'          END DELIMITER
         B     PH4CKAT                 CONTINUE
PH4CHKH  CP    DBLWORD,P100            LESS THAN 100?
         BNL   PH4UPK                  NO
         UNPK  PCONCAT+1(2),DBLWORD    UNPACK 2 DIGIT CONCAT. NBR
         OI    PCONCAT+2,C'0'          CLEAR SIGN
         MVI   PCONCAT+3,C')'          END DELIMITER
         B     PH4CKAT                 CONTINUE
PH4UPK   UNPK  PCONCAT,DBLWORD         UNPACK 5 DIGITS
         OI    PCONCAT+4,C'0'          CLEAR SIGN
PH4CKAT  LTR   R2,R2                   AT CORRECT ENTRY?
         BZ    PH4GOTIT                YES
         SR    R15,R15                 NO, CLEAR FOR INSERT
         IC    R15,0(R1)               GET THIS DD ENTRY LENGTH
         AR    R1,R15                  TO NEXT TIOT DD ENTRY
         LTR   R15,R15                 END OF TIOT?
         BZ    PH4ENDD                 YES
         BCT   R2,PH4CKAT              CONTINUE
PH4GOTIT SR    R2,R2                   CLEAR FOR INSERT
         ICM   R2,7,12(R1)             @ JFCB
         MVC   PDSNAME,16(R2)          MOVE THE SYSLIB DSNAME
         CLI   FLAGSW,0                FLAG SWITCH SET?
         BE    PH4PRNT                 NO
         CLC   PDSNAME(5),=CL5'EMVSQ'  PDS NAME BEGINS "EMVSQ.."?
         BNE   PH4PRNT                 NO
         MVI   PCSECT-1,C'*'           YES, FLAG THE CSECT
PH4PRNT  BAL   R9,PRINT                PRINT A REPORT LINE
         B     PH4BUMP                 CONTINUE
PH4ENDD  MVC   PDSNAME,=CL44'(ERROR: BLDL FAILED.)'
         B     PH4PRNT                 AND GO PRINT
PH4XIT   L     R9,PH4RET               GET RETURN ADDRESS
         BR    R9                      RETURN
PH4RET   DC    A(0)                    RETURN ADDRESS
         DROP  R11
****************************************************************
* PRINT A LINE TO THE REPORT                                   *
****************************************************************
PRINT    ST    R9,PR9                  SAVE RETURN ADDRESS
         PUT   SYSPRINT,PRTREC         WRITE PRINT RECORD
         MVC   PRTREC,BLANKS           CLEAR PRINT  RECORD
         AP    LINECT,P1               INCREMENT LINE COUNTER
         CP    LINECT,P60              END OF PAGE?
         BNH   PRXIT                   NO
         BAL   R9,HEADING              GO PRINT HEADING
PRXIT    L     R9,PR9                  GET RETURN ADDRESS
         BR    R9                      EXIT
****************************************************************
* PRINT A HEADING                                              *
****************************************************************
HEADING  ST    R9,HD9                  SAVE RETURN ADDRESS
         AP    PAGENO,P1               INCREMENT PAGE NUMBER
         MVC   HPAGE,PAGEDIT           MOVE EDIT WORD
         ED    HPAGE,PAGENO            EDIT PAGE NUMBER
         PUT   SYSPRINT,HEADER1        PRINT HEADER LINE 1
         LA    R1,DSNAME               POINT TO INLIB'S DSNAME
         LA    R2,44                   MAX DSNAME LENGTH
         LA    R14,DSNWORK             POINT TO HEADING DSNAME
         MVC   DSNWORK,BLANKS          PRE-CLEAR TO BLANKS
HDCKBK1  CLI   0(R1),C' '              AT A BLANK?
         BE    HDMVLPN                 YES, DSNAME MOVED
         MVC   0(1,R14),0(R1)          NO, MOVE IT TO DSNAME
         LA    R1,1(R1)                STEP OVER 1
         LA    R14,1(R14)              STEP OVER 1
         BCT   R2,HDCKBK1              LOOP TO MOVE DSNAME
HDMVLPN  MVI   0(R14),C'('             MOVE LEADING PAREN
         LA    R14,1(R14)              TO FIRST MEMBER NAME BYTE
         LA    R1,MEMBER               POINT TO MEMBER NAME
         LA    R2,8                    MAX MEMBER NAME LENGTH
HDCKBK2  CLI   0(R1),C' '              AT A BLANK?
         BE    HDMVRPN                 YES, DSNAME MOVED
         MVC   0(1,R14),0(R1)          NO, MOVE IT TO DSNAME
         LA    R1,1(R1)                STEP OVER 1
         LA    R14,1(R14)              STEP OVER 1
         BCT   R2,HDCKBK2              LOOP TO MOVE DSNAME
HDMVRPN  MVI   0(R14),C')'             MOVE LEADING PAREN
         LA    R15,DSNWORK+53          @ END OF DSNWORK
         SR    R15,R14                 R15 =
         SRL   R15,2                         CENTERING OFFSET
         LA    R2,DSNWORK              R14 =
         SR    R14,R2                   MOVE LENGTH CODE
         LA    R15,HDSNAME(R15)        R15 = TARGET ADDRESS
         MVC   HDSNAME,BLANKS          PRE-CLEAR TO BLANKS
         EX    R14,MVCNTR              EXECUTE CENTERING MOVE
         PUT   SYSPRINT,HEADER2        PRINT HEADER LINE 2
         PUT   SYSPRINT,HEADER3        PRINT HEADER LINE 2
         MVC   PRTREC,BLANKS           CLEAR PRINT  RECORD
         MVI   PCC,C'0'                DOUBLE SPACE NEXT LINE
         ZAP   LINECT,P3               YES, RESET LINE COUNTER
HDXIT    L     R9,HD9                  GET RETURN ADDRESS
         BR    R9                      EXIT
MVCNTR   MVC   0(1,R15),DSNWORK        EXECUTED CENTERING MOVE
****************************************************************
* END OF JOB.                                                  *
****************************************************************
EOJ      CLOSE (SYSLIB,,INLIB,,SYSIN)  CLOSE FILES
         L     R13,4(R13)              GET POINTER TO CALLER'S SAVE ARE
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGS
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN TO CALLER
****************************************************************
*                     DATA AND WORK AREAS
****************************************************************
DBLWORD  DS    D                       DOUBLEWORD WORK AREA
PR9      DC    A(0)                    PRINT RETURN ADDRESS
HD9      DC    A(0)                    HEADING RETURN ADDRESS
LINECT   DC    PL2'0'                  PRINT LINE COUNTER
PAGENO   DC    PL2'0'                  PRINT PAGE COUNTER
PAGEDIT  DC    X'40202020'             EDIT WORD TO PRINT PAGE NUMBER
DSNAME   DC    CL44' '                 INLIB'S DSNAME
DSNWORK  DC    CL54' '                 DSNAME(MEMBER) WORK AREA
FLAGSW   DC    X'00'                   FLAG SWITCH
P1       DC    P'1'                    CONSTANT 1
P10      DC    P'10'                   CONSTANT 10
P100     DC    P'100'                  CONSTANT 100
P3       DC    P'3'                    CONSTANT 3
P60      DC    P'60'                   CONSTANT 60
CSECT    DC    CL8' '                  SPECIFIED CSECT NAME
ESDID    DC    X'0001'                 ESD ID OF SPECIFIED CSECT
ENDLBLNM DC    CL8' '                  SYMBOL FOR END STMT BEGIN POINTE
START    DC    F'0'                    LKED ASSIGNED START ADDR OF CSEC
END      DC    F'0'                    CSECT END ADDRESS
LENGTH   DC    F'0'                    LENGTH OF SPECIFIED CSECT
TXTSTRT  DS    F                       @ TEXT STORAGE AREA
TXTEND   DS    F                       @ END OF TEXT AREA
TXTCURR  DS    F                       @ CURRENT TEXT LOC
BLANKS   DC    CL133' '                CONSTANT BLANKS
SYMHOLD  DS    CL(L'SYMENT)            HOLD AREA FOR SORTING SYMTBL
TIMEDATE DS    0CL16                   TIME AND DATE FROM TIME MACRO
TIME     DC    XL8'00'                   TIME:HHMMSSTHMIJU
DATE     DC    XL4'00'                   DATE:MMDDYYYY
         DC    XL4'00'                   MUST BE ZEROS
EDDATE   DC    XL12'402020612020612020202020' DATE EDIT AREA
F0       DC    F'0'                    CONSTANT 0
SYSLIBDD DC    A(0)                    @ OF SYSLIB'S TIOT DD ENTRY
*
CTLCARD  DS    0CL80                   CONTROL CARD
CCMEMB   DS    CL8                     MEMBER NAME
         DS    CL72
*
HEADER1  DS    0CL80                   REPORT HEADER LINE
         DC    CL1'1'                    CARRIAGE CONTROL
         DC    CL8'LMODCHEK'             PROGRAM NAME
         DC    CL12' '
         DC    CL25'CSECT LOCATION CHECK FOR:'
         DC    CL18' '
         DC    CL6'DATE: '
HDATE    DC    CL10' '                   DATE
*
HEADER2  DS    0CL80                   REPORT HEADER LINE
         DC    CL1' '                    CARRIAGE CONTROL
         DC    CL9' '
         DC    CL4' '
HDSNAME  DC    CL54' '                   DSNAME(MEMBER)
         DC    CL4' '
         DC    CL4'PAGE'
HPAGE    DS    CL4                       PAGE NUMBER
*
HEADER3  DS    0CL80                   PRINT LINE
         DC    CL1'0'                  CARRIAGE CONTROL
         DC    CL16' '
         DC    CL8'CSECT'                CSECT NAME
         DC    CL5' '
         DC    CL44'FOUND IN SYSLIB CONCATENATION:' (CC) DSNAME
         DC    CL21' '
*
PRTREC   DS    0CL80                   PRINT LINE
PCC      DS    CL1                     CARRIAGE CONTROL
PRT      DS    0CL79                   MESSAGE DATA
PENTPT   DC    CL15' '                   ENTRY POINT =>
         DC    CL1' '
PCSECT   DC    CL8' '                    CSECT NAME
         DC    CL5' '
PCONCAT  DC    CL5' '                    CONCATENATION NUMBER
         DC    CL1' '
PDSNAME  DC    CL44' '                   SYSLIB'S DSNAME
*
*
*
         DS    0F
BLDLIST  DS    0CL62                   BLDL LIST
         DC    H'1'                    ONE ENTRY
         DC    H'58'                   LENGTH OF ENTRY
MEMBER   DC    CL8' '                  MEMBER NAME
TTRMOD   DC    XL3'000000'             TTR OF MODULE
CCAT     DC    XL1'00'                 CONCATENATION NUMBER
         DC    XL1'00'
ALIASIND DC    XL1'00'                 ALIAS AND MISC INDICATOR
*                           80=ALIAS
TTR1TXT  DC    XL3'000000'             TTR OF 1ST TXT RECORD
         DC    XL1'00'
TTRNS    DC    XL3'000000'             TTR OF NOTE OR SCATTER LIST
NNOTE    DC    XL1'00'                 NBR ENTRIES IN NOTE LIST
ATTR1A   DC    XL1'00'                 MODULE ATTRIBUTES 1, BYTE 1
*                           80=RENT
*                           40=REUS
*                           20=OVERLAY
*                           10=UNDER TEST
*                           08=ONLY LOADABLE
*                           04=SCATTER FORMAT
*                           02=EXECUTABLE
*                           01=ONE TXT, NO RLD RECORDS
ATTR1B   DC    XL1'00'                 ATTRIBUTES 1, BYTE 2
*                           80=CANNOT BE REPROCESSED BY LKED E
*                           40=ORIGIN OF 1ST TXT RECORD IS ZERO
*                           20=ASSIGNED ENTRY POINT ADDR IS ZERO
*                           10=CONTAINS NO RLD RECORD
*                           08=CANNOT BE REPROCESSED BY LKED
*                           04=CONTAINS TESTRAN SYMBOLS
*                           02=CREATED BY LKED
*                           01=REFR
TOTVIRT  DC    XL3'000000'             TOTAL VIRTUAL STRG REQRD FOR MOD
LENG1    DC    XL2'0000'               LENGTH OF 1ST TEXT RECORD
LKEPA    DC    XL3'000000'             ASSIGNED ENTRY POINT ADDR
ATTR2    DC    XL1'00'                 ATTRIBUTES 2
*                           80=PROCESSED BY OS/VS LKED
*                           20=PAGE ALIGNMENT REQUIRED FOR MODULE
*                           10=SSI PRESENT
         DC    XL2'0000'
SCTRLEN  DC    XL2'0000'               SCATTER LIST LENGTH
TTLEN    DC    XL2'0000'               TRANSLATION TABLE LENGTH
SCESDID  DC    XL2'0000'               CESD NBR FOR 1ST TXT RECD
SCEPESD  DC    XL2'0000'               CESD NBR FOR ENTRY POINT
ALEPA    DC    XL3'000000'             ENTRY POINT OF THE MEMBER NAME
ALMEM    DC    CL8' '                  REAL MEMBER NAME FOR ALIAS
SSI      DS    XL4'00000000'           SSI BYTES
AUTHLEN  DC    XL1'00'                 AUTH CODE LENGTH
AUTHCOD  DC    XL1'00'                 AUTH CODE
*
*
*
SYMTBL   DSECT ,                       EXTERNAL SYMBOL TABLE ENTRY
SYMENT   DS    0CL20                   20 BYTE ENTRIES
EXTSYM   DS    CL8                     EXTERNAL SYMBOL NAME
TYPSYM   DS    XL1                     SYMBOL TYPE
*                        00=SD (NAMED CSECT)
*                        02=ER (EXTRN)
*                        03=LR (ENTRY)
*                        04=PC (UNNAMED CSECT)
*                        05=CM (COM)
*                        06=PR (PSEUDO REGISTER)
*                        07=NULL
*                        0A=WX (WXTRN)
*                        0F=ENTAB OR SEGTAB
SYMIND   DS    XL1                     INDICATOR
*                        BIT 0 = MAP
*                        BIT 1 = CHAIN
*                        BIT 2 = INSERT
*                        BIT 3 = DELETE/REPLACE
SYMADDR  DS    XL3                     SYMBOL ADDRESS (0 FOR ER, WX, NU
SYMSEG   DS    XL1                     SEGMENT ID (0 FOR ER, WX, NULL)
SYMLRID  DS    0XL2                    ESD ID OF DEF FOR LR
SYMLENG  DS    XL3                     LENGTH FOR SD, PC, CM, PR
*                        0 FOR ER, WX, NULL
SYMESDID DS    XL2                     ESD ID OF THIS ITEM
         DS    CL1                     NOT USED
LMODCHEK CSECT
*
*
*
BLDLPARM DS    0CL26                   BLDL PARAMETER AREA DESCRIPTION
BLDLPRFX DC    CL8' '                  PREFIX FIELD
BLDLFF   DC    H'1'                    NUMBER ENTRIES IN LIST
BLDLLL   DC    H'14'                   LENGTH OF EACH ENTRY
BLDLNTRY DS    0CL14                   BLDL ENTRIES
BLDLNAME DS    CL8                     CSECT NAME
BLDLTT   DS    XL2                     RELATIVE TRACK NUMBER IN PDS
BLDLR    DS    XL1                     RECORD NBR ON TRK (0=NOT FOUND)
BLDLK    DS    XL1                     CONCATENATION NBR WHERE FOUND
BLDLZ    DS    XL1                     0=IN PRIVATE LIBRARY,...
BLDLC    DS    XL1                     X'80' BIT = ALIAS...
*
*
*
COBOLEP  DC    X'90ECD00C185D05F04580F010'
COBOLEP2 DC    X'0700989FF02407FF'
BUFAD    DS    F                       INLIB BUFFER ADDR
SYMTBAD  DS    F                       SYMBOL TABLE ADDRESS
CURRSYM  DS    F                       CURRENT SYM TBL ADDR
ENDSYM   DC    F'38000'                SYM TBL END ADDR
PROCESS  DC    XL1'00'                 PROCESS INDIC 40=LAST RECD
CES9     DS    F                       CESDREC RETURN ADDR
BL9      DS    F                       BLDL RTN RETURN ADDR
CR9      DS    F                       CTRLRECS RETURN ADDR
CT9      DS    F                       CNTLRECS RETURN ADDR
RL9      DS    F                       RLDRECS RETURN ADDR
TX9      DS    F                       TXTFMT RETURN ADDR
HIVAL    DC    4X'FF'                  CONSTANT F'S
H1000    DC    H'1000'                 CONSTANT 1000
H100     DC    H'100'                  CONSTANT 100
H10      DC    H'10'                   CONSTANT 10
H0       DC    H'0'                    CONSTANT 0
SYMLEN   DC    AL2(L'SYMENT)           LENGTH OF SYMTBL ENTRY
PRTABL   DS    CL9                     HEX-PRINTABLE CONVERSION AREA
P0       DC    P'0'                    CONSTANT 0
P58      DC    P'58'                   CONSTANT 58
*
*
H1       DC    H'1'                    CONSTANT 1
H5       DC    H'5'                    CONSTANT 5
H11      DC    H'11'                   CONSTANT 11
H16      DC    H'16'                   CONSTANT 16
H256     DC    H'256'                  CONSTANT 256
BLANX    DC    CL121' '                CONSTANT BLANKS
XZROS    DC    8X'00'                  CONSTANT ZEROS
TRTBL    DC    C'0123456789ABCDEF'     TRANSLATE TBL
*
MISSMEM1 DC    CL40'-***************************************'
         DC    CL40'****************************************'
MISSMEM2 DS    0CL80                   MISSING MEMBER MESSAGE
         DC    CL10' * MEMBER '
MISSMBR  DC    CL8' '                  MEMBER NAME
         DC    CL61' NOT FOUND IN THE INLIB FILE'
         DC    CL1'*'
MISSMEM3 DC    CL40' ***************************************'
         DC    CL40'****************************************'
*
POFSET   DC    F'0'                    OFFSET FOR TEXT PRINT
PRTCHAR  DC    256C'.'                 CHARACTER TRANSLATE TABLE
         ORG   PRTCHAR+C' '
         DC    C' '
         ORG   PRTCHAR+C'A'
         DC    C'ABCDEFGHI'
         ORG   PRTCHAR+C'J'
         DC    C'JKLMNOPQR'
         ORG   PRTCHAR+C'S'
         DC    C'STUVWXYZ'
         ORG   PRTCHAR+C'0'
         DC    C'0123456789'
         ORG
*
*
*
SYSLIB   DCB   DSORG=PO,MACRF=R,DDNAME=SYSLIB, EXLST=JFCBEXIT,         X
               RECFM=U,NCP=1
INLIB    DCB   DSORG=PO,MACRF=R,DDNAME=INLIB,                          X
               RECFM=U,NCP=1
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=EOJ,               X
               RECFM=FB,LRECL=80
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FBA,LRECL=80
         END
