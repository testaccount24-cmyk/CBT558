         TITLE '*** LOGREC: SYS1.LOGREC REPORTER ***'
LOGREC CSECT
*********************************************************************
* READS SYS1.LOGREC AND REPORTS ON ITS CONTENT AS SPECIFIED BY      *
* CONTROL STATEMENTS ENTERED IN THE SYSIN DATASET.                  *
*                                                                   *
* AUTHOR R THORNTON JANUARY 1999                                    *
*********************************************************************
*
*********************************************************************
*        SAVE REGISTERS, SET UP BASE REGS, CHAIN SAVE AREAS         *
*********************************************************************
         USING LOGREC,R3,R4
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)             SET UP SECOND
         LA    R4,1(R4)                    BASE REGISTER
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     START                   BRANCH AROUND CONSTANTS
         DC    CL8'LOGREC'             PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
*********************************************************************
*        OPEN FILES                                                 *
*********************************************************************
START    OPEN  (SYSPRINT,OUTPUT,SYSIN,,SYSLIB) OPEN FILES
*********************************************************************
*             MAINLINE ROUTINE                                      *
*********************************************************************
MAINLINE BAS   R9,GETLOG               READ INPUT RECORD
         USING RECDESCR,R6
         BAS   R9,ACCUM                ACCUMULATE TOTALS
         B     MAINLINE                LOOP THROUGH INPUT FILE
*********************************************************************
*             ACCUMULATE RECORD TOTALS                              *
*********************************************************************
ACCUM    ST    R9,ACC9                 SAVE RETURN ADDRESS
         LA    R12,TYPETABL            POINT TO TABLE
         USING ENTDESCR,R12
ACCHKND  CLI   ENTLAST,X'FF'           END OF TABLE?
         BE    ACCFOUND                YES
         CLC   ENTTYPE,TYPE            FOUND THE TABLE ENTRY?
         BE    ACCFOUND                YES
         AH    R12,ENTRYLEN            NO, STEP TO NEXT ENTRY
         B     ACCHKND                 LOOP TO FIND ENTRY
ACCFOUND CLI   ENTTYPE,X'FF'           VALID RECORD HEADER?
         BE    ACCADD                  NO
         CLC   CURRDATE,DATE           SAME DATE IN PROGRESS?
         BE    ACCADD                  YES
         BAS   R9,TOTALS               NO, GO PRINT TOTALS
         MVC   CURRDATE,DATE           SET UP NEW CURRENT DATE
ACCADD   L     R1,ENTCOUNT             GET CURRENT COUNT
         LA    R1,1(R1)                INCREMENT COUNT
         ST    R1,ENTCOUNT             UPDATE COUNT
         DROP  R12
ACCXIT   L     R9,ACC9                 GET RETURN ADDRESS
         BR    R9                      RETURN TO CALLER
*********************************************************************
*             READ INPUT FILE SUBROUTINE                            *
*********************************************************************
GETLOG   ST    R9,GL9                  SAVE RETURN ADDRESS
         GET   SYSLIB                  READ NEXT SYS1.LOGREC RECORD
         LR    R6,R1                   COPY RECORD ADDRESS
         AP    INPCOUNT,P1             INCREMENT COUNTER
         CLI   TYPE,X'FF'              THIS A HEADER RECORD?
         BE    GLXIT                   YES
         TM    SMS,X'40'               WAS TOD CLOCK VALUE USED?
         BZ    GLXIT                   NO
         LA    R1,DATE                 POINT TO STCK FIELD IN RECORD
         ST    R1,TCPARMS              PUT ADDRESS IN PARMS
         LA    R1,TCPARMS              POINT TO PARMS FOR TIMECONV
         CALL  TIMECONV                GO CONVERT THE STCK TOD FIELD
         PACK  DATE,CHARDT(5)          PACK DATE INTO RECORD
         OI    DATE+3,X'0F'            SET SIGN TO F
         PACK  TIME,CHARDT+5(6)        PACK TIME INTO RECORD
         MVI   TIME+3,0                ERASE THE SEC/10 AND SEC/100
GLXIT    L     R9,GL9                  GET RETURN ADDRESS
         BR    R9                      RETURN TO CALLER
*********************************************************************
*             PRINT TOTALS SUBROUTINE                               *
*********************************************************************
TOTALS   ST    R9,TOTR9                SAVE RETURN ADDRESS
         CP    CURRDATE,P0             ANY DATE STORED?
         BZ    TOTXIT                  NO
         MVC   HEADCNT,EDITWORD        EDIT WORD TO PRINT
         ED    HEADCNT,INPCOUNT        INPUT RECORD COUNT TO PRINT
         ZAP   INPCOUNT,P0             RESET INPUT COUNTER
         MVC   HEADDAT,EDITDATE        EDIT CURRENT DATE TO PRINT
         ED    HEADDAT,DATE            EDIT CURRENT DATE TO PRINT
         MVC   PRTLINE,HEADER          MOVE HEADER TO PRINT
         BAS   R9,PRINT                PRINT DATE HEADER
         LA    R12,TYPETABL            POINT TO TABLE
         USING ENTDESCR,R12
TOTCKANY ICM   R1,15,4(R12)            PICK UP COUNTER
         BZ    TOTADV                  BRANCH IF NONE FOUND
         CVD   R1,DBLWD                CONVERT TO PACKED
         XC    ENTCOUNT,ENTCOUNT       ZERO THE COUNTER
         MVC   PRT(12),EDITWORD        MOVE IN EDIT WORD
         ED    PRT(12),DBLWD+3         EDIT COUNT TO PRINT
         LH    R1,ENTLENG              GET DESCRIPTION LENGTH
         L     R2,ENTDESCA             GET DESCRIPTION ADDRESS
         EX    R1,TOTMVC               MOVE DESCRIPTION TO PRINT
         BAS   R9,PRINT                PRINT THE LINE
TOTADV   CLI   ENTLAST,X'FF'           AT END OF TABLE?
         BE    TOTXIT                  YES, ALL THROUGH
         AH    R12,ENTRYLEN            NO, STEP TO NEXT ENTRY
         B     TOTCKANY                LOOP THRU TABLE
         DROP  R12
TOTXIT   L     R9,TOTR9                GET RETURN ADDRESS
         BR    R9                      RETURN
TOTMVC   MVC   PRT+13(1),0(R2)         EXECUTED MOVE
*********************************************************************
*             PRINT SUBROUTINE                                      *
*********************************************************************
PRINT    PUT   SYSPRINT,PRTLINE        WRITE PRINT LINE
         MVC   PRTLINE,BLANKS          CLEAR PRINT LINE
         BR    R9                      RETURN
*********************************************************************
*             END OF JOB                                            *
*********************************************************************
EOJ      BAS   R9,TOTALS               PRINT ENDING TOTALS
         CLOSE (SYSPRINT,,SYSIN,,SYSLIB) CLOSE FILES
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         L     R14,12(R13)             RESTORE RETURN REG: R14
         L     R15,RETCODE             SET RETURN CODE
         LM    R0,R12,20(R13)          RESTORE CALLER'S REGS 0-12
         BR    R14                     RETURN
*********************************************************************
*        STORAGE AND FILE AREAS                                     *
*********************************************************************
DBLWD    DS    D                       DOUBLEWORD WORK AREA
RETCODE  DS    F                       RETURN CODE
TOTR9    DC    A(0)                    TOTALS RETURN ADDRESS
ACC9     DS    A                       ACCUM RETURN ADDRESS
GL9      DS    A                       GETLOG RETURN ADDRESS
TCPARMS  DS    0F                      PARMS FOR TIMECONV
         DC    A(0)                    ADDRESS OF TOD CLOCK VALUE
         DC    X'80',AL3(CHARDT)       ADDRESS OF CONVERTED TOD CLOCK
*
ENTRYLEN DC    AL2(ENTEND-ENTDESCR)    LENGTH OF ENTRY IN TYPE TABLE
*
BLANKS   DC    CL133' '                BLANKS
EDITWORD DC    XL12'402020206B2020206B202020' TOTAL EDIT WORD
EDITDATE DC    X'402020212061202020'   DATE EDIT WORD
*
INPCOUNT DC    PL5'0'                  INPUT RECORD COUNTER
CURRDATE DC    PL4'0'                  CURRENT DATE OF LOGREC RECORDS
CHARDT   DS    CL11                    YYDDDHHMMSS FROM TIMECONV
P0       DC    P'0'                    CONSTANT ZERO
P1       DC    P'1'                    CONSTANT ONE
*
HEADER   DS    0CL133                  HEADER FOR COUNTS
         DC    CL1'1'
         DC    CL10'********* '
HEADCNT  DS    CL12                      RECORD COUNT
         DC    CL23' RECORDS READ FOR DATE:'
HEADDAT  DS    CL9                       CURRENT DATE
         DC    CL79'********* '
*
PRTLINE  DS    0CL133                  PRINT LINE
PCC      DS    CL1                     CARRIAGE CONTROL
PRT      DS    0CL132                  PRINT DATA
         DS    CL132
*
TYPETABL DS    0F                      RECORD TYPE TABLE
*                                      DESCRIBED BY ENTDESCR DSECT
         DC    XL2'00FF',AL2(L'TYPFF-1),F'0',A(TYPFF)
         DC    XL2'0083',AL2(L'TYP83-1),F'0',A(TYP83)
         DC    XL2'00A1',AL2(L'TYPA1-1),F'0',A(TYPA1)
         DC    XL2'00A2',AL2(L'TYPA2-1),F'0',A(TYPA2)
         DC    XL2'00A3',AL2(L'TYPA3-1),F'0',A(TYPA3)
         DC    XL2'0025',AL2(L'TYP25-1),F'0',A(TYP25)
         DC    XL2'0060',AL2(L'TYP60-1),F'0',A(TYP60)
         DC    XL2'0080',AL2(L'TYP80-1),F'0',A(TYP80)
         DC    XL2'0081',AL2(L'TYP81-1),F'0',A(TYP81)
         DC    XL2'0084',AL2(L'TYP84-1),F'0',A(TYP84)
         DC    XL2'00C2',AL2(L'TYPC2-1),F'0',A(TYPC2)
         DC    XL2'0050',AL2(L'TYP50-1),F'0',A(TYP50)
         DC    XL2'0013',AL2(L'TYP13-1),F'0',A(TYP13)
         DC    XL2'0090',AL2(L'TYP90-1),F'0',A(TYP90)
         DC    XL2'0091',AL2(L'TYP91-1),F'0',A(TYP91)
         DC    XL2'0071',AL2(L'TYP71-1),F'0',A(TYP71)
         DC    XL2'0030',AL2(L'TYP30-1),F'0',A(TYP30)
         DC    XL2'0034',AL2(L'TYP34-1),F'0',A(TYP34)
         DC    XL2'0036',AL2(L'TYP36-1),F'0',A(TYP36)
         DC    XL2'003A',AL2(L'TYP3A-1),F'0',A(TYP3A)
         DC    XL2'0023',AL2(L'TYP23-1),F'0',A(TYP23)
         DC    XL2'0040',AL2(L'TYP40-1),F'0',A(TYP40)
         DC    XL2'0042',AL2(L'TYP42-1),F'0',A(TYP42)
         DC    XL2'0044',AL2(L'TYP44-1),F'0',A(TYP44)
         DC    XL2'0048',AL2(L'TYP48-1),F'0',A(TYP48)
         DC    XL2'004F',AL2(L'TYP4F-1),F'0',A(TYP4F)
         DC    XL2'004C',AL2(L'TYP4C-1),F'0',A(TYP4C)
         DC    XL2'FFFF',AL2(L'TYPUNK-1),F'0',A(TYPUNK)
*********************************************************************
*             DCB'S                                                 *
*********************************************************************
SYSLIB   DCB   DSORG=PS,MACRF=GL,DDNAME=SYSLIB,EODAD=EOJ,              X
               RECFM=U
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FBA,LRECL=133
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=MAINLINE,          X
               RECFM=FB,LRECL=80
         LTORG
*
TYPFF    DC    C'HEADER RECORDS, TYPE FF'
TYP83    DC    C'TIME STAMP RECORDS, TYPE 83'
TYPA1    DC    C'EXTERNAL TIMER REFERENCE RECORDS, TYPE A1'
TYPA2    DC    C'LINK MAINTENANCE INFORMATION (LMI) RECORDS, TYPE A2'
TYPA3    DC    C'DASD-SERVICE INFORMATION MESSAGE RECORDS, TYPE A3'
TYP25    DC    C'CHANNEL REPORT WORD (CRW) RECORDS, TYPE 25'
TYP60    DC    C'DYNAMIC DEVICE RECONFIGURATION (DDR) RECORDS, TYPE 60'
TYP80    DC    C'SYSTEM ENDING (EOD), TYPE 80'
TYP81    DC    C'SYSTEM END (NON-RESTARTABLE) RECORDS, TYPE 81'
TYP84    DC    C'EOD FROM IOS (RESTARTABLE WAIT STATE) RECORDS, TYPE 84X
               '
TYPC2    DC    C'DYNAMIC PATHING SERVICES VALIDATION (DSPV) RECORDS, TYX
               PE C2'
TYP50    DC    C'SYSTEM INITIALIZATION PROGRAM LOAD (IPL) RECORDS, TYPEX
               50'
TYP13    DC    C'MACHINE CHECK HANDLER (MCH) RECORDS, TYPE 13'
TYP90    DC    C'MISCELLANEOUS DATA (MDR) FORMATTED BY SVC91 RECORDS, TX
               YPE 90'
TYP91    DC    C'MISCELLANEOUS DATA (MDR) RECORDS, TYPE 91'
TYP71    DC    C'MISSING INTERRUPT HANDLER (MIH) RECORDS, TYPE 71'
TYP30    DC    C'OUTBOARD (OBR) (UNIT CHECK) RECORDS, TYPE 30'
TYP34    DC    C'TP ACCESS METHOD (TCAM) OUTBOARD (OBR) RECORDS, TYPE 3X
               4'
TYP36    DC    C'TP ACCESS METHOD (VTAM) OUTBOARD (OBR) RECORDS, TYPE 3X
               6'
TYP3A    DC    C'DYNAMIC PATHING AVAILABILITY (DPA) OBR RECORDS, TYPE 3X
               A'
TYP23    DC    C'SUBCHANNEL LOGOUT HANDLER (SLH) RECORDS, TYPE 23'
TYP40    DC    C'SOFTWARE-DETECTED SOFTWARE RECORDS, TYPE 40'
TYP42    DC    C'HARDWARE-DETECTED SOFTWARE ERROR RECORDS, TYPE 42'
TYP44    DC    C'OPERATOR-DETECTED ERROR SOFTWARE RECORDS, TYPE 44'
TYP48    DC    C'HARDWARE-DETECTED HARDWARE ERROR SOFTWARE RECORDS, TYPX
               E48'
TYP4F    DC    C'LOST RECORD SUMMARY SOFTWARE RECORDS, TYPE 4F'
TYP4C    DC    C'SYMPTOM SOFTWARE RECORDS, TYPE 4C'
TYPUNK   DC    C'UNIDENTIFIABLE RECORDS'
*********************************************************************
*             LOGREC RECORD DESCRIPTOR DSECT                        *
*********************************************************************
RECDESCR DSECT ,                       DESCRIBE LOGREC RECORD
TYPE     DS    XL1                       RECORD TYPE
RLSLVL   DS    XL1                       RELEASE LEVEL
SMS      DS    XL1                       SWITCHES
SW1      DS    XL1                       MORE SWITCHES
SW2      DS    XL1                       AND MORE SWITCHES
SW3      DS    XL1                       AND YET MORE SWITCHES
RCDCT    DS    XL1                       BITS0-3=RECORD SEQ#
*                                        BITS4-7=#PHYS RECDS IN THIS
         DS    XL1                       RESERVED
DATE     DS    PL4                       YYYYDDDF DATE
TIME     DS    XL4                       HHMMSSTH TIME
CPUID    DS    0CL8                      CPUID
CPUVER   DS    XL1                         MACHINE VERSION CODE
CPUSER   DS    XL3                         CPU SERIAL
CPUMOD   DS    XL2                         CPU MODEL
CPUCEL   DS    XL2                         RESERVED
VARIABLE DS    0C                        VARIABLE PORTION OF RECORD
RECEND   EQU   *                         END OF RECORD
*********************************************************************
*             LOGREC RECORD TYPE TABLE ENTRY DESCRIPTOR             *
*********************************************************************
ENTDESCR DSECT ,                       DESCRIBE TYPETABL ENTRY
ENTLAST  DS    XL1                       X'FF' = LAST ENTRY
ENTTYPE  DS    XL1                       RECORD TYPE
ENTLENG  DS    AL2                       DESCRIPTOR LITERAL LENGTH
ENTCOUNT DS    F                         COUNT OF THESE RECORDS
ENTDESCA DS    A                         ADDRESS OF DESCRIPTOR LITERAL
ENTEND   EQU   *                         END OF ENTRY DESCRIPTOR
LOGREC CSECT
*********************************************************************
*             REGISTER EQUATES                                      *
*********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
