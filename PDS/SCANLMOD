         TITLE '*** SCANLMOD: SCAN A LOAD LIBRARY FOR A STRING ***'
***********************************************************************
* SCANS MEMBERS OF AN INPUT LOAD MODULE LIBRARY FOR A STRING. WHEN    *
* FOUND, A MESSAGE IS PRINTED. THE SYSLIB DD STATEMENT SPECIFIES THE  *
* LOAD LIBRARY. MEMBER NAMES TO BE SCANNED ARE ENTERED IN THE SYSIN   *
* DATASET WHICH CONTAINS FIXED LENGTH 80-BYTE RECORDS WITH A MEMBER   *
* NAME IN COLUMNS 1-8, ONE RECORD PER MEMBER. THE STRING TO BE FOUND  *
* IS ENTERED IN THE PARM FIELD OF THE EXEC STATEMENT.                 *
* AUTHOR R THORNTON JULY 1992                                         *
***********************************************************************
*
SCANLMOD CSECT
         STM   R14,R12,12(R13)         SAVE REGISTERS
         LR    R3,R15                  SET CSECT BASE GPR
         USING SCANLMOD,R3
         LA    R15,SAVE                POINT TO MY SAVE AREA
         ST    R15,8(R13)              SET LSA
         ST    R13,SAVE+4              SET HSA
         LR    R13,R15                 POINT R13 TO MY SAVE AREA
***********************************************************************
*        PROCESS PARM FIELD                                           *
***********************************************************************
         L     R2,0(R1)                GET PARM FIELD ADDR
         CLC   0(2,R2),H0              ANY PARM DATA?
         BH    PARMOK                  YES, CONTINUE
BADPARM  WTO   'SCANLMOD: ENTER STRING IN EXEC PARM',ROUTCDE=11
         ABEND 111,DUMP
PARMOK   MVC   STRING,2(R2)            SAVE PARM DATA
         IC    R12,1(R2)               GET PARM LENGTH
         BCTR  R12,0                      COMPUTE LENGTH CODE
         STC   R12,CPRSTRG+1                 AND SET IT IN COMPARE
         SR    R12,R12                       SET FIRST
         IC    R12,2(R2)                         CHARACTER
         LA    R12,SCANTBL(R12)                     OF STRING
         MVI   0(R12),X'FF'                             IN TRT TABLE
***********************************************************************
*        OPEN FILES, PRINT HEADING                                    *
***********************************************************************
OPENS    OPEN  (SYSPRINT,OUTPUT,SYSLIB,,SYSIN) OPEN FILES
         LH    R12,SYSLIB+62           GET BLOCKSIZE
         GETMAIN EU,LV=(R12),A=BLKADDR GET STORAGE FOR BLOCK
***********************************************************************
*             MAINLINE ROUTINE                                        *
***********************************************************************
MAINLINE GET   SYSIN,MEMBER            READ NEXT MEMBER RECORD
         MVC   PRTMEM,MEMBER           MEMBER NAME TO PRINT
         FIND  SYSLIB,MEMBER,D         FIND MEMBER BY NAME
         LTR   R15,R15                 ANY ERROR
         BNZ   MISSMEMB                YES, MISSING MEMBER
         ZAP   FNDCOUNT,P0             RESET COUNTER
         MVI   TEXTEXP,0               CLEAR TEXT EXPECTED INDICATOR
READBLOK L     R12,BLKADDR             POINT TO RECORD AREA
         READ  INDECB,SF,SYSLIB,(R12),'S' READ NEXT BLOCK
         CHECK INDECB                  WAIT FOR COMPLETION
         CLI   TEXTEXP,1               TEXT RECORD EXPECTED?
         BE    GOTTEXT                 YES
         TM    0(R12),X'01'            CONTROL OR CONTROL AND ESD RECD?
         BZ    READBLOK                NO
         MVI   TEXTEXP,1               YES, INDICATE TEXT EXPECTED
         B     READBLOK                GO READ TEXT RECORD
GOTTEXT  MVI   TEXTEXP,0               CLEAR TEXT EXPECTED INDICATOR
         LH    R12,SYSLIB+82           LRECL FROM DCB
         A     R12,BLKADDR             COMPUTE ENDING ADDRESS +1
         BCTR  R12,0                   COMPUTE ENDING ADDRESS
         ST    R12,BLKENDA             SAVE ENDING ADDRESS
         L     R1,BLKADDR              POINT TO RECORD BYTE 1
SCANCKND C     R1,BLKENDA              STILL WITHIN BLOCK?
         BH    READBLOK                NO
         L     R12,BLKENDA             GET END OF BLOCK ADDRESS
         SR    R12,R1                  SUBTRACT CURRENT SCAN POSITION
         CH    R12,H255                OVER 256 BYTES LEFT?
         BNH   SCANEX                  NO
         LH    R12,H255                YES, LIMIT SCAN TO 256 BYTES
SCANEX   EX    R12,SCANTRT             POSSIBLE 1ST BYTE OF STRING?
         BNZ   SCANCKIN                YES
SCANADV  LA    R1,256(R1)              STEP OVER 256 BYTES
         B     SCANCKND                CONTINUE SCAN
SCANTRT  TRT   0(1,R1),SCANTBL         EXECUTED TRT
SCANCKIN C     R1,BLKENDA              FOUND WITHIN BLOCK?
         BNL   READBLOK                NO
CPRSTRG  CLC   STRING,0(R1)            FOUND THE STRING?
         BNE   PASS1                   NO
         AP    FNDCOUNT,P1             YES, INCREMENT COUNTER
PASS1    LA    R1,1(R1)                ADVANCE TO NEXT BYTE IN BLOCK
         B     SCANCKND                CONTINUE SCAN
***********************************************************************
*             END OF MEMBER                                           *
***********************************************************************
EOM      MVC   PRTNBR,TOTLEDIT         EDIT MASK
         ED    PRTNBR,FNDCOUNT         EDIT INPUT COUNTER
         PUT   SYSPRINT,PRTLINE        WRITE PRINT LINE
         B     MAINLINE                LOOP THROUGH INPUT FILE
***********************************************************************
*             MEMBER NOT FOUND IN DIRECTORY                           *
***********************************************************************
MISSMEMB MVC   PRTNBR,=CL12'NOT FOUND   ' MESSAGE
         PUT   SYSPRINT,PRTLINE        WRITE PRINT LINE
         B     MAINLINE                LOOP THROUGH INPUT FILE
***********************************************************************
*             END OF JOB                                              *
***********************************************************************
EOJ      CLOSE (SYSLIB,,SYSPRINT,,SYSIN) CLOSE FILES
         L     R13,SAVE+4              POINT TO CALLER'S SAVE AREA
         L     R14,12(R13)             RESTORE RETURN REG: R14
         SR    R15,R15                 SET RETURN CODE
         LM    R0,R12,20(R13)          RESTORE CALLER'S REGS 0-12
         BR    R14                     RETURN
***********************************************************************
*        STORAGE AND FILE AREAS                                       *
***********************************************************************
*
SAVE     DS    18F                     SAVE AREA FOR CALLED PGMS
BLKENDA  DS    A                       END OF BLOCK ADDRESS
H255     DC    H'255'                  BINARY 255
H0       DC    H'0'                    BINARY 0
CSWRESID DC    H'0'                    RESIDUAL COUNT FROM CSW
P0       DC    P'0'                    PACKED 0
P1       DC    P'1'                    PACKED 1
TEXTEXP  DC    X'00'                   1 = TEXT RECORD EXPECTED
FNDCOUNT DC    PL5'0'                  COUNT OF TIMES FOUND
TOTLEDIT DC    XL12'402020206B2020206B202120' EDIT MASK FOR TOTAL
STRING   DS    CL104                   PARM DATA FROM EXEC
SCANTBL  DC    XL256'00'                     TRT SCAN TABLE
*
BLKADDR  DS    F
REMBYTS  DC    H'0'
LRECL    DS    H
NEXREC   DS    F
MEMBER   DS    CL8
         DS    CL72
*
PRTLINE  DS    0CL80                   PRINT LINE
PRTMEM   DC    CL8' '
         DC    CL1' '
PRTNBR   DC    CL12' '
         DC    CL59' '
***********************************************************************
*             DCB'S                                                   *
***********************************************************************
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FB,LRECL=80
*
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=EOJ,               X
               RECFM=FB,LRECL=80
*
SYSLIB   DCB   DDNAME=SYSLIB,DSORG=PO,MACRF=R,EODAD=EOM
         LTORG
SCANLMOD CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
