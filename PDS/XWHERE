         PRINT NOGEN
         TITLE '*****XWHERE: LOCATE A MODULE/ADDRESS IN ANOTHER A.S.'
XWHERE   SVLNK R3
***********************************************************************
* READS A CONTROL RECORD SPECIFYING A MODULE NAME OR ADDRESS AND A    *
* JOBNAME. SEARCHES THE JOBPACK AREA OF THE SPECIFIED JOB. WHEN THE   *
* MODULE/ADDRESS IS FOUND, RETURNS A LINE OF INFORMATION ABOUT IT.    *
* AUTHOR R THORNTON NOV 1990                                          *
***********************************************************************
         OPEN  (SYSPRINT,OUTPUT,SYSIN) OPEN FILES
READNEXT GET   SYSIN,INREC             GET CONTROL RECORD
         XC    ADDRESS,ADDRESS         CLEAR ADDRESS AREA TO BLANKS
         MVC   NAME,INMODADR           SAVE MODULE NAME
         TRT   INMODADR(8),TESTHEX     IS INPUT COMMAND ALL HEX?
         BNZ   NOTHEX                  NO
         MVC   CNVTWORK,INMODADR       MOVE HEX TO CONVERT
         TR    CNVTWORK,TRREAL         TRANSLATE CHARS TO HEX
         PACK  ADDRESS(5),CNVTWORK(9)  PACK TO MAKE REAL
         NI    ADDRESS,B'01111111'     TURN OFF HIGH ORDER BIT
NOTHEX   CLC   INCONST,=C' J='         CORRECT FORMAT?
         BE    FINDASID                GO FIND ASID FOR JOB
         WTO   'XWHERE: CONTROL RECORD ERROR. FORMAT IS - ',ROUTCDE=11
         WTO   'XWHERE: COL 1-8 MODULE NAME OR ADDRESS',ROUTCDE=11
         WTO   'XWHERE: COL 9-11 = " J="',ROUTCDE=11
         WTO   'XWHERE: COL 12-19 JOBNAME',ROUTCDE=11
         B     RETURN                  BACK TO CALLER
FINDASID L     R12,16                  POINT TO CVT (NUC < 16M)
         L     R12,556(R12)            POINT TO ASVT (SQA < 16M)
         LA    R12,524(R12)            POINT TO 1ST ASVT ENTRY
ASVTUSE  TM    0(R12),X'80'            THIS ASID IN USE?
         BZ    ASSIGNED                YES
         CLC   0(4,R12),=X'80000000'   END OF ASVT?
         BNE   NEXASVNT                NO
         WTO   'XWHERE: JOB NOT FOUND',ROUTCDE=11
         B     RETURN                  TERMINATE
NEXASVNT LA    R12,4(R12)              STEP TO NEXT ASVT ENTRY
         B     ASVTUSE                 CONTINUE SEARCH
ASSIGNED L     R11,0(R12)              POINT TO ASCB (SQA < 16M)
         MVC   ASIDNBR,36(R11)         SAVE ASCBASID
         ICM   R10,15,172(R11)         POINT TO JOBNAME
         BNZ   CHKJBNM                 GO CHECK IF NON-ZERO
         ICM   R10,15,176(R11)         POINT TO S/M/L JOBNAME
         BZ    NEXASVNT                BRANCH IF NONE FOUND
CHKJBNM  CLC   INJOBNM,0(R10)          FOUND THE SPECIFIED JOBNAME?
         BNE   NEXASVNT                NO
         MVC   SENDADDR,108(R12)       SEND ASXB (PVT LSQA ANY)
         BAS   R9,MOVEXMEM             GO GET ASXB FROM OTHER A.S.
         L     R8,RECVAREA+4           POINT TO 1ST TCB
SAVETCB  ST    R8,SENDADDR             SEND TCB (PVT LSQA ANY)
         ST    R8,TCBADDR              SAVE TCB ADDRESS FOR LATER
         CLC   SENDADDR+1(3),XZROS     ANY TCB ADDRESS?
         BZ    RETURN                  NO, ALL THROUGH
         BAS   R9,MOVEXMEM             GO GET TCB FROM OTHER A.S.
         MVC   NEXTTCB,RECVAREA+116    SAVE NEXT TCB POINTER
         CLC   RECVAREA+45(3),XZROS    ANY TCBJPQ?
         BNE   RUNJPQ                  YES
GTNXTCB  L     R8,NEXTTCB              YES, POINT TO NEXT
         B     SAVETCB                 CONTINUE
RUNJPQ   MVC   SENDADDR,RECVAREA+44    SEND 1ST CDE IN JPQ
GTNXCDE  BAS   R9,MOVEXMEM             GO GET A CDE FROM OTHER A.S.
         MVC   CDE,RECVAREA            SAVE CDE
         CLC   NAME,CDNAME             FOUND MATCHING CDE?
         BE    GOTCDE                  YES
         TM    CDATTR,X'04'            THIS A MINOR CDE?
         BO    ADVCDE                  YES, SKIP IT
         MVC   SENDADDR,CDXLMJP        SEND XTLST
         BAS   R9,MOVEXMEM             GO GET XTLST FROM OTHER A.S.
         MVC   XTLST,RECVAREA          SAVE XTLST
         NI    XTLMSBAD,B'01111111'    CLEAR HI ORDER
         CLC   XTLMSBAD,ADDRESS        ADDRESS  AT OR ABOVE LD PT?
         BH    ADVCDE                  NO
         SR    R14,R14                 CLEAR FOR INSERT
         ICM   R14,7,XTLMSBLN          GET MODULE LENGTH
         A     R14,XTLMSBAD            COMPUTE END OF MODULE ADDR+1
         BCTR  R14,0                   BACK UP 1
         C     R14,ADDRESS             ADDRESS IN THIS MODULE?
         BL    ADVCDE                  NO
GOTCDE   BAS   R9,FORMCDE              YES
ADVCDE   MVC   SENDADDR,CDCHAIN        POINT TO NEXT CDE
         CLC   SENDADDR+1(3),XZROS     ANY MORE CDE'S?
         BE    GTNXTCB                 NO
         B     GTNXCDE                 CONTINUE CDE SEARCH
***********************************************************************
*        FOUND A CDE                                                  *
***********************************************************************
FORMCDE  ST    R9,FC9                  SAVE RETURN ADDRESS
FORMNXCD ST    R12,HEXWORK             CONVERT
         UNPK  CDE1ADR,HEXWORK(5)        CDE ADDRESS
         TR    CDE1ADR,TRCHAR-240          TO PRINTABLE
         MVI   CDE1ADR+8,C','          CLEAR OUT TRASH
         MVC   CDE1NAME,CDNAME         MOVE MODULE NAME TO PRINT
         UNPK  CDE1EPAD,CDENTPT(5)       CDE ADDRESS
         TR    CDE1EPAD,TRCHAR-240         TO PRINTABLE
         MVI   CDE1EPAD+8,C','         CLEAR OUT TRASH
         UNPK  CDE1TCB,TCBADDR(5)        TCB ADDRESS
         TR    CDE1TCB,TRCHAR-240          TO PRINTABLE
         MVI   CDE1TCB+8,C' '          CLEAR OUT TRASH
         MVC   PRT,CDE1                CDE LINE 1 TO PRT
         BAS   R9,PRINT                PRINT LINE 1
         TM    CDATTR,X'04'            IS THIS A MINOR CDE?
         BZ    GOTMAJOR                NO
         MVC   CDE2NAME,CDNAME         CDE NAME TO PRINT
         MVC   SENDADDR,CDXLMJP        SEND MAJOR CDE
         BAS   R9,MOVEXMEM             GET MAJOR CDE FROM OTHER A.S.
         MVC   CDE+4(L'CDE-4),RECVAREA+4 MOVE ALL BUT CDCHAIN
         MVC   CDE2MAJR,CDNAME         MAJOR NAME TO PRINT
         MVC   PRT,CDE2                ALIAS LINE TO PRINT
         BAS   R9,PRINT                PRINT ALIAS LINE
         B     FORMNXCD                GO PRINT MAJOR CDE INFO
GOTMAJOR MVC   SENDADDR,CDXLMJP        GET XTLST POINTER
         BAS   R9,MOVEXMEM             GO GET XTLST FROM OTHER A.S.
         UNPK  CDE3LDPT,XTLMSBAD(5)      LOAD POINT ADDRESS
         TR    CDE3LDPT,TRCHAR-240         TO PRINTABLE
         MVI   CDE3LDPT+8,C' '         CLEAR OUT TRASH
         MVC   HEXWORK,XTLMSBLA        CONVERT
         NI    HEXWORK,X'7F'             MODULE
         UNPK  CDE3LENG,HEXWORK(5)         LENGTH
         TR    CDE3LENG,TRCHAR-240           TO PRINTABLE
         MVI   CDE3LENG+8,C' '         CLEAR OUT TRASH
         L     R1,XTLMSBAD             PICK UP LOAD POINT ADDRESS
         LA    R1,0(R1)                CLEAR HIGH ORDER
         L     R2,XTLMSBLA             PICK UP LENGTH
         LA    R2,0(R2)                CLEAR HIGH ORDER
         AR    R1,R2                   COMPUTE MODULE END ADDRESS
         BCTR  R1,0                    BACK UP TO LAST BYTE
         ST    R1,HEXWORK              STORE MODULE END ADDRESS
         UNPK  CDE3ENDA,HEXWORK(5)       LOAD POINT ADDRESS
         TR    CDE3ENDA,TRCHAR-240         TO PRINTABLE
         MVI   CDE3ENDA+8,C' '         CLEAR OUT TRASH
         MVC   PRT,CDE3                ALIAS LINE TO PRINT
         BAS   R9,PRINT                PRINT LAST LINE
         BAS   R9,PRINT                PRINT BLANK SEPARATOR LINE
FCXIT    L     R9,FC9                  GET RETURN ADDRESS
         BR    R9                      RETURN
***********************************************************************
*        END OF INPUT FILE AND END OF JOB                             *
***********************************************************************
RETURN   CLOSE (SYSPRINT,,SYSIN)       CLOSE FILES
         L     R13,4(R13)              GET CALLER'S SAVE ADDRESS
         LM    R14,R12,12(R13)         GET CALLER'S REGISTERS
         SR    R15,R15                 ZERO RETURN CODE
         BR    R14                     RETURN TO CALLER
***********************************************************************
*        ROUTINE TO PRINT A LINE                                      *
***********************************************************************
PRINT    PUT   SYSPRINT,PRT            PRINT A LINE
         MVC   PRT,BLANKS              CLEAR PRINT LINE
         BR    R9                      RETURN TO CALLER
***********************************************************************
* FETCH DATA FROM ANOTHER ADDRESS SPACE. CALLER MUST FIRST SET THE    *
* ASID OF THE OTHER ADDRESS SPACE IN ASIDNBR, THE LENGTH OF DATA TO   *
* BE MOVED IN MOVELENG, ADDRESS OF THE RECEIVING AREA IN RECVADDR     *
* AND DATA ADDRESS IN THE SECONDARY A.S. IN SENDADDR.                 *
***********************************************************************
MOVEXMEM STM   R9,R12,MXSAVE           SAVE REGS USED
         MODESET MODE=SUP,KEY=ZERO     STATE, KEY FOR CROSS MEMORY
         PRINT GEN
         AXRES AXLIST=AXLIST           RESERVE AN AUTH INDEX IN A.T.
         ST    R15,AXRES15             SAVE R15
         AXEXT ASID=ASIDNBR            GET AUTH TBL VALU FOR ASID IN R0
         ST    R15,AXEXT15             SAVE R15
         ST    R0,GOTAX                SAVE ASID'S AUTH INDEX
         AXSET AX=GOTAX                SET TO ASID'S AUTH INDEX
         ST    R15,AXSET15             SAVE R15
         L     R12,RECVADDR            POINT TO RECEIVING AREA
         L     R11,MOVELENG            GET AREA LENGTH
         L     R10,SENDADDR            GET ADDRESS IN SECONDARY A.S.
         LH    R1,ASIDNBR              GET ASID NBR
         SSAR  R1                      SET SECONDARY A.S. ID
         SR    R9,R9                   PROTECT KEY FOR SECONDARY
         LA    R8,256                  MOVE INCREMENT LENGTH
MXINCR   MVCP  0(R11,R12),0(R10),R9     MOVE MAX OF 256 BYTES
         BC    8,MXDONE                EXIT WHEN MOVE COMPLETE
         AR    R12,R8                  ADVANCE 256 BYTES IN RCV
         AR    R10,R8                  ADVANCE 256 BYTES IN SEND
         SR    R11,R8                  DEDUCT 256 FROM LENGTH
         B     MXINCR                  LOOP TO MOVE ALL BYTES
MXDONE   EPAR  R1                      EXTRACT PRIMARY ASID INTO R1
         SSAR  R1                      SET SECONDARY TO MY ASID
         AXFRE AXLIST=AXLIST           FREE THE GOTTEN AUTH INDEX
         PRINT NOGEN
         ST    R15,AXFRE15             SAVE R15
         MODESET MODE=PROB,KEY=NZERO   PROBLEM STATE, KEY
MXEXIT   LM    R9,R12,MXSAVE           RESTORE REGS
         BR    R9                      EXIT
***********************************************************************
*        STORAGE AND FILE AREAS                                       *
***********************************************************************
DBLWORD  DS    D
FC9      DS    A                       FORMCDE RETURN ADDRESS
NEXTTCB  DS    A                       ADDRESS OF NEXT TCB
MXSAVE   DS    4F                      REG SAVE FOR MOVEXMEM
AXRES15  DC    A(0)                    R15 AFTER AXRES
AXEXT15  DC    A(0)                    R15 AFTER AXEXT
AXSET15  DC    A(0)                    R15 AFTER AXSET
AXFRE15  DC    A(0)                    R15 AFTER AXFRE
RECVADDR DC    A(RECVAREA)             RECEIVING FIELD ADDRESS
MOVELENG DC    A(L'RECVAREA)           CROSS-MEMORY MOVE LENGTH
SENDADDR DC    A(0)                    SECONDARY A.S. ADDRESS
TCBADDR  DC    A(0)                    CURRENT TCB ADDRESS
GOTAX    DC    A(0)                    AX GOTTEN FOR SECONDARY
ASIDNBR  DC    H'0'                    SECONDARY A.S. ASID DESIRED
AXLIST   DC    H'1'                    RETURN 1 AX VALUE
         DC    H'0'                    AX VALUE RETURNED BY AXRES
HEXWORK  DS    F,XL1                   HEX VALUE TO BE CONVERTED
CHARWORK DS    CL8,XL1                 PRINTABLE HEX VALUE
ADDRESS  DC    A(0),XL1'0'             ADDRESS
NAME     DC    CL8' '                  MODULE NAME
CNVTWORK DS    CL8
XZROS    DC    A(0)                    CONSTANT HEX ZEROS
BLANKS   DC    CL80' '                 BLANKS
*
PRT      DC    CL80' '                 PRINT LINE
INREC    DS    0CL80                   CONTROL RECORD
INMODADR DS    CL8                     MODULE NAME/ADDRESS
INCONST  DS    CL3                     " J="
INJOBNM  DS    CL8                     JOBNAME
         DS    CL61
*
         DS    0F                      RESERVED
CDE      DS    0XL32                   DESCRIBE SOME CDE FIELDS
CDCHAIN  DS    A                       POINTER TO NEXT CDE
CDRRBP   DS    A                       @ RB OR ZERO
CDNAME   DS    CL8                     MODULE NAME
CDENTPT  DS    A                       RELOCATED ENTRY POINT ADDRESS
CDXLMJP  DS    A                       @ MAJOR CDE OR @ XTLIST
CDUSE    DS    H                       USE COUNT
CDATTRB  DS    XL1                     ATTRIBUTE FLAGS
CDSP     DS    XL1                     MODULE SUBPOOL ID
CDATTR   DS    XL1                     ATTRIBUTE FLAGS
CDATTR2  DS    XL1                     ATTRIBUTE FLAGS
         DS    H                       RESERVED
*
         DS    0F                      RESERVED
XTLST    DS    0XL16                   DESCRIBE XTLST FIELDS
XTLLNTH  DS    F                       LENGTH OF EXTENT LIST (16)
XTLNRFAC DS    F                       NBR RELOC FACTORS (1)
XTLMSBLA DS    0A                      WORD REF FOR XTLMSBLN
         DS    XL1                     X'80'
XTLMSBLN DS    AL3                     LENGTH OF MAIN STORAGE BLOCK
XTLMSBAD DS    A                       ADDRESS OF MAIN STORAGE BLOCK
*
CDE1     DS    0CL80                   CDE RESPONSE LINE 1
         DC    CL4'CDE='
CDE1ADR  DS    CL9'000069A8'           ADDRESS OF CDE FOUND
         DC    CL7', NAME='
CDE1NAME DS    CL8'IGG019AA'           NAME OF MODULE FROM CDE
         DC    CL6', EPA='
CDE1EPAD DS    CL9'000BC4C0'           ENTRY POINT ADDRESS
         DC    CL6', TCB='
CDE1TCB  DS    CL9                     TCB ADDRESS
         DC    CL22' '
*
CDE2     DS    0CL80                   CDE RESPONSE LINE 2
CDE2NAME DS    CL8                     NAME FROM MINOR CDE
         DC    CL17' IS AN ALIAS FOR '
CDE2MAJR DS    CL8                     NAME FROM MAJOR CDE
         DC    CL47' '
*
CDE3     DS    0CL80                   CDE RESPONSE LINE 3
         DC    CL17'MODULE LOADED AT '
CDE3LDPT DS    CL9                     MODULE LOAD ADDRESS
         DC    CL7'AND IS '
CDE3LENG DS    CL9                     MODULE LENGTH
         DC    CL22'BYTES LONG, ENDING AT '
CDE3ENDA DS    CL9                     MODULE END ADDRESS
         DC    CL7' '
*
TRCHAR   DC    CL16'0123456789ABCDEF'  CONVERT TO PRINTABLE HEX
*
TRREAL   DC    256X'00'                CONVERT TO REAL HEX
         ORG   TRREAL+C'A'
         DC    X'0A0B0C0D0E0F'
         ORG   TRREAL+C'0'
         DC    X'00010203040506070809'
         ORG
*
TESTHEX  DC    256X'FF'
         ORG   TESTHEX+C'A'
         DC    6X'00'
         ORG   TESTHEX+C'0'
         DC    10X'00'
         ORG
*
VALHEX   DC    256X'FF'                VALID HEX TABLE
         ORG   VALHEX+C'A'
         DC    6X'00'                  A-F O.K.
         ORG   VALHEX+C'0'
         DC    10X'00'                 0-9 O.K.
         ORG
*
TRHEX    DC    256X'00'                HEX NUMERICS
         ORG   TRHEX+C'A'
         DC    X'0A0B0C0D0E0F'         VALID HEX NUMERICS
         ORG   TRHEX+C'1'
         DC    X'010203040506070809'   VALID HEX NUMERICS
         ORG
*
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FB,LRECL=80
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=RETURN,            X
               RECFM=FB,LRECL=80
         LTORG
         DS    0D
RECVAREA DS    CL512                   RECEIVING DATA AREA
         END
