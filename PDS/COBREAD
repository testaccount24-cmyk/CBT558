COBREAD  TITLE 'COBOL TOTAL ATTRIBUTE READER'
***********************************************************************
*  ADAPTED FROM THE COBREAD PROGRAM ON THE CBT MODS TAPE FILE200      *
***********************************************************************
*        SEARCH A PDS AND REPORT ON THE ATTRIBUTES                    *
*        OF EACH LOAD MODULE CREATED BY COBOL.                        *
*        OPTIONALLY READ AND REPORT ON A SINGLE MEMBER OF             *
*        A PDS, TRIGGERED BY PRESENCE OF A PARM (MEMBER NAME)         *
*        THIS VERSION SUPPORTS THE FOLLOWING COBOL COMPILERS          *
*             ANSI VERSION 4, COBOL OS/VS.                            *
*        FOR EACH MEMBER, THE FOLLOWING IS LISTED                     *
*            BY THE FORMATTER SUBROUTINE COBRPT                       *
*               IS PROGRAM MARKED EXECUTABLE                          *
*               IS IT COBOL?                                          *
*               IS IT OBJ360 OR OBJ370                                *
*               IS COBOL /TEST/ OPTION SPECIFIED                      *
*               IS COBOL /FLOW/ OPTION SPECIFIED                      *
*               IS COBOL /STATE/ OPTION SPECIFIED                     *
*               IS COBOL /SYMDUMP/ OPTION SPECIFIED                   *
*               IS COBOL /RESIDENT/ OPTION SPECIFIED    3/79          *
*               IS COBOL /ENDJOB/ OPTION SPECIFIED                    *
*               WAS COBOL /OPTIMIZE/ OPTION SPECIFIED                 *
*               WAS CA-OPT OPTIMIZE SPECIFIED                         *
*               WAS CA-OPT DTECT OR XCOUNT SPECIFIED  - CA-OPT ONLY   *
*               WAS COBOL V4 OR OS/VS COBOL UTILIZED FOR COMPILE      *
*               WAS COBOL /COUNT/ OPTION SPECIFIED    - VS ONLY       *
*               WAS COBOL /TRACE/ VERB SPECIFIED      - VS ONLY       *
*               DATE LINKEDITED                                       *
***********************************************************************
***********************************************************************
*        JCL / DD-CARD REQUIREMENTS                                   *
*          //S1 EXEC PGM=COBREAD                                      *
*          //* PARM='MEMNAME'                                         *
*          //*  OPTIONAL PARM OF MEMBER NAME TO PROCESS               *
*          //SYSTOT    DD  SYSOUT=A      FOR THE TOTALS               *
*          //SYSPRINT  DD  SYSOUT=A      FOR THE REPORT               *
*          //PDS   DD  DSN=SYPP.PGMLIB,DISP=SHR                       *
*          //*         THE PDS TO ANALYZE                             *
***********************************************************************
***********************************************************************
*        ABENDS WITHIN THIS MODULE                                    *
*          USER CODE    MEANING                                       *
*           U0027       TABLE OVERFLOW, TOO MANY ESDS IN LOAD MODULE  *
*           U0002       RDJFCB FAILED                                 *
*           U0003       OBTAIN FAILED                                 *
*           U0004       DATASET TO BE PROCESSED NOT A PDS             *
*           U0005       OPEN FAILED FOR PDS DCBS                      *
***********************************************************************
COBREAD  CSECT
         USING *,R15
         B     STORREG1                BOUNCE AROUND ID
         DC    XL1'07',CL7'COBREAD'    EYECATCHER
STORREG1 STM   R14,R12,12(R13)         SAVE REGS 14,15,0,...,12
         LR    R12,R15                 PROVIDE ADDRESSABILITY
         LA    R5,2048(R12)            LOAD SECOND
         LA    R5,2048(R5)             BASE REGISTER
         DROP  R15
         USING COBREAD,R12,R5          ESTABLISH ADDRESSABILITY
         LA    R2,SAVEREG1             PICK UP ADDR OF THIS SAVE AREA
         ST    R2,8(R0,R13)            STORE SAVE AREA ADDR IN CALLER
         ST    R13,4(R0,R2)            STORE CALLER'S SAVE AREA ADDR IN
         LR    R13,R2                  SET UP SAVE AREA POINTER REG.
         B     START1                  BOUNCE AROUND SAVE AREA
SAVEREG1 DC    9D'0'                   SAVE AREA FOR THIS ROUTINE
START1   L     R2,0(R1)                GET THE PARM POINTER
         LH    R1,0(R2)                GET PARM LENGTH
         LTR   R1,R1                   SEE IF ZERO
         BZ    ALLMEM                  YES, DO ALL MEMBERS
         BCTR  R1,R0                   DECREMENT FOR MVC
         EX    R1,MVCNAME              MOVE THE NAME
         OI    MSW,ONEMEM              SET THE 1 - MEMBER SWITCH
***********************************************************************
*        READ THE JFCB TO PREPARE FOR AN OBTAIN  -                    *
***********************************************************************
ALLMEM   RDJFCB (MEMDCB)               READ THE JFCB FOR THE PDS
         LTR   R15,R15                 DID IT DO THAT O.K. ?
         BNZ   ERROR2                  NO - BRANCH
***********************************************************************
*        ISSUE  AN OBTAIN, TO SEE IF THE PDS EXISTS -                 *
***********************************************************************
         OBTAIN CAMLIST                ISSUE OBTAIN
         LTR   R15,R15                 DID THE OBTAIN OBTAIN ANYTHING ?
         BNZ   ERROR3                  NO - BRANCH
***********************************************************************
*        TEST TO ENSURE THAT THIS DATASET IS A PDS  -                 *
***********************************************************************
         TM    AREA+38,X'02'           TEST FOR 'DSORG=PO' IN FORMAT 1
         BZ    ERROR4                  NOT A PDS - BRANCH
***********************************************************************
*        OPEN THE DCBS FOR THE DIRECTORY AND THE MEMBERS  -           *
***********************************************************************
         OPEN  (DIRDCB,,MEMDCB)        ISSUE THE OPEN
         TM    DIRDCB+48,X'10'         DID THE DIRECTORY DCB OPEN O.K.
         BZ    ERROR5                  NO - BRANCH
         TM    MEMDCB+48,X'10'         DID THE MEMBER DCB OPEN O.K. ?
         BZ    ERROR5                  NO - BRANCH
***********************************************************************
*        GET A BUFFER TO READ THE MEMBERS INTO  -                     *
***********************************************************************
         MVC   BUFFLEN,MEMDCB+62       GET BLOCKSIZE FROM THE DCB
         L     R0,BUFFER               LENGTH + SP I.D. FOR GETMAIN
         GETMAIN R,LV=(0)              ISSUE GETMAIN
         ST    R1,DECB+12              PUT POINTER TO BUFFER IN DECB
         OPEN  (SYSPRINT,(OUTPUT),SYSTOT,(OUTPUT)) OPEN PRINT FILES
***********************************************************************
*        GET TIME AND DATE  -                                         *
***********************************************************************
         TIME  DEC
         ST    R0,TIME                 SAVE TIME
         ST    R1,DATE                 SAVE DATE
         MVO   TIM,TIME(2)             SAVE TIME
***********************************************************************
*        GET JOBNAME OF JOB, AND SAVE IT  -                           *
***********************************************************************
         EXTRACT FIELD1,FIELDS=(TIOT)
         L     R1,FIELD1               POINT TO TIOT
         MVC   JNAME,0(R1)             SAVE JOBNAME
         B     GET                     GET THE FIRST PDS DIRECTORY BLOC
***********************************************************************
*        GET NEXT MEMBER IN THE PDS  -
*        FIRST  LOOK FOR A MEMBER IN THE CURRENT DIRECTORY BLOCK -
***********************************************************************
LOOPDS1  L     R2,DIRPOINT             POINT TO THE NEXT MEMBER
         IC    R3,11(,R2)              GET LENGTH OF USER DATA
         N     R3,MASK2                LENGTH IS 5 BITS
         SLL   R3,1                    X 2 BECAUSE LENGTH IN HALF-WORDS
         LA    R3,12(,R3)              ADD LENGTH OF MEMBER NAME + TTRC
         AR    R3,R2                   POINT TO NEXT MEMBER
***********************************************************************
*        FIND  THE END OF THE DIRECTORY BLOCK  -                      *
***********************************************************************
         LA    R4,DIRBLOCK             POINT TO THE CURRENT DIRECTORY B
         LH    R9,0(,R4)               GET LENGTH USED
         AR    R9,R4                   POINT TO END OF THE BLOCK
         CR    R9,R3                   HAS THIS BLOCK BEEN EXAUSTED ?
         BH    GOTNEXT                 NO - BRANCH
***********************************************************************
*        READ THE NEXT DIRECTORY BLOCK  -                             *
***********************************************************************
         LA    R15,GET                 SWITCH TO
         BSM   0,R15                   24-BIT ADDRESSABILITY
GET      GET   DIRDCB,DIRBLOCK         READ THE NEXT DIRECTORY BLOCK
         LA    R3,DIRBLOCK+2           POINT TO THE FIRST MEMBER IN BLO
GOTNEXT  L     R15,AMOD0020            SWITCH
         BSM   0,R15                   TO 31-BIT ADDRESSABILITY
AMOD0020 DC    A(CON0020+X'80000000')
CON0020  ST    R3,DIRPOINT             SAVE POINTER TO NEXT MEMBER
***********************************************************************
*        TEST TO SEE IF WE HAVE GOT TO THE END OF THE PDS  -          *
***********************************************************************
PROCALL  CLI   0(R3),X'F9'             LOOK FOR A MEMBER NAME OF FOXES
         BH    ENDPDS                  GOT TO END - BRANCH
         TM    MSW,ONEMEM              ARE WE IN 1 MEMBER ONLY MODE
         BZ    COUNT                   NO, CONTINUE
         CLC   0(8,R3),CNAME           COMPARE FOR DESIRED NAME
         BE    COUNT                   WE FOUND DESIRED NAME
         BH    ENDPDS                  WE ARE PAST THE DESIRED ONE
         B     LOOPDS1                 GO AND TRY THE NEXT MEMBER
***********************************************************************
*        COUNT # OF MEMBERS READ  -                                   *
***********************************************************************
COUNT    L     R1,CPMEM                GET # OF MEMBERS READ
         AL    R1,=F'1'                INCREMENT BY 1
         ST    R1,CPMEM                AND SAVE IT
HITIT    L     R2,DIRPOINT             POINT TO DIRECTORY ENTRY
         MVC   TTRZ(3),8(R2)           SAVE TTR OF MEMBER
         LA    R15,POINT               SWITCH TO
         BSM   0,R15                   24-BIT ADDRESSABILITY
POINT    POINT MEMDCB,TTRZ             POINT TO THIS MEMBER
         L     R15,AMOD0024            SWITCH TO
         BSM   0,R15                   31-BIT ADDRESSABILITY
AMOD0024 DC    A(BUILD+X'80000000')
***********************************************************************
*        LOAD THE MEMBER, THEN READ THE LOAD MODULE RECORDS TO        *
*        LOCATE CSECTS WITHIN THE MODULE.                             *
***********************************************************************
*        BUILD A PRINT LINE                                           *
***********************************************************************
BUILD    LA    R7,LINE                 R7 WILL POINT TO DETAIL PRINT LI
         USING DETLINE,R7              -
         MVI   LINE,C' '               BLANK THE PRINT LINE
         MVC   LINE+1(131),LINE        -
         AP    CTMEM,=P'1'             COUNT NUMBER OF MEMBERS IN PDS
         L     R3,DIRPOINT             POINT TO DIRECTORY ENTRY
***********************************************************************
*        DETERMINE IF THE MEMBER WAS CREATED BY THE LINKAGE-EDITOR  - *
***********************************************************************
         IC    R4,11(,R3)              GET LENGTH OF USER DATA
         N     R4,MASK2                -
         C     R4,=F'11'               MUST BE AT LEAST 11 HALF-WORDS
         BNL   CHEKEXEC                IT WAS LINKED - BRANCH
***********************************************************************
*        ISSUE MESSAGE - MODULE NOT CREATED BY LINKAGE-EDITOR  -      *
***********************************************************************
         MVC   DETMSG(16),=CL16'NOT LINKED'
         AP    CTNLE,=P'1'             COUNT NUMBER NOT LINKED
         MVI   RPTSW,1                 SHOW DO NOT PRODUCE CSECT REPORT
         B     PUTTTRC
CHEKEXEC TM    20(R3),X'02'            DID L/E MARK IT EXEC
         BO    CHEKRMOD                YES, CHECK RMODE
***********************************************************************
*        ISSUE MESSAGE, MODULE NON EXECUTABLE                         *
***********************************************************************
         MVC   DETMSG(16),=CL16'NOT EXECUTABLE'
         AP    CTNXE,=P'1'             COUNT NUMBER NOT EXECUTABLE
         MVI   RPTSW,1                 SHOW DO NOT PRODUCE CSECT REPORT
         B     PUTENTRY
CHEKRMOD TM    31(R3),X'10'            IS IT RMODE ANY ?
         BNO   LOADIT                  NO, TRY TO LOAD IT
***********************************************************************
*        ISSUE MESSAGE, MODULE RMODE ANY                              *
***********************************************************************
         MVC   DETMSG(16),=CL16'RMODE ANY'
         AP    CTRMD,=P'1'             COUNT NUMBER RMODE ANY
         B     LOADIT                  LOAD AND REPORT
***********************************************************************
*        LOAD THE MODULE INTO STORAGE                                 *
***********************************************************************
LOADIT   LOAD  EPLOC=(R3),ERRET=CANTRD,DCB=MEMDCB
         LR    R4,R0                   SAVE LOAD MODULE ADDRESS
***********************************************************************
*        READ THE MODULE, TO GET THE DATE-LINKED FROM THE IDRDATA  -  *
***********************************************************************
DLINK    L     R8,=A(CESDT)            GET ADDRESS OF CESD TABLE
         SR    R11,R11                 COUNT OF ENTRIES IN USE
         ST    R11,NRESD               STORE NUMBER CURRENTLY IN USE
         USING ESD,R8                  ADDRESS ESD DSECT
         ST    R8,CURESD               STORE IN CURRENT RECORD
         ZAP   SKDTL,=P'0'             INITIALISE DATE-LINKED TO ZEROS
GETLOOP  L     R6,DECB+12              POINT TO INPUT AREA
         LA    R15,READDECB            SWITCH TO
         BSM   0,R15                   24-BIT ADDRESSABILITY
READDECB READ  DECB,SF,MF=E            READ THE NEXT RECORD
         CHECK DECB
         L     R15,ADDRCLI1            SWITCH
         BSM   0,R15                   TO 31-BIT ADDRESSABILITY
ADDRCLI1 DC    A(CHKCESD+X'80000000')
CHKCESD  CLI   0(R6),X'20'             IS THIS A CESD RECORD
         BNE   NOTCESD                 NO, LOOK FOR OTHER INTERESTING R
***********************************************************************
*        WE NOW HAVE A CESD RECORD, PULL SD SUBRECORDS                *
***********************************************************************
GOTCESD  LA    R10,8(,R6)              POINT TO ESD DATA AREA IN CESD R
         LH    R11,6(,R6)              COUNT OF BYTES OF ESD DATA
         USING CESD,R10                ADDRESS CESD SUBREC DESCRIPTION
NEXTSRL  TM    CESDTY,X'0F'            IS IT A SD TYPE
         BNZ   NEXTSR                  IF ANY BITS ON, IT ISNT
         MVC   ESDNAME,CESDNM          PUT NAME IN TABLE
         MVC   ESDLENG,CESDIDL         PUT LENGTH IN TABLE
         MVC   ESDAD,CESDAD            PUT LINKEDITOR ADDRESS IN TABLE
         LA    R8,ESDLAST-ESD(,R8)     TO THE NEXT SLOT
         L     R1,NRESD                GET CURRENT IN USE COUNT
         LA    R1,1(,R1)               INCREMENT
         ST    R1,NRESD                PUT IT BACK
         C     R1,=F'512'              SEE IF TABLE OVERFLOW
         BNE   NEXTSR                  NO, ITS OK
***********************************************************************
*        ABEND 27,DUMP             TIME TO QUIT POST HASTE            *
*        ISSUE MESSAGE, TOO MANY CSECTS                               *
***********************************************************************
         MVC   DETMSG+17(16),=CL16'TOO MANY CSECTS'
         MVI   RPTSW,1                 SHOW DO NOT PRODUCE CSECT REPORT
         B     PUTENTRY
NEXTSR   LA    R10,16(,R10)            POINT TO NEXT SR SLOT
         S     R11,=F'16'              SEE IF ANY DATA IS REALLY LEFT
         BP    NEXTSRL
         DROP  R10
***********************************************************************
*                                  WE NOW HAVE ALL S/R FROM THIS CESD *
***********************************************************************
NOTCESD  TM    0(R6),1                 DOES THIS RECORD PRECEED A TEXT
         BO    EODAD                   YES - BRANCH (NO IDRDATA RECORDS
         CLI   0(R6),X'80'             IS THIS AN IDRDATA RECORD ?
         BNE   GETLOOP                 NO - BRANCH
         TM    2(R6),2                 IS THIS IDRDATA FROM LINK-EDITOR
         BNO   GETLOOP                 NO - BRANCH
         ZAP   SKDTL,15(3,R6)          SAVE DATE LINKED
***********************************************************************
*        FORMAT AND PRINT GENERAL ITEMS ABOUT LOAD MODULE             *
***********************************************************************
EODAD    MVC   DETDTL-1(7),PAT01
         ED    DETDTL-1(7),SKDTL       PUT DATE LINKED INTO PRINT LINE
         OI    DETDTL,C'0'             FIX HIGH ORDER BYTE
***********************************************************************
*        MODULE ENTRY POINT  -                                        *
***********************************************************************
PUTENTRY MVC   MODEP+1(3),27(R3)       CAPTURE EP OFFSET FOR LATER USE
         S     R4,MODEP                ADJUST IF MODULE E.P. NOT 0
         UNPK  DWA(7),27(4,R3)         UNPACK IT
         MVC   DETEP,DWA               MOVE THE 6 SIGNIFICANT CHARS
         TR    DETEP,TABLE1            AND MAKE INTO PRINTABLE HEX
***********************************************************************
*        MODULE SIZE  -                                               *
***********************************************************************
         UNPK  DWA(7),22(4,R3)
         MVC   DETSIZE,DWA
         TR    DETSIZE,TABLE1
***********************************************************************
*        MODULE ATTRIBUTES  -                                         *
***********************************************************************
         UNPK  DWA(5),20(3,R3)
         MVC   DETATTR,DWA
         TR    DETATTR,TABLE1
***********************************************************************
*        TTRC  -                                                      *
***********************************************************************
PUTTTRC  UNPK  DWA(9),8(5,R3)
         MVC   DETTTRC,DWA
         TR    DETTTRC,TABLE1
***********************************************************************
*        MEMBER NAME  -                                               *
***********************************************************************
PUTMEM   MVC   DETMEM,0(R3)
SPC1     EQU   C' '
SPC2     EQU   C'0'
SPC3     EQU   C'-'
PAGEE    EQU   C'1'
         MVI   CNTL,SPC1
         BAL   R9,WRITE                PUT A LINE TO THE PRINTER
***********************************************************************
*        NOW CALL CSECT REPORTER WITH CSECT TABLE                     *
***********************************************************************
         CLI   RPTSW,1                 SKIP CSECT REPORT ?
         BE    DONEREP                 YES, WE CANNOT REPORT IT
         L     R8,=A(CESDT)            GET ADDRESS OF CESD TABLE
         L     R11,NRESD               GET COUNT OF ENTRIES
         LTR   R11,R11                 ANY MORE LEFT
         BZ    DONEREP                 NO, DONE WITH REPORTING
***********************************************************************
*        FIND A CSECT TO PASS, RELOCATE THE LOAD POINT                *
*        BY THE CSECT ADDRESS                                         *
***********************************************************************
REPLOOP  L     R1,ESDAD                GET THE LINKEDIT ADDRESS
         SRL   R1,8                    MAKE 3 BYTE INTO 4
         LA    R1,0(R1,R4)             RELOCATE THE LOAD ADDRESS
         ST    R1,POINTER              PUT IT IN THE PARAMETER
         MVC   LENGTH+1(3),ESDLENG     PICK UP 3 BYTE LENGTH CODE
         MVC   NAME,ESDNAME            PICK UP 8 BYTE CSECT NAME
         CLC   NAME(3),=CL3'ILB'       IS IT A SUPPRESSED NAME
         BE    NEXTONE                 COBOL V2, V3, V4, VS LIBRARY
         CLC   NAME(3),=CL3'IGZ'       IS IT A SUPPRESSED NAME
         BE    NEXTONE                 VS COBOL II LIBRARY
         CLC   NAME(3),=CL3'DFH'       IS IT A CICS INTERFACE MODULE ?
         BE    NEXTONE                 YES, BYPASS
         CLC   NAME,=CL8'STINIT'       IS IT AN EASYTREV SUBPROGRAM
         BE    NEXTONE                 YES, BYPASS
         CLC   NAME,=CL8'RLBSTK'       IS IT AN EASYTREV SUBPROGRAM
         BE    NEXTONE                 YES, BYPASS
         CLC   NAME,=CL8'OPTTBL'       IS IT AN EASYTREV SUBPROGRAM
         BE    NEXTONE                 YES, BYPASS
         CLC   NAME,=CL8'WORKSTOR'     IS IT AN EASYTREV SUBPROGRAM
         BE    NEXTONE                 YES, BYPASS
         CLC   NAME,=CL4'SRT0'         IS IT AN EASYTREV SORT SUBPROGRA
         BE    NEXTONE                 YES, BYPASS
         CLC   NAME(3),=CL3'IBM'       IS IT A SUPPRESSED NAME
         BE    NEXTONE                 PL/I OPTIMIZER LIBRARY
POINTP   LA    R1,PARMLIST             POINT TO PARAMETER LIST
         BAL   R9,COBFMT               GET ADDRESS OF REPORT ROUTINE
NEXTONE  LA    R8,ESDLAST-ESD(,R8)     TO NEXT ENTRY IF PRESENT
         BCT   R11,REPLOOP             ANY MORE LEFT?
DONEREP  MVI   RPTSW,0                 CLEAR ERROR SWITCH
         DROP  R8
***********************************************************************
*        DELETE MODULE - AND GO TO NEXT ONE  -                        *
***********************************************************************
DONETHIS DELETE EPLOC=(R3)
         TM    MSW,ONEMEM
         BO    ENDPDS                  QUIT AFTER FORMATTING SINGLE REQ
         B     LOOPDS1                 GO AND WORK ON NEXT MEMBER
***********************************************************************
*        ERROR TRYING TO LOAD THIS MODULE  -                          *
***********************************************************************
CANTRD   STC   R15,WORK+6              SAVE RETURN CODE FROM LOAD MACRO
         MVC   DETMSG(16),=CL16'CANT LOAD OK -'
         UNPK  WORK(3),WORK+6(2)       MAKE RETURN CODE PRINTABLE
         TR    WORK(2),TABLE1
         MVC   DETMSG+15(2),WORK       PUT RETURN CODE INTO MSG.
         AP    CTWNL,=P'1'             COUNT NUMBER UNABLE TO LOAD
         MVI   RPTSW,1                 SHOW DO NOT PREPARE CSECT REPORT
         B     DLINK
         DROP  R7
***********************************************************************
*        END OF THE PDS - CLEAN UP AND EOJ                            *
***********************************************************************
ENDPDS   CLOSE (MEMDCB,,DIRDCB)        ISSUE CLOSE
***********************************************************************
*        FREE THE BUFFER USED TO READ THE MEMBERS  -                  *
***********************************************************************
         L     R0,BUFFER               GET LENGTH AND S.P.
         L     R1,DECB+12              POINT TO BUFFER
         FREEMAIN R,LV=(0),A=(1)       ISSUE FREEMAIN
***********************************************************************
*        ISSUE THE END MESSAGES  -                                    *
***********************************************************************
         TM    MSW,ONEMEM              ARE WE PROCESSING ONE MEMBER ONL
         BO    CLOSPRNT                YES - BRANCH
         OI    MSW,MSW40               SET 'NO SECONDARY HEADINGS'
         ZAP   LINENO,MAXLINE          FORCE PAGE SKIP
         ZAP   PAGE,=P'0'              RESET PAGE NUMBER FOR TOTALS
         MVI   CNTL,SPC3               SPACE 3 IMMED.
         BAL   R9,WRITE
***********************************************************************
*        PUT SUMMARY LINE - TOTAL MEMBERS IN LIBRARY  -               *
***********************************************************************
         MVI   CNTL,SPC1
         MVC   LINE+50(10),PAT04
         ED    LINE+50(10),CTMEM
         MVC   LINE+5(40),HDMEM
         BAL   R9,WRITE
***********************************************************************
*        PUT SUMMARY LINE - RMODE ANY -                               *
***********************************************************************
         MVI   CNTL,SPC1
         MVC   LINE+50(10),PAT04
         ED    LINE+50(10),CTRMD
         MVC   LINE+5(40),HDRMD
         BAL   R9,WRITE
***********************************************************************
*        PUT SUMMARY LINE - NOT CREATED BY LINKAGE-EDITOR  -          *
***********************************************************************
         MVI   CNTL,SPC1
         MVC   LINE+50(10),PAT04
         ED    LINE+50(10),CTNLE
         MVC   LINE+5(40),HDNLE
         BAL   R9,WRITE
***********************************************************************
*        PUT SUMMARY LINE - NON EXECUTABLE                            *
***********************************************************************
         MVI   CNTL,SPC1
         MVC   LINE+50(10),PAT04
         ED    LINE+50(10),CTNXE
         MVC   LINE+5(40),HDNXE
         BAL   R9,WRITE
***********************************************************************
*        PUT SUMMARY LINE - TOTAL MEMBERS THAT WILL NOT LOAD  -       *
***********************************************************************
         MVI   CNTL,SPC1
         MVC   LINE+50(10),PAT04
         ED    LINE+50(10),CTWNL
         MVC   LINE+5(40),HDWNL
         BAL   R9,WRITE
***********************************************************************
*        PUT SUMMARY FROM COBFMT -                                    *
***********************************************************************
         MVI   CNTL,SPC3               SPACE 3 IMMED.
         BAL   R9,WRITE
         L     R3,PARMLIST             GET ADDRESS OF COUNT TABLE
PRNTCNTS CLI   0(R3),X'FF'             IS THIS THE END OF COUNT TABLE
         BE    CLOSPRNT                YES - BRANCH
         MVI   CNTL,SPC1
         MVC   LINE+50(10),PAT04       PATTERN FOR COUNT FORMATTING
         ED    LINE+50(10),0(R3)       COUNT
         MVC   LINE+5(44),4(R3)        TEXT OF MESSAGE
         BAL   R9,WRITE                OUT WITH THE MESSAGE
         LA    R3,48(,R3)              TO THE NEXT ENTRY IN COUNT TABLE
         B     PRNTCNTS                AND LOOP
CLOSPRNT LA    R15,CLOSES              SWITCH TO
         BSM   0,R15                   24-BIT ADDRESSABILITY
CLOSES   CLOSE (SYSPRINT,,SYSTOT)      CLOSE SYSPRINT AND SYSTOT
GOBACK   L     R13,4(R0,R13)           PICK UP THE OLD SAVE AREA ADDRES
         LM    R14,R15,12(R13)         RESTORE THE REGS. 14,15
         LM    R2,R12,28(R13)          RESTORE THE REGS. 2,3,...,12
         MVI   R12(R13),X'FF'          SET RETURN INDICATION
         LA    R15,0(R0,R0)            LOAD RETURN CODE
         BR    R14                     RETURN
***********************************************************************
*        WRITE A LINE TO THE PRINTER                                  *
***********************************************************************
WRITE    ST    R9,SAVE9
***********************************************************************
*        TEST  FOR HEADINGS REQUIRED  -                               *
***********************************************************************
         CP    LINENO,MAXLINE          IS IT BOTTOM OF PAGE YET ?
         BL    NOHEAD                  NO - BRANCH
         ZAP   LINENO,=P'0'            RESET LINE COUNTER
         AP    PAGE,=P'1'              INCREMENT PAGE #
         MVI   HCNTL,PAGEE             SKIP TO 01
         MVI   HLINE,C' '              BLANK HEADING PRINT LINE
         MVC   HLINE+1(131),HLINE      -
         MVC   HLINE+120(6),PAT02
         ED    HLINE+120(6),PAGE       EDIT PAGE #
         MVC   HLINE+116(4),=C'PAGE'
         MVC   HLINE+84(7),PAT01
         ED    HLINE+84(7),DATE+1      EDIT DATE YY.DDD
         MVC   HLINE+78(5),=C'DATE:'
         MVC   HLINE+15(L'HEAD01),HEAD01
         MVC   HLINE+100(7),PAT03
         ED    HLINE+100(7),TIM        EDIT TIME HH.MM
         MVC   HLINE+95(5),=C'TIME:'
         MVC   HLINE(8),JNAME
         LA    R2,HCNTL
         BAL   R9,PRINT
         LA    R1,JFCB                 POINT TO JFCB
         MVC   HLINE+25(44),0(R1)      MOVE DSNAME
         MVC   HLINE+16(8),=C'DSNAME ='
         MVC   HLINE+85(6),118(R1)     MOVE VOLSER
         MVC   HLINE+76(8),=C'VOLUME ='
         MVI   HCNTL,SPC1
         LA    R2,HCNTL
         BAL   R9,PRINT
         TM    MSW,MSW40
         BO    NOHEAD
         MVC   HLINE(132),HEAD02
         MVI   HCNTL,SPC1
         LA    R2,HCNTL
         BAL   R9,PRINT
         MVC   HLINE(132),HEAD03
         MVI   HCNTL,SPC1
         LA    R2,HCNTL
         BAL   R9,PRINT
         MVC   HLINE(132),HEAD04
         MVI   HCNTL,SPC1
         LA    R2,HCNTL
         BAL   R9,PRINT
         MVI   HCNTL,SPC1
         MVI   HLINE,C'-'              MOVE DASHES TO PRINT LINE
         MVC   HLINE+1(131),HLINE
         LA    R2,HCNTL                POINT TO PRINT LINE
         BAL   R9,PRINT                GO PRINT
NOHEAD   AP    LINENO,=P'1'            INCREMENT LINE #
         LA    R2,CNTL                 POINT TO DETAIL PRINT LINE
         BAL   R9,PRINT                PRINT IT
         L     R9,SAVE9                RESTORE RETUTN REGISTER
         BR    R9                      RETURN
***********************************************************************
*        PRINT A LINE SUBROUTINE                                      *
***********************************************************************
PRINT    LR    R0,R2                   POINT TO LINE TO PRINT
         LA    R15,TESTMSW             SWITCH TO
         BSM   0,R15                   24-BIT ADDRESSABILITY
TESTMSW  TM    MSW,MSW40               EOJ ? (NO SECONDARY HEADINGS TUR
*                                  ON ONLY AT EOJ)
         BO    PRINTTOT                YES, PRINT TO SYSTOT DD
         PUT   SYSPRINT                PUT IT
         B     PRINTRET                RETURN
PRINTTOT PUT   SYSTOT                  PUT IT
PRINTRET L     R15,ADDRMVI1            SWITCH
         BSM   0,R15                   TO 31-BIT ADDRESSABILITY
ADDRMVI1 DC    A(MOVBLK1+X'80000000')
MOVBLK1  MVI   0(R2),C' '              BLANK OUT THE LINE WE PRINTED
         MVC   1(132,R2),0(R2)         -
         BR    R9                      RETURN
***********************************************************************
*        ERROR CONDITIONS                                             *
***********************************************************************
*        ERROR IN RDJFCB  -                                           *
***********************************************************************
ERROR2   LA    R2,MEMDCB               POINT TO DCB
         ABEND 2,DUMP
***********************************************************************
*        ERROR IN OBTAIN  -                                           *
***********************************************************************
ERROR3   LA    R2,CAMLIST              POINT TO CAMLST
         ABEND 3,DUMP
***********************************************************************
*        DATASET TO BE PROCESSED IS NOT A PDS  -                      *
***********************************************************************
ERROR4   LA    R2,AREA                 POINT TO FORMAT 1 LABEL
         ABEND 4,DUMP
***********************************************************************
*        CANNOT OPEN PDS DCBS  -                                      *
***********************************************************************
ERROR5   LA    R2,DIRDCB               POINT TO DIRECTORY DCB
         LA    R3,MEMDCB               POINT TO MEMBER DCB
         ABEND 5,DUMP
***********************************************************************
*        E X E C U T E D   I N S T R U C T I O N S                    *
***********************************************************************
MVCNAME  MVC   CNAME(0),2(R2)          MOVE PARM FIELD
***********************************************************************
*        PRINT ROUTINE                                                *
***********************************************************************
PRINTR   ST    R9,P9                   SAVE RETURN ADDRESS
         L     R1,0(,R1)               POINT TO THE PASSED RECORD
         MVC   CNTL(133),0(R1)         MOVE PRINT DATA
         BAL   R9,WRITE                ISSUE THE PUT
         L     R9,P9                   GET RETURN ADDRESS
         BR    R9                      RETURN
**********************************************************************
*         =====> COBFMT REGISTER USAGE  <=====                       *
*R4       POINTS TO CSECT STARTING POINT/INIT1 POINTER               *
*R6       POINTS TO COBOL PGMS TGT                                   *
*R9       POINTS TO SYSPRINT DCB                                     *
*R10      POINTS TO START OF CSECT TO PROCESS                        *
*R11      CONTAINS LENGTH OF CSECT                                   *
**********************************************************************
COBFMT   STM   R0,R15,CFSAVE           SAVE REGS FOR RETURN
START2   MVC   0(4,R1),=A(CTTGT)       RETURNS ADDRESS OF COUNT TABLE
         L     R10,4(,R1)              GET ADDRESS OF CSECT INFO BLOCK
         MVI   PRTMSG,C' '             CLEAR OLD DATA FROM PRINT LINE
         MVC   PRTMSG+1(132),PRTMSG
         MVC   CID,=C'    CS-'
         MVC   CNAMEF(8),8(R10)        GET CSECT NAME INTO PRINT LINE
         UNPK  CLENGTH,4(5,R10)        FORMAT CSECT LENGTH FOR PRINTING
         TR    CLENGTH,TABLE2          FORMAT HEX INTO PRINTABLE
         MVI   CLENGTH+L'CLENGTH-1,C' ' BLANK AFTER LAST DIGIT
         LM    R10,R11,0(R10)          GET CSECT INFO BLOCK VALUES
         L     R4,0(,R1)               PICK UP CSECT STARTING POINT
         C     R11,=F'450'             IS MODULE POSSIBLY COBOL ?
         BL    NOTCOB                  TOO SHORT TO BE COBOL
         LR    R4,R10
         CLC   0(2,R4),=XL2'0700'      IS IT A PADDED NOP E.P. CODE ?
         BNE   TRYEP
         CLC   X'E'(8,R4),=CL8' '      IS IT PADDED E.P. ?
         BNE   MAINLINE
         L     R4,X'16'(,R4)           GET THE REAL POINTER
         B     MAINLINE
TRYEP    CLC   X'C'(8,R4),=CL8' '      IS IT ENTRY POINT CODING ?
         BNE   MAINLINE
***********************************************************************
*        GOT AN ENTRY POINT SITUATION, GET THE START POINTER          *
***********************************************************************
         L     R4,X'14'(,R4)           GET THE REAL POINTER
         LA    R4,0(,R4)               CLEAR THE HIGH BYTE
         LR    R8,R10                  GET THE CSECT BASE ADDR
         AR    R8,R11                  ADD ON THE LENGTH
         CR    R8,R4                   SEE IF GENERATED ADDRESS IS VALI
         BL    NOTCOB                  IF OUTSIDE OF CSECT - TRASH
***********************************************************************
*        R4 NOW POINTS TO THE START OF THE CSECT                      *
*        FIRST LOOK FOR IDENTIFIER WITHIN THE INITIALIZATION CODE     *
***********************************************************************
MAINLINE CLC   X'14'(4,R4),=CL4'VSR1'  IS IT OS/VS COBOL ?
         BE    ITSOSVS                 YES, HANDLE IT
         CLC   X'14'(4,R4),=CL4'ANS4'  IS IT ANSI COBOL VERSION 4 ?
         BE    ITSV4                   YES, HANDLE IT
         CLC   X'0E'(2,R4),=CL2'C2'    IS IT VS COBOL II ?
         BE    ITSVSII                 YES, HANDLE IT
         BNE   NOTCOB                  ELSE IT IS WHO KNOWS WHAT
ITSVSII  MVC   FLAGA,=CL2'C2'          SHOW IT IS VS COBOL II COMPILER
         AP    CTVSII,=P'1'            COUNT IT UP
         AP    CTCOBF,=P'1'            COUNT NUMBER COBOL
         MVC   DATECOMP(17),X'17'(R4)  MOVE VS COBOL II COMPILE DATE
         B     COBIIOPT                AND GO PROCESS VS COBOL II OPTIO
ITSOSVS  MVC   FLAGA,=CL2'VS'          SHOW IT IS OS/VS COMPILER
         AP    CTOSVS,=P'1'            COUNT IT UP
         MVC   DATECOMP,X'88'(R4)      MOVE STD. COBOL COMPILE DATE
         B     COUNTCOB                AND CONTINUE WITH PROCESSING
ITSV4    MVC   FLAGA,=CL2'V4'          SHOW IT IS ANSI V4 COMPILER
         AP    CTV4C,=P'1'             COUNT IT UP
         MVC   DATECOMP,=CL20'NO DATE AVAIL FOR V4' NO DATE FOR V4
COUNTCOB AP    CTCOBF,=P'1'            COUNT NUMBER COBOL
         L     R6,60(,R4)              GET R13 POINTER ADCON (TGT POINT
*                                  TO ADDR. THE PGMS TASK GLOBAL TABLE
         ST    R6,TGTPTRF              SAVE FOR OTHER USAGE
         ST    R4,INIT1PTF             SAVE FOR OTHER USAGE
         CLC   X'1BC'(8,R6),=CL8'SYSOUT  ' CHECK FOR GOOD TGT
         BNE   NOTTGT                  GOT PROBLEMS UNDERSTANDING
***********************************************************************
*    FOLLOWING IS FOR ANSI V4 AND/OR OS/VS COBOL ONLY !               *
*        SET FLAGS IN DETAIL PRINT LINE  -                            *
*        BASED UPON THE SWITCH WORD IN THE TGT                        *
*        ITEMS MARKED WITH AN ! ARE THE ONLY ONES EXAMINED            *
*        SWITCH BIT MEANINGS - SOURCE COBOL COMPILER PLM              *
*         BYTE 1  BIT 0 MASK X'80'  USED BY ON SIZE ERROR             *
*         BYTE 1  BIT 1 MASK X'40'  USED BY READY TRACE VERB          *
*         BYTE 1  BIT 2 MASK X'20'  INITIALIZATION FLAG               *
*         BYTE 1  BIT 3 MASK X'10'  MAIN PROGRAM FLAG                 *
*      !  BYTE 1  BIT 4 MASK X'08'  SYMDUMP FLAG                      *
*      !  BYTE 1  BIT 5 MASK X'04'  FLOW FLAG                         *
*      !  BYTE 1  BIT 6 MASK X'02'  STATE FLAG / REUSED AT RUN TIME   *
*      !  BYTE 1  BIT 7 MASK X'01'  OPTIMIZATION FLAG                 *
*         BYTE 2  BIT 0 MASK X'80'  RESERVED                          *
*         BYTE 2  BIT 1 MASK X'40'  USED BY CALL AND CANCEL           *
*         BYTE 2  BIT 2 MASK X'20'  MXEC TIME STATE FLAG              *
*      !  BYTE 2  BIT 3 MASK X'10'  TEST ATTRIBUTE FLAG               *
*         BYTE 2  BIT 4 MASK X'08'  QUOTE IS APOST FLAG               *
*         BYTE 2  BIT 5 MASK X'04'  SPECIAL SYMDUMP USAGE             *
*         BYTE 2  BIT 6 MASK X'02'  LONG TGT FLAG, ALWAYS 1 FOR V4/VS *
*         BYTE 2  BIT 7 MASK X'01'  Q-ROUTINE USAGE                   *
*      !  BYTE 3  BIT 0 MASK X'80'  NORES FLAG, SET=0 FOR RES OPTION  *
*      !  BYTE 3  BIT 1 MASK X'40'  ENDJOB WAS SPECIFIED              *
*      !  BYTE 3  BIT 2 MASK X'20'  OBJECT COMPUTER 370 SPECIFIED     *
*         BYTE 3  BIT 3 MASK X'10'  Q-ROUTINE FLAG                    *
*      !  BYTE 3  BIT 4 MASK X'08'  COUNT OPTION - OS/VS ONLY         *
*      !  BYTE 3  BIT 5 MASK X'04'  TRACE VERB IS PRESENT - OS/VS ONLY*
*         BYTE 3  BIT 6 MASK X'02'  SYNADAF USAGE                     *
*         BYTE 3  BIT 7 MASK X'01'  UNUSED BIT                        *
*         BYTE 4  DEC POINT IS COMMA BYTE                             *
*                 C',' IF SPECIFIED, ELSE C'.'                        *
***********************************************************************
         TM    X'48'(R6),X'08'         IS IT SYMDUMP
         BZ    X01
         MVC   FLAG1,=CL8'YES'
         MVC   FLAGS,NONSTD            SHOW OUTSIDE OF PROD STANDARDS
         AP    CTSYM,=P'1'             COUNT NUMBER USING SYMDUMP
X01      TM    X'48'(R6),X'04'         IS IT FLOW
         BZ    X02
         MVC   FLAG2,=CL5'YES'
         MVC   FLAGS,NONSTD            SHOW OUTSIDE OF PROD STANDARDS
         AP    CTFLO,=P'1'             COUNT NUMBER USING FLOW
X02      TM    X'48'(R6),X'02'         IS IT STATE
         BZ    X03
         MVC   FLAG3,=CL6'YES'
         MVC   FLAGS,NONSTD            SHOW OUTSIDE OF PROD STANDARDS
         AP    CTSTA,=P'1'             COUNT NUMBER USING STATE
X03      TM    X'49'(R6),X'10'         IS IT TEST
         BZ    X04
         MVC   FLAG4,=CL5'YES'
         MVC   FLAGS,NONSTD            SHOW OUTSIDE OF PROD STANDARDS
         AP    CTEST,=P'1'             COUNT NUMBER USING TEST
X04      TM    X'4A'(R6),X'80'         IS IT RESIDENT
         BO    X05
         MVC   FLAG5,=CL8' '
         AP    CTRES,=P'1'             COUNT NUMBER USING RES
         B     X05A
X05      MVC   FLAGS,NONSTD            SHOW OUTSIDE OF PROD STANDARDS
         MVC   FLAG5,=CL8'NOT-RES'     SHOW IT !!!!
         AP    CTNRES,=P'1'            COUNT NUMBER NOT USING RES
X05A     TM    X'4A'(R6),X'40'         IS IT ENDJOB
         BZ    X06
         MVC   FLAG6,=CL7'YES'
         AP    CTEND,=P'1'             COUNT NUMBER USING ENDJOB
         B     X06A                    AND CONTINUE THE SEARCH
X06      MVC   FLAG6,=CL7' '
X06A     TM    X'4A'(R6),X'20'         IS IT OBJECT 370
         BZ    X07
         MVC   FLAG7,=CL7' '
         AP    CTOBJ,=P'1'             COUNT NUMBER USING OBJ 370
         B     X07A
X07      MVC   FLAG7,=CL7'NO'
         MVC   FLAGS,NONSTD            SHOW OUTSIDE OF PROD STANDARDS
X07A     TM    X'48'(R6),X'01'         IS IT COBOL OPTIMIZED
         BZ    X08
         MVC   FLAG8,=CL8'COBOL'
         AP    CTOPT,=P'1'             COUNT NUMBER OPTIMIZED
         B     X08B                    IT CANNOT THEREFORE BE CA-OPT OP
X08      CLC   X'48'(6,R4),=CL6'CAPEX' IS IT CA-OPT OPTIMIZED ?
         BE    X08A
         CLC   X'48'(6,R4),=CL6'CA-OPT' IS IT CA-OPT OPTIMIZED ?
         BE    X08A
         MVC   FLAG8,=CL8'NOT-OPT!'    SHOW IT !!!!!
         AP    CTNOPT,=P'1'            ADD TO COUNTER
         MVC   FLAGS,NONSTD            SHOW OUTSIDE OF PROD STANDARDS
         B     X08B
X08A     MVC   FLAG8,=CL8'CA-OPT '
         AP    CTCAP,=P'1'             COUNT NUMBER OPTIMIZED
         MVC   DATECOMP,X'48'+X'27'(R4) PICK UP CA-OPT'S DATE & TIME
*                                  STAMP I.E. OCT 22,1979 18.30.40
         L     R14,INIT1PTF            GET INIT1 POINTER
         L     R14,X'38'(,R14)         GET PGT POINTER
         S     R14,=F'8'               THIS IS THE FULLWORD FOR CA-OPT
         L     R14,0(,R14)             GET ITS VALUE
         LTR   R14,R14                 ANY OPTIONS POSSIBLE ?
         BZ    X08B                    NO, CONTINUE
***********************************************************************
*        EITHER DTECT, XCOUNT, OR PFLOW IS ON                         *
***********************************************************************
         MVC   FLAGS,NONSTD            SHOW OUTSIDE OF PROD STANDARDS
         A     R14,TGTPTRF             POINT TO OPTION BYTE
***********************************************************************
*        WE NOW HAVE THE CA-OPT OPTION BYTE                           *
***********************************************************************
         TM    0(R14),X'60'            DTECT AND XCOUNT ?
         BNO   DTECT                   NO, CHECK DTECT (OR PFLOW) ALONE
         MVC   FLAGD,=CL6'DT-XCN'      FLAG OPTIONS ARE ON
         AP    CTDTEXCN,=P'1'          COUNT NUMBER WITH DETECT AND XCO
         B     X08B                    CONTINUE
DTECT    TM    0(R14),X'20'            DTECT OR PFLOW (FORCES DTECT) ?
         BZ    XCOUNT                  NO, CHECK XCOUNT
         MVC   FLAGD,=CL6'DTECT'       FLAG OPTION IS ON
         AP    CTDTE,=P'1'             COUNT NUMBER WITH DETECT
         B     X08B                    CONTINUE
XCOUNT   TM    0(R14),X'40'            IS IT XCOUNT ?
         BZ    X08B                    NO, BYPASS (UNKNOWN OPTION ?)
         MVC   FLAGD,=CL6'XCOUNT'      FLAG OPTION IS ON
         AP    CTXCN,=P'1'             COUNT NUMBER WITH DETECT
X08B     CLC   FLAGA,=C'VS'            CHECK FOR VS ONLY OPTIONS
         BNE   DONEFMT
         TM    X'4A'(R6),X'08'         SEE IF COUNT WAS SPECIFIED
         BZ    X09                     NO COUNT OPTION
         MVC   FLAGB,=C'YES'           PUT IT IN MSG
         MVC   FLAGS,NONSTD            SHOW OUTSIDE OF PROD STANDARDS
         AP    CTCNT,=P'1'             COUNT NUMBER WITH OPTION
X09      TM    X'4A'(R6),X'04'         WAS TRACE VERB IN PGM
         BZ    DONEFMT                 NO, DO NOT FLAG IT ON LISTING
         MVC   FLAGC,=C'YES'           PUT IT IN MSG
         MVC   FLAGS,NONSTD            SHOW OUTSIDE OF PROD STANDARDS
         AP    CTTRC,=P'1'             COUNT NUMBER WITH OPTION
DONEFMT  CLC   FLAGS,NONSTD            ANY NON-STD. OPTIONS FOUND ?
         BNE   PRINTOK                 NO, GO PRINT
         AP    CTNONSTD,=P'1'          YES, INCR. COUNTER
PRINTOK  LA    R1,POINTR               SET UP PRINT ROUTINE PARM LIST P
         BAL   R9,PRINTR               PERFORM PRINT ROUTINE
NOPRINT  LM    R0,R15,CFSAVE           RESTORE REGS
         BR    R9                      RETURN
***********************************************************************
*    FOLLOWING IS FOR VS COBOL II ONLY !                              *
*        SET FLAGS IN DETAIL PRINT LINE  -                            *
*        BASED UPON THE PROGRAM SIGNATURE INFORMATION BYTES           *
*        THESE MAY BE FOUND AT X'2C' INTO THE COMPILED CSECT          *
*        ITEMS MARKED WITH AN ! ARE THE ONLY ONES EXAMINED            *
*        SWITCH BIT MEANINGS - SOURCE VS COBOL II APPL. PGM. DEBUGGING*
*         BYTE 1  BIT 0 MASK X'80'  ADV                               *
*         BYTE 1  BIT 1 MASK X'40'  APOST                             *
*      !  BYTE 1  BIT 2 MASK X'20'  DATA(31) IF ON, DATA(24) IF OFF   *
*         BYTE 1  BIT 3 MASK X'10'  DECK                              *
*         BYTE 1  BIT 4 MASK X'08'  DUMP                              *
*      !  BYTE 1  BIT 5 MASK X'04'  DYNAM IF ON, NODYNAM IF OFF       *
*      !  BYTE 1  BIT 6 MASK X'02'  FASTSRT IF ON                     *
*      !  BYTE 1  BIT 7 MASK X'01'  FDUMP IF ON                       *
*         BYTE 2  BIT 0 MASK X'80'  LIB                               *
*         BYTE 2  BIT 1 MASK X'40'  LIST                              *
*         BYTE 2  BIT 2 MASK X'20'  MAP                               *
*         BYTE 2  BIT 3 MASK X'10'  NUM                               *
*         BYTE 2  BIT 4 MASK X'08'  OBJ                               *
*         BYTE 2  BIT 5 MASK X'04'  OFFSET                            *
*      !  BYTE 2  BIT 6 MASK X'02'  OPTIMIZE IF ON                    *
*         BYTE 2  BIT 7 MASK X'01'  OUTDD DDNAME ?                    *
*         BYTE 3  BIT 0 MASK X'80'  NUMPROC(PFD)                      *
*      !  BYTE 3  BIT 1 MASK X'40'  RENT IF ON, NORENT IF OFF         *
*      !  BYTE 3  BIT 2 MASK X'20'  RES IF ON, NORES IF OFF           *
*         BYTE 3  BIT 3 MASK X'10'  SEQUENCE                          *
*         BYTE 3  BIT 4 MASK X'08'  SIZE(MAX)                         *
*         BYTE 3  BIT 5 MASK X'04'  SOURCE                            *
*      !  BYTE 3  BIT 6 MASK X'02'  SSRANGE CHECKING IF ON            *
*         BYTE 3  BIT 7 MASK X'01'  TERM                              *
*      !  BYTE 4  BIT 0 MASK X'80'  TEST IF ON, NOTEST IF OFF         *
*         BYTE 4  BIT 1 MASK X'40'  TRUNC(STD)                        *
*         BYTE 4  BIT 2 MASK X'20'  USER-SUPPLIED RESERVED WORD LIST  *
*         BYTE 4  BIT 3 MASK X'10'  VBREF                             *
*         BYTE 4  BIT 4 MASK X'08'  XREF                              *
*         BYTE 4  BIT 5 MASK X'04'  ZWB                               *
*         BYTE 4  BIT 6 MASK X'02'  NAME                              *
*      !  BYTE 4  BIT 7 MASK X'01'  CMPR2 IF ON                       *
*         BYTE 5  BIT 0 MASK X'80'  NUMPROC(MIG)                      *
*         BYTE 5  BIT 1 MASK X'40'  NUMCLS(ALT)                       *
*         BYTE 5  BIT 2 MASK X'20'  DBCS                              *
*      !  BYTE 5  BIT 3 MASK X'10'  AWO IF ON, NOAWO IF OFF           *
*         BYTE 5  BIT 4 MASK X'08'  TRUNC(BIN)                        *
***********************************************************************
COBIIOPT LA    R6,X'2C'(,R4)           POINT TO PGM. SIGN. INFO. BYTES
C2O1     TM    X'00'(R6),X'20'         IS IT DATA(31) ?
         BZ    C2O1A                   NO
         MVC   FLAG1,=CL8'DATA-31'     YES, MARK IT
         AP    CTD31,=P'1'             ADD TO COUNTER
         B     C2O2                    CHECK NEXT OPT
C2O1A    TM    X'08'(R6),X'10'         IS A CALL VERB PRESENT ?
         BO    C2O1B                   YES, MAYBE A GOOD REASON !?!?
         MVC   FLAG1,=CL8'24-NCAL'     NO, MARK IT DATA-24 WITH NOCALL
         AP    CTD24NC,=P'1'           ADD TO COUNTER
         MVC   FLAGS,NONSTD            SHOW OUTSIDE OF PROD STANDARDS
         B     C2O2                    CHECK NEXT OPT
C2O1B    MVC   FLAG1,=CL8'24-CALL'     MARK IT DATA-24 WITH CALL
         AP    CTD24WC,=P'1'           ADD TO COUNTER
C2O2     TM    X'02'(R6),X'40'         IS IT RENT ?
         BZ    C2O2A                   NO
         MVC   FLAG2,=CL5' '           YES, MARK IT
         AP    CTREN,=P'1'             ADD TO COUNTER
         B     C2O3                    CHECK NEXT OPT
C2O2A    MVC   FLAG2,=CL5'NO'          MARK IT
         AP    CTNREN,=P'1'            ADD TO COUNTER
C2O3     TM    X'00'(R6),X'01'         IS IT FDUMP ?
         BZ    C2O3A                   NO
         MVC   FLAG3,=CL6'YES'         YES, MARK IT
         AP    CTFDMP,=P'1'            ADD TO COUNTER
         MVC   FLAGS,NONSTD            SHOW OUTSIDE OF PROD STANDARDS
         B     C2O4                    CHECK NEXT OPT
C2O3A    MVC   FLAG3,=CL6' '           MARK IT
C2O4     TM    X'03'(R6),X'80'         IS IT TEST ?
         BZ    C2O4A                   NO
         MVC   FLAG4,=CL5'YES'         YES, MARK IT
         AP    CTEST,=P'1'             ADD TO COUNTER
         MVC   FLAGS,NONSTD            SHOW OUTSIDE OF PROD STANDARDS
         B     C2O5                    CHECK NEXT OPT
C2O4A    MVC   FLAG4,=CL5' '           MARK IT
C2O5     TM    X'02'(R6),X'20'         IS IT RES ?
         BZ    C2O5A                   NO
         MVC   FLAG5,=CL8' '           YES, MARK IT
         AP    CTRES,=P'1'             ADD TO COUNTER
         B     C2O6                    CHECK NEXT OPT
C2O5A    MVC   FLAG5,=CL8'NOT-RES'     MARK IT
         MVC   FLAGS,NONSTD            SHOW OUTSIDE OF PROD STANDARDS
         AP    CTNRES,=P'1'            COUNT NUMBER NOT USING RES
C2O6     TM    X'00'(R6),X'02'         IS IT FASTSRT ?
         BZ    C2O6A                   NO
         MVC   FLAG6,=CL7' '           YES, MARK IT
         B     C2O7                    CHECK NEXT OPT
C2O6A    MVC   FLAG6,=CL7'NO'          MARK IT
         TM    X'0C'(R6),X'80'         IS A SORT VERB PRESENT ?
         BZ    C2O7                    NO, NOT BAD
         MVC   FLAGS,NONSTD            SHOW OUTSIDE OF PROD STANDARDS
         AP    CTNFSRT,=P'1'           ADD TO COUNTER
C2O7     TM    X'00'(R6),X'04'         IS IT DYNAM ?
         BZ    C2O7A                   NO
         MVC   FLAG7,=CL7' '           YES, MARK IT
         AP    CTDYN,=P'1'             ADD TO COUNTER
         B     C2O8                    CHECK NEXT OPT
C2O7A    MVC   FLAG7,=CL7'NO'          MARK IT
         AP    CTNDYN,=P'1'            ADD TO COUNTER
C2O8     TM    X'01'(R6),X'02'         IS IT OPT ?
         BZ    C2O8A                   NO
         MVC   FLAG8,=CL8'COBOL'       YES, MARK IT
         AP    CTOPT,=P'1'             ADD TO COUNTER
         B     C2O9                    CHECK NEXT OPT
C2O8A    MVC   FLAG8,=CL8'NOT-OPT!'    MARK IT
         AP    CTNOPT,=P'1'            ADD TO COUNTER
         MVC   FLAGS,NONSTD            SHOW OUTSIDE OF PROD STANDARDS
C2O9     TM    X'04'(R6),X'10'         IS IT AWO ?
         BZ    C2O9A                   NO
         MVC   FLAGB,=CL5' '           YES, MARK IT
         B     C2OA                    CHECK NEXT OPT
C2O9A    MVC   FLAGB,=CL5'NO'          MARK IT
         AP    CTNAWO,=P'1'            ADD TO COUNTER
         MVC   FLAGS,NONSTD            SHOW OUTSIDE OF PROD STANDARDS
C2OA     TM    X'03'(R6),X'01'         IS IT CMPR2 ?
         BZ    C2OAA                   NO
         MVC   FLAGC,=CL5'YES'         YES, MARK IT
         AP    CTCMP,=P'1'             ADD TO COUNTER
         MVC   FLAGS,NONSTD            SHOW OUTSIDE OF PROD STANDARDS
         B     C2OB                    CHECK NEXT OPT
C2OAA    MVC   FLAGC,=CL5' '           MARK IT
C2OB     TM    X'02'(R6),X'02'         IS IT SSRANGE CHECKING ?
         BZ    C2OBA                   NO
         MVC   FLAGD,=CL6'YES'         YES, MARK IT
         AP    CTSSR,=P'1'             ADD TO COUNTER
         MVC   FLAGS,NONSTD            SHOW OUTSIDE OF PROD STANDARDS
         B     C2OC                    CHECK NEXT OPT
C2OBA    MVC   FLAGD,=CL6' '           MARK IT
C2OC     B     DONEFMT
***********************************************************************
*        UNABLE TO FIND THE TASK GLOBAL TABLE  -                      *
***********************************************************************
NOTTGT   MVC   DETMSGF(16),=CL16'NO TGT FOUND'
         AP    CTTGT,=P'1'             COUNT NUMBER WITH NO TGT
         B     NOPRINT
***********************************************************************
*        THIS LOAD MODULE NOT CREATED BY COBOL  -                     *
***********************************************************************
NOTCOB   MVC   DETMSGF(26),=CL26'NOT A KNOWN COBOL LANGUAGE'
         AP    CTNCB,=P'1'             COUNT LOAD MODULES NOT COBOL
         B     DONEFMT
         LTORG
***********************************************************************
*        C O N S T A N T S                                            *
***********************************************************************
WORK     DC    D'0'                    WORK AREA
P9       DC    A(0)                    RETURN ADDRESS FOR PRINTR
SAVE9    DC    F'0'                    REG. 9 SAVE AREA
PARMLIST DC    A(0)                    ADDRESS OF COUNT TABLE
         DC    X'80',AL3(POINTER)
POINTER  DC    F'0'                    CURRENT CSECT ADDRESS
LENGTH   DC    F'0'                    CURRENT CSECT LENGTH
NAME     DC    CL8' '                  CURRENT CSECT NAME
MODEP    DC    F'0'                    RELATIVE EP OF CURRENT MODULE
MASK     DC    F'63'                   MASK FOR 6 BITS 2 - 7
MASK2    DC    F'31'                   MASK FOR 5 BITS 3 - 7
         DC    0H'0'
CNAME    DC    CL8' '                  NAME PASSED IN PARM FIELD
***********************************************************************
*        FLAGS  -                                                     *
***********************************************************************
MSW      DC    X'00'                   FLAGS
ONEMEM   EQU   X'80'                   ONLY ONE MEMBER TO BE PROCESSED
MSW40    EQU   X'40'                   BYPASS SECONDARY HEADINGS
RPTSW    DC    X'00'                   IF NON-ZERO DONT REPORT CSECTS
ALLSW    DC    X'00'                   IF NON-ZERO REPORT ALL CSECTS
***********************************************************************
*                                  ELSE SUPPRESS ILB, IBM, IHO        *
*        FIELDS RELATING TO THE PDS  -                                *
***********************************************************************
TTRZ     DC    F'0'                    TTR OF MEMBER I AM PROCESSING
         READ  DECB,SF,MEMDCB,0,'S',MF=L DECB
BUFFER   DC    0F'0',X'0200'           LENGTH + SP FOR GETMAIN
BUFFLEN  DC    H'0'                    -
CPMEM    DC    F'0'                    # OF MEMBERS PROCESSED FROM PDS
DIRPOINT DC    F'0'                    POINTER TO CURRENT MEMBER
LASTMEM  DC    8X'FF'                  NAME OF LAST MEMBER IN PDS
EXLST    DC    0F'0',X'87',AL3(JFCB)
TGTPTR   DC    F'0'                    POINTER TO CURRENT TGT
INIT1PTR DC    F'0'                    POINTER TO CURRENT INIT1 CODE
***********************************************************************
*        TRANSLATE TABLE TO CONVERT TO PRINTABLE HEX  -               *
***********************************************************************
         ORG   *-240
TABLE1   EQU   *
         ORG
         DC    C'0123456789ABCDEF'
         DC    0D'0'
         LTORG
         DC    0D'0'
CAMLIST  CAMLST SEARCH,JFCB,JFCB+118,AREA
JFCB     DC    0D'0',176X'00'          AREA TO READ THE JFCB INTO
AREA     DC    0D'0',148X'00'          AREA TO CONTAIN THE FORMAT 1 LAB
DIRBLOCK DC    32D'0'                  CURRENT DIRECTORY BLOCK
JNAME    DC    CL8' '                  JOBNAME OF THIS JOB
FIELD1   DC    F'0'                    POINTER TO TIOT
***********************************************************************
*        DETAIL PRINT LINE  _                                         *
***********************************************************************
CNTL     DC    C' '
LINE     DC    132C' '
***********************************************************************
*        HEADING PRINT LINE  -                                        *
***********************************************************************
HCNTL    DC    C'1'
HLINE    DC    132C' '
PAT01    DC    XL7'4021204B202020'
PAT02    DC    XL6'402020202120'
PAT03    DC    XL7'402120204B2020'
PAT04    DC    XL10'40206B2020206B202120'
SKDTL    DC    PL3'0'                  DATE-LINKED FOR CURRENT MEMBER
PAGE     DC    PL3'0'                  CURRENT PAGE #
LINENO   DC    PL2'99'                 CURRENT LINE #
MAXLINE  DC    PL2'54'                 MAX # OF LINES/PAGE
DWA      DC    2D'0'                   WORK SPACE
TIME     DC    F'0'
TIM      DC    X'00000F'
DATE     DC    F'0'
HEAD01   DC    CL61'F H S C - COBOL CSECT ATTRIBUTES REPORT  -  VERSIONX
                - 10/95'
HEAD02   DC    CL132' MOD-NAME    TTRC  L-ATTR LGTH  E.P.  L-DATE  ----X
               ----------------------- ATTRIBUTE FLAGS ----------------X
               --------------------------'
HEAD03   DC    CL132'    CSECT-NAME  LENGTH  DATE COMPILED         SYMDX
               UMP FLOW STATE TEST RES     ENDJOB  OBJ370 OPTIMIZ VER CX
               OUNT TRACE CA-OPT     OPTS'
HEAD04   DC    CL132'                 VS COBOL II OPTIONS (C2) -   DATAX
               ??  RENT FDUMP TEST RES     FASTSRT DYNAM  OPTIMIZ VER AX
               WO   CMPR2 SSRANGE    STD?'
***********************************************************************
*        COUNTERS FOR EOJ STATISTICS  -                               *
***********************************************************************
HDMEM    DC    CL40'TOTAL MEMBERS IN LIBRARY'
HDNLE    DC    CL40'  NUMBER NOT CREATED BY LINK-EDITOR'
HDNXE    DC    CL40'  NUMBER NOT EXECUTABLE'
HDRMD    DC    CL40'  NUMBER RESIDENCY MODE ANY'
HDWNL    DC    CL40'  MEMBERS WOULD NOT LOAD'
***********************************************************************
*        COUNTERS FOR EOJ STATISTICS  -                               *
***********************************************************************
CTMEM    DC    PL4'0'                  TOTAL MEMBERS IN LIBRARY
CTNLE    DC    PL4'0'                  NUMBER NOT CREATED BY LINK-EDITO
CTNXE    DC    PL4'0'                  NUMBER NOT EXECUTABLE
CTRMD    DC    PL4'0'                  NUMBER RMODE ANY
CTWNL    DC    PL4'0'                  NUMBER FOR WHICH WILL NOT LOAD
CTCOB    DC    PL4'0'                  TOTAL MEMBERS CREATED BY COBOL
***********************************************************************
*        POINTERS AND COUNTERS FOR ESD TABLE                          *
***********************************************************************
CURESD   DC    A(CESDT)                POINTS TO CURRENT SLOT
NRESD    DC    F'0'                    CURRENT IN USE COUNT
***********************************************************************
*        D C B S  -                                                   *
*        MEMBER DCB - USED TO READ EACH MEMBER OF THE PDS  -          *
***********************************************************************
MEMDCB   DCB   DDNAME=PDS,DSORG=PO,MACRF=R,RECFM=U,EXLST=EXLST,        X
               EODAD=EODAD
***********************************************************************
*        DIRECTORY DCB - USED TO READ THE DIRECTORY OF THE PDS  -     *
***********************************************************************
DIRDCB   DCB   DDNAME=PDS,DSORG=PS,MACRF=GM,RECFM=F,BLKSIZE=256,       X
               LRECL=256,BUFNO=10
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA
SYSTOT   DCB   DDNAME=SYSTOT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA
***********************************************************************
*        FORMAT OF THE AN CESD SUBRECORD                              *
***********************************************************************
CESD     DSECT
CESDNM   DS    CL8                     - CSECT NAME
CESDTY   DS    XL1                     - TYPE OF SYMBOL
CESDAD   DS    CL3                     - ADDRESS ASSIGNED TO SYMBOL
CESDSN   DS    CL1                     - SEGMENT NUMBER
CESDIDL  DS    CL3                     - ID FOR LR (2 BYTES)
***********************************************************************
*        FORMAT OF THE AN ESD TABLE ENTRY                             *
***********************************************************************
ESD      DSECT
ESDNAME  DS    CL8                     - CSECT NAME
ESDAD    DS    XL3                     - LINKEDITOR ASSIGNED ADDRESS
ESDLENG  DS    CL3                     - CSECT LENGTH
         DS    CL2                     - FILLER
ESDLAST  EQU   *
***********************************************************************
*        FORMAT OF THE DETAIL PRINT LINE                              *
***********************************************************************
DETLINE  DSECT
         DS    CL1                     -
DETMEM   DS    CL8                     - MEMBER NAME
         DS    CL1                     -
DETTTRC  DS    XL8                     - TTRC
         DS    CL1                     -
DETATTR  DS    XL4                     - MODULE ATTRIBUTES
         DS    CL1                     -
DETSIZE  DS    CL6                     - MODULE SIZE
         DS    CL1                     -
DETEP    DS    CL6                     - MODULE ENTRY POINT
         DS    CL1                     -
DETDTL   DS    CL6                     - DATE LINKED
         DS    CL1                     -
DETMSG   EQU   *
LNLGTH   EQU   *-DETLINE
COBREAD  CSECT
***********************************************************************
*        C O N S T A N T S                                            *
***********************************************************************
CFSAVE   DS    16F                     SAVE AREA FOR COBFMT
TGTPTRF  DC    F'0'                    POINTER TO CURRENT TGT
INIT1PTF DC    F'0'                    POINTER TO CURRENT INIT1 CODE
NONSTD   DC    CL3'NO!'                OUT OF STANDARDS MESSAGE
***********************************************************************
*        COUNTERS FOR EOJ STATISTICS                                  *
***********************************************************************
CTTGT    DC    PL4'0'                  NUMBER FOR WHICH TGT NOT LOCATED
         DC    CL44'CSECTS FOR WHICH TGT NOT LOCATED            '
CTNCB    DC    PL4'0'                  TOTAL LOAD MODULES NOT KNOWN COB
         DC    CL44'CSECTS NOT A KNOWN COBOL LANGUAGE           '
CTCOBF   DC    PL4'0'                  TOTAL MEMBERS CREATED BY COBOL
         DC    CL44'CSECTS COMPILED BY ANY COBOL COMPILER       '
CTVSII   DC    PL4'0'                  NUMBER USING VS COBOL II COMPILE
         DC    CL44'CSECTS COMPILED WITH VS COBOL II (C2)       '
CTOSVS   DC    PL4'0'                  NUMBER USING OS/VS COBOL COMPILE
         DC    CL44'CSECTS COMPILED WITH OS/VS COBOL            '
CTV4C    DC    PL4'0'                  NUMBER USING COBOL V4 COMPILER
         DC    CL44'CSECTS COMPILED WITH ANSI COBOL V4          '
CTSYM    DC    PL4'0'                  TOTAL USING SYMDUMP OPTION
         DC    CL44'CSECTS USING SYMDUMP OPTION        - NON-STD'
CTFLO    DC    PL4'0'                  TOTAL USING FLOW OPTION
         DC    CL44'CSECTS USING FLOW OPTION           - NON-STD'
CTSTA    DC    PL4'0'                  TOTAL USING STATE OPTION
         DC    CL44'CSECTS USING STATE OPTION          - NON-STD'
CTEST    DC    PL4'0'                  TOTAL USING TEST OPTION
         DC    CL44'CSECTS USING TEST OPTION           - NON-STD'
CTRES    DC    PL4'0'                  TOTAL USING RES OPTION
         DC    CL44'CSECTS USING RES OPTION                     '
CTNRES   DC    PL4'0'                  TOTAL USING NO RES OPTION
         DC    CL44'CSECTS USING NORES OPTION          - NON-STD'
CTEND    DC    PL4'0'                  TOTAL USING ENDJOB OPTION
         DC    CL44'CSECTS USING ENDJOB OPTION                  '
CTOBJ    DC    PL4'0'                  TOTAL USING OBJ-370 OPTION
         DC    CL44'CSECTS USING OBJ-370 OPTION                 '
CTOPT    DC    PL4'0'                  TOTAL OPTIMIZED USING COBOL OPTI
         DC    CL44'CSECTS OPTIMIZED USING COBOL OPTION         '
CTCAP    DC    PL4'0'                  TOTAL OPTIMIZED USING CA-OPT
         DC    CL44'CSECTS OPTIMIZED USING CA-OPT               '
CTNOPT   DC    PL4'0'                  TOTAL NOT OPTIMIZED AT ALL
         DC    CL44'CSECTS NOT OPTIMIZED AT ALL        - NON-STD'
CTDTE    DC    PL4'0'                  TOTAL CA-OPT WITH DTECT OR PFLOW
         DC    CL44'CSECTS USING CA-OPT DTECT / PFLOW  - NON-STD'
CTDTEXCN DC    PL4'0'                  TOTAL CA-OPT WITH DTECT AND XCOU
         DC    CL44'CSECTS USING CA-OPT DTECT && XCOUNT - NON-STD'
CTXCN    DC    PL4'0'                  TOTAL CA-OPT WITH XCOUNT
         DC    CL44'CSECTS USING CA-OPT XCOUNT         - NON-STD'
CTCNT    DC    PL4'0'                  NUMBER USING COUNT OPTION (OS/VS
         DC    CL44'CSECTS USING COUNT OPTION - OS/VS  - NON-STD'
CTTRC    DC    PL4'0'                  NUMBER USING TRACE VERB (OS/VS)
         DC    CL44'CSECTS USING TRACE VERB   - OS/VS  - NON-STD'
CTD31    DC    PL4'0'                  NUMBER USING DATA(31) VS COBOL I
         DC    CL44'CSECTS USING DATA(31)     - COB II          '
CTD24WC  DC    PL4'0'                  NUMBER USING DATA(24) & CALL VS
         DC    CL44'CSECTS USING D(24) && CALL - COB II - ???-STD'
CTD24NC  DC    PL4'0'                  NUMBER USING DATA(24) & NOCALL V
         DC    CL44'CSECTS USING D(24) NOCALL - COB II - NON-STD'
CTREN    DC    PL4'0'                  NUMBER USING RENT VS COBOL II
         DC    CL44'CSECTS USING RENT         - COB II          '
CTNREN   DC    PL4'0'                  NUMBER USING NORENT VS COBOL II
         DC    CL44'CSECTS USING NORENT       - COB II - NON-STD'
CTFDMP   DC    PL4'0'                  NUMBER USING FDUMP VS COBOL II
         DC    CL44'CSECTS USING FDUMP        - COB II - NON-STD'
CTNFSRT  DC    PL4'0'                  NUMBER USING NOFASTSRT VS COBOL
         DC    CL44'CSECTS USING NOFASTSRT    - COB II - NON-STD'
CTDYN    DC    PL4'0'                  NUMBER USING DYNAM VS COBOL II
         DC    CL44'CSECTS USING DYNAM        - COB II          '
CTNDYN   DC    PL4'0'                  NUMBER USING NODYNAM VS COBOL II
         DC    CL44'CSECTS USING NODYNAM      - COB II          '
CTNAWO   DC    PL4'0'                  NUMBER USING NOAWO VS COBOL II
         DC    CL44'CSECTS USING NOAWO        - COB II - NON-STD'
CTCMP    DC    PL4'0'                  NUMBER USING CMPR2 VS COBOL II
         DC    CL44'CSECTS USING CMPR2        - COB II - NON-STD'
CTSSR    DC    PL4'0'                  NUMBER USING SSRANGE VS COBOL II
         DC    CL44'CSECTS USING SSRANGE      - COB II - NON-STD'
CTNONSTD DC    PL4'0'                  NUMBER WITH NON-STANDARD OPTIONS
         DC    CL44'CSECTS WITH NON-STANDARD OPTIONS   - NON-STD'
         DC    X'FF'                   SHOW END OF COUNT TABLE
         ORG   *-240
TABLE2   EQU   *
         ORG
         DC    C'0123456789ABCDEF'
         LTORG
***********************************************************************
*        FORMAT OF THE DETAIL PRINT LINE                              *
***********************************************************************
POINTR   DC    A(PRTMSG)
PRTMSG   DC    CL133' '
         ORG   PRTMSG
         DS    CL1                     -
CID      DS    CL7                     -
CNAMEF   DS    CL8                     - CSECT NAME
         DS    CL1                     -
CLENGTH  DS    CL7                     - LENGTH OF CSECT
         DS    CL1                     -
DATECOMP DS    CL20                    -
         DS    CL2                     -
DETMSGF  EQU   *
***********************************************************************
*                                  OS/VS OPTS.    VS COBOL II OPTS    *
***********************************************************************
FLAG1    DS    CL8                     - SYMDUMP DATA - 31 OR 24
FLAG2    DS    CL5                     - FLOW RENT
FLAG3    DS    CL6                     - STATE FDUMP
FLAG4    DS    CL5                     - TEST TEST
FLAG5    DS    CL8                     - RES RES
FLAG6    DS    CL7                     - ENDJOB FASTSRT
         DS    C
FLAG7    DS    CL7                     - OBJ370 DYNAM
FLAG8    DS    CL8                     - OPTIMIZE OPTIMIZE
         DS    C
FLAGA    DS    CL2                     - VS OR V4 C2
         DS    C
FLAGB    DS    CL5                     - COUNT FOR VS AWO
         DS    C
FLAGC    DS    CL5                     - TRACE FOR VS CMPR2
         DS    C
FLAGD    DS    CL6                     - CA-OPT OPTS. SSRANGE
         DS    C
         DS    CL4                     BLANK SPACE !!!
FLAGS    DS    CL3                     NON-STD FLAG
CHECKL   EQU   *-PRTMSG                MAXIMUM VALUE IS 133
         ORG
***********************************************************************
*        CESD STORAGE TABLE                                           *
*         THIS TABLE STORES THE CESD INFORMATION FOR A SINGLE         *
*         LOAD MODULE                                                 *
*         TABLE ENTRIES ARE DESCRIBED BY THE DSECT CALLED ESD         *
***********************************************************************
         DC    D'0'
MAXCESD  EQU   0512                    MAXIMUM ENTRIES IN ESD TABLE
CESDT    DC    512XL16'00'             CESD ENTRIES
***********************************************************************
*        REGISTER EQUATES                                             *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
