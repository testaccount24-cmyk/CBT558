PRNTMULT SVLNK R3
         PRINT NOGEN
***********************************************************************
*READS ALL FILES ON AN INPUT TAPE AND PRINTS INFORMATION TO AID       *
*IN CONTENT IDENTIFICATION. THE INPUT1 DD MUST CONTAIN A LABEL=(1,NL) *
*PARAMETER. THE JFCB IS READ AND USED FOR OPENING THE TAPE FILES      *
*WITH THE FILE SEQUENCE NUMBER INCREMENTED BY ONE FOR EACH FILE.      *
*THE LEAVE PARAMETER IS USED ON THE CLOSE STATEMENT TO PREVENT        *
*THE TAPES REWINDING AFTER EACH FILE IS CLOSED.                       *
*     THE FIRST 1,000 BYTES OF EACH FILE ARE PRINTED, AND A           *
*SET OF STATISTICS FOR THE FILE IS PRINTED AT END OF FILE, WHICH      *
*INCLUDES THE NUMBER OF BLOCKS IN THE FILE AND THE SIZE OF THE        *
*FIRST BLOCK. RECFM IS PRINTED AS F IF ALL BLOCKS EXCEPT THE          *
*LAST ARE THE SAME SIZE, OTHERWISE U OR V. FOR RECFM U, THE MAXIMUM   *
*BLOCKSIZE IS PRINTED RATHER THAN THE FIRST BLOCK SIZE.               *
*                                                                     *
*AUTHOR R THORNTON - SEP 80                                           *
***********************************************************************
         L     R1,0(R1)                GET PARM FIELD ADDR
         LH    R2,0(R1)                GET PARM LENGTH
         LTR   R2,R2                   ANY PARM DATA
         BZ    OPNPRT                  NO, DEFAULT TO ALL FILES
         CH    R2,=H'4'                PARM FIELD OVER 4 CHARACTERS
         BH    BADPARM                 YES, ERROR
         BE    PARM4                   NO, EXACTLY 4 CHARACTERS
         CH    R2,=H'2'                PARM IS 2 CHARACTERS
         BH    PARM3                   NO, GREATER, MUST BE 3
         BL    PARM1                   NO, SMALLER, MUST BE 1
         MVC   FILES+2(2),2(R1)        MOVE THE 2-BYTE PARM FIELD
         B     CKNUMER                 GO CHECK IT
PARM4    MVC   FILES,2(R1)             MOVE THE 4-BYTE PARM FIELD
         B     CKNUMER                 GO CHECT IT
PARM3    MVC   FILES+1(3),2(R1)        MOVE THE 3-BYTE PARM FIELD
         B     CKNUMER                 GO CHECK IT
PARM1    MVC   FILES+3(1),2(R1)        MOVE THE 1-BYTE PARM FIELD
CKNUMER  MVZ   NUMCK,FILES             MOVE ZONES TO CHECK
         CLC   NUMCK,ZEROS             PARM FIELD IS NUMERIC
         BNE   BADPARM                 NO, ERROR
         PACK  DBLWD,FILES             PACK THE PARM FIELD
         CVB   R1,DBLWD                AND CONVERT TO BINARY
         ST    R1,NBRFILS              SAVE NBR FILES TO COPY
         B     OPNPRT                  GO OPEN PRINT FILE
BADPARM  WTO   '***INVALID PARM FIELD, COPYING ALL FILES',ROUTCDE=11
OPNPRT   OPEN  (SYSPRINT,OUTPUT)       OPEN PRINT FILE
OPEN     RDJFCB INPUT1                 READ JFCB FOR INPUT TAPE
FSTBRCH  B     OPEN1                   NO JFCB MOD FIRST TIME
         LH    R1,JFCB+68              GET INPUT FILE SEQ FROM JFCB
         LA    R1,1(R1)                ADD 1 TO FILE SEQ
         STH   R1,JFCB+68              UPDATE INPUT JFCB
OPEN1    MVI   FSTBRCH+1,0             NOP 1ST TIME BRANCH
         OPEN  INPUT1,TYPE=J           OPEN INPUT USING MODIFIED JFCB
         ZAP   PRTCNT,=P'0'            CLEAR PRINT BLOCK COUNT
         XC    NUMBYTS,NUMBYTS         CLEAR NUMBER BYTES PRINTED
         MVI   TYPE,C'F'               ASSUME RECFM=F FOR NOW
         MVI   POSV,C'V'               SHOW POSSIBLE RECFM=V
         XC    FSTREC(6),FSTREC        ZERO BLOCKSIZE FIELDS
         ZAP   FILERECS,=P'0'          CLEAR FILE BLOCK COUNT
         L     R1,INPUT1+44            GET DEB ADDR FROM DCB
         L     R1,32(R1)               GET VOLSER FROM DEB
         MVC   PRTVOL,28(R1)           MOVE VOLSER TO PRINT
GET      GET   INPUT1                  READ NEXT INPUT BLOCK
         AP    FILERECS,=P'1'          ADD 1 TO RECORD COUNTER
         SR    R12,R12                 CLEAR FOR INSERT
         ICM   R12,3,INPUT1+82         BLOCK LENGTH FROM TAPE DCB
         LR    R5,R1                   COPY RECORD ADDR
         LR    R11,R1                  COPY RECOD ADDR FOR PRINT
         CLC   NUMBYTS,=F'1000'        1000 BYTES PRINTED?
         BH    CKPRV                   YES
         LR    R15,R12                 COPY BLOCK LENGTH
         A     R15,NUMBYTS             ADD TO BYTES PRINTED
         ST    R15,NUMBYTS             UPDATE BYTES PRINTED
         AP    PRTCNT,=P'1'            NO, INCREMENT COUNTER
         MVI   PCC,C' '                BEGIN CLEAR
         MVC   PRT,PCC                 FINISH CLEARING PRINT
         MVI   PCC,C'-'                YES, SET TRIPLE SPACING
         LH    R1,JFCB+68              GET FILE SEQ FROM JFCB
         CVD   R1,DBLWD                CONVERT TO PACKED
         MVC   PRT+4(4),=X'40202020'   EDIT WORD
         ED    PRT+4(4),DBLWD+6        EDIT FILE SEQ TO PRINT
         MVC   PRT(5),=C'FILE='        LITERAL
         MVC   PRT+15(4),=X'40202020'  EDIT WORD
         ED    PRT+15(4),PRTCNT        BLOCK COUNT TO PRINT
         MVC   PRT+8(8),=C', BLOCK='   LITERAL
         PUT   SYSPRINT,PRTLINE        PRINT BLOCK HEADER
         MVC   PCC,C' '                BEGIN CLEAR
         MVC   PRT,PCC                 FINISH CLEAR
CKPRTND  CH    R12,=H'132'             OVER 132 BYTES TO PRINT?
         BNH   LASTMOVE                NO
         MVC   PRT,0(R11)              132 BYTES OF BLOCK TO PRINT
         SH    R12,=H'132'             DEDUCT FROM REMAINING LENGTH
         LA    R11,132(R11)            STEP TO NEXT LOCATION IN BLOCK
         PUT   SYSPRINT,PRTLINE        PRINT THE LINE
         MVC   PCC,C' '                BEGIN CLEAR
         MVC   PRT,PCC                 FINISH CLEAR
         B     CKPRTND                 BACK TO FINISH PRINTING BLOCK
LASTMOVE BCTR  R12,0                   FINAL LENGTH CODE FOR MOVE
         STC   R12,LSTPTMV+1           SET MOVE LENGTH
LSTPTMV  MVC   PRT(1),0(R11)           MOVE END OF BLOCK TO PRINT
         PUT   SYSPRINT,PRTLINE        PRINT TAIL END OF BLOCK
         MVC   PCC,C' '                BEGIN CLEAR
         MVC   PRT,PCC                 FINISH CLEAR
CKPRV    CLI   POSV,C'V'               POSSIBLE RECFM=V
         BNE   CKFST                   NO, CONTINUE
         CLC   0(2,R5),INPUT1+82      1ST 2 BYTES OF RECD = BLOCKSIZE
         BE    SETVMAX                 YES
         MVI   POSV,C' '               NO, RESET POSSIBLE RECFM=V
         B     CKFST                   CONTINUE
SETVMAX  CLC   VMAX,INPUT1+82          THIS RECORD LONGER
         BNL   CKFST                   NO
         MVC   VMAX,INPUT1+82          YES, SET NEW MAX
CKFST    CLC   FSTREC,=H'0'            THIS FIRST RECORD
         BNE   CPRSAM                  NO
         MVC   FSTREC,INPUT1+82        SAVE 1ST BLOCK LENTGTH
         B     GET                     GO READ NEXT BLOCK
CPRSAM   CLC   FSTREC,INPUT1+82        THIS BLOCK SAME SIZE AS 1ST
         BE    GET                     YES, GO READ AGAIN
         CLC   SECREC,=H'0'            THIS 1ST DIFFERENT SIZE FOUND
         BNE   SETMAX                  NO, ASSUME RECFM=U
         MVC   SECREC,INPUT1+82        MAYBE LAST BLOCK OF F
         B     GET                     GO READ AGAIN
SETMAX   MVI   TYPE,C'U'               SET RECFM=U
         CLC   FSTREC,SECREC           1ST BLOCK SIZE > OTHER
         BH    CKMAX                   YES
         MVC   FSTREC,SECREC           KEEP FSTREC=MAX BLOCK SIZE
CKMAX    CLC   FSTREC,INPUT1+82        THIS BLOCK LONGER
         BNL   GET                     NO, GO READ AGAIN
         MVC   FSTREC,INPUT1+82        YES, STORE MAX BLOCK SIZE
         B     GET                     AND GO READ AGAIN
*
*
*
*THIS ROUTINE PRINTS STATISTICS FOR THE FILE JUST COPIED
*
ENDFILE  EQU   *
         CLI   POSV,C'V'               RECFM IS V
         BNE   FORMAT                  NO
         MVI   TYPE,C'V'               YES, SHOW RECFM=V
         MVC   FSTREC,VMAX             SET MAX BLOCKSIZE
FORMAT   MVC   PRTFILSQ,=X'40202020'   EDIT WORD
         LH    R1,JFCB+68              GET FILE SEQ FROM JFCB
         CVD   R1,DBLWD                CONVERT TO PACKED
         ED    PRTFILSQ,DBLWD+6        EDIT FILE SEQ TO PRINT
         MVC   PRTYPE,TYPE             RECFM TO PRINT
         LH    R1,FSTREC               GET 1ST OR MAX BLOCK SIZE
         CVD   R1,DBLWD                CONVERT TO PACKED
         MVC   PRTFST,=X'4020206B202020' EDIT WORD
         ED    PRTFST,DBLWD+5          EDIT BLOCK SIZE
         MVC   PRTNBR,=X'402020206B2020206B202021' EDIT WORD
         ED    PRTNBR,FILERECS         EDIT NBR BLOCKS READ
         MVI   PC2,C'0'                SET DOUBLE SPACING
         PUT   SYSPRINT,PRTREC         PRINT THE LINE
         L     R1,NBRFILS              GET NBR FILES TO COPY
         BCTR  R1,R0                   DEDUCT 1
         ST    R1,NBRFILS              SAVE NBR REMAINING
         LTR   R1,R1                   ANY FILES LEFT TO COPY
         BZ    EOJ                     NO, END OF JOB
         CLOSE (INPUT1,LEAVE)          CLOSE INPUT, BUT DON'T REWIND
         MVI   PCC,C'0'                SET TRIPLE SPACING
         MVI   PRT,C'*'                BEGIN CLEARTO STARS
         MVC   PRT+1(131),PRT          FINISH CLEAR
         PUT   SYSPRINT,PRTLINE        PRINT STARS
         PUT   SYSPRINT,PRTLINE        PRINT STARS
         B     OPEN                    GO OPEN FOR NEXT FILE COPY
EOJ      EQU   *                       *** END OF JOB ***
         CLOSE (INPUT1,,SYSPRINT)      CLOSE FILES
         L     R13,4(R13)              GET CALLER'S SAVE POINTER
         LM    R14,R12,12(R13)         RESTORE HIS REGS
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN TO CALLER
*
*
*
DBLWD    DS    D
NBRFILS  DC    F'32000'                DEFAULT NBR FILES TO COPY
FILES    DC    CL4'0000'               NBR FILES FROM PARM FIELD
NUMCK    DC    CL4'0000'               NUMERIC CHECK AREA
ZEROS    DC    CL4'0000'               ZEROS FOR NUMERIC CHECK
TYPE     DS    CL1
POSV     DS    CL1                     POSSIBLE V-FORMAT
FSTREC   DS    H
SECREC   DS    H
VMAX     DS    H
PRTCNT   DC    PL2'0'
NUMBYTS  DC    F'0'
FILERECS DC    PL5'0'
PRTLINE  DS    0CL133
PCC      DS    CL1
PRT      DS    CL132
PRTREC   DS    0CL60
PC2      DC    C' '
         DC    CL6'INVOL='
PRTVOL   DS    CL6
         DC    CL7', FILE='
PRTFILSQ DS    CL4
         DC    CL12', NBR RECDS='
PRTNBR   DS    CL12
         DC    CL8'RECFM='
PRTYPE   DS    CL1
         DC    CL10', BLKSIZE='
PRTFST   DS    CL7
         DC    CL75' '
EXLST    DS    0F                      DCB EXIT LIST FOR INPUT
         DC    X'87'                   RDJFCB EXIT, LAST ENTRY
         DC    AL3(JFCB)               WHERE TO READ THE JFCB
JFCB     DS    CL176                   AREA TO HOPLD JFCB
SYSPRINT DCB   DSORG=PS,MACRF=PM,RECFM=FB,LRECL=133,DDNAME=SYSPRINT
INPUT1   DCB   DSORG=PS,MACRF=GL,DDNAME=INPUT1,EODAD=ENDFILE,RECFM=U,  X
               BLKSIZE=32760,EXLST=EXLST
         END
