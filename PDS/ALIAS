         TITLE '***** ALIAS: FILE ALIAS UTILITY *****'
         PRINT NOGEN
ALIAS    CSECT
ALIAS    AMODE 31
ALIAS    RMODE 24
**********************************************************************
*  THE USER IS ASKED FOR AN "OLD" AND A "NEW" FILENAME.              *
*  1) IF THE "OLD" FILENAME IS NOT ENTERED AS A SINGLE ZERO, THE     *
*     REQUEST IS TO CREATE AN ALIAS FILE, AND THE FOLLOWING IS DONE: *
*     A) THE "OLD" FILE IS LOCATED VIA THE CATALOG (THE "OLD" FILE   *
*        MUST BE A CATALOGED DATASET.)                               *
*     B) THE FORMAT 1 DSCB FOR THE "OLD" FILE IS READ FROM ITS VOLUME*
*     C) THE "NEW" FILE IS DYNAMICALLY ALLOCATED ON THE SAME VOLUME  *
*        AS THE "OLD" FILE, WITH ZERO SPACE. THE "NEW" FILE MUST NOT *
*        BE CATALOGED, AND MUST NOT EXIST ON THE VOLUME CONTAINING   *
*        THE "OLD" FILE.                                             *
*     D) THE FORMAT 1 DSCB FOR THE "NEW" FILE IS READ AND MODIFIED   *
*        TO CONTAIN THE SAME EXTENTS AS THE "OLD" FILE, AND IS THEN  *
*        REWRITTEN TO THE VTOC.                                      *
*                                                                    *
*  2) IF THE "OLD" FILENAME IS GIVEN AS A SINGLE DIGIT ZERO, THE     *
*     REQUEST IS TO DELETE AN ALIAS FILE.                            *
*     A) THE "NEW" FILE IS LOCATED VIA THE CATALOG. (IT MUST BE AN   *
*        EXISTING, CATALOGED DATASET).                               *
*     B) THE FORMAT 1 DSCB FOR THE "NEW" FILE IS READ.               *
*     C) THE EXTENTS ARE SET TO ZERO, AND THE EXPIRATION DATE TO     *
*        ZERO, THEN THE DSCB IS REWRITTEN TO THE VTOC.               *
*     D) THE "NEW" FILE IS DELETED DYNAMICALLY.                      *
*                                                                    *
*  AUTHOR R. THORNTON NOV 1986                                       *
**********************************************************************
**********************************************************************
* MAINTENANCE CHANGES
**********************************************************************
* APR 2002 RNT CHANGED UCB LOOKUP METHOD TO USE THE UCBSCAN MACRO SO *
*              UCB'S ABOVE THE LINE AND DYNAMIC UCB'S CAN BE FOUND.  *
*              ALSO REMOVED THE SVLNK MACRO AND HARD-CODED THE ENTRY *
*              POINT SETUP AND SPECIFIED AMODE=31,RMODE=24.          *
**********************************************************************
         STM   R14,R12,12(R13)         SAVE CALLER'S REGISTERS
         LR    R3,R15                  COPY PROGRAM BASE REGISTER
         USING ALIAS,R3,R4
         LA    R4,4095(R3)             SET UP
         LA    R4,1(R4)                  SECOND BASE REGISTER
         LA    R15,MYSAVE              POINT TO MY SAVE AREA
         ST    R15,8(R13)              SET UP LSA POINTER
         ST    R13,4(R15)              SET UP HSA POINTER
         LR    R13,R15                 POINT R13 TO MY SAVE AREA
         B     OPENS                   BRANCH AROUND CONSTANTS
         DC    CL8'ALIAS'              PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
***********************************************************************
* OPEN SYSPRINT FOR PRINTING AND SYSIN FOR CONTROL INPUT.             *
* ALLOCATE A DD STATEMENT FOR USE BY EXCP AND OPEN THE DCB USED FOR   *
* EXCP. IF EITHER THE ALLOCATE OR OPEN FAILS, A U0333 ABEND WILL BE   *
* PRODUCED WITH AN EXPLANATORY MESSAGE.                               *
***********************************************************************
OPENS    OPEN  (SYSPRINT,OUTPUT,SYSIN) OPEN PRINT AND CONTROL FILES
         CALL  DYNALLOC,(DAPARM1,DAPARM2) ALLOCATE A TEMPORARY DATASET
         CLC   RETRNCD,=C'00'          ANY ERROR?
         BE    SETDDNM                 NO
         MVC   PRT,UNALOC              MESSAGE TO PRINT
         BAL   R9,PRINT                PRINT MESSAGE
         MVC   DYNRTCD,ERRRET          ERROR RETURN CODE TO MESSAGE
         MVC   DYNINFO,INFORET         INFO RETURN CODE TO MESSAGE
         MVC   PRT,DYNERR              MESSAGE TO PRINT
         BAL   R9,PRINT                PRINT ERROR MESSAGE
         ABEND 333,DUMP                TERMINATE WITH ERROR
SETDDNM  MVC   DADCB+40(8),DDN         MOVE GENERATED DDNAME
         OPEN  (DADCB,OUTPUT)          OPEN FILE FOR EXCP
         TM    DADCB+48,X'10'          WAS OPEN SUCCESSFUL?
         BO    START                   YES
         MVC   PRT,UNOPEN              MESSAGE TO PRINT
         BAL   R9,PRINT                PRINT ERROR MESSAGE
         ABEND 333,DUMP                TERMINATE WITH ERROR
***********************************************************************
*        GET "OLD" AND "NEW" FILENAMES FROM USER                      *
***********************************************************************
START    MVC   PRT,INFOLD              TELL USER HOW TO "KILL"
         BAL   R9,PRINT                FORMER FILES
         MVC   PRT,ASKOLD              ASK FOR "OLD" FILE NAME
         BAL   R9,PRINT                PRINT REQUEST
         GET   SYSIN,OLDNAME           READ "OLD" FILENAME
         MVC   PRT,ASKNEW              ASK FOR "NEW" FILE NAME
         BAL   R9,PRINT                PRINT REQUEST
         GET   SYSIN,NEWNAME           READ "OLD" FILENAME
         CLC   OLDNAME,ZEROSP          RE-ZERO THE NEW FILE?
         BE    REZERO                  YES
***********************************************************************
*        PROCESS THE "ALIAS" REQUEST                                  *
***********************************************************************
         MVC   CATNAME,OLDNAME         SET UP OLD FILENAME
         BAL   R9,READCAT              READ CATALOG FOR "OLD" FILE
         BAL   R9,LOCUCB               LOCATE THE UCB FOR THE VOLUME
         BAL   R9,SETDEB               SET DEB XTNTS FOR FULL VOLUME
         BAL   R9,COMPVTOC             COMPUTE VTOC START ADDRESS
         MVC   KEY,OLDNAME             POINT TO "OLD" FILE
         BAL   R9,READSCB              GO READ THE FORMAT 1 DSCB
         MVC   OLDDSCB,DSCB            SAVE "OLD" FILE DSCB
         XC    DAPARM1(DAPARM2-DAPARM1),DAPARM1 CLEAR DYNAMIC
         XC    DAPARM2,DAPARM2             ALLOCATION PARMETER AREAS
         MVC   DSNAME,NEWNAME          SET DSNAME FOR "NEW" FILE
         MVC   DISPOS,NCC              SET DISP=(NEW,CATLG,CATLG)
         MVC   UNNAME,UNITYPE          SET UNIT=3350 OR 3380
         MVC   VOLUSRL,VOLSERL         SET VOLUME SERIAL NUMBER
         MVI   SPCTYPE,C'T'            SPACE ALLOCATION IN TRACKS
         MVI   SPCSIZE+1,1             REQUEST ONE TRACK
         MVI   DAPARM2,C'A'            ALLOCATE REQUEST
ALOCNEW  CALL  DYNALLOC,(DAPARM1,DAPARM2) ALLOCATE (CREATE) "NEW" FILE
         CLC   RETRNCD,ZEROES          ANY ERROR?
         BE    GETDSCB                 NO
         MVC   PRT,NEWALOCR            MESSAGE TO PRINT
         BAL   R9,PRINT                PRINT MESSAGE
         MVC   DYNRTCD,ERRRET          ERROR RETURN CODE TO MESSAGE
         MVC   DYNINFO,INFORET         INFO RETURN CODE TO MESSAGE
         MVC   PRT,DYNERR              MESSAGE TO PRINT
         BAL   R9,PRINT                PRINT ERROR MESSAGE
GETDSCB  MVC   KEY,NEWNAME             POINT TO "NEW" FILE
         BAL   R9,READSCB              GO READ THE FORMAT 1 DSCB
         MVC   NEWDSCB,DSCB            SAVE THE "NEW" FILE DSCB
         MVC   DSCB,OLDDSCB            COPY "OLD" FILE DSCB
         MVC   SYSCD(3),RNT            IDENTIFY THE DSCB
         MVC   SYSCD+3(10),NEWDSCB+EXT1-FMTID SAVE "NEW" FILE EXTENTS
         XC    EXPDT,EXPDT             CLEAR EXPIRATION DATE
         NI    DSIND,X'EB'             CLEAR PASSWORD PROTECTION BITS
         BAL   R9,REWRITE              GO REWRITE THE FORMAT 1 DSCB
         MVC   PRT,SUCCESS             POINT TO MESSAGE
         BAL   R9,PRINT                TELL USER IT WORKED
         MVC   PRT,KILLNEW             POINT TO MESSAGE
         BAL   R9,PRINT                TELL USER HOW TO KILL "NEW"
         B     EOJ                     GO TERMINATE THE RUN
***********************************************************************
*        PROCESS THE "RE-ZERO" REQUEST                                *
***********************************************************************
REZERO   MVC   CATNAME,NEWNAME         SET UP NEW FILENAME
         BAL   R9,READCAT              READ CATALOG FOR "NEW" FILE
         BAL   R9,LOCUCB               LOCATE THE UCB FOR THE VOLUME
         BAL   R9,SETDEB               SET DEB XTNTS FOR FULL VOLUME
         BAL   R9,COMPVTOC             COMPUTE VTOC START ADDRESS
         MVC   KEY,NEWNAME             POINT TO "NEW" FILE
         BAL   R9,READSCB              GO READ THE FORMAT 1 DSCB
         CLC   SYSCD(3),RNT            THIS ONE IS MINE?
         BNE   BADIDNT                 NO
         MVC   NEWDSCB,DSCB            YES, SAVE THE DSCB
         MVC   EXT1(10),SYSCD+3        RESTORE ORIGINAL EXTENT
         MVI   NOEPV,1                 NBR EXTENTS ON VOLUME = 1
         XC    EXPDT,EXPDT             CLEAR EXPIRATION DATE
         NI    DSIND,X'EB'             CLEAR PASSWORD PROTECTION BITS
         MVI   SCALO,X'80'             SHOW TRACK ALLOCATION
         XC    SCAL,SCAL               NO SECONDARY SPACE
         XC    LSTAR,LSTAR             ZERO LAST BLOCK WRITTEN
         XC    EXT2,EXT2               ZERO 2ND EXTENT FIELD
         XC    EXT3,EXT3               ZERO 3RD EXTENT FIELD
         XC    PTRDS,PTRDS             ZERO FORMAT 3 POINTER
         BAL   R9,REWRITE              GO REWRITE THE FORMAT 1 DSCB
         XC    DAPARM1(DAPARM2-DAPARM1),DAPARM1 CLEAR DYNAMIC
         XC    DAPARM2,DAPARM2             ALLOCATION PARMETER AREAS
         MVC   DSNAME,NEWNAME          SET DSNAME FOR "NEW" FILE
         MVC   DISPOS,ODD              SET DISP=(OLD,DELETE,DELETE)
         MVI   DAPARM2,C'A'            ALLOCATE REQUEST
         CALL  DYNALLOC,(DAPARM1,DAPARM2) ALLOCATE "NEW" FILE
         CLC   RETRNCD,ZEROES          ANY ERROR?
         BE    TELLOK                  NO
         MVC   PRT,NEWALOCD            MESSAGE TO PRINT
         BAL   R9,PRINT                PRINT MESSAGE
         MVC   DYNRTCD,ERRRET          ERROR RETURN CODE TO MESSAGE
         MVC   DYNINFO,INFORET         INFO RETURN CODE TO MESSAGE
         MVC   PRT,DYNERR              MESSAGE TO PRINT
         BAL   R9,PRINT                PRINT ERROR MESSAGE
         B     EOJ                     GO TERMINATE RUN
BADIDNT  MVC   PRT,WRGIDNT             POINT TO MESSAGE
         BAL   R9,PRINT                PRINT ERROR MESSAGE
         B     EOJ                     GO TERMINATE THE RUN
TELLOK   MVC   PRT,SUCCESS             POINT TO MESSAGE
         BAL   R9,PRINT                TELL USER IT WORKED
         MVC   PRT,INFNEW              POINT TO MESSAGE
         BAL   R9,PRINT                TELL USER WHEN IT WILL DELETE
         B     EOJ                     GO TERMINATE THE RUN
***********************************************************************
*        SEARCH THE CATALOG FOR A DATASET, SAVE VOLUME SERIAL         *
***********************************************************************
READCAT  LOCATE BYDSN                  READ CATALOG FOR "OLD" DSNAME
         LTR   R15,R15                 SUCCESSFUL CATALOG READ?
         BZ    GOTCAT1                 YES
         MVC   PRT,NOCTLG              NO, MESSAGE TO PRINT
         BAL   R9,PRINT                TELL USER NOT AVAILABLE
         B     EOJ                     AND EXIT JOB
GOTCAT1  SR    R11,R11                 CLEAR FOR INSERT
         ICM   R11,3,LOCAREA           GET VOLSER COUNT
         CH    R11,H1                  JUST ONE VOLUME?
         BE    SAVEVOL                 YES
         MVC   PRT,MULTIVOL            NO, MULTIVOLUME ERROR
         BAL   R9,PRINT                TELL USER
         B     EOJ                     AND EXIT JOB
SAVEVOL  MVC   VOLSERL,LOCAREA+6       SET UP VOLSER FOR VOLUME
         BR    R9                      RETURN WITH VOLUME SERIAL
***********************************************************************
*        LOCATE THE UCB FOR THE VOLUME SERIAL IN VOLSERL              *
***********************************************************************
LOCUCB   XC    WORK100,WORK100         CLEAR FOR EACH NEW INVOCATION
VLSLOOP  SMODE KEY=0,STATE=S           KEY SUPVR STATE, KEY 0
         UCBSCAN ADDRESS,WORKAREA=WORK100,UCBPTR=UCBADDR,              X
               NOPIN,DYNAMIC=YES,RANGE=ALL,DEVCLASS=DASD
         ST    R15,SAV15               SAVE RETURN CODE
         SMODE KEY=NZERO,STATE=P       BACK TO PROGRAM STATE, KEY
         CLC   SAV15,FZERO             FOUND UCB?
         BE    GETUCBA                 YES
NOVOL    MVC   PRT,BADVOL              ERROR MESSAGE
         BAL   R9,PRINT                TELL USER NO SUCH VOL
         B     EOJ                     AND EXIT JOB
GETUCBA  L     R8,UCBADDR              YES, GET THE UCB ADDRESS
         USING UCBOB,R8
         TM    UCBSTAT,UCBONLI         IS IT ONLINE?
         BZ    VLSLOOP                 NO
         CLC   UCBVOLI,VOLSERL         FOUND UCB FOR THIS VOLSER?
         BNE   VLSLOOP                 NO, CONTINUE SEARCH
         DROP  R8
         BR    R9                      RETURN WITH UCB ADDRESS
***********************************************************************
*        SET EXTENTS FOR THE WHOLE VOLUME                             *
***********************************************************************
SETDEB   L     R8,UCBADDR              POINT TO UCB
         USING UCBOB,R8
         L     R12,DADCB+44            @ DEB FOR INPUT1 FILE
         SMODE KEY=0,STATE=P           GET KEY ZERO
         STCM  R8,7,33(R12)            CHANGE DEB UCB ADDRESS
         MVC   38(10,R12),ALLCYL       SET DEB START/END EXTENTS
         SMODE KEY=NZERO,STATE=P       BACK TO NORMAL STATES
         BR    R9                      RETURN
         DROP  R8
***********************************************************************
*        COMPUTE VTOC START ADDRESS FROM UCB TTR                      *
***********************************************************************
COMPVTOC L     R8,UCBADDR              POINT TO UCB
         USING UCBOB,R8
         SR    R10,R10                 CLEAR FOR DIVIDE
         SR    R11,R11                 CLEAR FOR INSERT
         ICM   R11,3,UCBVTOC           PICK UP VTOC START TRACK
CKUCBTY  CLI   UCBUNTYP,X'0B'          IS IT A 3350?
         BE    GOT3350                 YES
         CLI   UCBUNTYP,X'0E'          IS IT A 3380?
         BE    GOT3380                 YES
         CLI   UCBUNTYP,X'0F'          IS IT A 3390?
         BE    GOT3390                 YES
         MVC   PRT,INVDVC              NO, MOVE MESSAGE
         BAL   R9,PRINT                SEND INVALID DEVICE TYPE MSG
         B     EOJ                     EXIT JOB
GOT3350  D     R10,=F'30'              COMPUTE CYL-HD
         MVC   UNITYPE,U3350           SET UNIT TYPE
         B     SETVTOC                 CONTINUE
GOT3380  D     R10,=F'15'              COMPUTE CYL-HD
         MVC   UNITYPE,U3380           SET UNIT TYPE
         B     SETVTOC                 CONTINUE
GOT3390  D     R10,=F'15'              COMPUTE CYL-HD
         MVC   UNITYPE,U3390           SET UNIT TYPE
SETVTOC  STH   R11,VTOCCYL             SAVE VTOC CYLINDER NBR
         STH   R10,VTOCHD              SAVE VTOC HEAD NUMBER
         MVI   VTOCREC,1               VTOC BEGIN RECORD NBR = 1
         BR    R9                      RETURN
         DROP  R8
***********************************************************************
*        SEARCH THE VTOC FOR THE DSNAME IN THE KEY FIELD AND READ     *
*        THE 96-BYTE DATA RECORD INTO DSCB                            *
***********************************************************************
READSCB  LA    R1,CMDCHNK              @ CCWS TO SEARCH FOR KEY
         B     EXCP                    GO SEARCH AND READ
***********************************************************************
*           REWRITE DATA PORTION OF FORMAT 1 DSCB FOR "NEW" FILE      *
***********************************************************************
REWRITE  MVC   KEY,NEWNAME             SET KEY TO "NEW" FILE NAME
         LA    R1,CMDCHNW              @ WRITE COMMAND CHAIN
         B     EXCP                    GO REWRITE DATA
***********************************************************************
*        READ NEXT BLOCK USING EXCP.                                  *
***********************************************************************
EXCP     ST    R1,DACCWAD              STORE COMMAND ADDRESS
         MVC   DASRCH,VTOCADR          SET SEARCH TO VTOC START
         EXCP  DAIOB                   READ COUNT, KEY, AND DATA
         WAIT  ECB=DAECB               AWAIT COMPLETION
         CLI   DAECB,X'7F'             GOOD READ
         BNE   HARDERR                 NO
         BR    R9                      RETURN
***********************************************************************
*           END OF JOB ROUTINE                                        *
***********************************************************************
EOJ      CLOSE (SYSIN,,SYSPRINT,,DADCB) CLOSE FILES
         L     R13,4(R13)              GET CALLER'S SAVE AREA ADDR
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGS
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN TO CALLER
***********************************************************************
*       PRINT HARD I/O ERROR DATA                                     *
***********************************************************************
HARDERR  ICM   R15,8,DAECBCC           PICK UP ECB COMPLETION CODE
         BAL   R9,HEXPRNT              GO MAKE PRINTABLE
         MVC   IOECC,WORK              MOVE TO PRINT
         ICM   R15,15,DACSW            1ST 4 BYTES OF CSW
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOECSW1,WORK            MOVE TO PRINT
         ICM   R15,15,DACSW+4          2ND 4 BYTES OF CSW
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOECSW2,WORK            MOVE TO PRINT
         SR    R14,R14                 CLEAR FOR INSERT
         ICM   R14,7,DANXCCW+1         POINT TO NEXT CCW
         SH    R14,=H'8'               BACK UP TO FAILING CCW
         C     R14,=A(CMDCHNK)         THIS ONE OF MY CCW'S?
         BL    UNKNCCW                 NO
         C     R14,=A(WRITCCW)         THIS ONE OF MY CCW'S?
         BNH   FORMCCWD                YES
UNKNCCW  MVC   IOECCW1,=CL8'????????'  UNKNOWN CCW
         MVC   IOECCW2,=CL8'????????'  UNKNOWN CCW
         MVC   IOEBYTS,BLANX           IGNORE BYTES READ
         MVC   IOECD1,BLANX            IGNORE DATA READ
         MVC   IOECD2,BLANX            IGNORE DATA READ
         MVC   IOECD3,BLANX            IGNORE DATA READ
         B     HECHNAM                 CONTINUE
FORMCCWD ICM   R15,15,0(R14)           1ST 4 BYTES OF FAILING CCW
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOECCW1,WORK            MOVE TO PRINT
         ICM   R15,15,4(R14)           2ND 4 BYTES OF FAILING CCW
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOECCW2,WORK            MOVE TO PRINT
         LH    R15,6(R14)              PICK UP CCW LENGTH
         SH    R15,DARESID             COMPUTE BYTES READ
         CVD   R15,DBLWD               CONVERT TO PACKED
         UNPK  IOEBYTS,DBLWD           UNPACK TO PRINT
         ICM   R14,7,1(R14)            GET CCW DATA ADDRESS
         ICM   R15,15,0(R14)           POINT TO CCW DATA
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOECD1,WORK             MOVE TO PRINT
         ICM   R15,15,4(R14)           PICK UP NEXT 4 BYTES
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOECD2,WORK             MOVE TO PRINT
         ICM   R15,15,8(R14)           PICK UP NEXT 4 BYTES
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOECD3,WORK             MOVE TO PRINT
         OI    IOEBYTS+4,C'0'          CLEAR SIGN
HECHNAM  MVC   IOECHNM,=CL8'CMDCHNK'   ASSUME CMDCHNK
         CLC   DACCWAD+1(3),=AL3(CMDCHNK) IS IT CMDCHNK?
         BE    ERRSCH                  YES
         MVC   IOECHNM,=CL8'CMDCHNW'   NO, ASSUME CMDCHNW
         CLC   DACCWAD+1(3),=AL3(CMDCHNW) IS IT CMDCHNW?
         BE    ERRSCH                  YES
         MVC   IOECHNM,=CL8'????????'  UNKNOWN CCW CHAIN
ERRSCH   ICM   R15,15,DASRCH           PICK UP SEARCH CCHH
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOESRCH(8),WORK         MOVE TO PRINT
         ICM   R15,8,DASRCH+4          PICK UP SEARCH RECORD NBR
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOESRCH+8(2),WORK       MOVE TO PRINT
         ICM   R15,12,DAUCSNS          PICK UP SENSE BYTES
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOESNS,WORK             MOVE TO PRINT
         MVC   PRT,IOERR1              LINE 1 TO PRINT
         BAL   R9,PRINT                PRINT IT
         MVC   PRT,IOERR2              LINE 2 TO PRINT
         BAL   R9,PRINT                PRINT IT
         MVC   PRT,IOERR3              LINE 3 TO PRINT
         BAL   R9,PRINT                PRINT IT
         MVC   PRT+15(16),=CL16'CONDITIONS ARE: '
         LA    R14,PRT+31              POINT TO CONDITION DESCRIPTION
         CLI   DAECBCC,X'41'           IS IT PERMANENT I/O ERROR?
         BNE   IOE1                    NO
         LA    R15,0                   LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE1     CLI   DAECBCC,X'42'           IS IT EXTENT VIOLATION?
         BNE   IOE2                    NO
         LA    R15,1                   LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE2     CLI   DAECBCC,X'44'           IS IT INTERCEPTED?
         BNE   IOE3                    NO
         LA    R15,2                   LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE3     TM    DAUNST,X'20'            IS IT UNIT CHECK?
         BZ    IOE4                    NO
         LA    R15,3                   LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE4     TM    DAUNST,X'10'            IS IT UNIT EXCEPTION?
         BZ    IOE5                    NO
         LA    R15,4                   LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE5     TM    DACHST,X'40'            IS IT WRONG LENGTH RECORD?
         BZ    IOE6                    NO
         LA    R15,5                   LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE6     TM    DACHST,X'20'            IS IT CHANNEL PROGRAM CHECK?
         BZ    IOE7                    NO
         LA    R15,6                   LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE7     TM    DACHST,X'10'            IS IT PROTECTION CHECK?
         BZ    IOE8                    NO
         LA    R15,7                   LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE8     TM    DACHST,X'08'            IS IT CHANNEL DATA CHECK?
         BZ    IOE9                    NO
         LA    R15,8                   LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE9     TM    DACHST,X'04'            IS IT CHANNEL CONTROL CHECK?
         BZ    IOE10                   NO
         LA    R15,9                   LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE10    TM    DACHST,X'02'            IS IT INTERFACE CONTROL CHECK?
         BZ    IOE11                   NO
         LA    R15,10                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE11    TM    DAUCSNS,X'80'           IS IT COMMAND REJECT?
         BZ    IOE12                   NO
         LA    R15,11                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE12    TM    DAUCSNS,X'10'           IS IT EQUIPMENT CHECK?
         BZ    IOE13                   NO
         LA    R15,12                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE13    TM    DAUCSNS,X'08'           IS IT DATA CHECK?
         BZ    IOE14                   NO
         LA    R15,13                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE14    TM    DAUCSNS,X'04'           IS IT OVERRUN?
         BZ    IOE15                   NO
         LA    R15,14                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE15    TM    DAUCSNS,X'02'           IS IT TRK CONDITION CHECK?
         BZ    IOE16                   NO
         LA    R15,15                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE16    TM    DAUCSNS,X'01'           IS IT SEEK CHECK?
         BZ    IOE17                   NO
         LA    R15,16                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE17    TM    DAUCSNS+1,X'80'         IS IT DATA CHECK IN COUNT?
         BZ    IOE18                   NO
         LA    R15,17                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE18    TM    DAUCSNS+1,X'40'         IS IT WRITE TRACK OVERRUN?
         BZ    IOE19                   NO
         LA    R15,18                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE19    TM    DAUCSNS+1,X'20'         IS IT END OF CYLINDER ON M-T?
         BZ    IOE20                   NO
         LA    R15,19                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE20    TM    DAUCSNS+1,X'10'         IS IT INVALID COMMAND SEQUENCE?
         BZ    IOE21                   NO
         LA    R15,20                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE21    TM    DAUCSNS+1,X'08'         IS IT NO RECORD FOUND?
         BZ    IOE22                   NO
         LA    R15,21                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE22    TM    DAUCSNS+1,X'04'         IS IT FILE PROTECTED?
         BZ    IOE23                   NO
         LA    R15,22                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE23    TM    DAUCSNS+1,X'02'         IS IT MISSING ADDRESS MARKER?
         BZ    IOE24                   NO
         LA    R15,23                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE24    TM    DAUCSNS+1,X'01'         IS IT OVERFLOW INCOMPLETE?
         BZ    IOECKPTD                NO
         LA    R15,24                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOECKPTD CLC   PRT,BLANX               ANYTHING LEFT IN PRT?
         BE    EOJ                     NO
         BAL   R9,PRINT                YES, PRINT IT
         B     EOJ                     EXIT JOB
***********************************************************************
*        PRINT I/O ERROR CONDITION LITERALS                           *
***********************************************************************
CONDPRT  ST    R9,CND9                 SAVE RETURN ADDRESS
         MH    R15,=H'30'              GET OFFSET TO LITERAL
         LA    R15,CONDTBL(R15)        POINT TO LITERAL
         ST    R15,LITADR              SAVE LITERAL ADDRESS
CHKLENG  L     R15,LITADR              POINT TO LITERAL
         LR    R1,R14                  POINT TO CURRENT PRINT ADDR
         AH    R1,0(R15)               ADD THIS LITERAL LENGTH
         C     R1,=A(PRT+78)           PAST END OF PRINT LINE?
         BH    LINEFULL                YES
         LH    R1,0(R15)               NO, GET LITERAL LENGTH
         EX    R1,MOVLTRL              MOVE TO PRINT
         AH    R14,0(R15)              STEP PAST LITERAL
         LA    R14,1(R14)              ADD A SPACE
         B     CNDXIT                  AND EXIT
LINEFULL BAL   R9,PRINT                GO PRINT THE LINE
         LA    R14,PRT+15              POINT TO NEXT PRINT LOC
         B     CHKLENG                 CONTINUE
CNDXIT   L     R9,CND9                 GET RETURN ADDRESS
         BR    R9                      EXIT
MOVLTRL  MVC   0(1,R14),2(R15)         EXECUTED MOVE
***********************************************************************
*        PRINT A LINE                                                 *
***********************************************************************
PRINT    PUT   SYSPRINT,PRT            WRITE PRINT LINE
         MVC   PRT,BLANX               CLEAR PRINT LINE
         BR    R9                      EXIT
***********************************************************************
*        ROUTINE TO CONVERT HEX TO PRINTABLE CHARACTERS (2 CHARACTERS *
*        PER HEX BYTE. ON ENTRY, HEX TO BE CONVERTED IS IN R15. THE   *
*        CHARACTER EQUIVALENT IS PLACED IN THE FIRST 8 BYTES OF WORK. *
***********************************************************************
HEXPRNT  STCM  R15,15,WORK              SAVE HEX VALUE
         UNPK  WORK(9),WORK(5)          CONVERT TO 1 NIBBLE PER BYTE
         MVZ   WORK(8),XZROS            CLEAR ZONES FOR TRANSLATE
         TR    WORK(8),TRTBLA           TRANSLATE TO PRINTABLE
         BR    R9                       EXIT
***********************************************************************
*        DATA AREAS                                                   *
***********************************************************************
SAV15    DC    F'0'                    SAVE AREA FOR R15
FZERO    DC    F'0'                    CONSTANT ZERO
INFOLD   DC    CL6'NOTE: '
         DC    CL29'TO KILL A FORMER "NEW" FILE, '
         DC    CL45'ENTER "0" WHEN PROMPTED FOR "OLD" FILE NAME'
INFNEW   DC    CL6'NOTE: '
         DC    CL76'THE "NEW" FILE WILL BE DELETED WHEN YOU LOGOFF'
ASKOLD   DC    CL80'ENTER "OLD" DATASET NAME WITH ALL QUALIFIERS:'
ASKNEW   DC    CL80'ENTER "NEW" DATASET NAME WITH ALL QUALIFIERS:'
OLDNAME  DC    CL80' '                 OLD FILENAME
NEWNAME  DC    CL80' '                 NEW FILENAME
VOLSERL  DC    CL6' '                  VOLUME SERIAL FOR DISK VOLUME
UNITYPE  DC    CL8' '                  UNIT TYPE (3350 OR 3380)
U3350    DC    CL8'3350'               LITERAL
U3380    DC    CL8'3380'               LITERAL
U3390    DC    CL8'3390'               LITERAL
ZEROSP   DC    CL80'0 '                RE-ZERO NEW FILE REQUEST
OLDDSCB  DS    XL96                    FORMAT 1 DSCB FOR "OLD" FILE
NEWDSCB  DS    XL96                    FORMAT 1 DSCB FOR "NEW" FILE
BYDSN    CAMLST NAME,CATNAME,,LOCAREA READ CATALOG LIST
CATNAME  DC    CL44' '                 DSNAME FOR CAMLST MACRO
LOCAREA  DS    CL265                   CATALOG INFORMATION AREA
PRT      DC    CL80' '                 PRINT AREA
BLANX    DC    CL80' '                 CONSTANT BLANKS
DISK     DC    CL4'DISK'               LITERAL
NCC      DC    CL3'NCC'                LITERAL
RNT      DC    CL3'RNT'                LITERAL
ODD      DC    CL3'ODD'                LITERAL
ZEROES   DC    CL2'00'                 LITERAL
PRMLST   DS    0F                      PARMLIST FOR CVTUCBSC
         DC    A(WORK100)                 WORK AREA ADDRESS
         DC    A(DEVCLASS)                DEVICE CLASS TYPE BYTE
         DC    XL1'80',AL3(UCBADDR)       UCB ADDRESS RETURN FIELD
         DS    0D                      DOUBLEWORD ALIGN WORK100
WORK100  DC    XL100'00'               WORK AREA FOR CVTUCBSC
DEVCLASS DC    AL1(UCB3DACC)           SEARCH DEVICE TYPE
UCBADDR  DC    A(0)                    UCB ADDR FROM IOSVSUCB
CND9     DS    F                       RET ADDR
LITADR   DS    F                       R15 SAVE FOR CONDPRNT ROUTINE
WORK     DS    CL11                    WORK AREA
ALLCYL   DC    H'0',H'0',H'32767',H'32767' DEB XTNTS FOR FULL VOLUME
TRTBLA   DC    C'0123456789ABCDEF'     TRANSLATE TABLE
DBLWD    DS    D                       DOUBLEWORD WORK AREA
H1       DC    H'1'                    CONSTANT 1
XZROS    DC    XL8'00'                 CONSTANT ZEROS
*
DAPARM1  DS    0F                      * 1ST PARAMETER FOR DYNALLOC *
DDN      DC    CL8'INPUT9'             DDNAME
DSNAME   DC    CL44'&&DADCB'           DATASET NAME
         DC    XL8'00'                 MEMBER NAME
DISPOS   DC    XL3'00'                 DISPOSITION:
*                                    K=KEEP; BYTE3: SAME AS BYTE2
UNNAME   DC    CL8'DISK'               UNIT NAME
         DC    XL2'00'                 UNIT COUNT
VOLUSRL  DC    XL6'00'                 VOLUME SERIAL NUMBER
         DC    XL1'00'                 LABEL TYPE:
*                                      N=NL, S=SL, B=BLP
         DC    XL2'00'                 DATASET SEQUENCE NBR (TAPE)
         DC    XL1'00'                 F: FREE=CLOSE
         DC    XL2'00'                 RETENTION PERIOD IN DAYS
         DC    XL3'00'                 RECORDING FORMAT:
*                                      BYTE1: F=FIXED, V=VARIABLE,
*                                      U=UNDEFINED; BYTE2: B=BLOCKED,
*                                      BYTE3: A=ASA CONTROL CHARACTERS
         DC    XL2'00'                 LOGICAL RECORD LENGTH
         DC    XL2'00'                 BLOCK SIZE
         DC    XL1'00'                 TAPE DENSITY: 1=1600,6=6250
         DC    XL2'00'                 BUFNO
         DC    XL2'00'                 KEY LENGTH
         DC    XL1'00'                 DATASET ORGANIZATION:
*                                      V=VSAM, P=PDS, D=DIRECT, S=SEQ
SPCTYPE  DC    CL1'T'                  SPACE TYPE:
*                                      C=CYL, T=TRK
SPCSIZE  DC    XL2'01'                 PRIMARY SPACE AMOUNT
         DC    XL2'00'                 SECONDARY SPACE AMOUNT
         DC    CL1'00'                 R=RLSE
         DC    XL2'00'                 NBR DIRECTORY BLOCKS
         DC    XL5'00'                 EXPIRATION DATE YYDDD
*
DAPARM2  DS    0F                      2ND PARAMETER FOR DYNALLOC
         DC    CL1'A'                  REQUEST CODE:
*                                      A=ALLOCATE A DATASET
*                                      V=VOLSER FEEDBACK
RETRNCD  DC    CL2' '                  DYNALLOC RETURN CODE
ERRRET   DC    CL4' '                  ERROR RETURN CODE
INFORET  DC    CL4' '                  INFO RETURN CODE
*
CONDTBL  DC    H'19',CL28'PERMANENT I/O ERROR,        '
         DC    H'16',CL28'EXTENT VIOLATION,           '
         DC    H'11',CL28'INTERCEPTED,                '
         DC    H'10',CL28'UNIT CHECK,                 '
         DC    H'14',CL28'UNIT EXCEPTION,             '
         DC    H'19',CL28'WRONG LENGTH RECORD,        '
         DC    H'21',CL28'CHANNEL PROGRAM CHECK,      '
         DC    H'16',CL28'PROTECTION CHECK,           '
         DC    H'18',CL28'CHANNEL DATA CHECK,         '
         DC    H'21',CL28'CHANNEL CONTROL CHECK,      '
         DC    H'23',CL28'INTERFACE CONTROL CHECK,    '
         DC    H'14',CL28'COMMAND REJECT,             '
         DC    H'15',CL28'EQUIPMENT CHECK,            '
         DC    H'10',CL28'DATA CHECK,                 '
         DC    H'07',CL28'OVERRUN,                    '
         DC    H'21',CL28'TRACK CONDITION CHECK,      '
         DC    H'10',CL28'SEEK CHECK,                 '
         DC    H'19',CL28'DATA CHECK IN COUNT,        '
         DC    H'19',CL28'WRITE TRACK OVERRUN,        '
         DC    H'22',CL28'END OF CYLINDER ON M-T,     '
         DC    H'25',CL28'INVALID COMMAND SEQUENCE,   '
         DC    H'15',CL28'NO RECORD FOUND,            '
         DC    H'14',CL28'FILE PROTECTED,             '
         DC    H'22',CL28'MISSING ADDRESS MARKER,     '
         DC    H'19',CL28'OVERFLOW INCOMPLETE,        '
*
IOERR1   DS    0CL80                   I/O ERROR LINE 1
         DC    CL21'*** I/O ERROR: ECBCC='
IOECC    DS    CL2
         DC    CL6', CSW='
IOECSW1  DS    CL8
         DC    CL1' '
IOECSW2  DS    CL8
         DC    CL14', FAILING CCW='
IOECCW1  DS    CL8
         DC    CL1' '
IOECCW2  DS    CL8
         DC    CL3' '
*
IOERR2   DS    0CL80                  I/O ERROR LINE 2
         DC    CL21'               SENSE='
IOESNS   DS    CL4
         DC    CL19', COMMAND CHAIN IS '
IOECHNM  DS    CL8
         DC    CL17', SEARCH ADDRESS='
IOESRCH  DS    CL10
         DC    CL1' '
*
IOERR3   DS    0CL80                 I/O ERROR LINE 3
         DC    CL26'               BYTES READ='
IOEBYTS  DS    CL5
         DC    CL22', DATA AT CCW ADDRESS='
IOECD1   DS    CL8
         DC    CL1' '
IOECD2   DS    CL8
         DC    CL1' '
IOECD3   DS    CL8
         DC    CL1' '
DYNERR   DC    CL31'DYNALLOC ERROR, RETURN CODE IS '
DYNRTCD  DS    CL4
         DC    CL22', INFO RETURN CODE IS '
DYNINFO  DS    CL4
         DC    CL19' '
*
NOCTLG   DC    CL80'UNABLE TO OBTAIN CATALOG INFORMATION FOR DSNAME'
WRGIDNT  DC    CL80'INCORRECT SYSTEM CODE IN "NEW" FILE DSCB'
MULTIVOL DC    CL80'MULTI-VOLUME FILES CANNOT BE PROCESSED BY ALIAS'
UNALOC   DC    CL80'UNABLE TO ALLOCATE WORK DATASET'
NEWALOCR DC    CL80'UNABLE TO ALLOCATE NEW DATASET (ALREADY EXISTS?)'
NEWALOCD DC    CL80'UNABLE TO ALLOCATE NEW DATASET (WRONG NAME?)'
SUCCESS  DC    CL80'PROGRAM COMPLETED SUCCESSFULLY'
KILLNEW  DC    CL80'RE-RUN AND ENTER 0 FOR OLD TO KILL THE "NEW" FILE'
UNOPEN   DC    CL80'UNABLE TO OPEN WORK DATASET'
BADVOL   DC    CL80'REQUESTED VOLUME SERIAL NOT AVAILABLE'
INVDVC   DC    CL80'DEVICE TYPE NOT SUPPORTED'
***********************************************************************
*       COMMAND CHAINS FOR EXCP AND ASSOCIATED FIELDS                 *
***********************************************************************
CMDCHNK  CCW   X'39',DASRCH,X'40',4     SEARCH HOME ADDRESS EQUAL
         CCW   X'08',CMDCHNK,0,0        TIC
KSCH     CCW   X'A9',KEY,X'40',44       SEARCH KEY EQUAL (M-T)
         CCW   X'08',KSCH,0,0           TIC
         CCW   X'06',DSCB,0,96          READ DSCB
*
CMDCHNW  CCW   X'39',DASRCH,X'40',4     SEARCH HOME ADDRESS EQUAL
         CCW   X'08',CMDCHNW,0,0        TIC
KSCH2    CCW   X'A9',KEY,X'40',44       SEARCH KEY EQUAL
         CCW   X'08',KSCH2,0,0          TIC
WRITCCW  CCW   X'05',DSCB,0,96          REWRITE DSCB RECORD
*
VTOCADR  DS    0CL5                    VTOC CCHHR START ADDRESS
VTOCCYL  DS    H                       VTOC CYLINDER
VTOCHD   DS    H                       VTOC HEAD
VTOCREC  DS    XL1                     VTOC RECORD NUMBER
*
DSCBFMT1 DS    0CL140   *** FORMAT 1 DSCB DESCRIPTION ***
KEY      DC    CL44' '                  DSCB KEY
DSCB     DS    0CL96                    DSCB DATA RECORD
FMTID    DS    CL1           FORMAT 1 IDENTIFIER, X'F1'
DSSN     DS    CL6           VOLSER OF FIRST VOLUME
VOLSQ    DS    XL2           VOLUME SEQUENCE NBR
CREDT    DS    XL3           CREATION DATE, BINARY, YDD
EXPDT    DS    XL3           EXPIRATION DATE, BINARY, YDD
NOEPV    DS    XL1           NBR EXTENTS ON THIS VOLUME
NOBDB    DS    XL1           NBR BYTES USED IN LAST DIRECTORY BLOCK
         DS    XL1           RESERVED
SYSCD    DS    CL13          SYSTEM CODE
REFD     DS    XL3           LAST REFERENCED DATE (IF USED)
         DS    XL4           RESERVED
DSORG    DS    XL2           DATA SET ORGANIZATION. BYTE1:
*                              BIT0-IS, BIT1-PS, BIT2-DA, BIT6-PO
*                              BIT7-UNMOVABLE. BYTE2: BIT4-VSAM
RECFM    DS    XL1           RECORD FORMAT, BITS01=10-F, BITS01=01-V,
*                              BITS01=11-U, BIT2-TRKOFLO, BIT3-BLOCKED
*                              BIT4-ASA CTL CHAR, BIT5-MACH CTL CHAR
OPTCD    DS    XL1           DCB OPTION CODES, SAME AS DCBOPTCD
BLKL     DS    XL2           BLOCKSIZE
LRECL    DS    XL2           LOGICAL RECORD LENGTH (0 FOR RECFM=U)
KEYL     DS    XL1           KEYLENGTH, 0=NO KEY
RKP      DS    XL2           RELATIVE KEY POSITION
DSIND    DS    XL1           DATA SET INDICATORS, BIT0-LAST VOLUME,
*                            BITS 3 (10) AND 5 (04) ARE PASSWORD
*                            INDICATORS:
*                             X'10' = READ AND WRITE PROTECTED
*                             X'14' = WRITE PROTECTED ONLY
*                             BOTH BITS OFF = NOT PROTECTED
*                             BOTH BITS ON FOR VSAM
SCALO    DS    XL1           PRIMARY ALLOCATION TYPE
*                              BITS01=01-
*                              BITS01=00-TRKS REL TO SPEC LOC,
*                              BITS01=01-BLOCKS, BITS01=11-CYLINDERS,
*                              BITS01=10-TRACKS,
*                              BIT4-CONTIG, BITS5-7-OTHER
SCAL     DS    XL3           SECONDARY ALLOCATION QUANTITY
LSTAR    DS    XL3           TTR OF LAST BLOCK WRITTEN (PS AND PO ONLY)
TRBAL    DS    XL2           BYTES REM ON TRK AFTER LAST BLOCK
         DS    XL2           RESERVED
EXT1     DS    XL10          FIRST EXTENT - SEE EXTENT DSECT
EXT2     DS    XL10          SECOND EXTENT DESCRIPTION
EXT3     DS    XL10          THIRD EXTENT DESCRIPTION
PTRDS    DS    XL5           CCHHR POINTER TO A FORMAT 2 DSCB (IS ONLY)
*                              OR TO A FORMAT 3 IF OVER 3 EXTENTS AND
*                              DSORG=PS OR PO, ZEROS IF UNUSED
         LTORG
***********************************************************************
*        FILE DEFINITIONS                                             *
***********************************************************************
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=EOJ,               X
               RECFM=FB,LRECL=80
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FB,LRECL=80
***********************************************************************
*        IOB, CVT, AND UCB DEFINITIONS                                *
***********************************************************************
         PRINT GEN
DAIOB    EXCPIOB CCW=CMDCHNK,DDNAME=INPUT9
         PRINT NOGEN
         CVT   DSECT=YES               GENERATE CVT DSECT
         IEFUCBOB ,                    GENERATE UCB DSECT
ALIAS    CSECT
*********************************************************************
*                REGISTER EQUATES                                   *
*********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
