         TITLE '*** UNIQUE: PULL UNIQUE RECORDS FROM TWO FILES ***'
UNIQUE CSECT
***********************************************************************
*  A "KEY" FIELD LOCATION AND LENGTH IS SPECIFIED IN THE PARM FIELD.  *
*  THREE FILES ARE WRITTEN. THE FIRST CONTAINS ALL RECORDS UNIQUE TO  *
*  THE INPUT1 FILE, THE SECOND CONTAINS ALL RECORDS UNIQUE TO THE     *
*  INPUT2 FILE, AND THE THIRD OUTPUT FILE CONTAINS ALL RECORDS COMMON *
*  TO BOTH INPUT FILES.                                               *
*                                                                     *
*  PARM FIELD CONTAINS THE KEY FIELD POSITION IN THE RECORD RELATIVE  *
*  TO 1 AND THE LENGTH OF THE KEY FIELD. KEY LENGTH MUST BE LESS THAN *
*  256.                                                               *
*                                                                     *
*  THE INPUT FILES ARE INPUT1 AND INPUT2, AND THE OUTPUT FILES ARE    *
*  OUTPUT1, OUTPUT2, AND OUTPUT3.                                     *
*                                                                     *
*  RECORD TOTALS ARE PRINTED ON THE SYSPRINT FILE.                    *
*                                                                     *
*  AUTHOR R THORNTON                                                  *
***********************************************************************
*
***********************************************************************
*        SAVE REGISTERS, SET UP BASE REGS, CHAIN SAVE AREAS           *
***********************************************************************
         USING UNIQUE,R3,R4
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)             SET UP SECOND
         LA    R4,1(R4)                    BASE REGISTER
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     START                   BRANCH AROUND CONSTANTS
         DC    CL8'UNIQUE'             PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
START    DS    0H                      BEGIN PROCESSING
***********************************************************************
*        PROCESS PARM FIELD: EXTRACT THE KEY FIELD POSITION AND LENGTH*
*        AND STORE THEM FOR PROCESSING.                               *
***********************************************************************
         L     R2,0(R1)                GET PARM FIELD ADDR
         LH    R12,0(R2)               MAX TIMES TO LOOP
         LTR   R12,R12                 ANY PARM DATA?
         BZ    BADPARM                 NO, ERROR
         CH    R12,H5                  MORE THAN 5 BYTES?
         BNH   SETUPR11                NO
         LA    R12,5                   YES, USE 5
SETUPR11 LA    R11,2(R2)               POINT TO 1ST BYTE OF PARM
MOVABYT1 MVC   WORK(4),WORK+1          SHIFT CURRENT CONTENT LEFT BY 1
         MVC   WORK+4(1),0(R11)        COPY IN THIS DIGIT
         LA    R11,1(R11)              ADVANCE TO NEXT PARM BYTE
         CLI   0(R11),C','             NOW AT COMMA?
         BE    ENDOFLOC                YES
         BCT   R12,MOVABYT1            NO, LOOP TO GET LOCATION
         B     BADPARM                 TOO LONG, ERROR
ENDOFLOC TRT   WORK,VALNUM             TEST FOR VALID NUMBER
         BNZ   BADPARM                 NON-NUMERIC, ERROR
         PACK  DBLWD,WORK              PACK POSITION
         CVB   R12,DBLWD               CONVERT TO BINARY
         BCTR  R12,0                   MAKE POSITION ZERO RELATIVE
         STH   R12,OFFSET              SAVE OFFSET TO FIELD
         LA    R11,1(R11)              STEP PAST THE COMMA
         LH    R12,0(R2)               GET PARM FIELD LENGTH
         LA    R12,2(R2,R12)           POINT TO END OF PARM DATA+1
         MVC   WORK,ZEROS              CLEAR WORK FIELD
MOVABYT2 MVC   WORK(4),WORK+1          SHIFT CURRENT CONTENT LEFT BY 1
         MVC   WORK+4(1),0(R11)        COPY IN THIS DIGIT
         LA    R11,1(R11)              ADVANCE TO NEXT PARM BYTE
         CR    R11,R12                 PAST END OF PARM FIELD?
         BL    MOVABYT2                NO, CONTINUE LOOP
         TRT   WORK,VALNUM             TEST FOR VALID NUMBER
         BNZ   BADPARM                 NON-NUMERIC, ERROR
         PACK  DBLWD,WORK              PACK POSITION
         CVB   R12,DBLWD               CONVERT TO BINARY
         CH    R12,H256                OVER 256 BYTES?
         BH    BADPARM                 YES, ERROR
         BCTR  R12,0                   MAKE LENGTH INTO LENGTH CODE
         STH   R12,LENGCODE            SAVE KEY FIELD LENGTH CODE
         B     OPENS                   CONTINUE
BADPARM  WTO   'UNIQUE: INVALID PARM ON EXEC STATEMENT',ROUTCDE=11
         ABEND 111,DUMP
***********************************************************************
*        OPEN FILES                                                   *
***********************************************************************
OPENS    OPEN  (OUTPUT1,OUTPUT,OUTPUT2,OUTPUT,SYSPRINT,OUTPUT,INPUT1)
         OPEN  (OUTPUT3,OUTPUT,INPUT2) OPEN FILES
         LH    R1,OFFSET               GET OFFSET TO KEY FIELD
         AH    R1,LENGCODE             AND ADD LENGTH
         CH    R1,INPUT1+82            KEY EXTENDS PAST END OF RECORD?
         BNH   MORECHEX                NO
BADPARM2 WTO   'UNIQUE: KEY FIELD EXTENDS PAST END OF RECORD',         X
               ROUTCDE=11
         ABEND 222,DUMP
BADPARM3 WTO   'UNIQUE: LRECL MUST BE SAME FOR INPUT AND OUTPUT FILES',X
               ROUTCDE=11
         ABEND 333,DUMP
MORECHEX CLC   INPUT1+82(2),INPUT2+82  INPUT1 LRECL = INPUT2?
         BNE   BADPARM3                NO, ERROR
         CLC   INPUT1+82(2),OUTPUT1+82 INPUT1 LRECL = OUTPUT1?
         BNE   BADPARM3                NO, ERROR
         CLC   INPUT1+82(2),OUTPUT2+82 INPUT1 LRECL = OUTPUT2?
         BNE   BADPARM3                NO, ERROR
         CLC   INPUT1+82(2),OUTPUT3+82 INPUT1 LRECL = OUTPUT3?
         BNE   BADPARM3                NO, ERROR
         MVI   INPTR,3                 SET TO READ BOTH INPUTS
         BAS   R9,INPUT                READ BOTH INPUT FILES
***********************************************************************
*             MAINLINE ROUTINE                                        *
***********************************************************************
MAINLINE AH    R1,OFFSET               POINT TO KEY FIELD
         LH    R2,LENGCODE             GET KEY FIELD LENGTH
         EX    R2,COMPARE              COMPARE TO KEY1 TO KEY2
         BL    UNIQ1                   KEY1 LOW: UNIQUE TO INPUT1
         BH    UNIQ2                   KEY2 LOW: UNIQUE TO INPUT2
COMMON   MVI   OUTPTR,3                SHOW WRITE IS FOR OUTPUT3
         LR    R7,R5                   SET TO WRITE INPUT1 RECORD
         BAS   R9,OUTPUT               GO WRITE TO OUTPUT3
         LR    R7,R6                   SET TO WRITE INPUT2 RECORD
         BAS   R9,OUTPUT               GO WRITE TO OUTPUT3
         MVI   INPTR,3                 SET TO READ BOTH INPUT FILES
MAINREAD BAS   R9,INPUT                GO READ INPUT RECORD(S)
         B     MAINLINE                RETURN TO CALLER
UNIQ1    MVI   OUTPTR,1                SHOW WRITE IS FOR OUTPUT1
         LR    R7,R5                   SET TO WRITE INPUT1 RECORD
         BAS   R9,OUTPUT               GO WRITE TO OUTPUT1
         MVI   INPTR,1                 INDICATE READ INPUT1
         B     MAINREAD                GO READ NEXT INPUT1 RECORD
UNIQ2    MVI   OUTPTR,2                SHOW WRITE IS FOR OUTPUT2
         LR    R7,R6                   SET TO WRITE INPUT2 RECORD
         BAS   R9,OUTPUT               GO WRITE TO OUTPUT2
         MVI   INPTR,2                 INDICATE READ INPUT2
         B     MAINREAD                GO READ NEXT INPUT2 RECORD
COMPARE  CLC   LASTKEY1(1),LASTKEY2    EXECUTED COMPARE
***********************************************************************
*             INPUT ROUTINE                                           *
***********************************************************************
INPUT    ST    R9,IN9                  SAVE RETURN ADDRESS
         CLI   INPTR,1                 READ FROM INPUT1?
         BE    READ1                   YES
         CLI   INPTR,2                 READ FROM INPUT2?
         BE    READ2                   YES
READ1    GET   INPUT1                  READ INPUT1 RECORD
         AP    INPCNT1,P1              INCREMENT COUNTER
         LR    R5,R1                   COPY RECORD ADDRESS
         AH    R1,OFFSET               POINT TO KEY FIELD
         LH    R2,LENGCODE             GET KEY FIELD LENGTH
         EX    R2,CKDUPL1              THIS A DUPLICATE ON INPUT1?
         BNE   NEWKEY1                 NO
         LR    R7,R5                   POINT TO RECORD TO BE WRITTEN
         BAS   R9,OUTPUT               YES, GO WRITE RECORD
         B     READ1                   AND GO READ NEXT
NEWKEY1  EX    R2,SAVEKEY1             SAVE THE INPUT1 RECORD KEY
CK1OR3   CLI   INPTR,1                 IS THIS AN INPUT1 READ?
         BE    INXIT                   YES, RETURN TO CALLER
READ2    GET   INPUT2                  READ INPUT2 RECORD
         AP    INPCNT2,P1              INCREMENT COUNTER
         LR    R6,R1                   COPY RECORD ADDRESS
         AH    R1,OFFSET               POINT TO KEY FIELD
         LH    R2,LENGCODE             GET KEY FIELD LENGTH
         EX    R2,CKDUPL2              THIS A DUPLICATE ON INPUT2?
         BNE   NEWKEY2                 NO
         LR    R7,R6                   POINT TO RECORD TO BE WRITTEN
         BAS   R9,OUTPUT               YES, GO WRITE RECORD
         B     READ2                   AND GO READ NEXT
NEWKEY2  EX    R2,SAVEKEY2             SAVE THE INPUT2 RECORD KEY
         B     INXIT                   RETURN TO CALLER
EOF1     CLC   LASTKEY2,HIVALS         ALREADY AT EOF INPUT2?
         BE    EOJ                     YES, ALL THROUGH
         MVC   LASTKEY1,HIVALS         NO, SET EOF FOR INPUT1
         B     CK1OR3                  RETURN TO CALLER
EOF2     CLC   LASTKEY1,HIVALS         ALREADY AT EOF INPUT1?
         BE    EOJ                     YES, ALL THROUGH
         MVC   LASTKEY2,HIVALS         NO, SET EOF FOR INPUT2
INXIT    L     R9,IN9                  GET RETURN ADDRESS
         BR    R9                      RETURN TO CALLER
HIVALS   DC    256X'FF'                CONSTANT FIELD OF HEX FF'S
SAVEKEY1 MVC   LASTKEY1(1),0(R1)       EXECUTED MOVE
CKDUPL1  CLC   LASTKEY1(1),0(R1)       EXECUTED MOVE
SAVEKEY2 MVC   LASTKEY2(1),0(R1)       EXECUTED MOVE
CKDUPL2  CLC   LASTKEY2(1),0(R1)       EXECUTED MOVE
***********************************************************************
*             OUTPUT ROUTINE                                          *
***********************************************************************
OUTPUT   CLI   OUTPTR,3                WRITE TO OUTPUT3?
         BE    WRITE3                  YES
         CLI   OUTPTR,2                WRITE TO OUTPUT2?
         BE    WRITE2                  YES
WRITE1   PUT   OUTPUT1,0(R7)           WRITE TO OUTPUT1
         AP    OUTCNT1,P1              INCREMENT COUNTER
         BR    R9                      EXIT
WRITE2   PUT   OUTPUT2,0(R7)           WRITE TO OUTPUT2
         AP    OUTCNT2,P1              INCREMENT COUNTER
         BR    R9                      EXIT
WRITE3   PUT   OUTPUT3,0(R7)           WRITE TO OUTPUT2
         AP    OUTCNT3,P1              INCREMENT COUNTER
         BR    R9                      EXIT
***********************************************************************
*             END OF JOB                                              *
***********************************************************************
EOJ      MVC   PRT(12),TOTLEDIT        EDIT MASK
         ED    PRT(12),INPCNT1         EDIT INPUT1 COUNTER
         MVC   PRT+13(19),=CL19'INPUT1 RECORDS READ' IDENTIFY COUNT
         PUT   SYSPRINT,PRT            PRINT COUNT
         MVC   PRT(12),TOTLEDIT        EDIT MASK
         ED    PRT(12),INPCNT2         EDIT INPUT2 COUNTER
         MVC   PRT+13(19),=CL19'INPUT2 RECORDS READ' IDENTIFY COUNT
         PUT   SYSPRINT,PRT            PRINT COUNT
         MVC   PRT(12),TOTLEDIT        EDIT MASK
         ED    PRT(12),OUTCNT1         EDIT OUTPUT1 COUNTER
         MVC   PRT+13(23),=CL23'OUTPUT1 RECORDS WRITTEN' IDENTIFY COUNT
         PUT   SYSPRINT,PRT            PRINT COUNT
         MVC   PRT(12),TOTLEDIT        EDIT MASK
         ED    PRT(12),OUTCNT2         EDIT OUTPUT2 COUNTER
         MVC   PRT+13(23),=CL23'OUTPUT2 RECORDS WRITTEN' IDENTIFY COUNT
         PUT   SYSPRINT,PRT            PRINT COUNT
         MVC   PRT(12),TOTLEDIT        EDIT MASK
         ED    PRT(12),OUTCNT3         EDIT OUTPUT3 COUNTER
         MVC   PRT+13(23),=CL23'OUTPUT3 RECORDS WRITTEN' IDENTIFY COUNT
         PUT   SYSPRINT,PRT            PRINT COUNT
         CLOSE (INPUT1,,OUTPUT1,,OUTPUT2,,SYSPRINT) CLOSE FILES
         CLOSE (INPUT2,,OUTPUT3)       CLOSE FILES
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         L     R14,12(R13)             RESTORE RETURN REG: R14
         L     R15,RETCODE             SET RETURN CODE
         LM    R0,R12,20(R13)          RESTORE CALLER'S REGS 0-12
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN
***********************************************************************
*        STORAGE AND FILE AREAS                                       *
***********************************************************************
DBLWD    DS    D                       DOUBLEWORD WORK AREA
RETCODE  DS    F                       RETURN CODE
IN9      DS    A                       RETURN ADDRESS FOR INPUT
H0       DC    H'0'                    HEX ZERO
H5       DC    H'5'                    CONSTANT 5
H256     DC    H'256'                  CONSTANT 256
OFFSET   DC    H'0'                    OFFSET TO KEY FIELD
LENGCODE DC    H'0'                    LENGTH CODE OR KEY FIELD
P1       DC    P'1'                    CONSTANT 1
INPTR    DS    X                       INPUT POINTER: 1, 2, OR 3 (BOTH)
OUTPTR   DS    X                       OUTPUT POINTER 1, 2, OR 3
WORK     DC    CL5'00000'              WORK AREA
ZEROS    DC    CL5'00000'              CONSTANT ZEROS
VALNUM   DC    256X'FF'                TRT TABLE FOR NUMERIC TESTS
         ORG   VALNUM+C'0'
         DC    10X'00'
         ORG
PRT      DC    CL80' '
INPCNT1  DC    PL5'0'                  INPUT1 RECORD COUNTER
INPCNT2  DC    PL5'0'                  INPUT2 RECORD COUNTER
OUTCNT1  DC    PL5'0'                  OUTPUT1 OUTPUT RECORD COUNTER
OUTCNT2  DC    PL5'0'                  OUTPUT2 OUTPUT RECORD COUNTER
OUTCNT3  DC    PL5'0'                  OUTPUT3 OUTPUT RECORD COUNTER
LASTKEY1 DS    0CL256                  LAST KEY READ FROM INPUT1
         DC    256X'00'
LASTKEY2 DS    0CL256                  LAST KEY READ FROM INPUT2
         DC    256X'00'
TOTLEDIT DC    XL12'402020206B2020206B202120' EDIT MASK FOR TOTAL
***********************************************************************
*             DCB'S                                                   *
***********************************************************************
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FB,LRECL=80
OUTPUT1  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT1
OUTPUT2  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT2
OUTPUT3  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT3
INPUT1   DCB   DSORG=PS,MACRF=GL,DDNAME=INPUT1,EODAD=EOF1
INPUT2   DCB   DSORG=PS,MACRF=GL,DDNAME=INPUT2,EODAD=EOF2
         LTORG
UNIQUE CSECT
***********************************************************************
*             REGISTER EQUATES                                        *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
