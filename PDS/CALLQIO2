         TITLE '*** CALLQIO2: TEST THE QSAMIO SUBROUTINE ***'
CALLQIO2 CSECT
CALLQIO2 AMODE 24
CALLQIO2 RMODE 24
*********************************************************************
* CALLS THE QSAMIO SUBROUTINE USING LOAD AND BALR TO TEST ITS FUNCT-*
* IONALITY. THIS PROGRAM RUNS BELOW THE LINE (CALLQIO1 TESTS CALLS  *
* MADE FROM ABOVE THE LINE). CALLS ARE MADE TO TEST SEVERAL TYPES OF*
* DATASETS, BOTH INPUT AND OUTPUT.                                  *
* AUTHOR R THORNTON AUG 2000                                        *
*********************************************************************
*
*********************************************************************
*        SAVE REGISTERS, SET UP BASE REGS, CHAIN SAVE AREAS         *
*********************************************************************
         USING CALLQIO2,R3,R4
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)             SET UP SECOND
         LA    R4,1(R4)                    BASE REGISTER
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     START                   BRANCH AROUND CONSTANTS
         DC    CL8'CALLQIO2'           PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
START    DS    0H                      BEGIN PROCESSING
*********************************************************************
*        OPEN FILES, LOAD THE QSAMIO SUBROUTINE                     *
*********************************************************************
OPENS    OPEN  (PRINT1,OUTPUT)         OPEN FILES
         LOAD  EP=QSAMIO               LOAD THE QSAMIO SUBROUTINE
         ST    R0,QIOADDR              SAVE ENTRY POINT ADDRESS
*********************************************************************
*             MAINLINE ROUTINE                                      *
*********************************************************************
MAINLINE CLI   IN1RETCD,4              INPUT1 IS AT END OF FILE?
         BNE   MLGET1                  NO
         CLI   IN2RETCD,4              INPUT2 ALSO AT END OF FILE?
         BNE   ML2                     NO, GO TRY INPUT2
         B     EOJ                     YES, END OF JOB
MLGET1   LA    R12,INPUT1              POINT TO QSAMIO PARM FOR INPUT1
         LA    R11,IN1REC              YES, POINT TO RECORD READ
         BAL   R14,CALLQSIO            GO READ NEXT RECORD
         CLI   IN1RETCD,0              SUCCESSFUL READ?
         BNE   MLTST1                  NO
         LA    R11,IN1REC              YES, POINT TO RECORD READ
         LA    R12,OUTPUT1             POINT TO QSAMIO PARM FOR OUTPUT1
         BAL   R14,CALLQSIO            GO WRITE THE RECORD
         CLI   OT1RETCD,0              SUCCESSFUL WRITE?
         BE    ML2                     YES, CONTINUE PROCESSING
         ABEND 222,DUMP                NO, ABEND U222
MLTST1   CLI   IN1RETCD,4              IS IT END OF FILE?
         BE    ML2                     YES, ALL FINISHED
         ABEND 111,DUMP                NO, ABEND U111
ML2      CLI   IN2RETCD,4              INPUT2 AT END OF FILE?
         BNE   MLGET2                  NO, GO READ
         B     MAINLINE                ELSE SKIP READ
MLGET2   LA    R12,INPUT2              POINT TO QSAMIO PARM FOR INPUT2
         LA    R11,IN2REC              POINT TO RECORD AREA
         BAL   R14,CALLQSIO            GO READ NEXT RECORD
         CLI   IN2RETCD,0              SUCCESSFUL READ?
         BNE   MLTST2                  NO
         LA    R12,OUTPUT2             POINT TO QSAMIO PARM FOR OUTPUT2
         LA    R11,IN2REC              POINT TO RECORD AREA
         BAL   R14,CALLQSIO            GO WRITE THE RECORD
         CLI   OT2RETCD,0              SUCCESSFUL WRITE?
         BE    MAINLINE                YES, CONTINUE PROCESSING
         ABEND 888,DUMP                NO, ABEND U888
MLTST2   CLI   IN2RETCD,4              IS IT END OF FILE?
         BE    MAINLINE                YES, LOOP BACK TO MAINLNE
         ABEND 777,DUMP                NO, ABEND U777
MLMOVE   MVC   OUT2REC(1),0(R12)       EXECUTED MOVE
*********************************************************************
* CALL THE QSAMIO SUBROUTINE TO DO THE INDICATED I/O. ON ENTRY, R12 *
* POINTS TO THE PARAMETER LIST TO BE SENT TO QSAMIO AND R11 POINTS  *
* TO THE RECORD AREA. IF AN ERROR IS FLAGGED ON RETURN FROM QSAMIO, *
* THE MESSAGE RETURNED IN PRMERMSG IS PRINTED.                      *
* *******************************************************************
         USING PARMFLD,R12
CALLQSIO ST    R14,CQ14                SAVE RETURN ADDRESS
         ST    R12,QIOPARM             SAVE PARAMETER AREA ADDRESS
         ST    R11,QIOPARM+4           SAVE RECORD AREA ADDRESS
         OI    QIOPARM+4,X'80'         SET END OF LIST BIT
         LA    R1,QIOPARM              POINT TO PARAMETER LIST
         L     R15,QIOADDR             POINT TO QSAMIO E.P.
         BALR  R14,R15                 GO PERFORM QSAMIO
         CLI   PRMRETCD,8              ANY ERROR?
         BNE   CQXIT                   NO
         MVC   PRTLINE+1(128),PRMERMSG MOVE ERROR MESSAGE TO PRINT LINE
         BAL   R14,PRINT               GO PRINT THE MESSAGE
CQXIT    L     R14,CQ14                PICK UP RETURN ADDRESS
         BR    R14                     EXIT
CQ14     DC    A(0)                    EXIT ADDRESS
         DROP  R12
*********************************************************************
*             PRINT SUBROUTINE                                      *
*********************************************************************
PRINT    ST    R14,P14                 SAVE EXIT ADDRESS
         PUT   PRINT1,PRTLINE          WRITE PRINT LINE
         MVC   PRTLINE,BLANKS          CLEAR PRINT LINE
PXIT     L     R14,P14                 GET EXIT ADDRESS
         BR    R14                     EXIT
P14      DC    A(0)                    EXIT ADDRESS
*********************************************************************
*             END OF JOB                                            *
*********************************************************************
EOJ      CLOSE PRINT1                  CLOSE FILE
         MVI   IN1REQ,C'C'             SET REQUEST TO CLOSE
         LA    R12,INPUT1              POINT TO INPUT1 FILE PARMS
         BAL   R14,CALLQSIO            GO CLOSE INPUT1
         CLI   IN1RETCD,0              WAS CLOSE SUCCESSFUL?
         BE    EOJCL2                  YES
         MVC   PRTLINE,BAD1CLOS        MOVE MESSAGE TO PRINT LINE
         BAL   R14,PRINT               GO DISPLAY ERROR MESSAGE
         ABEND 333,DUMP                TERMINATE IN ERROR
EOJCL2   MVI   OT1REQ,C'C'             SET REQUEST TO CLOSE
         LA    R12,OUTPUT1             POINT TO OUTPUT1 FILE PARMS
         BAL   R14,CALLQSIO            GO CLOSE OUTPUT1
         CLI   OT1RETCD,0              WAS CLOSE SUCCESSFUL?
         BE    EOJCL3                  YES
         MVC   PRTLINE,BAD2CLOS        MOVE MESSAGE TO PRINT LINE
         BAL   R14,PRINT               GO DISPLAY ERROR MESSAGE
         ABEND 333,DUMP                TERMINATE IN ERROR
EOJCL3   MVI   IN2REQ,C'C'             SET REQUEST TO CLOSE
         LA    R12,INPUT2              POINT TO INPUT2 FILE PARMS
         BAL   R14,CALLQSIO            GO CLOSE INPUT2
         CLI   IN2RETCD,0              WAS CLOSE SUCCESSFUL?
         BE    EOJCL4                  YES
         MVC   PRTLINE,BAD3CLOS        MOVE MESSAGE TO PRINT LINE
         BAL   R14,PRINT               GO DISPLAY ERROR MESSAGE
         ABEND 333,DUMP                TERMINATE IN ERROR
EOJCL4   MVI   OT2REQ,C'C'             SET REQUEST TO CLOSE
         LA    R12,OUTPUT2             POINT TO OUTPUT2 FILE PARMS
         BAL   R14,CALLQSIO            GO CLOSE OUTPUT2
         CLI   OT2RETCD,0              WAS CLOSE SUCCESSFUL?
         BE    EOJLOAD                 YES
         MVC   PRTLINE,BAD4CLOS        MOVE MESSAGE TO PRINT LINE
         BAL   R14,PRINT               GO DISPLAY ERROR MESSAGE
         ABEND 333,DUMP                TERMINATE IN ERROR
EOJLOAD  L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGS
         SR    R15,R15                 SET RETURN CODE TO ZERO
         BR    R14                     RETURN
*********************************************************************
*        STORAGE AND FILE AREAS                                     *
*********************************************************************
*
DBLWD    DS    D                       DOUBLEWORD WORK AREA
QIOADDR  DC    A(0)                    ADDRESS OF THE QSAMIO SUBRTN
QIOPARM  DC    2A(0)                   QSAMIO SUBRTN PARM ADDRESSES
*
BLANKS   DC    CL133' '                BLANKS
BAD1CLOS DC    CL128'CLOSE FAILED FOR INPUT1'
BAD2CLOS DC    CL128'CLOSE FAILED FOR OUTPUT1'
BAD3CLOS DC    CL128'CLOSE FAILED FOR INPUT2'
BAD4CLOS DC    CL128'CLOSE FAILED FOR OUTPUT2'
*
PRTLINE  DS    CL133                   PRINT LINE
*
INPUT1   DS    0F                      QSAMIO PARM AREA FOR INPUT1 DD
IN1REQ   DC    CL1'R'                    REQUEST CODE: R=READ, C=CLOSE
IN1RETCD DC    XL1'00'                   RETCODE: 0=OK, 4=EOF, 8=ERR
IN1DDNAM DC    CL8'INPUT1'               DDNAME FOR THE FILE IS INPUT1
IN1LRECL DC    H'0'                      LRECL = 0: USE JCL/LABEL
IN1DCBA  DC    A(0)                      FILE BLOCK POINTER FROM QSAMIO
IN1BLKSI DC    H'0'                      BLKSIZE = 0: USE JCL/LABEL
IN1ULENG DC    H'0'                      RECORD LENGTH FOR RECFM=U
IN1RECFM DC    CL4' '                    RECFM = BLANKS: USE JCL/LABEL
IN1BUFNO DC    XL1'0'                    BUFNO = 0: USE DEFAULT
IN1ERMSG DC    CL128' '                  ERROR MESSAGE WHEN RC=8
IN1REC   DS    CL81                      INPUT1 RECORD AREA
*
OUTPUT1  DS    0F                      QSAMIO PARM AREA FOR OUTPUT1 DD
OT1REQ   DC    CL1'W'                    REQUEST CODE: W=PUT, C=CLOSE
OT1RETCD DC    XL1'00'                   RETCODE: 0=OK, 4=EOF, 8=ERR
OT1DDNAM DC    CL8'OUTPUT1'              DDNAME FOR THE FILE IS OUTPUT1
OT1LRECL DC    H'81'                     LRECL = 81
OT1DCBA  DC    A(0)                      FILE BLOCK POINTER FROM QSAMIO
OT1BLKSI DC    H'0'                      BLKSIZE = 0
OT1ULENG DC    H'0'                      RECORD LENGTH FOR RECFM=U
OT1RECFM DC    CL4'FB  '                 RECFM = FB
OT1BUFNO DC    XL1'2'                    BUFNO = 2
OT1ERMSG DC    CL128' '                  ERROR MESSAGE WHEN RC=8
OUT1REC  DS    CL81                      OUTPUT1 RECORD AREA
*
INPUT2   DS    0F                      QSAMIO PARM AREA FOR INPUT2 DD
IN2REQ   DC    CL1'R'                    REQUEST CODE: R=READ C=CLOSE
IN2RETCD DC    XL1'00'                   RETCODE: 0=OK, 4=EOF, 8=ERR
IN2DDNAM DC    CL8'INPUT2'               DDNAME FOR THE FILE IS INPUT2
IN2LRECL DC    H'0'                      LRECL = 0: USE JCL/LABEL
IN2DCBA  DC    A(0)                      FILE BLOCK POINTER FROM QSAMIO
IN2BLKSI DC    H'0'                      BLKSIZE = 0: USE JCL/LABEL
IN2ULENG DC    H'0'                      RECORD LENGTH FOR RECFM=U
IN2RECFM DC    CL4' '                    RECFM = BLANKS: USE JCL/LABEL
IN2BUFNO DC    XL1'0'                    BUFNO = 0: USE DEFAULT
IN2ERMSG DC    CL128' '                  ERROR MESSAGE WHEN RC=8
IN2REC   DS    CL255                     INPUT2 RECORD AREA
*
OUTPUT2  DS    0F                      QSAMIO PARM AREA FOR OUTPUT2 DD
OT2REQ   DC    CL1'W'                    REQUEST CODE: W=PUT, C=CLOSE
OT2RETCD DC    XL1'00'                   RETCODE: 0=OK, 4=EOF, 8=ERR
OT2DDNAM DC    CL8'OUTPUT2'              DDNAME FOR THE FILE IS OUTPUT2
OT2LRECL DC    H'0'                      LRECL = 0: USE JCL/LABEL
OT2DCBA  DC    A(0)                      FILE BLOCK POINTER FROM QSAMIO
OT2BLKSI DC    H'0'                      BLKSIZE = 0: USE JCL/LABEL
OT2ULENG DC    H'0'                      RECORD LENGTH FOR RECFM=U
OT2RECFM DC    CL4'VB  '                 RECFM = VB
OT2BUFNO DC    XL1'2'                    BUFNO = 2
OT2ERMSG DC    CL128' '                  ERROR MESSAGE WHEN RC=8
OUT2REC  DS    CL255                     OUTPUT2 RECORD AREA
*********************************************************************
*             DCB'S                                                 *
*********************************************************************
PRINT1   DCB   DSORG=PS,MACRF=PM,DDNAME=PRINT1,                        X
               RECFM=FBA,LRECL=133
         LTORG
*********************************************************************
*             DSECTS                                                *
*********************************************************************
*********************************************************************
*        PARAMETER AREA PASSED TO QSAMIO SUBROUTINE                 *
*********************************************************************
PARMFLD  DSECT ,                       USER PASSED PARAMETER AREA
PRMREQ   DS    CL1                       REQUEST CODE: R=GET, W=PUT,
*                                                      C=CLOSE
PRMRETCD DS    XL1                       RETURN CODE: 00=SUCCESS,
*                                               04=EOF, 08=ERROR
PRMDDNAM DS    CL8                       DDNAME FOR THE FILE
PRMLRECL DS    H                         LRECL OR ZEROS
PRMDCBA  DS    A                         DCB ADDRESS
PRMBLKSI DS    H                         BLKSIZE OR ZERO
PRMULENG DS    H                         LENGTH FOR RECFM=U
PRMRECFM DS    CL4                       RECFM OR BLANKS
PRMBUFNO DS    XL1                       BUFNO OR ZERO
PRMERMSG DS    CL128                     ERROR MESSAGE WHEN RC=8
CALLQIO2 CSECT
*********************************************************************
*             REGISTER EQUATES                                      *
*********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
