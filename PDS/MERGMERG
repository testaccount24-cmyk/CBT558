         TITLE '*** MERGMERG: MASSAGE A FILE ***'
MERGMERG CSECT
*********************************************************************
* INPUT FILE REFORMATTER/MANIPULATOR. SPECIALIZE FOR EACH USE. AS   *
* CURRENTLY WRITTEN:                                                *
* 1. OPENS A PS/FB/80 INPUT FILE AND OUTPUT FILE                    *
* 2. PROCESSES INPUT AND WRITES OUTPUT                              *
* AUTHOR R THORNTON 4/16/2002                                       *
*********************************************************************
*
*********************************************************************
*        SAVE REGISTERS, SET UP BASE REGS, CHAIN SAVE AREAS         *
*********************************************************************
         USING MERGMERG,R3,R4
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)             SET UP SECOND
         LA    R4,1(R4)                    BASE REGISTER
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     START                   BRANCH AROUND CONSTANTS
         DC    CL8'MERGMERG'           PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
START    DS    0H                      BEGIN PROCESSING
*********************************************************************
*        OPEN FILES                                                 *
*********************************************************************
         OPEN  (OUTPUT,OUTPUT,INPUT)   OPEN FILES
*********************************************************************
*             MAINLINE ROUTINE                                      *
*********************************************************************
MAINLINE GET   INPUT,INREC             READ NEXT RECORD
         CLI   INREC+16,C'D'           THIS AN 'EXECUTED BY' RECORD?
         BNE   SGOTTEN                 NO, 'EXECUTES'
DGOTTEN  CLI   OUTPGMD,C' '            ANY MEMBER IN PROGRESS?
         BE    DSTRT                   NO, GO START NEW ONE
DCMPR    CLC   INPGMD,OUTPGMD          SAME PROGRAM NAME IN PROGRESS?
         BE    DSAME                   YES
DPUTREC  PUT   OUTPUT,OUTRECD          WRITE THE RECORD
DSTRT    MVC   OUTPGMD,INPGMD          PROGRAM NAME TO OUTPUT
         MVC   OUTREFD,BLANKS          CLEAR REFERENCE FIELD
         MVC   CURREFD,STREFD          RESET REFERENCE AREA POINTER
DSAME    L     R1,CURREFD              POINT TO CURRENT REFERENCE AREA
         CLC   CURREFD,STREFD          AT BEGINNING OF REF AREA?
         BE    DMOVMEM                 YES, GO MOVE PROGRAM NAME
         MVI   0(R1),C','              MOVE SEPARATING COMMA
         C     R1,ENDREFD              WILL THIS ONE FIT?
         BH    DPUTREC                 NO
DMOVMEM  MVC   2(8,R1),INMEMD          YES, MOVE IN JCL MEMBER NAME
         LA    R1,9(R1)                POINT TO LAST POSSIBLE BYTE
DFINDRHE CLI   0(R1),C' '              FOUND RIGHT HAND END?
         BNE   DADD1                   YES
         BCT   R1,DFINDRHE             NO, LOOP TO LOCATE IT
DADD1    LA    R1,1(R1)                STEP PAST THE NAME
         ST    R1,CURREFD              SAVE CURRENT REFERENCE ADDRESS
         B     MAINLINE                CONTINUE
SGOTTEN  CLI   FIRSTIME,0              FIRST TIME HERE?
         BNE   SCKPROG                 NO
         MVI   FIRSTIME,1              RESET FIRST TIME SWITCH
         PUT   OUTPUT,OUTRECD          YES, WRITE LAST OUTRECD
         B     SSTRT                   CONTINUE
SCKPROG  CLI   OUTMEMS,C' '            ANY MEMBER IN PROGRESS?
         BE    SSTRT                   NO, GO START NEW ONE
SCMPR    CLC   INMEMS,OUTMEMS          SAME MEMBER NAME IN PROGRESS?
         BE    SSAME                   YES
SPUTREC  PUT   OUTPUT,OUTRECS          WRITE THE RECORD
SSTRT    MVC   OUTMEMS,INMEMS          MEMBER NAME TO OUTPUT
         MVC   OUTREFS,BLANKS          CLEAR REFERENCE FIELD
         MVC   CURREFS,STREFS          RESET REFERENCE AREA POINTER
SSAME    L     R1,CURREFS              POINT TO CURRENT REFERENCE AREA
         CLC   CURREFS,STREFS          AT BEGINNING OF REF AREA?
         BE    SMOVPGM                 YES, GO MOVE PROGRAM NAME
         MVI   0(R1),C','              MOVE SEPARATING COMMA
         C     R1,ENDREFS              WILL THIS ONE FIT?
         BH    SPUTREC                 NO
SMOVPGM  MVC   2(8,R1),INPGMS          YES, MOVE IN PROGRAM NAME
         LA    R1,9(R1)                POINT TO LAST POSSIBLE BYTE
SFINDRHE CLI   0(R1),C' '              FOUND RIGHT HAND END?
         BNE   SADD1                   YES
         BCT   R1,SFINDRHE             NO, LOOP TO LOCATE IT
SADD1    LA    R1,1(R1)                STEP PAST END OF NAME
         ST    R1,CURREFS              SAVE CURRENT REFERENCE
         B     MAINLINE                CONTINUE
*********************************************************************
*             END OF JOB                                            *
*********************************************************************
EOJ      PUT   OUTPUT,OUTRECS          WRITE LAST "EXECUTES" RECORD
         CLOSE (OUTPUT,,INPUT)         CLOSE FILES
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         LM    R14,R12,12(R13)         RESTORE RETURN REG: R14
         SR    R15,R15                 SET RETURN CODE TO ZERO
         BR    R14                     RETURN
*********************************************************************
*        STORAGE AND FILE AREAS                                     *
*********************************************************************
*
STREFS   DC    A(OUTREFS)              START OF REFERENCES
CURREFS  DC    A(OUTREFS)              CURRENT REFERENCE POINTER
ENDREFS  DC    A(OUTRECS+61)           END OF REFERENCE AREA
STREFD   DC    A(OUTREFD)              START OF REFERENCES
CURREFD  DC    A(OUTREFD)              CURRENT REFERENCE POINTER
ENDREFD  DC    A(OUTRECD+58)           END OF REFERENCE AREA
*
FIRSTIME DC    X'00'                   FIRST TIME SWITCH
BLANKS   DC    CL80' '                 BLANKS
*
INREC    DS    CL80                    INPUT RECORD
         ORG   INREC
INRECS   DS    0CL80                   "EXECUTES" RECORD
INMEMS   DS    CL8                        MEMBER NAME (JCL)
         DS    CL10                       " EXECUTES "
INPGMS   DS    CL8                        PROGRAM NAME
         DS    CL54
         ORG   INREC
INRECD   DS    0CL80                   "EXECUTED BY" RECORD
INPGMD   DS    CL8                        PROGRAM NAME
         DS    CL13                       " EXECUTED BY "
INMEMD   DS    CL8                        MEMBER NAME (JCL)
         DS    CL51
         ORG
*
OUTRECS  DS    0CL80                    "EXECUTES" OUTPUT RECORD
OUTMEMS  DC    CL8' '                       MEMBER NAME (JCL)
         DC    CL10' EXECUTES '
OUTREFS  DC    CL54' '                      PROGRAM NAMES
         DC    CL8' '
*
OUTRECD  DS    0CL80                    "EXECUTED BY" OUTPUT RECORD
OUTPGMD  DC    CL8' '                       PROGRAM NAME
         DC    CL13' EXECUTED BY '
OUTREFD  DC    CL51' '                      MEMBER NAMES (JCL)
         DC    CL8' '
*********************************************************************
*             DCB'S                                                 *
*********************************************************************
OUTPUT   DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT,                        X
               RECFM=FB,LRECL=80
INPUT    DCB   DSORG=PS,MACRF=GM,DDNAME=INPUT,EODAD=EOJ,               X
               RECFM=FB,LRECL=80
         LTORG
MERGMERG CSECT
*********************************************************************
*             REGISTER EQUATES                                      *
*********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
