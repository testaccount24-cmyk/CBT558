ASCEBDIC SVLNK R3
**********************************************************************
** BASED ON WADE DONAHUE'S ASCEBDIC PROGRAM                          *
** MODIFICATIONS BY R THORNTON JULY 1998                             *
**                                                                   *
** READS A CONTROL STATEMENT FILE AND A DATA FILE WHICH CONTAINS A   *
** MIX OF ASCII AND BINARY DATA. THE CONTROL STATEMENTS IDENTIFY     *
** THE BINARY DATA FIELDS. ALL NON-BINARY FIELDS ARE CONVERTED FROM  *
** ASCII TO EBCDIC USING THE SAME CONVERSION VALUES USED BY THE      *
** XTRA! PROGRAM WHEN TRANSFERRING ASCII FILES. OUTPUT RECORDS ARE   *
** WRITTEN TO THE SYSUT2 FILE WITH THE SAME RECFM, LRECL, AND BLKSIZE*
** AS THE SYSUT1 FILE.                                               *
**                                                                   *
** CONTROL STATEMENTS ARE USED TO IDENTIFY FIELDS WHICH ARE TO BE    *
** LEFT AS-IS (NOT TRANSLATED TO EBCDIC). UP TO 100 FIELDS MAY BE    *
** SPECIFIED, USING ONE OR MORE CONTROL STATEMENTS.                  *
** THE CONTROL CARD IS FIXED FORMAT AS FOLLOWS:                      *
** COL 1-16   EXCLUDE FIELDS=(                                       *
** COL 17-72  DESCRIPTIONS OF FIELDS TO BE IGNORED ENDING WITH A     *
**            CLOSING PARENTHESIS. EACH FIELD IS DESCRIBED BY A PAIR *
**            OF NUMBERS REPRESENTING THE LOCATION OF THE FIELD AND  *
**            ITS LENGTH, SEPARATED BY COMMAS. THE LOCATION IS GIVEN *
**            RELATIVE TO COLUMN 1 AND MUST BE GREATER THAN ZERO AND *
**            NOT GREATER THAN THE LENGTH OF THE RECORD. FIELD LENGTH*
**            CANNOT EXCEED THE REMAINING LENGTH IN THE RECORD.      *
** COL 73-80  ANY DESIRED DATA OR BLANK                              *
**                                                                   *
** EXAMPLE CONTROL CARD TO EXCLUDE A FIELD BEGINNING IN POSITION 1   *
** FOR A LENGTH OF 4 BYTES, A FIELD BEGINNING IN POSITION 42 HAVING  *
** A LENGTH OF 2 BYTES, AND A FIELD BEGINNING IN COLUMN 13 WITH A    *
** LENGTH OF 8 BYTES.                                                *
**                                                                   *
**EXCLUDE FIELDS=(1,4,42,2,13,8)                                     *
**                                                                   *
** EXAMPLE CONTROL CARD TO USE WHEN THERE ARE NO FIELDS TO BE        *
** EXCLUDED:                                                         *
**                                                                   *
**EXCLUDE FIELDS=NONE                                                *
**                                                                   *
**                                                                   *
**                                                                   *
** FILES USED BY THE PROGRAM ARE:                                    *
**   DDNAME   RECFM   LRECL  DESCRIPTION                             *
**   SYSIN     FB      80    CONTROL STATEMENTS (SEE BELOW)          *
**   SYSUT1    FB      ANY   MIXED BINARY AND ASCII INPUT DATA FILE  *
**   SYSUT2    FB            MIXED BINARY AND EBCDIC OUTPUT DATA FILE*
**   SYSPRINT  FBA     133   CONTROL REPORT                          *
**                                                                   *
**********************************************************************
         OPEN  (SYSPRINT,OUTPUT,SYSIN,,SYSUT1) OPEN FILES
         MVC   PRT(L'CCHEADER),CCHEADER CONTROL STATEMENT HEADER
         MVI   PCC,C'1'                SET SKIP TO HOF
         BAS   R9,PRINT                PRINT HEADER
         TM    SYSUT1+48,X'10'         SYSUT1 OPENED O.K?
         BO    GOODOPN1                YES
         MVC   PRT(L'OPNFAIL1),OPNFAIL1 MOVE ERROR MESSAGE TO PRINT
         BAS   R9,PRINT                PRINT ERROR MESSAGE
         ABEND 111,DUMP                TERMINATE IN ERROR
GOODOPN1 TM    SYSUT1+26,X'40'         IS IT A PS DATASET?
         BZ    BADTYPE                 NO
         TM    SYSUT1+36,X'40'         VALID RECFM?
         BO    BADTYPE                 NO
         TM    SYSUT1+36,X'80'         RECFM=F OR FB?
         BO    GOODTYPE                YES
BADTYPE  MVC   PRT(L'BADTYPM),BADTYPM  MOVE ERROR MESSAGE TO PRINT
         BAS   R9,PRINT                PRINT ERROR MESSAGE
         ABEND 222,DUMP                TERMINATE IN ERROR
GOODTYPE MVC   SYSUT2+82(2),SYSUT1+82  COPY SYSUT1 LRECL TO SYSUT2
         MVC   SYSUT2+26(2),SYSUT1+26  COPY SYSUT1 DSORG TO SYSUT2
         MVC   SYSUT2+36(1),SYSUT1+36  COPY SYSUT1 RECFM TO SYSUT2
         OPEN  (SYSUT2,OUTPUT)         OPEN SYSUT2
         TM    SYSUT2+48,X'10'         DID IT OPEN O.K?
         BO    GOODOPN2                YES
         MVC   PRT(L'OPNFAIL2),OPNFAIL2 MOVE ERROR MESSAGE TO PRINT
         BAS   R9,PRINT                PRINT ERROR MESSAGE
         ABEND 333,DUMP                TERMINATE IN ERROR
GOODOPN2 MVC   MAXLENG+2(2),SYSUT2+82  SAVE LRECL AS MAX LENGTH
         MVC   LENG2,MAXLENG           COPY LENGTH FOR MOVES
         TM    SYSIN+48,X'10'          DID SYSIN DATASET OPEN O.K?
         BO    LOADEXCL                YES
         MVC   PRT(L'OPNFAIL3),OPNFAIL3 MOVE ERROR MESSAGE TO PRINT
         BAS   R9,PRINT                PRINT ERROR MESSAGE
         ABEND 444,DUMP                TERMINATE IN ERROR
**********************************************************************
*      CONTROL CARD PROCESSING - LOAD THE EXCLUDE FIELD TABLE        *
**********************************************************************
LOADEXCL LA    R12,FIELDTBL            POINT TO FIRST ENTRY IN TABLE
         USING FIELD,R12
READCTL  GET   SYSIN,CNTLCARD          READ NEXT CONTROL STATEMENT
         MVC   PRT(80),CNTLCARD        CONTROL CARD TO MESSAGE
         BAS   R9,PRINT                PRINT CONTROL CARD
         CLC   CHEADER,EXTRHDR         VALID EXCLUDE PREFIX?
         BE    GOODPRFX                YES
         CLC   CHEADER,EXTRHDR2        VALID EXCLUDE NONE STATEMENT?
         BNE   BADPREFX                NO
         MVC   FIELDTBL(4),HIVALS      SET TABLE STOPPER
         B     MAINLINE                END OF TABLE LOAD
BADPREFX MVC   PRT(L'BADPRFX),BADPRFX  MESSAGE TO PRINT LINE
         BAS   R9,PRINT                PRINT MESSAGE
BADCCRD  ABEND 555,DUMP                TERMINATE IN ERROR
GOODPRFX LA    R11,CFLDS               POINT TO FIELD DEFINITIONS
GETFLDS  BAS   R9,EXTRACT              GO EXTRACT LOCATION
         LH    R1,EXTNBR               GET EXTRACTED NUMBER
         BCTR  R1,0                    MAKE OFFSET RELATIVE TO 0
         STH   R1,FLDOFSET             SAVE FIELD OFFSET
         BAS   R9,EXTRACT              GO EXTRACT LENGTH
         MVC   FLDLENG,EXTNBR          MOVE EXTRACTED LENGTH CODE
         LH    R1,FLDOFSET             PICK UP OFFSET
         AH    R1,FLDLENG              ADD LENGTH
         C     R1,MAXLENG              TOTAL EXCEEDS RECORD LENGTH?
         BH    TOOLONG                 YES, ERROR
         LA    R12,L'FLDNTRY(R12)      ADVANCE TO NEXT TABLE ENTRY
         MVC   0(4,R12),HIVALS         TABLE STOPPER
         C     R12,ENDTBL              PAST END OF TABLE?
         BNL   TOOMANY                 YES, ERROR
         CLI   0(R11),C')'             END OF CONTROL STATEMENT?
         BE    READCTL                 YES, GO READ NEXT ONE
         B     GETFLDS                 NO, CONTINUE THRU THIS ONE
TOOMANY  MVC   PRT(L'TOOMANYM),TOOMANYM MOVE ERROR MESSAGE TO PRINT
         BAS   R9,PRINT                PRINT THE MESSAGE
         B     BADCCRD                 GO PRINT CTL STMT AND ABEND
TOOLONG  MVC   PRT(L'TOOLONGM),TOOLONGM MOVE ERROR MESSAGE TO PRINT
         BAS   R9,PRINT                PRINT THE MESSAGE
         B     BADCCRD                 GO PRINT CTL STMT AND ABEND
BADCTL   MVC   PRT(L'BADCTLM),BADCTLM  MESSAGE TO PRINT LINE
         BAS   R9,PRINT                PRINT THE MESSAGE
         B     BADCCRD                 GO PRINT CTL STMT AND ABEND
CTLEND   CLI   FIELDTBL,X'FF'          ANY CONTROL FIELDS SPECIFIED?
         BNE   MAINLINE                YES
         MVC   PRT(L'NOCTL),NOCTL      MESSAGE TO PRINT LINE
         BAS   R9,PRINT                PRINT THE MESSAGE
         ABEND 777,DUMP                TERMINATE IN ERROR
********************************************************************
*   EXTRACT NUMBER FROM CONTROL STATEMENT. ON ENTRY R11 POINTS TO  *
*   NEXT POSITION OF CONTROL STATEMENT. A NUMBER OF 1-5 BYTES IS   *
*   EXTRACTED AND TESTED FOR NUMERICS. IT ALSO MUST NOT BE GREATER *
*   THAN THE SYSUT1 LRECL, CANNOT BE ZERO, AND MUST BE LOCATED     *
*   PRIOR TO THE END OF THE CONTROL STATEMENT. THE NUMBER ENDS WHEN*
*   A COMMA OR RIGHT PARENTHESIS IS FOUND. ONCE VALIDATED, THE     *
*   NUMBER IS CONVERTED TO BINARY AND STORED IN THE EXTNBR FIELD.  *
********************************************************************
EXTRACT  MVC   NTST,ZEROS              CLEAR WORK AREA
         LA    R1,6                    SET LOOP COUNTER
EXTCKND  C     R11,CTLENDA             PAST END OF CONTROL STATEMENT?
         BNL   INVNBR                  YES
         CLI   0(R11),C','             PAST END OF NUMBER?
         BE    ENDADV                  YES
         CLI   0(R11),C')'             PAST END OF DEFINITIONS?
         BE    ENDSTMT                 YES
         MVC   NTST(4),NTST+1          SHIFT VALUE LEFT ONE
         MVC   NTST+4(1),0(R11)        MOVE IN NEXT DIGIT
         LA    R11,1(R11)              STEP TO NEXT CONTROL STMT POS
         BCT   R1,EXTCKND              CONTINUE UP TO 5 TIMES
         B     INVNBR                  OVER 5 BYTES, ERROR
ENDADV   LA    R11,1(R11)              STEP PAST THE COMMA
ENDSTMT  TRT   NTST,VALNMBR            VALID NUMBER?
         BNZ   INVNBR                  NO, ERROR
         PACK  DBLWORD,NTST            PACK FOR CONVERSION
         CVB   R1,DBLWORD              CONVERT TO BINARY
         LTR   R1,R1                   IS THE VALUE ZERO?
         BZ    INVNBR                  YES, ERROR
         C     R1,MAXLENG              VALUE EXCEEDS SYSUT1 LRECL?
         BH    INVNBR                  YES, ERROR
         STH   R1,EXTNBR               SAVE THE RESULTING VALUE
         BR    R9                      EXIT
INVNBR   MVC   PRT(INVNBND-INVNBRM),INVNBRM ERROR MESSAGE TO PRINT
         BAS   R9,PRINT                PRINT ERROR MESSAGE
         MVC   PRT(80),CNTLCARD        CONTROL STATEMENT TO PRINT
         BAS   R9,PRINT                PRINT CONTROL STATEMENT
         ABEND 999,DUMP                TERMINATE IN ERROR
********************************************************************
*   MAINLINE. READ SYSUT1 RECORDS INTO SYSUT2. TRANSLATE RECORD TO *
*   EBCDIC, THEN REPLACE THE EXCLUDED FIELDS WITH ORIGINAL DATA.   *
*   WRITE THE RESULTING RECORD TO SYSUT2.                          *
********************************************************************
MAINLINE GET   SYSUT1                  READ NEXT SYSUT1 RECORD
         AP    RECIN,P1                COUNT INPUT RECORDS
         ST    R1,SYSUT1A              SAVE SYSUT1 RECORD ADDRESS
         PUT   SYSUT2                  GET POINTER TO SYSUT2 RECORD
         AP    RECOUT,P1               COUNT OUTPUT RECORDS
         ST    R1,SYSUT2A              SAVE SYSUT2 RECORD ADDRESS
         LM    R8,R11,MVLNG            PICK UP MVCL REGS
         MVCL  R8,R10                  MOVE SYSUT1 RECORD TO SYSUT2
         LM    R8,R9,MVLNG             GET SYSUT2 RECORD ADDR, LENG
MLCKOVER C     R9,F256                 OVER 256 BYTES TO TRANSLATE?
         BNH   LAST256                 NO
         TR    0(256,R8),TREBCDIC      YES, TRANSLATE NEXT 256 BYTES
         LA    R8,256(R8)              STEP PAST TRANSLATED BYTES
         S     R9,F256                 DEDUCT 256 FROM REMAIN LGTH
         B     MLCKOVER                CONTINUE TRANSLATION
LAST256  BCTR  R9,0                    DEDUCT 1 FOR LENGTH CODE
         EX    R9,TRLAST               TRANSLATE LAST FEW BYTES
         LA    R12,FIELDTBL            POINT TO EXCLUDED FIELD TABLE
         USING FIELD,R12
MLCKLST  CLI   0(R12),X'FF'            END OF TABLE?
         BE    MAINLINE                YES, ALL THROUGH
         L     R8,SYSUT1A              POINT TO SYSUT1 RECORD
         AH    R8,FLDOFSET             POINT TO EXCLUDED FIELD
         L     R10,SYSUT2A             POINT TO SYSUT2 RECORD
         AH    R10,FLDOFSET            POINT TO EXCLUDED FIELD
         LH    R9,FLDLENG              PICK UP FIELD LENGTH
         LR    R11,R9                  COPY FIELD LENGTH
         MVCL  R10,R8                  RESTORE THE FIELD FROM SYSUT1
         LA    R12,L'FLDNTRY(R12)      STEP TO NEXT TABLE ENTRY
         B     MLCKLST                 LOOP TO RESTORE ALL EXCLUDED
TRLAST   TR    0(1,R8),TREBCDIC        EXECUTED TRANSLATE
MVCFLD   MVC   0(1,R10),0(R8)          EXECUTED MOVE
         DROP  R12
********************************************************************
*   PRINT ROUTINE
********************************************************************
PRINT    PUT   SYSPRINT,P              WRITE PRINT LINE
         MVC   P,BLANKS                CLEAR PRINT LINE
         BR    R9                      EXIT
********************************************************************
*   END OF JOB
********************************************************************
EOJ      MVC   PRT(L'CTHEADER),CTHEADER I/O COUNT HEADER
         MVI   PCC,C'-'                SET TRIPLE SPACE
         BAS   R9,PRINT                PRINT HEADER
         MVC   PRT(L'EDWRD),EDWRD      EDIT WORD TO PRINT
         ED    PRT(L'EDWRD),RECIN      RECORDS READ TO PRINT
         MVC   PRT+L'EDWRD(L'INMSG),INMSG RECORDS READ MESSAGE
         BAS   R9,PRINT                PRINT THE MESSAGE
         MVC   PRT(L'EDWRD),EDWRD      EDIT WORD TO PRINT
         ED    PRT(L'EDWRD),RECOUT     RECORDS WRITTEN TO PRINT
         MVC   PRT+L'EDWRD(L'OUTMSG),OUTMSG RECORDS READ MESSAGE
         BAS   R9,PRINT                PRINT THE MESSAGE
         CLOSE (SYSUT2,,SYSUT1,,SYSIN,,SYSPRINT) CLOSE FILES
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         LM    R14,R12,12(R13)         RESTORE CALLER'S AREA
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN TO CALLER
********************************************************************
*   WORK FIELDS
********************************************************************
DBLWORD  DS    D
*
MVLNG    DS    0F                  *** NEXT 4 FIELDS MUST BE CONTIG
SYSUT2A  DS    A                       ADDRESS OF SYSUT2 RECORD
LENG2    DS    F                       LENGTH OF RECORD
SYSUT1A  DS    A                       ADDRESS OF SYSUT1 RECORD
MAXLENG  DC    F'0'                    MAXIMUM RECORD LENGTH
* ***
F256     DC    F'256'                  CONSTANT 256
ENDTBL   DC    A(FIELDEND)             END OF FIELD TABLE
CTLENDA  DC    A(CNBR)                 END OF CONTROL STATEMENT
EXTNBR   DS    H                       EXTRACTED NUMBER -1
EXTRHDR  DC    CL16'EXCLUDE FIELDS=('  EXCLUDE CARD PREFIX
EXTRHDR2 DC    CL16'EXCLUDE FIELDS=NONE' "NONE" CONTROL STMT
BADPRFX  DC    C'INVALID EXCLUDE CARD PREFIX IN STATEMENT ABOVE'
NOCTL    DC    C'NO CONTROL STATEMENTS FOUND IN THE SYSIN FILE'
BADCTLM  DC    C'INVALID FIELD DEFINITION IN STATEMENT ABOVE'
TOOLONGM DC    C'AN EXCLUDED FIELD EXTENDS PAST END OF RECORD IN ABOVE'
TOOMANYM DC    C'OVER 100 EXCLUDED FIELDS DEFINED'
HIVALS   DC    XL4'FFFFFFFF'           HIGH VALUES
OPNFAIL1 DC    C'SYSUT1 FAILED TO OPEN' ERROR MESSAGE
OPNFAIL2 DC    C'SYSUT2 FAILED TO OPEN' ERROR MESSAGE
OPNFAIL3 DC    C'SYSIN FAILED TO OPEN' ERROR MESSAGE
BADTYPM  DC    C'SYSUT1 MUST BE DSORG=PS,RECFM=FB' ERROR MESSAGE
RECIN    DC    PL5'0'                  RECORDS READ FROM SYSUT1
RECOUT   DC    PL5'0'                  RECORDS WRITTEN TO SYSUT2
P1       DC    P'1'                    CONSTANT 1
INMSG    DC    C' RECORDS READ FROM SYSUT1'
OUTMSG   DC    C' RECORDS WRITTEN TO FROM SYSUT2'
CCHEADER DC    C'***** CONTROL STATEMENTS READ *****'
CTHEADER DC    C'***** INPUT/OUTPUT COUNTS *****'
EDWRD    DC    XL12'402020206B2020206B202020' EDIT WORD
INVNBRM  DS    0C
         DC    C'INVALID NUMBER IN STATEMENT BELOW: 0, '
         DC    C'NONNUMERIC, GREATER THAN SYSUT1 LRECL, OR'
         DC    C' MISSING PUNCTUATION.'
INVNBND  EQU   *
VALNMBR  DC    256X'FF'                TRT TABLE FOR VALID DIGITS
         ORG   VALNMBR+C'0'
         DC    10X'00'
         ORG
TREBCDIC DS    0CL256                  TR TABLE: ASCII TO EBCDIC
         DC    XL16'00010203372D2E2F1605250B0C0D0E0F' 00-0F
         DC    XL16'101112133C3D322618193F271C1D1E1F' 10-1F
         DC    XL16'405A7F7B5B6C507D4D5D5C4E6B604B61' 20-2F
         DC    XL16'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F' 30-3F
         DC    XL16'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6' 40-4F
         DC    XL16'D7D8D9E2E3E4E5E6E7E8E9BAE0BBB06D' 50-5F
         DC    XL16'79818283848586878889919293949596' 60-6F
         DC    XL16'979899A2A3A4A5A6A7A8A9C04FD0A107' 70-7F
         DC    XL16'68DC5142434447485253545756586367' 80-8F
         DC    XL16'719C9ECBCCCDDBDDDFECFC4AB1B23E6A' 90-9F
         DC    XL16'4555CEDE49699A9BAB205FB8B7AA8A8B' A0-AF
         DC    XL16'21226223646566241506701772737475' B0-BF
         DC    XL16'7677788028298C8D8E2A2B2C090A9D1B' C0-CF
         DC    XL16'9F30311AACADAEAF33343536B4B5B608' D0-DF
         DC    XL16'3859393ABCBDA0BFCA3B041446CFDAB9' E0-EF
         DC    XL16'BE8FEEFAFDEBE1ED90EFB3FBFFEAFE41' F0-FF
BLANKS   DC    CL133' '                BLANKS
NTST     DC    CL5' ',CL1' '           WORK FIELD FOR NUMERIC TEST
ZEROS    DC    CL5'00000'              ZEROS
*
P        DS    0CL131                  PRINT DATA LINE
PCC      DC    C'1'
PRT      DC    CL132' '                PRINT DATA
*
CNTLCARD DS    0CL80            CONTROL CARD DESCRIPTION
CHEADER  DS    CL16                    EXCLUDE FIELDS=(
CFLDS    DS    CL56                    FIELD DESCRIPTORS OOO,LL
CNBR     DS    CL8                     COL 73-80
********************************************************************
*   DSECTS
********************************************************************
FIELD    DSECT                   EXCLUDE TABLE ENTRY DESCRIPTION
FLDNTRY  DS    0F                      ENTRY GROUP NAME
FLDOFSET DS    H                       FIELD OFFSET
FLDLENG  DS    H                       FIELD LENGTH CODE
ASCEBDIC CSECT
********************************************************************
*   FILE DEFINITIONS
********************************************************************
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=CTLEND
SYSUT1   DCB   DSORG=PS,MACRF=GL,DDNAME=SYSUT1,EODAD=EOJ
SYSUT2   DCB   DSORG=PS,MACRF=PL,DDNAME=SYSUT2
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,LRECL=133,                     X
               RECFM=FBA,DSORG=PS
********************************************************************
*   FIELD EXCLUDE TABLE
********************************************************************
         LTORG
         DS    0F
FIELDTBL DC    4X'FF'                  FIELD EXCLUDE TABLE
         DS    100F                    ROOM FOR 100 FIELD DEFINITIONS
FIELDEND DC    4X'FF'                  END OF TABLE
   END
