         TITLE '***** WRITE MEMBER/CSECT FILE *****'
CSECTLST SVLNK R3,R4
         PRINT NOGEN
*
***********************************************************************
* READS A CONTROL CARD INPUT DATASET. EACH 80-BYTE INPUT RECORD HAS   *
* A MEMBER NAME IN COLUMNS 1-8. FOR EACH CONTROL CARD MEMBER NAME:    *
*  .ISSUES A BLDL TO THE SYSLIB DATASET TO OBTAIN THE DIRECTORY ENTRY.*
*  .READS THE LOAD MODULE DATA RECORDS TO BUILD A SYMBOL TABLE.       *
*  .WRITE ONE OUTPUT RECORD FOR EACH CSECT GIVING DSNAME OF THE SYSLIB*
*   DATASET, MEMBER NAME, CSECT NAME, LENGTH, LANGUAGE, AND AN        *
*   INDICATOR SHOWING WHETHER THIS IS THE ENTRY POINT CSECT OF THE    *
*   MEMBER. OUTPUT FILE IS INTENDED TO BE INPUT TO PROGRAM COBLSUBR.  *
*                                                                     *
* FILES USED BY THIS PROGRAM INCLUDE THE FOLLOWING:                   *
*     DDNAME SYSIN:    RECFM=FB,LRECL=80 - INPUT CONTROL CARD FILE.   *
*     DDNAME SYSLIB:   RECFM=U. INPUT LOAD MODULE LIBRARY.            *
*     DDNAME SYSOUT:   RECFM=FB,LRECL=80 - MODULE/CSECT RECORDS.      *
*     DDNAME SYSPRINT: RECFM=FBA,LRECL=133 - MESSAGES                 *
*                                                                     *
* AUTHOR R THORNTON - JUN 1992 (USING PGMTYPE AS THE BASIS)           *
***********************************************************************
* OPEN FILES, AND GET STORAGE FOR THE SYMBOL AND RLD TABLES           *
***********************************************************************
*
OPEN1    OPEN  (SYSPRINT,OUTPUT,SYSOUT,OUTPUT,SYSLIB,,SYSIN) OPEN FILES
         RDJFCB SYSLIB                 READ THE JFCB FOR SYSLIB
         STORAGE OBTAIN,LENGTH=65535   GET BUFFER STORAGE
         ST    R1,BUFAD                SAVE BUFFER ADDRESS
         STORAGE OBTAIN,LENGTH=38000   GET SYMBOL TABLE STORAGE
         ST    R1,SYMTBAD              SAVE SYMBOL TABLE ADDRESS
         ST    R1,CURRSYM              SAVE CURRENT SYMBOL ADDR
         MVI   0(R1),X'FF'             TABLE END INDIC
         A     R1,ENDSYM               COMPUTE END ADDR
         ST    R1,ENDSYM               STORE TBL END ADDR
         STORAGE OBTAIN,LENGTH=32767   GET STORAGE FOR TEXT
         ST    R1,TXTSTRT              SAVE TEXT ADDR
***********************************************************************
* READ NEXT CONTROL CARD AND ISSUE BLDL FOR THE MODULE                *
***********************************************************************
*
NEXTCARD GET   SYSIN,CTLCARD           READ CONTROL CARD
         MVC   MEMBER,CCMEMB           MOVE MEMBER NAME TO BLDL LIST
         BLDL  SYSLIB,BLDLIST          ISSUE BLDL
         LTR   R15,R15                 ANY ERRORS
         BZ    GOTMEM                  NO
         MVC   MISSMBR,MEMBER          MEMBER NAME TO MESSAGE
         MVC   PRTREC(L'INVMEM),INVMEM MEMBER NOT IN PDS MESSAGE
         B     NEXTCARD                GO READ NEXT CONTROL CARD
GOTMEM   MVI   CCAT,0                  INSURE TTR0
         POINT SYSLIB,TTRMOD           POINT TO 1ST BLOCK OF MODULE
         MVC   CURRSYM,SYMTBAD         RESET TABLE ADDRESS
*
***********************************************************************
* MAINLINE PROCESSING FOR THE LOAD MODULE.                            *
***********************************************************************
*
MAINLINE L     R6,BUFAD                GET BUFFER ADDRESS
         READ  DECB,SF,SYSLIB,(6),'S'  READ BLOCK FROM MEMBER
         CHECK DECB                    AWAIT COMPLETION
         CLI   0(R6),X'20'             CESD RECORD
         BNE   TESTOTHR                NO
         BAS   R9,CESDREC              PROCESS CESD RECORDS
         B     MAINLINE                GO READ AGAIN
TESTOTHR CLI   0(R6),1                 IT IS CONTROL
         BE    PERFORM                 YES
         CLI   0(R6),5                 IS IT CONTROL
         BE    PERFORM                 YES
         CLI   0(R6),13                IS IT CONTROL
         BE    PERFORM                 YES
         CLI   0(R6),3                 IS IT CTL AND RLD
         BE    PERFORM                 YES
         CLI   0(R6),7                 IS IT CTL AND RLD
         BE    PERFORM                 YES
         CLI   0(R6),15                IS IT CTL AND RLD
         BE    PERFORM                 YES
         CLI   0(R6),2                 IS IT RLD?
         BE    RLDREC                  YES
         CLI   0(R6),6                 IS IT RLD?
         BE    RLDREC                  YES
         CLI   0(R6),14                IS IT RLD?
         BNE   MAINLINE                NONE OF THESE, SKIP
RLDREC   TM    0(R6),X'08'             LAST RECORD IN MEMBER?
         BNO   MAINLINE                NO, SKIP IT
         BAS   R9,OUTPUT               NO, GO WRITE CSECTS
         B     NEXTCARD                AND READ NEXT CONTROL CARD
PERFORM  BAS   R9,CNTLRECS             PROCESS CONTROL RECORD
         TM    PROCESS,X'40'           MODULE PROCESSING DONE
         BZ    MAINLINE                NO, GO READ AGAIN
         BAS   R9,OUTPUT               NO, GO WRITE CSECTS
         B     NEXTCARD                AND READ NEXT CONTROL CARD
*
****************************************************************
* PROCESS LOAD MODULE CONTROL RECORDS. THESE RECORDS PRECEDE   *
* TEXT RECORDS, WHICH ARE READ AND PLACED IN STORAGE IN CONTIG-*
* UOUS LOCATIONS.                                              *
****************************************************************
*
CNTLRECS ST    R9,CT9                  SAVE RETURN ADDR
         L     R9,TXTSTRT              POINT TO TEXT STORAGE AREA
READTEXT READ  DECB,SF,,(9),MF=E       READ FOLLOWING TEXT RECORD
         CHECK DECB                    AWAIT COMPLETION
         SR    R8,R8                   CLEAR WORK
         TM    0(R6),X'08'             RECD PRECEDES LAST RECD OF MBR?
         BZ    CNCKTYP                 NO
         OI    PROCESS,X'40'           YES, SHOW END OF FILE
CNCKTYP  TM    0(R6),X'02'             CONTROL AND RLD?
         BO    CNPASRLD                YES
         LA    R12,16(R6)              @ CESD ENTRY NBR
         B     CNCKESD                 CONTINUE
CNPASRLD LH    R12,6(R6)               GET RLD SECTION LENGTH
         LA    R12,16(R6,R12)          @ CESD ENTRY NBR
CNCKESD  LH    R11,4(R6)               LENGTH OF CONTROL INFO SECTION
         SRL   R11,2                   COMPUTE NBR CNTL ENTRIES
         SR    R10,R10                 OFFSET TO 1ST BYTE
         SR    R9,R9                   INITIALIZE TEXT OFFSET
         SR    R1,R1                   CLEAR FOR INSERT
CNCKESD1 L     R1,SYMTBAD              POINT TO SYMBOL TABLE
         USING SYMTBL,R1
SYMNDCK1 CLI   0(R1),X'FF'             END OF TABLE?
         BNE   CPRESDID                NO
         XC    SYMENT,SYMENT           YES, CLEAR ENTRY
         MVC   EXTSYM,=C'????????'     SYMBOL NAME UNKNOWN
         MVI   TYPSYM,X'FF'            UNKNOWN TYPE
         MVC   SYMESDID,0(R12)         SET ESD ID
         MVC   SYMPGMTY,C' '           SET PROGRAM TYPE
         MVI   SYMENT+L'SYMENT,X'FF'   SET NEW TABLE END
CPRESDID CLC   SYMESDID,0(R12)         FOUND CORRECT ENTRY?
         BE    CHKUSED                 YES
         LA    R1,L'SYMENT(R1)         STEP TO NEXT ENTRY
         B     SYMNDCK1                CONTINUE
CHKUSED  CLI   SYMPGMTY,C' '           ENTRY ALREADY FILLED?
         BNE   NEXTCTL                 YES
         LR    R2,R10                  COPY TEXT OFFSET
         A     R2,TXTSTRT              COMPUTE TEXT ADDRESS
         CLC   COBOLVA,0(R2)           PROBABLY VS COBOL?
         BNE   TRYCOB2                 NO
         CLC   COBOLVB,24(R2)          IS IT VS COBOL?
         BE    ISCOBOL                 YES
TRYCOB2  CLC   COBOL2A,0(R2)           POSSIBLY COBOL II?
         BNE   TRYCOB3                 NO
         CLC   COBOL2B,14(R2)          IS IT COBOL II?
         BE    ISCOBOL                 YES
TRYCOB3  CLC   COBOL3A,0(R2)           IS IT COBOL 390?
         BNE   TRYEZTR                 NO
ISCOBOL  MVI   SYMPGMTY,C'C'           YES, SET COBOL INDICATOR
         B     NEXTCTL                 CONTINUE
TRYEZTR  CLC   EZPLUS(16),0(R2)        IS IT EASYTRIEVE PLUS?
         BE    ISEZPLUS                YES
         CLC   EZ2A,0(R2)              IS IT EZPLUS?
         BNE   EZTST3                  NOT THIS VERSION
         CLC   EZ2B,44(R2)             IS IT EZ PLUS?
         BE    ISEZPLUS                YES
EZTST3   CLC   EZ3,5(R2)               IS IT EASY PLUS?
         BNE   CKLIBRY                 NO, CHECK LIBRARY MODULES
ISEZPLUS MVI   SYMPGMTY,C'E'           SET EASYPLUS INDICATOR
         B     NEXTCTL                 CONTINUE
CKLIBRY  CLC   EXTSYM(4),=CL4'ILBO'    OLD COBOL MODULE?
         BE    ISLIBRY                 YES
         CLC   EXTSYM(3),=CL3'IGZ'     COBOL 2 MODULE?
         BE    ISLIBRY                 YES
         CLC   EXTSYM(3),=CL3'CEE'     LANGUAGE ENVIRONMENT MODULE?
         BNE   CKVNDR                  NO
ISLIBRY  MVI   SYMPGMTY,C'L'           SET LIBRARY MODULE INDICATOR
         B     NEXTCTL                 CONTINUE
CKVNDR   CLI   EXTSYM,C'D'             POSSIBLE VENDOR MODULE?
         BNE   DFLTASM                 NO
         CLC   EXTSYM+1(2),=CL2'FH'    NAME BEGINS WITH DFH?
         BE    CKDFH                   YES
         CLC   EXTSYM+1(2),=CL2'SN'    NAME BEGINS WITH DSN?
         BE    CKDSN                   YES
         CLC   EXTSYM+1(2),=CL2'FS'    NAME BEGINS WITH DFS?
         BNE   DFLTASM                 NONE OF THESE
CKDFS    CLC   EXTSYM+3(5),=CL5'LI000' IS IT DFSLI000?
         BE    ISVND                   YES
         B     DFLTASM                 NO
CKDFH    CLC   EXTSYM+3(5),=CL5'ECI'   IS IT DFHECI?
         BE    ISVND                   YES
         CLC   EXTSYM+3(5),=CL5'DLIAI' IS IT DFHDLIAI?
         BE    ISVND                   YES
         B     DFLTASM                 NONE OF THESE
CKDSN    CLC   EXTSYM+3(5),=CL5'AA'    IS IT DSNAA?
         BE    ISVND                   YES
         CLC   EXTSYM+3(5),=CL5'CLI'   IS IT DSNCLI?
         BE    ISVND                   YES
         CLC   EXTSYM+3(5),=CL5'HADDR' IS IT DSNHADDR?
         BE    ISVND                   YES
         CLC   EXTSYM+3(5),=CL5'HMVHW' IS IT DSNHMVHW?
         BNE   DFLTASM                 NONE OF THESE
ISVND    MVI   SYMPGMTY,C'V'           INDICATE VENDOR MODULE
         B     NEXTCTL                 CONTINUE
DFLTASM  CLC   0(4,R2),=X'90ECD00C'    NORMAL ASM E.P. CODE?
         BE    ISASM                   YES
         CLC   0(2,R2),=XL2'47F0'      NORMAL ASM E.P. CODE?
         BE    ISASM                   YES
         CLI   0(R2),X'05'             NORMAL ASM E.P. CODE?
         BE    ISASM                   YES
         CLI   0(R2),X'45'             NORMAL ASM E.P. CODE?
         BE    ISASM                   YES
         CLI   0(R2),X'0B'             NORMAL ASM E.P. CODE?
         BE    ISASM                   YES
         CLI   0(R2),X'0D'             NORMAL ASM E.P. CODE?
         BE    ISASM                   YES
         CLI   0(R2),X'4D'             NORMAL ASM E.P. CODE?
         BE    ISASM                   YES
NOTASM   MVI   SYMPGMTY,C'?'           NONE OF THESE
         B     NEXTCTL                 CONTINUE
ISASM    MVI   SYMPGMTY,C'A'           NO, SET ASSEMBLER INDICATOR
         DROP  R1
NEXTCTL  AH    R10,2(R12)              UPDATE TEXT OFFSET
         LA    R12,4(R12)              TO NEXT CNTL ENTRY
         BCT   R11,CNCKESD1            LOOP THRU CNTL ENTRIES
CTXIT    L     R9,CT9                  GET RETURN ADDR
         BR    R9                      EXIT
*
****************************************************************
* PROCESS COMPOSITE ESD RECORDS. DATA FROM THESE RECORDS IS    *
* PLACED IN THE SYMBOL TABLE.                                  *
****************************************************************
*
CESDREC  ST    R9,CES9                 SAVE RETURN
         L     R7,CURRSYM              GET SYMBOL TBL ADDR
         USING SYMTBL,R7
         LH    R10,4(R6)               GET ESD ID OF 1ST ITEM
         LH    R8,6(R6)                NBR BYTES OF ESD DATA
         SRL   R8,4                    COMPUTE NBR ENTRIES
         LA    R6,8(R6)                STEP TO 1ST RECORD ESD ITEM
CESDNXT  C     R7,ENDSYM               END OF TABLE
         BNL   SYMFULL                 YES, ERROR
         MVC   EXTSYM,0(R6)            SYMBOL NAME
         MVC   TYPSYM,8(R6)            TYPE
         NI    TYPSYM,X'0F'            CLEAR BITS 0-3
         MVC   SYMIND,8(R6)            INDICATOR BYTE
         NI    SYMIND,X'0F'            CLEAR BITS 4-7
         TM    8(R6),X'14'             POSSIBLE ENTAB/SEGTAB
         BNO   CEMVAD                  NO
         TM    8(R6),X'03'             IS IT ENTAB/SEGTAB
         BNZ   CEMVAD                  NO
         MVC   TYPSYM(2),=X'0F00'      SHOW ENTAB/SEGTAB
CEMVAD   MVC   SYMADDR,9(R6)           ADDRESS OF SYMBOL
         MVC   SYMSEG,12(R6)           SEGMENT WHERE DEFINED
         MVC   SYMLENG,13(R6)          LENGTH OR LR ESD ID
         MVI   SYMPGMTY,C' '           CLEAR PROGRAM TYPE
         STCM  R10,3,SYMESDID          ESD ID
         CLI   TYPSYM,0                IS THIS AN SD?
         BE    ADVNC                   YES
         CLI   TYPSYM,4                IS IT AN UNNAMED CSECT?
         BNE   ADVNC2                  NO
ADVNC    LA    R7,L'SYMENT(R7)         TO NEXT TBL ENTRY LOCATION
ADVNC2   LA    R10,1(R10)              ADD 1 TO ESD COUNTER
         LA    R6,16(R6)               TO NEXT ESD ITEM IN INPUT
         BCT   R8,CESDNXT              LOOP THRU INPUT RECORD
         MVI   0(R7),X'FF'             SET END OF TABLE INDIC
         ST    R7,CURRSYM              SAVE NEXT TABLE ADDR
CESDEXIT L     R9,CES9                 GET RETURN ADDR
         BR    R9                      EXIT
         DROP  R7
SYMFULL  WTO   'CSECTLST: SYMBOL TABLE FULL. EXPAND AND RERUN',        X
               ROUTCDE=11
         ABEND 777,DUMP                TERMINATE IN ERROR
*
****************************************************************
* CREATE PRINTABLE HEX FROM HEX. ON ENTRY, REG 12 CONTAINS THE *
* ADDRESS OF THE DATA TO BE REFORMATTED. ENTRY POINT USED      *
* DETERMINES THE SIZE OF THE FIELD. OUTPUT DATA IS PLACED IN   *
* THE PRTABL FIELD, 2 CHARACTERS PER BYTE.                     *
****************************************************************
*
HEXPRT1  UNPK  PRTABL(3),0(2,R12)      UNPACK HEX
         B     HEXCLTR                 CONTINUE
HEXPRT2  UNPK  PRTABL(5),0(3,R12)      UNPACK HEX
         B     HEXCLTR                 CONTINUE
HEXPRT3  UNPK  PRTABL(7),0(4,R12)      UNPACK HEX
         B     HEXCLTR                 CONTINUE
HEXPRT4  UNPK  PRTABL(9),0(5,R12)      UNPACK HEX
HEXCLTR  MVZ   PRTABL(8),XZROS         CLEAR FOR TRANSLATE
         TR    PRTABL(8),TRTBL         MAKE PRINTABLE
         BR    R9                      EXIT
*
****************************************************************
* PRINT TO MESSAGE FILE                                        *
****************************************************************
*
PRINT    PUT   SYSPRINT,PRTREC         WRITE PRINT RECORD
         MVC   PRTREC,BLANKS           CLEAR PRINT  RECORD
         BR    R9                      EXIT
*
****************************************************************
* WRITE ONE RECORD PER CSECT TO OUTPUT FILE                    *
****************************************************************
*
OUTPUT   ST    R9,OUT9                 SAVE RETURN ADDRESS
         USING SYMTBL,R11
         L     R11,SYMTBAD             POINT TO SYMBOL TABLE
SRTPASS  LA    R12,L'SYMENT(R11)       POINT TO NEXT ENTRY
         CLI   0(R12),X'FF'            END OF TABLE?
         BE    BGNOUT                  YES, ALL SORTED
SRTCMPR  CLC   SYMADDR,SYMADDR-SYMENT(R12) THIS ENTRY IS HIGH?
         BNH   SRTBUMP                 NO
         MVC   SYMHOLD,SYMENT          YES, SAVE ENTRY
         MVC   SYMENT,0(R12)           MOVE LOWER ENTRY BACK
         MVC   0(L'SYMENT,R12),SYMHOLD MOVE ORIGINAL TO HIGHER LOCATION
SRTBUMP  LA    R12,L'SYMENT(R12)       ADVANCE TO NEXT ENTRY
         CLI   0(R12),X'FF'            AT END OF TABLE?
         BNE   SRTCMPR                 NO
         LA    R11,L'SYMENT(R11)       YES, ADVANCE 1ST POINTER
         B     SRTPASS                 AND START NEXT PASS
BGNOUT   L     R11,SYMTBAD             POINT TO SYMBOL TABLE
         USING SYMTBL,R11
SYMENDCK CLI   0(R11),X'FF'            END OF TABLE?
         BE    OUTXIT                  YES
         MVC   PDSNAME,JFCBDSNM        MOVE THE SYSLIB DSNAME
         MVC   PMEMBR,MEMBER           MEMBER NAME
         CLI   TYPSYM,0                IS IT AN SD?
         BNE   CHPRVT                  NO
         MVC   PSYM,EXTSYM             YES, MOVE PROGRAM NAME
         B     SETLANG                 CONTINUE
CHPRVT   CLI   TYPSYM,4                UNNAMED CSECT?
         BNE   SETLANG                 NO
         MVC   PSYM,=CL8'$PRIVATE'     YES
SETLANG  MVC   PLANG,=C'COB'           ASSUME COBOL
         CLI   SYMPGMTY,C'C'           IS IT COBOL?
         BE    DOSIZE                  YES
         MVC   PLANG,=C'ASM'           ASSUME ASSEMBLER
         CLI   SYMPGMTY,C'A'           IS IT ASSEMBLER?
         BE    DOSIZE                  YES
         MVC   PLANG,=C'EZ+'           ASSUME EASYTRIEVE PLUS
         CLI   SYMPGMTY,C'E'           IS IT EASYPLUS?
         BE    DOSIZE                  YES
         MVC   PLANG,=C'LIB'           ASSUME LIBRARY MODULE
         CLI   SYMPGMTY,C'L'           IS IT A LIBRARY MODULE?
         BE    DOSIZE                  YES
         MVC   PLANG,=C'VND'           ASSUME VENDOR MODULE
         CLI   SYMPGMTY,C'V'           IS IT A VENDOR MODULE?
         BE    DOSIZE                  YES
         MVC   PLANG,=C'???'           UNIDENTIFIED TYPE
DOSIZE   LA    R12,SYMLENG             CONVERT
         BAS   R9,HEXPRT3                 LENGTH
         MVC   PSIZE,PRTABL                  TO PRINTABLE
         LA    R12,SYMADDR             CONVERT
         BAS   R9,HEXPRT3                 LENGTH
         MVC   PADDR,PRTABL                  TO PRINTABLE
         MVI   PENTPT,C' '             ASSUME THIS IS NOT ENTRY
         SR    R14,R14                 GET CSECT RELATIVE
         ICM   R14,7,SYMADDR             ADDRESS WITHIN RUN UNIT
         SR    R15,R15                 GET LINKEDIT ASSIGNED
         ICM   R15,7,LKEPA               ENTRY POINT ADDRESS
         CR    R15,R14                 IS ENTRY IN THIS CSECT?
         BL    PUTOUT                  NO
         SR    R1,R1                   GET RELATIVE END OF
         ICM   R1,7,SYMLENG               CSECT ADDRESS
         AR    R14,R1                         WITHIN RUN UNIT
         CR    R15,R14                 IS ENTRY POINT IN THIS CSECT?
         BNL   PUTOUT                  NO
         MVI   PENTPT,C'*'             YES, INDICATE ENTRY CSECT
PUTOUT   PUT   SYSOUT,OUTREC           WRITE TO OUTPUT FILE
         MVC   OUTREC,BLANKS           CLEAR OUTPUT RECORD
STEPSYM  LA    R11,L'SYMENT(R11)       STEP TO NEXT ENTRY
         B     SYMENDCK                CONTINUE
OUTXIT   L     R9,OUT9                 RETURN
         BR    R9                         TO CALLER
         DROP  R11
*
****************************************************************
* END OF JOB.                                                  *
****************************************************************
*
EOJ      CLOSE (SYSLIB,,SYSOUT,,SYSIN) CLOSE FILES
         L     R13,4(R13)              GET POINTER TO CALLER'S SAVE ARE
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGS
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN TO CALLER
*
****************************************************************
*                     DATA AND WORK AREAS
****************************************************************
*
         DS    0D
DBLWD    DS    D                       DOUBLEWORD WORK AREA
OUT9     DS    A                       RETURN ADDRESS FROM OUTPUT
CSECT    DC    CL8' '                  SPECIFIED CSECT NAME
ESDID    DC    X'0001'                 ESD ID OF SPECIFIED CSECT
ENDLBLNM DC    CL8' '                  SYMBOL FOR END STMT BEGIN POINTE
START    DC    F'0'                    LKED ASSIGNED START ADDR OF CSEC
END      DC    F'0'                    CSECT END ADDRESS
LENGTH   DC    F'0'                    LENGTH OF SPECIFIED CSECT
TXTSTRT  DS    F                       @ TEXT STORAGE AREA
TXTEND   DS    F                       @ END OF TEXT AREA
TXTCURR  DS    F                       @ CURRENT TEXT LOC
BLANKS   DC    CL133' '                CONSTANT BLANKS
SYMHOLD  DS    CL(L'SYMENT)            HOLD AREA FOR SORTING SYMTBL
*
PRTREC   DS    0CL133                  PRINT LINE
PCC      DS    CL1                     CARRIAGE CONTROL
PRT      DS    CL132                   MESSAGE DATA
*
CTLCARD  DS    0CL80                   CONTROL CARD
CCMEMB   DS    CL8                     MEMBER NAME
         DS    CL72
*
OUTREC   DS    0CL80                   OUTPUT RECORD
PMEMBR   DC    CL8' '                    MEMBER NAME
         DC    CL1' '
PENTPT   DC    CL1' '                    * IF ENTRY POINT FOR MODULE
PSYM     DC    CL8' '                    MEMBER NAME
         DC    CL1' '
PLANG    DC    CL3' '                    ASM OR COB
         DC    CL1' '
PADDR    DC    CL6' '                    CSECT OFFSET, PRINTABLE HEX
         DC    CL1' '
PSIZE    DC    CL6' '                    CSECT SIZE IN PRINTABLE HEX
         DC    CL1' '
PDSNAME  DC    CL43' '                   SYSLIB'S DSNAME
*
*
*
         DS    0F
BLDLIST  DS    0CL62                   BLDL LIST
         DC    H'1'                    ONE ENTRY
         DC    H'58'                   LENGTH OF ENTRY
MEMBER   DC    CL8' '                  MEMBER NAME
TTRMOD   DC    XL3'000000'             TTR OF MODULE
CCAT     DC    XL1'00'                 CONCATENATION NUMBER
         DC    XL1'00'
ALIASIND DC    XL1'00'                 ALIAS AND MISC INDICATOR
*                           80=ALIAS
TTR1TXT  DC    XL3'000000'             TTR OF 1ST TXT RECORD
         DC    XL1'00'
TTRNS    DC    XL3'000000'             TTR OF NOTE OR SCATTER LIST
NNOTE    DC    XL1'00'                 NBR ENTRIES IN NOTE LIST
ATTR1A   DC    XL1'00'                 MODULE ATTRIBUTES 1, BYTE 1
*                           80=RENT
*                           40=REUS
*                           20=OVERLAY
*                           10=UNDER TEST
*                           08=ONLY LOADABLE
*                           04=SCATTER FORMAT
*                           02=EXECUTABLE
*                           01=ONE TXT, NO RLD RECORDS
ATTR1B   DC    XL1'00'                 ATTRIBUTES 1, BYTE 2
*                           80=CANNOT BE REPROCESSED BY LKED E
*                           40=ORIGIN OF 1ST TXT RECORD IS ZERO
*                           20=ASSIGNED ENTRY POINT ADDR IS ZERO
*                           10=CONTAINS NO RLD RECORD
*                           08=CANNOT BE REPROCESSED BY LKED
*                           04=CONTAINS TESTRAN SYMBOLS
*                           02=CREATED BY LKED
*                           01=REFR
TOTVIRT  DC    XL3'000000'             TOTAL VIRTUAL STRG REQRD FOR MOD
LENG1    DC    XL2'0000'               LENGTH OF 1ST TEXT RECORD
LKEPA    DC    XL3'000000'             ASSIGNED ENTRY POINT ADDR
ATTR2    DC    XL1'00'                 ATTRIBUTES 2
*                           80=PROCESSED BY OS/VS LKED
*                           20=PAGE ALIGNMENT REQUIRED FOR MODULE
*                           10=SSI PRESENT
         DC    XL2'0000'
SCTRLEN  DC    XL2'0000'               SCATTER LIST LENGTH
TTLEN    DC    XL2'0000'               TRANSLATION TABLE LENGTH
SCESDID  DC    XL2'0000'               CESD NBR FOR 1ST TXT RECD
SCEPESD  DC    XL2'0000'               CESD NBR FOR ENTRY POINT
ALEPA    DC    XL3'000000'             ENTRY POINT OF THE MEMBER NAME
ALMEM    DC    CL8' '                  REAL MEMBER NAME FOR ALIAS
SSI      DS    XL4'00000000'           SSI BYTES
AUTHLEN  DC    XL1'00'                 AUTH CODE LENGTH
AUTHCOD  DC    XL1'00'                 AUTH CODE
*
*
*
SYMTBL   DSECT ,                       EXTERNAL SYMBOL TABLE ENTRY
SYMENT   DS    0CL20                   20 BYTE ENTRIES
EXTSYM   DS    CL8                     EXTERNAL SYMBOL NAME
TYPSYM   DS    XL1                     SYMBOL TYPE
*                        00=SD (NAMED CSECT)
*                        02=ER (EXTRN)
*                        03=LR (ENTRY)
*                        04=PC (UNNAMED CSECT)
*                        05=CM (COM)
*                        06=PR (PSEUDO REGISTER)
*                        07=NULL
*                        0A=WX (WXTRN)
*                        0F=ENTAB OR SEGTAB
SYMIND   DS    XL1                     INDICATOR
*                        BIT 0 = MAP
*                        BIT 1 = CHAIN
*                        BIT 2 = INSERT
*                        BIT 3 = DELETE/REPLACE
SYMADDR  DS    XL3                     SYMBOL ADDRESS (0 FOR ER, WX, NU
SYMSEG   DS    XL1                     SEGMENT ID (0 FOR ER, WX, NULL)
SYMLRID  DS    0XL2                    ESD ID OF DEF FOR LR
SYMLENG  DS    XL3                     LENGTH FOR SD, PC, CM, PR
*                        0 FOR ER, WX, NULL
SYMESDID DS    XL2                     ESD ID OF THIS ITEM
SYMPGMTY DS    CL1                     PROGRAM TYPE, C=COBOL, A=ASM
CSECTLST CSECT
*
*
*
COBOLVA  DC    X'90ECD00C185D05F04580F010' COBOL VS TEST 1
COBOLVB  DC    X'0700989FF02407FF'         COBOL VS TEST 2
COBOL2A  DC    X'47F0F07023'               COBOL II TEST 1
COBOL2B  DC    C'C2 1.4.0'                 COBOL II TEST 1
COBOL3A  DC    X'47F0F02800C3C5C5'         COBOL 390 TEST 1
EZPLUS   DC    X'47F0F02E29',C'E Z T  PLUS' EASYTRIEVE PLUS TEST1
EZ2A     DC    X'90ECD00C18BF5010B024'     EASYTRIEVE TEST2A
EZ2B     DC    C'EZTPA00'                  EASYTRIEVE TEST2B
EZ3      DC    C'CA-EASYTRIEVE PLUS'       EASYTRIEVE TEST3
IGZ1     DC    X'000000000000C9C7E9'       IGZ MODULE TEST1
IGZ2     DC    X'47F0F0342740C9C7E9'       IGZ MODULE TEST2
BUFAD    DS    F                       SYSLIB BUFFER ADDR
SYMTBAD  DS    F                       SYMBOL TABLE ADDRESS
CURRSYM  DS    F                       CURRENT SYM TBL ADDR
ENDSYM   DC    F'38000'                SYM TBL END ADDR
PROCESS  DC    XL1'00'                 PROCESS INDIC 40=LAST RECD
CES9     DS    F                       CESDREC RETURN ADDR
BL9      DS    F                       BLDL RTN RETURN ADDR
CR9      DS    F                       CTRLRECS RETURN ADDR
CT9      DS    F                       CNTLRECS RETURN ADDR
RL9      DS    F                       RLDRECS RETURN ADDR
TX9      DS    F                       TXTFMT RETURN ADDR
HIVAL    DC    4X'FF'                  CONSTANT F'S
H1000    DC    H'1000'                 CONSTANT 1000
H100     DC    H'100'                  CONSTANT 100
H10      DC    H'10'                   CONSTANT 10
SYMLEN   DC    AL2(L'SYMENT)           LENGTH OF SYMTBL ENTRY
PRTABL   DS    CL9                     HEX-PRINTABLE CONVERSION AREA
P0       DC    P'0'                    CONSTANT 0
P1       DC    P'1'                    CONSTANT 1
P58      DC    P'58'                   CONSTANT 58
*
*
H1       DC    H'1'                    CONSTANT 1
H5       DC    H'5'                    CONSTANT 5
H11      DC    H'11'                   CONSTANT 11
H16      DC    H'16'                   CONSTANT 16
H256     DC    H'256'                  CONSTANT 256
BLANX    DC    CL121' '                CONSTANT BLANKS
XZROS    DC    8X'00'                  CONSTANT ZEROS
TRTBL    DC    C'0123456789ABCDEF'     TRANSLATE TBL
*
INVMEM   DS    0CL80                   MISSING MEMBER MESSAGE
         DC    CL7'MEMBER '
MISSMBR  DC    CL8' '                  MEMBER NAME
         DC    CL65' NOT FOUND IN PDS DIRECTORY'
*
POFSET   DC    F'0'                    OFFSET FOR TEXT PRINT
PRTCHAR  DC    256C'.'                 CHARACTER TRANSLATE TABLE
         ORG   PRTCHAR+C' '
         DC    C' '
         ORG   PRTCHAR+C'A'
         DC    C'ABCDEFGHI'
         ORG   PRTCHAR+C'J'
         DC    C'JKLMNOPQR'
         ORG   PRTCHAR+C'S'
         DC    C'STUVWXYZ'
         ORG   PRTCHAR+C'0'
         DC    C'0123456789'
         ORG
JFCBEXIT DS    0F                      DCB EXIT LIST
         DC    X'87'                   RDJFCB ENTRY, LAST ENTRY
         DC    AL3(JFCB)               ADDRESS OF JFCB AREA
*
         JFCBDEF DSECT=NO
*
*
*
SYSLIB   DCB   DSORG=PO,MACRF=R,DDNAME=SYSLIB,EXLST=JFCBEXIT,          X
               RECFM=U,NCP=1
SYSOUT   DCB   DSORG=PS,MACRF=PM,DDNAME=SYSOUT,                        X
               RECFM=FB,LRECL=80
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=EOJ,               X
               RECFM=FB,LRECL=80
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FBA,LRECL=133
         END
