         PRINT NOGEN
FINDPGM  SVLNK R3
*
***********************************************************************
*  FINDS SELECTED PROGRAM NAMES IN PROC LIBRARIES. USER ENTERS UP TO
*  100 PROGRAM NAMES, ONE PER RECORD, IN THE SYSIN DATASET. THE PROC
*  LIBRARY IS SCANNED FOR EXEC CARDS HAVING PGM= PARAMETERS. WHEN
*  FOUND, THE JCL PROGRAM NAME IS USED TO SEARCH THE TABLE OF NAMES
*  ENTERED BY THE USER. IF A MATCH IS FOUND, THE NAME IS SAVED. WHEN
*  A STEPLIB DD CARD IS FOUND AND A PROGRAM NAME IS STORED, THE DSNAME
*  FROM THE STEPLIB DD CARD IS SAVED, AND AN OUTPUT RECORD IS WRITTEN.
*  AN OUTPUT RECORD IS ALSO WRITTEN AT EACH STEP CHANGE, AND AT END
*  OF EACH MEMBER IF A PROGRAM NAME IS STORED, IN CASE THERE IS NO
*  STEPLIB DD CARD IN THE STEP. OUTPUT RECORDS CONTAIN THE MEMBER
*  NAME (FIRST TIME FOR EACH MEMBER), PROGRAM NAME FROM THE EXEC CARD,
*  PROCLIB DSNAME LOCATED USING RDJFCB ON THE INPUT1 FILE,
*  AND DSNAME FROM THE STEPLIB DD CARD (IF ANY).
*        REQUIRED DD CARDS FOR THE RUN ARE:
*                 INPUT1:   THE PROC LIBRARY TO BE SEARCHED
*                           RECFM=FB,LRECL=80 IS HARD-CODED.
*                 SYSIN:    THE TABLE OF PROGRAM NAMES
*                           RECFM=FB,LRECL=80 IS HARD-CODED.
*                 SYSPRINT: OUTPUT DATA
*                           RECFM=FBA,LRECL=133 IS HARD-CODED.
*
*        EXAMPLE JCL: (TO FIND PROGRAMS PGMA AND PGMB)
*
*//RUX1077W JOB (1220102-7810000),THORNTON,CLASS=B,NOTIFY=USER02,
*//FINDPGM  EXEC PGM=FINDPGM
*//STEPLIB  DD DSN=SYS1.TECHLOAD,DISP=SHR
*//SYSUDUMP DD SYSOUT=*
*//SYSPRINT DD SYSOUT=*,DCB=BLKSIZE=133
*//SYSIN    DD *
*PGMA
*PGMB
*
*
*  AUTHOR R THORNTON JAN 1982
***********************************************************************
*
         OPEN  (SYSPRINT,OUTPUT,SYSIN) OPEN FILES
         CALL  READDIR,OPEN            OPEN DIRECTORY FOR INPUT
         CALL  READMEM,OPEN            OPEN MEMBERS FOR INPUT
         RDJFCB INPUT1                 READ JFCB FOR INPUT PDS
         MVC   PROCNAM,JFCB            SAVE INPUT1 DSNAME
         LA    R12,PGMTBL              POINT TO PROGRAM NAME TABLE
GETUSER  GET   SYSIN,RECORD            READ IN USER DATA
         MVC   0(8,R12),RECORD         PROGRAM NAME TO TABLE
         LA    R12,8(R12)              TO NEXT ENTRY
         MVI   0(R12),X'FF'            TABLE END
         B     GETUSER                 GO READ AGAIN
*
*
*
NEXDIR   BAL   R9,READDIR              GET NEXT DIRECTORY ENTRY
NEXREC   BAL   R9,READMEM              READ NEXT RECORD IN MEMBER
         CLI   RECORD,X'FF'            END OF MEMBER?
         BNE   CHKJCL                  NO, CHECK FOR JCL
         BAL   R9,OUTPUT               YES, WRITE OUTPUT, IF ANY
         B     NEXDIR                  AND GO TO NEXT MEMBER
CHKJCL   CLC   RECORD(2),=C'//'        COL 1-2 = //
         BNE   NEXREC                  NO, NOT JCL
         CLI   RECORD+2,C'*'           IS IT A COMMENT?
         BE    NEXREC                  YES, SKIP IT
         CLC   RECORD+2(7),=C'STEPLIB' THIS A STEPLIB RECORD?
         BNE   PTCOL3                  NO
         BAL   R9,STEPLIB              GO HANDLE STEPLIB
         B     NEXREC                  AND GET NEXT RECORD
PTCOL3   LA    R1,RECORD+2             POINT TO COL 3
         LA    R2,9                    NUMBER BYTES TO SEARCH
FINDBLNK CLI   0(R1),C' '              BLANK FOUND?
         BE    FNDNONBK                YES
         LA    R1,1(R1)                NO, STEP OVER 1 BYTE
         BCT   R2,FINDBLNK             NO, CONTINUE SEARCH
         B     NEXREC                  NO BLANK IN 3-12, SKIP RECORD
FNDNONBK LA    R2,RECORD+71            POINT TO END OF RECORD
         SR    R2,R1                   NBR BYTES LEFT IN RECORD
CKSOLID  CLI   0(R1),C' '              FOUND SOLID CHARACTER?
         BNE   CHKOPER                 YES
         LA    R1,1(R1)                NO, STEP TO NEXT BYTE
         BCT   R2,CKSOLID              AND CONTINUE SEARCH
         B     NEXREC                  NOT FOUND, SKIP RECORD
CHKOPER  CLC   0(5,R1),=C'EXEC '       EXEC CARD?
         BNE   NEXREC                  NO, SKIP THE RECORD
         BAL   R9,EXECCARD             YES, HANDLE EXEC
         B     NEXREC                  AND GO TO NEXT RECORD
*
*
*
STEPLIB  ST    R9,ST9                  SAVE RETURN ADDRESS
         CLC   PGMNAME,BLANX           ANY PROGRAM NAME STORED?
         BE    STEXIT                  NO, EXIT
         LA    R1,RECORD+2             POINT TO COL 3
         LA    R2,9                    NUMBER BYTES TO SEARCH
STEPBLNK CLI   0(R1),C' '              BLANK FOUND?
         BE    STPNONBK                YES
         LA    R1,1(R1)                NO, STEP OVER 1 BYTE
         BCT   R2,STEPBLNK             NO, CONTINUE SEARCH
         B     STEXIT                  NO BLANK IN 3-12, SKIP RECORD
STPNONBK LA    R2,RECORD+71            POINT TO END OF RECORD
         SR    R2,R1                   NBR BYTES LEFT IN RECORD
STCKSOL  CLI   0(R1),C' '              FOUND SOLID CHARACTER?
         BNE   STPOPER                 YES
         LA    R1,1(R1)                NO, STEP TO NEXT BYTE
         BCT   R2,STCKSOL              AND CONTINUE SEARCH
         B     STEXIT                  NOT FOUND, SKIP RECORD
STPOPER  CLC   0(3,R1),=C'DD '         DD CARD?
         BNE   STEXIT                  NO, SKIP THE RECORD
DDCARD   LA    R1,3(R1)                STEP PAST DD
DDBLNK   CLI   0(R1),C' '              FOUND NON-BLANK?
         BNE   CKDSNEQ                 YES, CHECK FOR DSN=
         LA    R1,1(R1)                NO, STEP TO NEXT BYTE
         BCT   R2,DDBLNK               CONTINUE
         B     STEXIT                  NOT FOUND, SKIP RECORD
CKDSNEQ  CLC   0(4,R1),=C'DSN='        DSN=?
         BNE   CKDSNAME                NO
         LA    R1,4(R1)                STEP PAST THE DSN=
         B     DSNSTRT                 CONTINUE
CKDSNAME CLC   0(7,R1),=C'DSNAME='     DSNAME=?
         BNE   STEXIT                  NO, SO SKIP THE RECORD
         LA    R1,7(R1)                STEP PAST THE DSNAME=
DSNSTRT  MVC   PGMLIB,BLANX            CLEAR DATASET FIELD
         LA    R12,PGMLIB              POINT TO DATASET NAME FIELD
         LA    R2,45                   MAX DSN SIZE+1
CKDSNEND CLI   0(R1),C' '              END OF NAME?
         BE    GOTDSN                  YES
         CLI   0(R1),C','              END OF NAME?
         BE    GOTDSN                  YES
         MVC   0(1,R12),0(R1)          MOVE NAME BYTE
         LA    R1,1(R1)                TO NEXT RECORD BYTE
         LA    R12,1(R12)              TO NEXT NAME BYTE
         BCT   R2,CKDSNEND             LOOP TO MOVE DSN NAME
         B     STEXIT                  TOO LONG, SKIP TO NEXT REC
GOTDSN   BAL   R9,OUTPUT               GO WRITE A RECORD
STEXIT   L     R9,ST9                  GET RETURN ADDRESS
         BR    R9                      AND EXIT
*
*
*
EXECCARD ST    R9,EX9                  SAVE RETURN ADDRESS
         LR    R12,R1                  SAVE R1 ACROSS PERFORM
         BAL   R9,OUTPUT               GO WRITE OUTPUT, IF ANY
         LR    R1,R12                  RESTORE R1
EXECSRCH LA    R1,5(R1)                STEP PAST EXEC
EXECBLNK CLI   0(R1),C' '              FOUND NON-BLANK?
         BNE   CKPGMEQ                 YES, CHECK FOR PGM=
         LA    R1,1(R1)                NO, STEP TO NEXT BYTE
         BCT   R2,EXECBLNK             CONTINUE
         B     EXEXIT                  NOT FOUND, SKIP RECORD
CKPGMEQ  CLC   0(4,R1),=C'PGM='        PGM=?
         BNE   EXEXIT                  NO, PROC SO SKIP THE RECORD
         MVC   PGMNAME,BLANX           CLEAR PGMNAME FIELD
         LA    R12,PGMNAME             POINT TO PROGRAM NAME FIELD
         LA    R1,4(R1)                POINT TO PROGRAM NAME
         LA    R2,9                    MAX PGM NAME SIZE+1
CKPGMEND CLI   0(R1),C' '              END OF NAME?
         BE    GOTPGM                  YES
         CLI   0(R1),C','              END OF NAME?
         BE    GOTPGM                  YES
         MVC   0(1,R12),0(R1)          MOVE NAME BYTE
         LA    R1,1(R1)                TO NEXT RECORD BYTE
         LA    R12,1(R12)              TO NEXT NAME BYTE
         BCT   R2,CKPGMEND             LOOP TO MOVE PGM NAME
CLRPGM   MVC   PGMNAME,BLANX           CLEAR PROGRAM NAME
         B     EXEXIT                  GO TO NEXT RECORD
GOTPGM   LA    R12,PGMTBL              POINT TO PROGRAM NAME TABLE
CHKPRGM  CLC   PGMNAME,0(R12)          FOUND THE PROGRAM NAME?
         BE    EXEXIT                  YES
         LA    R12,8(R12)              NO, STEP TO NEXT ENTRY
         CLI   0(R12),X'FF'            END OF TABLE?
         BE    CLRPGM                  YES
         B     CHKPRGM                 ELSE CONTINUE SEARCH
EXEXIT   L     R9,EX9                  GET RETURN ADDRESS
         BR    R9                      RETURN
*
*
*
OUTPUT   CLC   PGMNAME,BLANX           ANY PROGRAM NAME STORED?
         BE    OUTXIT                  NO
         MVC   OUTMEM,MEMNAME          SHOW MEMBER NAME
         MVC   OUTPGM,PGMNAME          PROGRAM NAME TO OUTPUT
         MVC   OUTSTEP,PGMLIB          STEPLIB LIBRARY NAME
         PUT   SYSPRINT,OUTREC         WRITE TO USER
         MVC   PGMNAME,BLANX           CLEAR PROGRAM NAME
OUTXIT   MVC   PGMLIB,BLANX            CLEAR STEPLIB LIBRARY NAME
         BR    R9                      RETURN
*
*
*
READDIR  CALL  READDIR,(READ,DIRCTY)   READ DIRECTORY RECORD
         CLI   DIRCTY,X'FF'            END OF DIRECTORY
         BE    EOJ                     YES, ALL DONE
         MVC   FINDTTR,MEMTTR          TTR TO FIND PARAMETER
         CALL  READMEM,FIND            GO FIND MEMBER
         BR    R9                      RETURN
*
*
*
READMEM  CALL  READMEM,(READ,RECORD)   READ NEXT RECORD
         BR    R9                      RETURN
*
*
*
EOJ      CALL  READDIR,CLOSE           CLOSE DIRECTORY FILE
         CALL  READMEM,CLOSE           CLOSE MEMBER FILE
         CLOSE (SYSIN,,SYSPRINT)       CLOSE PRINT AND INPUT FILES
         L     R13,4(R13)              GET CALLER'S SAVE ADDR
         LM    R14,R12,12(R13)         RESTORE HIS REGS
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN TO CALLER
*
*
*
OPEN     DC    CL9'OINPUT1'            OPEN PARAMETER
READ     DC    C'R'                    READ PARAMETER
CLOSE    DC    C'C'                    CLOSE PARAMETER
*
*
*
DIRCTY   DS    0CL11                   READ DIRECTORY PARAMETER
MEMNAME  DS    CL8                     MEMBER NAME
MEMTTR   DS    XL3                     TTR OF MEMBER
*
*
*
FIND     DS    0CL5                    FIND PARAMETER
         DC    C'FT'                   FIND BY TTR
FINDTTR  DS    XL3                     TTR TO FIND
*
*
*
ST9      DS    F
EX9      DS    F
PGMNAME  DC    CL8' '                  PGM= FROM EXEC CARD
         DC    CL8' '
PGMLIB   DC    CL44' '                 DSN= FROM STEPLIB CARD
         DC    CL8' '
BLANX    DC    CL133' '                BLANKS
RECORD   DS    CL80                    INPUT RECORD AREA
OUTREC   DS    0CL133                  OUTPUT RECORD AREA
         DC    CL1' '
OUTPGM   DS    CL8
         DC    CL1' '
         DC    CL4'MBR='
OUTMEM   DS    CL8
         DC    CL1' '
         DC    CL8'STEPLIB='
OUTSTEP  DS    CL44
         DC    CL1' '
         DC    CL8'PROCLIB='
PROCNAM  DS    CL44
         DC    CL5' '
*
*
*
EXLST    DS    0F
         DC    X'87'
         DC    AL3(JFCB)
JFCB     DS    CL176
*
*
*
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,                         X
               RECFM=FB,LRECL=80,EODAD=NEXDIR
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FBA,LRECL=133
INPUT1   DCB   DSORG=PS,MACRF=GM,DDNAME=INPUT1,EXLST=EXLST
         LTORG
PGMTBL   DS    100CL8                  PROGRAM NAMES FOR SEARCH
         END
