MFCSIGNS SVLNK R3
**********************************************************************
** THIS PROGRAM REPLACES SIGNS ON UNPACKED DECIMAL DATA IN A FILE    *
** CREATED BY STANDARD MAINFRAME COBOL WITH THE SIGNS REQUIRED BY    *
** PC MICROFOCUS COBOL:                                              *
**   .MAINFRAME +0 IS X'C0' WHILE MICROFOCUS COBOL USES X'F0'.       *
**   .MAINFRAME USES THE D ZONE TO DESIGNATE NEGATIVE SIGNED DATA,   *
**    WHILE MICROFOCUS USES THE 7 ZONE.                              *
**                                                                   *
** CONTROL STATEMENTS ARE USED TO IDENTIFY SIGN POSITIONS WHICH ARE  *
** TO BE CONVERTED. UP TO 100 LOCATIONS MAY BE SPECIFIED USING ONE   *
** OR MORE CONTROL STATEMENTS. EACH CONTROL RECORD IS 80 BYTES LONG  *
** AND BEGINS IN COLUMN 1 WITH THE LOCATION IF A BYTE IN THE INPUT   *
** FILE THAT HAS A SIGN TO BE CONVERTED. THE LOCATIONS MUST BE       *
** 1-5 BYTE NUMERIC FIELDS CONTAINING A VALUE GREATER THAN 1 AND     *
** EQUAL TO OR LESS THAN THE LRECL OF THE INPUT FILE. IF MORE THAN   *
** ONE FIELD IS CONTAINED IN A CONTROL RECORD, THEY WILL BE SEPARATED*
** BY COMMAS. THE FIRST BLANK COLUMN ON A CONTROL RECORD TERMINATES  *
** PROCESSING FOR IT. DATA IN CONTROL RECORD COLUMNS 73-80 IS IGNORED*
** AND MAY CONTAIN ANY DESIRED DATA. COLUMNS PAST THE FIRST BLANK ARE*
** ALSO IGNORED AND MAY CONTAIN ANY DESIRED DATA.                    *
**                                                                   *
** EXAMPLE CONTROL CARD SPECIFYING SIGNS IN POSITIONS 12, 153, AND   *
** 27335:                                                            *
** 12,153,27335 <-- NOTE EVERYTHING AFTER THE BLANK IS IGNORED.      *
** 00012,00153,27335 <- LEADING ZEROES ARE OPTIONAL                  *
**                                                                   *
** AS EACH INPUT FILE RECORD IS READ, THE SIGN LOCATIONS ARE CHECKED *
** TO SEE THAT THEY CONTAIN A VALID DECIMAL DIGIT 0-9 WITH A VALID   *
** MAINFRAME SIGN (C, D, OR F). IF NOT, THE PROGRAM WILL TERMINATE   *
** WITH AN ERROR MESSAGE. IF A VALID DIGIT IS FOUND, +0 IS CHANGED   *
** TO UNSIGNED 0, AND ALL NEGATIVE DIGITS ARE CHANGED FROM D ZONE TO *
** 7 ZONE.                                                           *
**                                                                   *
** FILES USED BY THE PROGRAM ARE:                                    *
**   DDNAME   RECFM   LRECL  DESCRIPTION                             *
**   SYSIN     FB      80    CONTROL STATEMENTS (SEE BELOW)          *
**   SYSPRINT  FBA     133   CONTROL REPORT                          *
**   SYSUT1    FB      ANY   MAINFRAME FILE TO BE CONVERTED          *
**   SYSUT2    FB      SAME  OUTPUT FILE WITH CONVERTED SIGNS.       *
**                                                                   *
** AUTHOR R THORNTON MAY 2000                                        *
**********************************************************************
         OPEN  (SYSPRINT,OUTPUT,SYSIN,,SYSUT1) OPEN FILES
         MVC   PRT(L'CCHEADER),CCHEADER CONTROL STATEMENT HEADER
         MVI   PCC,C'1'                SET SKIP TO HOF
         BAS   R9,PRINT                PRINT HEADER
         TM    SYSUT1+48,X'10'         SYSUT1 OPENED O.K?
         BO    GOODOPN1                YES
         MVC   PRT(L'OPNFAIL1),OPNFAIL1 MOVE ERROR MESSAGE TO PRINT
         BAS   R9,PRINT                PRINT ERROR MESSAGE
         ABEND 111,DUMP                TERMINATE IN ERROR
GOODOPN1 TM    SYSUT1+26,X'40'         IS IT A PS DATASET?
         BZ    BADTYPE                 NO
         TM    SYSUT1+36,X'40'         VALID RECFM?
         BO    BADTYPE                 NO
         TM    SYSUT1+36,X'80'         RECFM=F OR FB?
         BO    GOODTYPE                YES
BADTYPE  MVC   PRT(L'BADTYPM),BADTYPM  MOVE ERROR MESSAGE TO PRINT
         BAS   R9,PRINT                PRINT ERROR MESSAGE
         ABEND 222,DUMP                TERMINATE IN ERROR
GOODTYPE MVC   SYSUT2+82(2),SYSUT1+82  COPY SYSUT1 LRECL TO SYSUT2
         MVC   SYSUT2+26(2),SYSUT1+26  COPY SYSUT1 DSORG TO SYSUT2
         MVC   SYSUT2+36(1),SYSUT1+36  COPY SYSUT1 RECFM TO SYSUT2
         OPEN  (SYSUT2,OUTPUT)         OPEN SYSUT2
         TM    SYSUT2+48,X'10'         DID IT OPEN O.K?
         BO    GOODOPN2                YES
         MVC   PRT(L'OPNFAIL2),OPNFAIL2 MOVE ERROR MESSAGE TO PRINT
         BAS   R9,PRINT                PRINT ERROR MESSAGE
         ABEND 333,DUMP                TERMINATE IN ERROR
GOODOPN2 TM    SYSIN+48,X'10'          DID SYSIN DATASET OPEN O.K?
         BO    SIGNLOCS                YES
         MVC   PRT(L'OPNFAIL3),OPNFAIL3 MOVE ERROR MESSAGE TO PRINT
         BAS   R9,PRINT                PRINT ERROR MESSAGE
         ABEND 444,DUMP                TERMINATE IN ERROR
**********************************************************************
*      CONTROL CARD PROCESSING - LOAD THE SIGN LOCATION TABLE        *
**********************************************************************
SIGNLOCS GET   SYSIN,CNTLCARD          READ NEXT CONTROL STATEMENT
         MVC   PRT(80),CNTLCARD        CONTROL CARD TO MESSAGE
         BAS   R9,PRINT                PRINT CONTROL CARD
         LA    R12,CNTLCARD+71         POINT TO LAST BYTE TO PROCESS
         LA    R11,CNTLCARD            POINT TO FIRST BYTE TO PROCESS
SLCKEND  CR    R11,R12                 PAST END OF DATA?
         BH    SIGNLOCS                YES, GO GET NEXT
         CLI   0(R11),C' '             PAST END OF DATA?
         BE    SIGNLOCS                YES, GO GET NEXT
         CLI   0(R11),C','             AT A COMMA?
         BNE   SLXTR                   NO
         LA    R11,1(R11)              ADVANCE PAST THE COMMA
         B     SLCKEND                 CONTINUE
SLXTR    XC    WORK,WORK               CLEAR FOR EXTRACT
         LA    R1,WORK+4               POINT TO RIGHTMOST BYTE OF WORK
SLCKVAL  CLI   0(R11),C'0'             VALID DECIMAL DIGIT?
         BL    SLBADCRD                NO, CONTROL DATA ERROR
         CLI   0(R11),C'9'             VALID DECIMAL DIGIT?
         BH    SLBADCRD                NO, CONTROL DATA ERROR
         CLI   WORK,0                  ROOM FOR ANOTHER DIGIT?
         BNE   SL2LONG                 NO, INPUT TOO LONG
         MVC   WORK(4),WORK+1          SHIFT CONTENTS LEFT 1 BYTE
         MVC   0(4,R1),0(R11)          MOVE DIGIT TO EXTRACT WORK
         LA    R11,1(R11)              ADVANCE 1 IN CONTROL RECORD
         CLI   0(R11),C' '             AT A BLANK?
         BE    SLGOTNBR                YES, THIS NUMBER COMPLETE
         CLI   0(R11),C','             AT A COMMA?
         BE    SLGOTNBR                YES, THIS NUMBER COMPLETE
         CR    R11,R12                 STILL WITHIN CARD?
         BH    SLGOTNBR                NO, THIS NUMBER COMPLETE
         B     SLCKVAL                 GO CHECK FOR VALID DIGIT
SLGOTNBR PACK  DBLWD,WORK              PACK NUMBER FOR CONVERSION
         CVB   R1,DBLWD                CONVERT TO BINARY
         BCTR  R1,0                    SUBTRACT 1: MAKE IT 0 RELATIVE
         L     R15,NEXTSIGN            POINT TO NEXT SIGN TABLE ENTRY
         ST    R1,0(R15)               SAVE THE SIGN POSITION
         LA    R15,4(R15)              ADVANCE TO NEXT SIGN ENTRY
         ST    R15,NEXTSIGN            UPDATE POINTER
         CLC   STBLEND,=XL4'FFFFFFFF'  TOO MANY COLUMN NUMBERS?
         BE    SLCKEND                 GO CHECK FOR MORE FIELDS
         MVC   PRT(L'CF2MANY),CF2MANY  MOVE ERROR MESSAGE TO PRINT
         BAS   R9,PRINT                PRINT ERROR MESSAGE
         ABEND 446,DUMP                TERMINATE IN ERROR
SL2LONG  MVC   PRT(L'CF2LONG),CF2LONG  MOVE ERROR MESSAGE TO PRINT
         BAS   R9,PRINT                PRINT ERROR MESSAGE
         ABEND 444,DUMP                TERMINATE IN ERROR
SLBADCRD MVC   PRT(L'BADATA),BADATA    MOVE ERROR MESSAGE TO PRINT
         BAS   R9,PRINT                PRINT ERROR MESSAGE
         ABEND 445,DUMP                TERMINATE IN ERROR
CTLEND   L     R15,NEXTSIGN            POINT TO NEXT SIGN TABLE ENTRY
         MVC   0(4,R15),=XL4'FFFFFFFF'  SET TABLE END
         CLI   SIGNTABL,X'FF'          ANY CONTROL FIELDS SPECIFIED?
         BNE   MAINLINE                YES
         MVC   PRT(L'NOCTL),NOCTL      MESSAGE TO PRINT LINE
         BAS   R9,PRINT                PRINT THE MESSAGE
         ABEND 777,DUMP                TERMINATE IN ERROR
********************************************************************
*   MAINLINE. READ SYSUT1 RECORD, CONVERT SIGNS IN INPUT BUFFER.   *
*   WRITE OUTPUT FROM CONVERTED INPUT RECORD.                      *
********************************************************************
MAINLINE GET   SYSUT1                  READ NEXT SYSUT1 RECORD
         AP    RECIN,P1                COUNT INPUT RECORDS
         ST    R1,SYSUT1A              SAVE INPUT RECORD ADDRESS
         LA    R12,SIGNTABL            POINT TO 1ST SIGNTABL ENTRY
MLCKSIND CLC   0(4,R12),=XL4'FFFFFFFF' ANY MORE TABLE ENTRIES?
         BE    MLWRITE                 NO
         L     R11,0(R12)              YES, GET OFFSET TO SIGN
         A     R11,SYSUT1A             POINT TO SIGN BYTE IN RECORD
         TRT   0(1,R11),SIGNTEST       VALID SIGNED BYTE?
         BZ    MLBADSIN                NO, ERROR
         STC   R2,0(R11)               CORRECT THE BYTE
         B     MLADVNC                 YES, NO CONVERSION NEEDED
MLBADSIN ED    BSRECNO,RECIN           RECORD NUMBER TO MESSAGE
         MVC   PRT(L'BADSIGN),BADSIGN  MOVE ERROR MESSAGE TO PRINT
         BAS   R9,PRINT                PRINT ERROR MESSAGE
         ABEND 555,DUMP                TERMINATE IN ERROR
MLADVNC  LA    R12,4(R12)              STEP TO NEXT SIGN TABLE ENTRY
         B     MLCKSIND                YES, GO PROCESS NEXT SIGN
MLWRITE  L     R12,SYSUT1A             POINT TO SYSUT1 RECORD
         PUT   SYSUT2,0(R12)           WRITE RECORD TO SYSUT2
         AP    RECOUT,P1               COUNT INPUT RECORDS
         B     MAINLINE                CONTINUE TO NEXT INPUT RECORD
********************************************************************
*   PRINT ROUTINE
********************************************************************
PRINT    PUT   SYSPRINT,P              WRITE PRINT LINE
         MVC   P,BLANKS                CLEAR PRINT LINE
         BR    R9                      EXIT
********************************************************************
*   END OF JOB
********************************************************************
EOJ      MVC   PRT(L'CTHEADER),CTHEADER I/O COUNT HEADER
         MVI   PCC,C'-'                SET TRIPLE SPACE
         BAS   R9,PRINT                PRINT HEADER
         MVC   PRT(L'EDWRD),EDWRD      EDIT WORD TO PRINT
         ED    PRT(L'EDWRD),RECIN      RECORDS READ TO PRINT
         MVC   PRT+L'EDWRD(L'INMSG),INMSG RECORDS READ MESSAGE
         BAS   R9,PRINT                PRINT THE MESSAGE
         MVC   PRT(L'EDWRD),EDWRD      EDIT WORD TO PRINT
         ED    PRT(L'EDWRD),RECOUT     RECORDS WRITTEN TO PRINT
         MVC   PRT+L'EDWRD(L'OUTMSG),OUTMSG RECORDS READ MESSAGE
         BAS   R9,PRINT                PRINT THE MESSAGE
         CLOSE (SYSUT2,,SYSUT1,,SYSIN,,SYSPRINT) CLOSE FILES
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         LM    R14,R12,12(R13)         RESTORE CALLER'S AREA
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN TO CALLER
********************************************************************
*   WORK FIELDS
********************************************************************
DBLWD    DS    D
SYSUT1A  DS    A                       ADDRESS OF SYSUT1 RECORD
NEXTSIGN DC    A(SIGNTABL)             POINTER TO NEXT SIGN TABLE ENTRY
WORK     DS    CL5                     SIGN COLUMN NBR WORK
CF2MANY  DC    C'OVER 100 SIGN COLUMN NUMBERS ENTERED.'
CF2LONG  DC    C'STATEMENT ABOVE HAS COLUMN NUMBER OVER 5 BYTES LONG.'
BADATA   DC    C'STATEMENT ABOVE HAS A NON-NUMERIC COLUMN NUMBER.'
NOCTL    DC    C'NO CONTROL STATEMENTS FOUND IN THE SYSIN FILE'
OPNFAIL1 DC    C'SYSUT1 FAILED TO OPEN' ERROR MESSAGE
OPNFAIL2 DC    C'SYSUT2 FAILED TO OPEN' ERROR MESSAGE
OPNFAIL3 DC    C'SYSIN FAILED TO OPEN' ERROR MESSAGE
BADSIGN  DS    0CL47
         DC    CL35'INVALID SIGN BYTE IN RECORD NUMBER '
BSRECNO  DC    XL12'402020206B2020206B202020'
BADTYPM  DC    C'SYSUT1 MUST BE DSORG=PS,RECFM=FB' ERROR MESSAGE
BLANKS   DC    CL133' '                 BLANKS
RECIN    DC    PL5'0'                  RECORDS READ FROM SYSUT1
RECOUT   DC    PL5'0'                  RECORDS WRITTEN TO SYSUT2
P1       DC    P'1'                    CONSTANT 1
INMSG    DC    C' RECORDS READ FROM SYSUT1'
OUTMSG   DC    C' RECORDS WRITTEN TO SYSUT2'
CCHEADER DC    C'***** CONTROL STATEMENTS READ *****'
CTHEADER DC    C'***** INPUT/OUTPUT COUNTS *****'
EDWRD    DC    XL12'402020206B2020206B202020' EDIT WORD
*
P        DS    0CL131                  PRINT DATA LINE
PCC      DC    C'1'
PRT      DC    CL132' '                PRINT DATA
*
CNTLCARD DS    CL80             CONTROL CARD
*
SIGNTEST DS    256X'00'         SIGN CONVERSION TABLE
         ORG   SIGNTEST+X'C0'
         DC    C'0ABCDEFGHI'
         ORG   SIGNTEST+X'D0'
         DC    X'979899A2A3A4A5A6A7A8'
         ORG   SIGNTEST+X'F0'
         DC    C'0123456789'
         ORG
********************************************************************
*   FILE DEFINITIONS
********************************************************************
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=CTLEND
SYSUT1   DCB   DSORG=PS,MACRF=GL,DDNAME=SYSUT1,EODAD=EOJ
SYSUT2   DCB   DSORG=PS,MACRF=PM,DDNAME=SYSUT2
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,LRECL=133,                     X
               RECFM=FBA,DSORG=PS
********************************************************************
*   SIGN COLUMN TABLE
********************************************************************
         LTORG
         DS    0F
SIGNTABL DC    X'FFFFFFFF'             SIGN COLUMN TABLE
         DS    100F                    ROOM FOR 100 SIGN COLUMNS
STBLEND  DC    X'FFFFFFFF'             END OF TABLE
   END
