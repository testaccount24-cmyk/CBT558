RU11     TITLE 'GENERAL FILE DUMP UTILITY'
RUX0011  START 0
         USING *,3,4
         REQU
*
* GENERAL FILE DUMP UTILITY TO PROVIDE ONE OF THREE OUTPUT
* DUMP FORMATS. LOGICAL RECORDS ARE DUMPED INDIVIDUALLY USING THE
* USER SPECIFIED BLKSIZE, LRECL, AND RECFM DD PARAMETERS. CONTROL
* CARDS ARE USED TO SPECIFY THE TYPE OF OUTPUT DESIRED,
* NUMBER OF RECORDS TO PRINT, AND RECORD SELECTION, REJECTION, AND
* IDENTIFICATION CRITERIA.
*
* AUTHOR R. THORNTON SEPT 1, 1971
*
*
*
*                        *** INITIALIZATION ***
         STM   R14,R12,12(R13)         SAVE CONTROL PGM REGISTERS
         LR    R3,R15                  INITIALIZE BASE
         LA    R4,4095(R3)             LOAD SECOND BASE
         LA    R4,1(R4)                ADD 1
         ST    R13,SAVE+4              SAVE RETURN POINTER
         LA    R13,SAVE                INITIALIZE SAVE AREA POINTER
         OPEN  (SYSPRINT,OUTPUT)       OPEN PRINTER
         MVI   P,C' '                  BLANK TO CLEAR PRINT
         MVC   P+1(79),P              CLEAR PRINT LINE
*
*
*
*                        *** CONTROL CARD PROCESSING ***
         OPEN  SYSIN                   OPEN CONTROL CARD FILE
NEXCD    GET   SYSIN                   READ CONTROL CARD
         LR    R5,R1                   GET CTL CARD ADDR
         MVC   P,0(R5)             CARD TO PRINT
         BAL   R9,PRINT            PRINT CONTROL CARD
         CLI   0(R5),C'S'              RECORD SELECTION CARD
         BE    SELECTS                 YES
         CLI   0(R5),C'*'              OPTION CHANGE CONTROL CARD
         BE    CC1                     YES
         MVC   P(17),=C'UNKNOWN TYPE COL1'
         B     PCTLCD                  GO PRINT OUT CARD
CC1      EQU   *         *** OPTION CHANGE CONTROL CARD ***
         USING CNTLCD,R5
         CLI   CTYP,C'M'               PRINT OPTION-2 LINE MIXED
         BE    CC2                     YES
         CLI   CTYP,C' '               TYPE FORMAT BLANK
         BE    CC2                     YES, DEFAULT
         CLI   CTYP,C'H'               PRINT OPTION- HEX ONLY
         BE    CCM1                    YES
         CLI   CTYP,C'3'               3-LINE CHAR/HEX OPTION
         BE    CCM1                    YES
         CLI   CTYP,C'C'               CHARACTER ONLY OPTION
         BE    CCM1                    YES
         MVC   P(7),=C'INV TYP'     MOVE ERROR LITERAL
         B     CC2                     BRANCH AROUND MOVE
CCM1     MVC   PRTYP,CTYP              MOVE USER OPTION
CC2      CLI   CBAR,C' '               ANY LOCATOR BAR OPTION
         BE    CC02                    NO
         CLI   CBAR,C'Y'               LOCATOR BAR = YES
         BE    CC02                    YES
         CLI   CBAR,C'N'               LOCATOR BAR = NO
         BE    CCMV2                   YES
         MVC   P+8(7),=C'INV LOC'     MOVE ERROR LITERAL
         B     CC02                    CONTINUE
CCMV2    MVI   NOBAR+1,C'0'            FORCE BRANCH AROUND LOC PRT
CC02     CLC   CFILTYP,BLANX           ANY FILE TYPE GIVEN
         BE    CC2A                    NO
         CLC   CFILTYP,=C'PS'          FILE TYPE IS PS
         BE    CC2A                    YES
         CLC   CFILTYP,=C'VS'          FILE TYPE IS VS
         BE    VBLSP                   YES
         CLC   CFILTYP,=C'IS'          FILE TYPE IS IS
         BNE   ERFT                    NO, INVALID
         MVC   ORG,=C'IS'              INDICATE INDEX-SEQ FILE
         B     CC2A                    CONTINUE
ERFT     MVC   P+16(8),=C'INV FILE'    MOVE ERROR LITERAL
         B     CC2A                    CONTINUE
VBLSP    MVC   ORG,=C'VS'              INDICATE VARIABLE SPANNED
CC2A     CLC   CMAX,BLANX              MAX RECDS BLANK
         BE    CC3                     YES
         MVZ   NTST,CMAX               ZONES FOR NUMERIC TEST
         CLC   NTST,ZEROS              MAX RECDS NUMERIC
         BE    CCM2                    YES
         MVC   P+25(7),=C'INV MAX'    MOVE ERROR LITERAL
         B     CC3                     BRANCH AROUND MOVE
CCM2     PACK  TOTRCDS,CMAX            MOVE MAX RECORDS
         MVI   MAXBR+1,X'40'           SET UP CHECK BRANCH
CC3      CLC   CSTRT,BLANX             STARTING RECD BLANK
         BE    CC4                     YES
         MVZ   NTST,CSTRT              NO,MOVE ZONES
         CLC   NTST,ZEROS              STARTING RECD NUMERIC
         BE    CCM3                    YES
         MVC   P+33(8),=C'INV STRT'   MOVE ERROR LITERAL
         B     CC4                     BRANCH AROUND MOVE
CCM3     PACK  NRECDS,CSTRT            MOVE STARTING RECORD NO
         MVN   NRECDS+4(1),=X'0D'      MAKE SIGN MINUS
CC4      CLC   CSKY,BLANX              STARTING KEY BLANK
         BE    PCTLCD                  GO PRINT CARD
         LA    R12,STARTKY             GET KEY FIELD LHE ADDR
         LA    R11,CSKY                GET USER KEY LHE ADDR
         MVI   ENDCD,X'FF'             SET STOP CHARACTER
CCM4     MVC   0(1,R12),0(R11)         MOVE 1 CHARACTER
         LA    R12,1(R12)              ADD 1 TO KEY ADDR
         LA    R11,1(R11)              ADD 1 TO USER ADDR
         CLI   0(R11),C' '             NEXT POSITION BLANK
         BNE   CCM4                    NO, LOOP
         B     PCTLCD                  GO PRINT THE CARD
         DROP  R5
SELECTS  EQU   *                       PROCESS SELECTION CARDS
         USING LOGICD,R5
         LH    R12,NS                  GET NUMBER OF SELECTS
         CH    R12,=H'5'               TOO MANY
         BL    BEGLOG                  NO
         MVC   P(25),=C'TOO MANY, DROPPED'
         B     PCTLCD                  GO PRINT
BEGLOG   MH    R12,=H'40'              MULTIPLY NUMBER BY 40
         LA    R12,A1(R12)             GET ADDR OF LITERALS
         MVC   0(16,R12),VAL1          MOVE 1ST COMPARE VALUE
         MVC   16(16,R12),VAL2         MOVE 2ND COMPARE VALUE
         MVC   32(8,R12),IDNT          MOVE RECORD ID
         MVZ   NTST,ST1                ZONES FOR TEST
         CLC   NTST,ZEROS              START POS 1 NUMERIC
         BE    TLN1                    YES
INVST    MVC   P(13),=C'START POS ERR' MOVE LITERAL
         B     PCTLCD                  GO PRINT
TLN1     PACK  CVT,ST1                 PACK START POS 1
         CVB   R12,CVT                 CONVERT TO BINARY
         BCTR  R12,0                   SUBTRACT 1
         STH   R12,DISP1               STORE 1ST COMPARE DISPLACEMENT
         MVZ   NTST(2),LEN1            ZONES FOR TEST
         CLC   NTST(2),ZEROS           LST LENGTH NUMERIC
         BE    TCP1                    YES
INVLN    MVC   P(7),=C'LEN ERR'     MOVE LITERAL
         B     PCTLCD                  GO PRINT
TCP1     CLC   LEN1,=C'16'             OVER 16
         BH    INVLN                   YES, ERROR
         PACK  CVT,LEN1                PACK 1ST LENGTH
         CVB   R12,CVT                 CONVERT TO BINARY
         BCTR  R12,0                   SUBTRACT 1
         STC   R12,CLN1                STORE 1ST LENGTH CODE
         LA    R12,BRCODS              GET BRANCH CODE TABLE ADDR
TLUP1    CLC   0(3,R12),CPR1           FOUND TABLE ENTRY
         BE    F1                      YES
         CLI   0(R12),X'FF'            END OF TABLE
         BE    INVCPR                  YES, INVALID
         LA    R12,4(R12)              ADD 4 TO TABLE ADDR
         B     TLUP1                   GO CHECK AGAIN
INVCPR   MVC   P(16),=C'BAD COMPARE CODE'
         B     PCTLCD                  GO PRINT
F1       MVC   COD1,3(R12)             MOVE TABLE BRANCH CODE
         CLC   REL,BLANX               SECOND COMPARISON GIVEN
         BNE   CKSCSL                  YES
         LH    R12,NS                  NO, GET NUMBER SELECTS
         MH    R12,=H'38'              MULTIPLY BY 38
         LA    R12,TYPE1(R12)          GET ADDRESS OF SELECT LOGIC
BCD1     MVC   11(1,R12),COD1          MOVE 1ST BRANCH CODE
SETC1    MVC   5(1,R12),CLN1           MOVE 1ST COMPARE LENGTH
         OC    6(2,R12),DISP1          SET 1ST COMP A FLD DISPL
         MVI   1(R12),0                NOP 1ST BRANCH
         CLC   REL2,BLANX              SECOND REL BLANK
         BE    GNS                     YES
         CLC   REL,BLANX               FIRST REL BLANK
         BE    BADREL                  YES, ERROR
         CLC   REL2,=C'AND'            2ND REL IS AND
         BNE   BADREL                  NO, ERROR
         CLC   NS,=H'3'                ANOTHER CONDITION AREA AVAIL
         BH    BADREL                  NO, ERROR
         MVC   28(10,R12),=5X'0700'    NOPS TO ID MOVE AND BRANCH
GNS      LH    R12,NS                  GET NUMBER SELECTS
         LA    R12,1(R12)              ADD 1
         STH   R12,NS                  STORE INCREMENTED COUNT
         B     PCTLCD                  GO PRINT
CKSCSL   CLC   REL,=C'AND'             RELATION TO SECOND IS AND
         BE    CKST2                   YES
         CLC   REL,=C'OR '             RELATIONSHIP IS OR
         BE    CKST2                   YES
BADREL   MVC   P(11),=C'INVALID REL'
         B     PCTLCD                  GO PRINT
CKST2    MVZ   NTST(5),ST2             ZONES FOR TEST
         CLC   NTST(5),ZEROS           2ND START POSITION NUMERIC
         BNE   INVST                   NO, ERROR
         PACK  CVT,ST2                 PACK SECOND START POSITION
         CVB   R12,CVT                 CONVERT TO BINARY
         BCTR  R12,0                   SUBTRACT 1
         STH   R12,DISP2               STORE 2ND COMPARE DISPL
         MVZ   NTST(2),LEN2            ZONES FOR TEST
         CLC   NTST(2),ZEROS           2ND LEN NUMERIC
         BNE   INVLN                   NO, ERROR
         CLC   LEN2,=C'16'             OVER 16
         BH    INVLN                   YES, ERROR
         PACK  CVT,LEN2                PACK 2ND LENGTH
         CVB   R12,CVT                 CONVERT TO BINARY
         BCTR  R12,0                   SUBTRACT 1
         STC   R12,CLN2                STORE SECOND LEN CODE
         LA    R12,BRCODS              GET BTANCH CODE TABLE ADDR
TLUP2    CLC   0(3,R12),CPR2           TABLE ENTRY FOUND
         BE    F2                      YES
         CLI   0(R12),X'FF'            END OF TABLE
         BE    INVCPR                  YER, ERROR
         LA    R12,4(R12)              ADD 4 TO TABLE ADDR
         B     TLUP2                   GO CHECK AGAIN
F2       MVC   COD2,3(R12)             MOVE 2ND BRANCH CODE
         XI    COD2,C'0'               INVERT THE CODE
         LH    R12,NS                  GET NUMBER SELECTS
         MH    R12,=H'38'              MULTIPLY BY 38
         LA    R12,TYPE1(R12)          GET LOGIC ADDRESS
         MVC   25(1,R12),COD2          MOVE SECOND BRANCH CODE
         MVC   19(1,R12),CLN2          MOVE 2ND COMPARE LENGTH
         OC    20(2,R12),DISP2         SET 1ST COMP A FLD DISPL
         CLC   REL,=C'AND'             RELATIONSHIP IS AND
         BE    SLAND                   YES
         MVI   15(R12),0               NO, MID BRANCH IS NOP
         B     BCD1                    GO FINISH LOGIC
SLAND    XI    COD1,C'0'               INVERT 1ST BRANCH CODE
         MVC   15(1,R12),COD1          MOVE 1ST BRANCH CODE
         MVI   11(R12),0               MID BRANCH TO NOP
         B     SETC1                   GO FINISH CODE
PCTLCD   BAL   R9,PRINT                PRINT CONTROL CARD AND MSGS
         B     NEXCD                   GO GET NEXT CARD
         DROP  R5
CTLEND    CLC   ORG,=C'IS'              INDEX-SEQ FILE
         BE    OPENIS                  YES
         CLC   ORG,=C'VS'              VRBL SPANNED RECDS
         BE    OPENVS                  YES
         OPEN DUMPIN                   OPEN FILE TO BE DUMPED
         B     RDJFCB                  GO READ THE JFCB
OPENIS   OPEN  (DUMPIS)                OPEN INDEX-SEQ FILE
         SETL  DUMPIS,KC,STARTKY       SET FILE TO BEGINNING KEY
         B     RDJFCB                  GO READ THE JFCB
OPENVS   OPEN  DUMPVS                  OPEN VRBL SPANNED FILE
*
*
*
RDJFCB   EQU   *         *** JOB FILE CONTROL BLOCK PROCESSING ***
         RDJFCB DUMPIN                 READ JFCB FOR INPUT FILE
HDFMT    MVC   HDSN,DSNAME             DSNAME TO HEADING
         MVC   CVT(2),BLOCKSIZ         MOVE TO ALIGN
         LH    R1,CVT                  GET IN REG
         CVD   R1,CVT                  CONVERT TO PACKED
         UNPK  HBKSZ,CVT               EDIT BLOCKSIZE TO HEADING
         OI    HBKSZ+4,C'0'            CLEAR SIGN
         MVC   CVT(2),LOGREC           MOVE TO ALIGN
         LH    R1,CVT                  GET IN REG
         CVD   R1,CVT                  CONVERT TO PACKED
         UNPK  HLRECL,CVT              EDIT LOGICAL RECD LEN TO HEADING
         OI    HLRECL+4,C'0'           CLEAR SIGN
         TM    DSORGN,X'40'            IS IT PS ORGANIZATION
         BO    SETRF                   YES
         MVC   HORG,=C'IS'             INDICATE INDEXED-SEQ
         TM    DSORGN,X'80'            IS IT INDEX-SEQ
         BO    SETRF                   YES
         MVC   HORG,=C'DA'             INDICATE DIRECT
         TM    DSORGN,X'20'            IS IT DIRECT
         BO    SETRF                   YES
         MVC   HORG,=C'PO'             INDICATE PARTITIONED
         TM    DSORGN,X'02'            IS IT PARTITIONED
         BO    SETRF                   YES
         MVC   HORG,=C'**'             UNKNOWN DSORG
SETRF    TM    RECDFM,X'C0'            IS IT UNDEFINED RECORDS
         BO    SETBK                   YES
         MVI   HRCFM,C'V'              INDICATE VARIABLE RECDS
         TM    RECDFM,X'40'            IS IT VARIABLE
         BO    SETBK                   YES
         MVI   HRCFM,C'F'              INDICATE FIXED RECORDS
SETBK    TM    RECDFM,X'10'            BLOCKED RECORDS
         BO    CKSPN                   YES
         MVI   HRCFM+1,C' '            NO, INDICATE UNBLOCKED
CKSPN    TM    RECDFM,X'48'            SPANNED RECORDS
         BO    GKY                     YES
         MVI   HRCFM+2,C' '            NOT SPANNED
GKY      MVC   KEYLEN+1(1),KEYLENG     MOVE KEY LENGTH BYTE
         MVI   KEYLEN,0                HI-ORDER BYTE TO ZERO
         LH    R1,KEYLEN               GET IN REG
         CVD   R1,CVT                  CONVERT TO PACKED
         UNPK  HKYLN,CVT               KEYLEN TO HEADING
         OI    HKYLN+2,C'0'            CLEAR SIGN
         MVC   VOLSRL,VOLSERS          VOL SER NOS TO HEADING
         BAL   R9,HEADING              PRINT HEADING
         MVI   HEAD,C'1'               SKIP TO CH1 FOR HEADINGS
*
*
MAINLINE EQU   *         MAINLINE ROUTINE ***
         CLC   ORG,=C'IS'              INDEX-SEQ FILE
         BE    ISREAD                  YES
         CLC   ORG,=C'VS'              VRBL SPANNED FILE
         BE    VSREAD                  YES
         GET   DUMPIN                  READ A RECORD
         ST    R1,RECADDR              SAVE RECORD ADDRESS
         MVC   RECLEN,DUMPIN+82        MOVE RECORD LENGTH
CKVBL    CLI   HRCFM,C'V'              VARIABLE RECORDS
         BNE   MAXTST                  NO
BYPRDW   LA    R1,4(R1)                ADD 4 TO SKIP RDW
         ST    R1,RECADDR              STORE UPDATED REC ADDR
         LH    R1,RECLEN               GET RECORD LENGTH
         SH    R1,=H'4'                DEDUCT 4 FOR RDW
         STH   R1,RECLEN               STORE UPDATED RECD LENGTH
         B     MAXTST                  GO CHECK NUMBER READ
ISREAD   GET   DUMPIS                  READ INDEX-SEQ RECORD, RECORD AD
*                                      IN REG1, KEY ADDR IN REG0
         ST    R1,RECADDR              STORE RECORD ADDRESS
         MVC   RECLEN,DUMPIS+82        MOVE RECORD LENGTH
         B     CKVBL                   GO CHECK FOR VARIABLE
VSREAD   GET   DUMPVS                  READ VRBL SPANNED RECD
         MVC   RECLEN,DUMPVS+82
         B     BYPRDW                  GO BYPASS RDW
MAXTST   L     R5,RECADDR              GET RECORD ADDR FOR SELECT LOGIC
         ZAP   NRECDS,NRECDS           ANY RECORDS TO BE SKIPPED
         BNM   CPRMAX                  NO
         AP    NRECDS,=P'1'            YES, ADD 1
         B     MAINLINE                GO READ AGAIN
CPRMAX   CP    TOTRCDS,NRECDS          ANY MORE TO BE PRINTED
MAXBR    NOP   EOJHI                   BRANCH HIGH IF MAX RECDS GIVEN
         AP    RECDNO,=P'1'            ADD 1 TO RECORDS READ
TYPE1    B     ACCEPT                  NOP IF ANY SELECT
         CLC   0(1,R5),A1              LENG & A DISPL MODIFIED
         B     ACC1                    NOP FOR AND, ELSE CODE
         B     TYPE2                   INV CODE FOR AND, NOP FOR
*                                      OR, O.K. FOR SINGLE
         CLC   0(1,R5),A2              LENG & A DISPL MODIFIED
         B     TYPE2                   INVERTED CODE
ACC1     MVC   PID,ID1                 MOVE RECORD ID
         B     ACCEPT                  GO PRINT OUT
TYPE2    B     MAINLINE                NOP IF 2 SELECTS
         CLC   0(1,R5),B1              LENG & A DISPL MODIFIED
         B     ACC2                    NOP FOR AND, ELSE CODE
         B     TYPE3                   INV CODE FOR AND, NOP FOR
*                                      OR, O.K. FOR SINGLE
         CLC   0(1,R5),B2              LENG & A DISPL MODIFIED
         B     TYPE3                   INVERTED CODE
ACC2     MVC   PID,ID2                 MOVE RECORD ID
         B     ACCEPT                  GO PRINT OUT
TYPE3    B     MAINLINE                NOP IF 3 SELECTS
         CLC   0(1,R5),C1              LENG & A DISPL MODIFIED
         B     ACC3                    NOP FOR AND, ELSE CODE
         B     TYPE4                   INV CODE FOR AND, NOP FOR
*                                      OR, O.K. FOR SINGLE
         CLC   0(1,R5),C2              LENG & A DISPL MODIFIED
         B     TYPE4                   INVERTED CODE
ACC3     MVC   PID,ID3                 MOVE RECORD ID
         B     ACCEPT                  GO PRINT OUT
TYPE4    B     MAINLINE                NOP IF 4 SELECTS
         CLC   0(1,R5),D1              LENG & A DISPL MODIFIED
         B     ACC4                    NOP FOR AND, ELSE CODE
         B     TYPE5                   INV CODE FOR AND, ELSE CODE
*                                      OR, O.K. FOR SINGLE
         CLC   0(1,R5),D2              LENG & A DISPL MODIFIED
         B     TYPE5                   INVERTED CODE
ACC4     MVC   PID,ID4                 MOVE RECORD ID
         B     ACCEPT                  GO PRINT OUT
TYPE5    B     MAINLINE                NOP IF 5 SELECTS
         CLC   0(1,R5),E1              LENG & A DISPL MODIFIED
         B     ACC5                    NOP FOR AND, ELSE CODE
         B     MAINLINE                INV CODE FOR AND, NOP FOR
*                                      OR, O.K. FOR SINGLE
         CLC   0(1,R5),E2              LENG & A DISPL MODIFIED
         B     MAINLINE                INVERTED CODE
ACC5     MVC   PID,ID5                 MOVE RECORD ID
ACCEPT   ZAP   STARTPOS,=P'1'          SET PRINT START POS TO 1
         AP    NRECDS,=P'1'            ADD 1 TO RECDS PRINTED
         UNPK  PRECNO,RECDNO           RECORD NBR TO PRINT
         OI    PRECNO+L'PRECNO-1,C'0'  CLEAR SIGN
         MVC   PRTLEN,RECLEN           SET NUMBER BYTES TO PRINT
         MVC   REMLEN,RECLEN           SET NUMBER REMAINING BYTES
         LH    R1,RECLEN               GET RECORD LENGTH
         CVD   R1,CVT                  CONVERT TO PACKED
         UNPK  PLEN,CVT+5(3)           UNPACK INTO PRINT LINE
         OI    PLEN+4,C'0'             CLEAR SIGN POSITION
RECLUP   LH    R9,REMLEN               GET REMAINING LENGTH
         LTR   R9,R9                   ANY REMAINS TO PRINT
         BZ    MAINLINE                NO, EXIT
         UNPK  PSTRT,STARTPOS          MOVE STARTING POS TO PRINT
         OI    PSTRT+3,C'0'            CLEAR SIGN
         CH    R9,FIFTY              OVER 50 BYTES REMAIN
         BL    CVTLST                  NO
         SH    R9,FIFTY              YES, SUBTRACT 50
         STH   R9,REMLEN               STORE NUMBER REMAINING
         LH    R9,FORTY9              SET LENGTH CODE TO 99
         B     STLEN                   GO STORE LEN CODE
CVTLST   MVC   REMLEN,XZROS            LESS THAN 50, CLEAR REM BYTES
         BCTR  R9,0                    SUBTRACT 1 = LENGTH CODE
STLEN    STH   R9,PRTLEN               STORE PRINT LEN CODE
PRTND    CVD   R9,CVT                  CONVERT LENGTH CODE
         AP    STARTPOS,CVT            ADD TO START POS
         UNPK  PEND,STARTPOS           END POSITION TO PRINT
         OI    PEND+3,C'0'             CLEAR SIGN
         MVI   HYPH,C'-'               HYPHEN TO PRINT
         AP    STARTPOS,=P'1'          ADD 1 = NEXT START POS
         MVC   PMOV+1(1),PRTLEN+1      LENGTH TO MOVE INSTR
         L     R9,RECADDR              GET RECORD ADDR
PMOV     MVC   PDATA,0(R9)             MOVE RECORD TO PRINT LINE
         AH    R9,PRTLEN               ADD PRINT LEN TO REC ADDR
         LA    R9,1(R9)                INCR RECORD ADDR BY 1
         ST    R9,RECADDR              STORE UPDATED RECD ADDR
         MVI   GRPND,0                 INDICATE PRINT GROUP IN PROGRESS
         CLI   PRTYP,C'M'              MIXED CHAR-HEX PRINTOUT
         BNE   CKTYPH                  NO
         BAL   R9,FMTMIXD              YES, GO FORMAT
         B     RECLUP                  GO FINISH RECORD
CKTYPH   CLI   PRTYP,C'H'              HEX PRINTOUT
         BNE   CKTYP3                  NO
         BAL   R9,FMTHEX               YES, GO FORMAT
         B     RECLUP                  GO FINISH RECORD
CKTYP3   CLI   PRTYP,C'3'              3-LINE CHAR/HEX PRINTOUT
         BNE   PRTCHR                  NO
         BAL   R9,FMTCHEX              YES, GO FORMAT
         B     RECLUP                  GO FINISH RECORD
PRTCHR   MVC   TRC+1(1),PRTLEN+1       LENGTH TO TRANSLATE
TRC      TR    PDATA,CHRTBL            TRANSLATE CHARACTERS
         MVI   GRPND,1                 INDIC END PRINT GROUP
         BAL   R9,PRINT                PRINT THE LINE
         B     RECLUP                  GO FINISH THE RECORD
*
*
*
FMTMIXD  EQU   *         *** FORMAT MIXED CHAR/HEX PRINTOUT ***
         ST    R9,FMX9                 STORE RETURN ADDR
         LH    R9,PRTLEN               GET LENGTH CODE
         MVI   ZONLIN,0                MOVE ZERO TO CLEAR
         MVC   ZONLIN+1(199),ZONLIN    CLEAR ZONE AND NUMERIC LINES
         STC   R9,ZONMV+1              LENGTH CODE TO ZONE MOVE
         STC   R9,NUMMV+1              LENGTH CODE TO NUMERIC MOVE
         STC   R9,TRM1+1               LENGTH CODE TO TR CHARACTERS
         STC   R9,TRM2+1               LENGTH CODE TO ZONE TRANSLATE
         STC   R9,TRM3+1               LENGTH CODE TO NUMERIC TRANSLATE
         STC   R9,PRTM2+1              LENGTH TO BLANK COMPARE
         STC   R9,PRTM1+1              LENGTH TO BLANK COMPARE
ZONMV    MVZ   ZONLIN,PDATA            MOVE ZONES
NUMMV    MVN   NUMLIN,PDATA            MOVE NUMERICS
TRM1     TR    PDATA,PRTCGTBL          TRANSLATE CHARACTERS
TRM2     TR    ZONLIN,TRZON            TRANSLATE ZONES
TRM3     TR    NUMLIN,TRNUM            TRANSLATE NUMERICS
         LA    R12,PDATA(R9)           GET RHE CHARACTER DATA
         LA    R11,ZONLIN              GET LHE ZONE LINE
         LA    R10,NUMLIN              GET LHE NUMERIC LINE
         LA    R9,PDATA                GET LHE CHAR DATA
MFLUP    CR    R9,R12                  AT END OF SCAN
         BH    PRTM2                   YES
         CLI   0(R9),0                 HEX 0 IN CHARACTER POSITION
         BE    MVZONM                  YES, MOVE ZONE TO CHARACTER LINE
         MVI   0(R10),C' '             NO, BLANK TO NUMERIC LINE
         B     INCRM3                  GO INCREMENT ADDRS
MVZONM   MVC   0(1,R9),0(R11)          MOVE ZONE CHAR TO CHAR LINE
INCRM3   LA    R9,1(R9)                INCREMENT CHAR LINE ADDR
         LA    R10,1(R10)              INCREMENT NUMERIC LINE ADDR
         LA    R11,1(R11)              INCREMENT ZONE LINE ADDR
         B     MFLUP                   CONTINUE LOOP
PRTM2    CLC   NUMLIN,BLANX            NUMERIC PORTION ALL BLANK
         BNE   PRT2M                   NO
         MVI   GRPND,1                 INDICATE END OF PRINT GROUP
PRT2M    BAL   R9,PRINT                PRINT 1ST LINE
PRTM1    CLC   NUMLIN,BLANX            NUMERIC LINE BLANK
         BE    EXMX                    YES, EXIT
PRT1M    MVI   GRPND,1                 INDIC END PRINT GROUP
         MVC   PDATA,NUMLIN            NUMERICS TO PRINT LINE
         BAL   R9,PRINT                PRINT THE NUMERICS
EXMX     L     R9,FMX9                 GET RETURN ADDR
         BR    R9                      RETURN
*
*
*
FMTHEX   EQU   *         *** FORMAT VERTICAL HEX LINES ***
         ST    R9,HX9                  SAVE RETURN ADDR
         LH    R9,PRTLEN               GET PRINT LENGTH
         STC   R9,FXM+1                STORE LEN CODE IN TRANSLATE
         STC   R9,FXMTN+1              STORE LEN CODE IN NUMERIC TR
         STC   R9,FXMN+1               STORE LEN CODE IN NUMERIC MOVE
         MVN   NUMLIN,PDATA            NUMERICS TO NUMERIC LINE
         NI    PDATA,X'F0'             CLEAR 1ST POS NUMERIC
         MVN   PDATA+1(49),PDATA       CLEAR REMAINING NUMERICS
FXM      TR    PDATA,TRZON             TRANSLATE ZONES
         BAL   R9,PRINT                PRINT ZONE LINE
FXMN     MVN   PDATA,NUMLIN            MOVE NUMERICS TO PRINT LINE
         NI    PDATA,X'0F'             CLEAR ZONE, POS 1
         MVZ   PDATA+1(49),PDATA       CLEAR REMAINING ZONES
FXMTN    TR    PDATA,TRNUM             TRANSLATE NUMERIX
         MVI   GRPND,1                 INDICATE END OF PRINT GROUP
         BAL   R9,PRINT                PRINT NUMERIC LINE
EXHEX    L     R9,HX9                  GET RETURN ADDR
         BR    R9                      RETURN
*
*
*
FMTCHEX  EQU   *         *** FORMAT 3-LINE CHAR/HEX PRINTOUT ***
         ST    R9,FCX9                 SAVE RETURN ADDR
         MVC   ZONLIN,PDATA            SAVE PRINT DATA
         MVC   CXTR+1(1),PRTLEN+1      MOVE LENGTH TO TR
CXTR     TR    PDATA,CHRTBL            TRANSLATE CHARACTERS
         BAL   R9,PRINT                PRINT CHARACTER LINE
         MVC   PDATA,ZONLIN            RESTORE ORIGINAL DATA TO PRINT L
         BAL   R9,FMTHEX               GO FORMAT VERT HEX
         L     R9,FCX9                 GET RETURN ADDR
         BR    R9                      RETURN
*
*
*
PRINT    EQU   *         *** PRINT A LINE ROUTINE ***
         PUT   SYSPRINT,P             WRITE THE LINE
CKLCT    CLI   GRPND,1                 END OF PRINT GROUP
         BNE   PXIT1                   NO
NOBAR    NOP   CPHL                    BRANCH IF NO BAR SELECTED
         MVC   P(30),BLANX             CLEAR PRINT LINE
         MVC   BARMV+1(1),PRTLEN+1     LENGTH TO BAR MOVE
BARMV    MVC   PDATA,LOCBAR            MOVE LOCATOR BAR TO PRINT
         PUT   SYSPRINT,P             WRITE LOCATOR BAR LINE
CPHL     B     PXIT
HEADING  PUT   SYSPRINT,HEAD           PRINT HEADING
         PUT   SYSPRINT,HD2            WRITE SECOND HEADING LINE
         PUT   SYSPRINT,HD3            WRITE THIRD HEAD LINE
PXIT     EQU   *                 SET DOUBLE SPACE PRINT
PXIT1    MVC   P,BLANX                 CLEAR PRINT LINE
         MVI   GRPND,0                 RESET GROUP END INDIC
         BR    R9                      RETURN TO CALLER
*
*
*
ENDJOB   EQU   *         *** END OF JOB ROUTINE ***
         MVC   P(18),=C'*** EOF RECORD  ***'
         BAL   R9,PRINT                PRINT EOJ MSG
         B     CLPRT                   GO CLOSE FILES
EOJHI    MVC   P(24),=C'*** MAX RECDS  PASSED ***'
         BAL   R9,PRINT                PRINT EOJ MSG
CLPRT    CLOSE (SYSPRINT,,SYSIN) CLOSE CTL CARD AND PRINT
DMPCL    CLC   ORG,=C'IS'              WAS IT INDEX-SEQ FILE
         BE    CLIS                    YES
         CLC   ORG,=C'VS'              WAS IT VRBL SPANNED
         BE    CLVS                    YES
         CLOSE DUMPIN                  CLOSE SEQUENTIAL INPUT FILE
         B     EOJ1                    GO EXIT
CLIS     CLOSE DUMPIS                  CLOSE INDEX-SEQ INPUT FILE
         B     EOJ1                    GO EXIT
CLVS     CLOSE DUMPVS                  CLOSE VRBL SPANNED FILE
EOJ1     L     R13,SAVE+4              GET RETURN POINTER
         LM    R14,R12,12(R13)         GET CTL PGM REGISTERS
         BR    R14                     RETURN TO CONTROL PROGRAM
*
*
**************************DATA WORK AND FILE AREAS ******************
*
CVT      DS    D
SAVE     DS    2F
         DC    A(SAVE)
         DS    15F
FCX9     DS    F
HX9      DS    F
FMX9     DS    F
RECADDR  DS    F
SL9      DS    F
VADR     DS    F                       ADDRESS OF VRBL SPANNED RECD
JFCBADR  DC    X'87'                   DCB EXIT LIST FOR READING JFCB
         DC    AL3(JFCB)               ADDRESS OF JFCB READ-IN AREA
DISP1    DS    H
DISP2    DS    H
FIFTY  DC    H'50'
FORTY9  DC    H'49'
REMLEN   DS    H                       REMAINING LENGTH IN REC
PRTLEN   DS    H                       REMAINING LENGTH TO PRINT
RECLEN   DS    H                       LOGICAL RECORD LENGTH
KEYLEN   DS    H
CLN1     DS    CL1
CLN2     DS    CL1
NTST     DC    CL5' '
ZEROS    DC    CL5'00000'
PRTYP    DC    C'M'                    H=HEX ONLY, C=CHAR ONLY 3=3-LINE
STARTKY  DC    XL60'00'                BEGINNING KEY FOR INDEX-SEQ
STARTPOS DC    PL3'0'                  PRINT STARTING POS IN RECORD
TOTRCDS  DC    PL5'1000'               NUMBER RECORDS TO PRINT
NRECDS   DC    PL5'0'                  NUMBER RECORDS PRINTED
RECDNO   DC    PL5'0'                  NUMBER RECDS READ
ORG      DC    C'PS'                   USER SPECIFIED FILE TYPE
XZROS    DC    XL16'00'
GRPND    DC    X'00'
A1       DS    CL16
A2       DS    CL16
ID1      DS    CL8
B1       DS    CL16
B2       DS    CL16
ID2      DS    CL8
C1       DS    CL16
C2       DS    CL16
ID3      DS    CL8
D1       DS    CL16
D2       DS    CL16
ID4      DS    CL8
E1       DS    CL16
E2       DS    CL16
ID5      DS    CL8
NS       DC    H'0'
COD1     DS    CL1
COD2     DS    CL1
BRCODS   DC    CL3'EQ'
         DC    XL1'80'
         DC    CL3'NE'
         DC    XL1'70'
         DC    CL3'LT'
         DC    XL1'40'
         DC    CL3'GT'
         DC    XL1'20'
         DC    CL3'NGT'
         DC    XL1'D0'
         DC    CL3'NLT'
         DC    XL1'B0'
         DC    X'FF'
ZONLIN   DS    CL50
NUMLIN   DS    CL50
*
*
P        DS    0CL80                  PRINT DATA LINE
PID      DS    CL7
         DS    CL1
PRECNO   DS    CL4
         DS    CL1
PLEN     DS    CL5
         DS    CL1
PSTRT    DS    CL4
HYPH     DS    CL1
PEND     DS    CL4
         DS    CL1
PDATA    DS    CL50
         DC    CL53' '
*
*
*
*
HEAD     DC    CL7'DSNAME='
HDSN     DS    CL44
         DC    CL9' VOLSERS='
VOLSRL   DS    CL20
*
*
HD2      DC    CL6'DSORG='
HORG     DC    CL2'PS'
         DC    CL7' RECFM='
HRCFM    DC    CL3'UBS'
         DC    CL8' KEYLEN='
HKYLN    DS    CL3
         DC    CL9' BLKSIZE='
HBKSZ    DS    CL5
         DC    CL7' LRECL='
HLRECL   DS    CL5
         DC    CL25' '
*
*
HD3      DS    0CL133    *** THIRD HEADING LINE ***
         DC    CL38'0REC ID   RECNO  LENG  RECD-POS'
         DC    CL14'RECORD CONTENT'
BLANX    DC    100C' '
*
*
JFCB     DS    0CL176    *** JOB FILE CONTROL BLOCK ***
DSNAME   DC    XL44'00'
GENNO    DS    CL8
         DS    CL18
VOLSEQ   DS    CL2
JFCBMASK DS    CL8
         DS    CL13
KEYLENG  DS    CL1
         DS    CL4
DSORGN   DS    BL2
RECDFM   DS    BL1
         DS    CL1
BLOCKSIZ DS    XL2
LOGREC   DS    XL2
         DS    CL12
VOLSERS  DS    CL30
         DS    CL28
*
*
PRTCGTBL DC    64X'00'
         DC    C'.'
         DC    9X'00'
         DC    X'4A'
         DC    3X'00'
         DC    X'4E'
         DC    12X'00'
         DC    X'5B'
         DC    15X'00'
         DC    X'6B'
         DC    2X'00'
         DC    X'6E'
         DC    11X'00'
         DC    X'7A7B'
         DC    2X'00'
         DC    X'7E'
         DC    66X'00'
         DC    C'ABCDEFGHI'
         DC    7X'00'
         DC    C'JKLMNOPQR'
         DC    8X'00'
         DC    C'STUVWXYZ'
         DC    6X'00'
         DC    C'0123456789'
         DC    6X'00'
TRNUM    DC    C'0123456789ABCDEF'
TRZON    DC    C'0'
         DC    XL16'F1'
         DC    XL16'F2'
         DC    XL16'F3'
         DC    XL16'F4'
         DC    XL16'F5'
         DC    XL16'F6'
         DC    XL16'F7'
         DC    XL16'F8'
         DC    XL16'F9'
         DC    XL16'C1'
         DC    XL16'C2'
         DC    XL16'C3'
         DC    XL16'C4'
         DC    XL16'C5'
         DC    XL16'C6'
CHRTBL   DC    64C'.'
         DC    C' '
         DC    9C'.'
         DC    X'4A4B4C4D4E4B50'
         DC    10C'.'
         DC    X'5B5C5D4B4B6061'
         DC    9C'.'
         DC    X'6B6C4B6E6F'
         DC    10C'.'
         DC    X'7A7B7C7D7E7F'
         DC    65C'.'
         DC    C'ABCDEFGHI'
         DC    7C'.'
         DC    C'JKLMNOPQR'
         DC    8C'.'
         DC    C'STUVWXYZ'
         DC    6C'.'
         DC    C'0123456789'
         DC    6C'.'
LOCBAR   DC    CL25'1...5...10....5...20....5'
         DC    CL25'...30....5...40....5...50'
LOGICD   DSECT ,         *** CONTROL CARD FOR RECORD SELECTION ***
         DS    CL1                     COL 1 = S
IDNT     DS    CL8           CC 2-9    USER RECORD ID
         DS    CL1
ST1      DS    CL5           CC 11-15  STARTING POS IN RECORD
         DS    CL1
LEN1     DS    CL2           CC 17-18  LENGTH OF FIELD
         DS    CL1
CPR1     DS    CL3           CC 20-22  COMPARISON DESIRED, EQ, NE, LT,
*                                      GT, NGT, OR NLT
         DS    CL1
VAL1     DS    CL16          CC 24-39  VALUE FOR COMPARISON
         DS    CL1
REL      DS    CL3           CC 41-43  RELATION, AND OR OR
         DS    CL1
ST2      DS    CL5           CC 45-49  STARTING POS IN RECORD
         DS    CL1
LEN2     DS    CL2           CC 51-52  LENGTH OF FIELD
         DS    CL1
CPR2     DS    CL3           CC 54-56  COMPARISON DESIRED
         DS    CL1
VAL2     DS    CL16          CC 58-73  VALUE FOR COMPARISON
         DS    CL1
REL2     DS    CL3           CC 75-77  AND RELATION TO NEXT CARD
         DS    CL3
*
*
CNTLCD   DSECT ,         *** CONTROL CARD FOR OPTIONS ***
         DS    CL1                     COL 1 = *
CTYP     DS    CL1           CC 2      PRINT TYPE OPTION, M, H, C, OR 3
         DS    CL1
CBAR     DS    CL1           CC 4      LOCATOR BAR, N OR Y
         DS    CL1
CMAX     DS    CL5           CC 6-10   MAXIMUM RECORDS TO PRINT
         DS    CL1
CFILTYP  DS    CL2           CC 12-13  FILE TYPE, IS, PS, OR VS
         DS    CL1
CSTRT    DS    CL5           CC 15-19  STARTING RECORD NBR
CSKY     DS    CL59          CC 21-79  STARTING KEY FOR IS
ENDCD    DS    CL1
RUX0011  CSECT
*
*
*
DUMPIN   DCB   DDNAME=DUMPIN,DEVD=DA,DSORG=PS,MACRF=GL,EXLST=JFCBADR,  X
               EODAD=ENDJOB
*
*
DUMPVS   DCB   DDNAME=DUMPIN,DEVD=DA,DSORG=PS,MACRF=GL,EXLST=JFCBADR,  X
               EODAD=ENDJOB,BFTEK=A
*
*
DUMPIS   DCB   DDNAME=DUMPIN,EXLST=JFCBADR,EODAD=ENDJOB,               X
               DSORG=IS,MACRF=GL
*
*
SYSIN    DCB   DDNAME=SYSIN,MACRF=GL,LRECL=80,RECFM=FB,                X
               DEVD=DA,DSORG=PS,EODAD=CTLEND
*
*
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,BLKSIZE=80,LRECL=80,RECFM=F,   X
               DEVD=DA,DSORG=PS
         END
