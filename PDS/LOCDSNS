         TITLE '    ***** LOCDSNS - STRIP DISK PACK VTOCS *****'
         PRINT NOGEN
LOCDSNS  SVLNK R3
*
***********************************************************************
* THIS PROGRAM SEARCHES IT'S VTOC FOR DD CARDS WHOSE NAMES BEGIN WITH *
* VTOC. WHEN FOUND, THE DDNAME IS MOVED TO THE VTOC DCB DDNAME FIELD, *
* AND THE JFCB IS READ. THE DSNAME FIELD OF THE JFCB IS SET TO ALL    *
* HEX 04'S TO PERMIT OPENING THE VTOC, AS THE FORMAT 4 DSCB DEFINES   *
* THE VTOC EXTENTS. THE VTOC IS THEN READ AS FOLLOWS: ALL FORMAT 1    *
* DSCB'S ARE READ AND USED TO CREATE OUTPUT RECORDS, EACH OF WHICH    *
* CONTAINS VOLSER, DSNAME, DSORG, RECFM, LRECL, BLKSIZE AND KEYLEN.   *
*                                                                     *
* AUTHOR R. THORNTON     JUL, 1985                                    *
***********************************************************************
*
*
***********************************************************************
*        GENERAL INITIALIZATION                                       *
***********************************************************************
*
OPENS    OPEN  (OUTPUT1,OUTPUT,PRINT1,OUTPUT) OPEN OUTPUT FILES
         L     R1,16                   GET CVT ADDRESS
         L     R1,0(R1)                GET CVTTCBP
         L     R1,0(R1)                GET TCB ADDRESS
         L     R1,12(R1)               GET TIOT ADDRESS
         LA    R1,24(R1)               GET ADDRESS OF 1ST DD ENTRY
         ST    R1,TIOTDD               SAVE TIOT DD ENTRY ADDRESS
*
***********************************************************************
*        SEARCH TIOT FOR NEXT //VTOC... DD CARD                       *
***********************************************************************
*
NEXVOL   L     R1,TIOTDD               GET TIOT DD ENTRY ADDRESS
         SR    R2,R2                   CLEAR WORK REG
CKLSTDD  CLI   0(R1),0                 LAST TIOT DD ENTRY
         BE    EOJ                     YES
         CLC   4(4,R1),=C'VTOC'        DDNAME BEGINS WITH VTOC
         BE    USEDD                   YES, USE IT
         IC    R2,0(R1)                GET DD ENTRY LENGTH
         AR    R1,R2                   STEP TO NEXT DD ENTRY
         B     CKLSTDD                 GO CK NEXT DD
*
***********************************************************************
*        FOUND A //VTOC.. DD CARD, READ THE JFCB. CHECK FOR VOLSER    *
*        SPECIFIED. IF VALID, MOVE ALL HEX 04'S TO JFCB DSNAME AND    *
*        OPEN USING THE MODIFIED JFCB (OPEN THE VTOC).                *
***********************************************************************
*
USEDD    MVC   VTOC+40(8),4(R1)        MOVE DNAME IN TIOT TO DCB
         IC    R2,0(R1)                GET DD ENTRY LENGTH
         AR    R1,R2                   STEP TO NEXT DD ENTRY
         ST    R1,TIOTDD               SAVE IT'S ADDRESS
         XC    JFCBDSNM,JFCBDSNM       CLEAR JFCB DSNAME FOR CHECK
         RDJFCB VTOC                   READ THE JFCB
         CLC   JFCBDSNM(8),XZROS       WAS JFCB READ
         BNE   CKSERNO                 YES, DSNAME NOT ZEROS
         MVC   PRT(16),=C'NO JFCB READ FOR'
MOVDD    MVC   PRT+21(8),VTOC+40       DDNAME TO MESSAGE
         BAL   R9,PRINT                GO PRINT THE MESSAGE
         B     NEXVOL                  GO START NEXT VOLUME
CKSERNO  CLC   JFCBVOLS(8),=CL8' '     SERIAL NBR IN DD CARD OMITTED
         BNE   DS4NAME                 NO, O.K.
         MVC   PRT(20),=C'NO VOL SER IN DD FOR'
         B     MOVDD                   GO MOVE DDNAME
DS4NAME  MVI   JFCBDSNM,4              DATA SET NAME FOR FMT 4 DSCB
         MVC   JFCBDSNM+1(43),JFCBDSNM DATA SET NAME FOR FORMAT 4 DSC
         MVI   JFCBTSDM,X'08'          SUPPRESS JFCB REWRITE
         OPEN  VTOC,TYPE=J             OPEN USING MODIFIED JFCB
*
***********************************************************************
*        INITIALIZE FOR SEQUENTIAL READ OF VTOC USING EXCP: USE THE   *
*        DEB EXTENTS TO BEGIN AND END PROCESSING.                     *
***********************************************************************
*
         L     R1,VTOC+44              GET DEB ADDRESS
         MVC   NEXCCHH,38(R1)          MOVE BEGIN CCHH TO NEXT RECADR
         MVI   NEXREC,1                BEGIN RECORD IS 1
*
***********************************************************************
*        READ NEXT FORMAT 1 DSCB USING EXCP.                          *
***********************************************************************
*
SEQREAD  OI    READCMD+4,X'40'         SET CHAIN FLAG TO READ COUNT
         MVC   VTSRCH,NEXRECA          MOVE IN NEXT REC ADDR
         BAL   R9,EXCPRTN              GO READ THE RECORD
         LA    R4,DSCBFMT1             GET ADDRESS OF RECORD
         USING DSCBFMT1,R4
         CLI   DS1FMTID,C'1'           IS IT FORMAT 1?
         BNE   SEQREAD                 NO, GO READ NEXT
*
***********************************************************************
*        FORMAT THE OUTPUT RECORD USING DATA FIELDS IN THE FORMAT 1   *
*        DSCB.                                                        *
***********************************************************************
*
         MVC   DSNAME,DS1DSNAM         MOVE DSNAME TO OUTPUT
         MVC   VOLSER,JFCBVOLS         VOL SER TO OUTPUT
         MVC   DSORG,=C'PS'            ASSUME DSORG=PS
         TM    DS1DSORG,X'40'          IS IT PS?
         BO    MVLRECL                 YES
         MVC   DSORG,=C'VS'            NO, ASSUME DSORG=VS
         TM    DS1DSORG+1,X'08'        IS IT VSAM?
         BO    MVLRECL                 YES
         MVC   DSORG,=C'PO'            NO, ASSUME DSORG=PO
         TM    DS1DSORG,X'02'          IS IT PARTITIONED?
         BO    MVLRECL                 YES
         MVC   DSORG,=C'IS'            NO, ASSUME DSORG=IS
         TM    DS1DSORG,X'80'          IS IT ISAM?
         BO    MVLRECL                 YES
         MVC   DSORG,=C'DA'            NO, ASSUME DSORG=DA
         TM    DS1DSORG,X'40'          IS IT DIRECT ACCESS?
         BO    MVLRECL                 YES
         MVC   DSORG,=C'??'            UNIDENTIFIED DSORG
MVLRECL  LH    R1,DS1LRECL             PICK UP LRECL
         CVD   R1,DBLWD                CONVERT TO PACKED
         OI    DBLWD+7,X'0F'           CLEAR THE SIGN
         UNPK  LRECL,DBLWD             UNPACK LRECL INTO OUTPUT REC
         LH    R1,DS1BLKL              PICK UP BLKSIZE
         CVD   R1,DBLWD                CONVERT TO PACKED
         OI    DBLWD+7,X'0F'           CLEAR THE SIGN
         UNPK  BLKSIZE,DBLWD           UNPACK BLKSIZE INTO OUTPUT REC
         LH    R1,DS1KEYL              PICK UP KEY LENGTH
         CVD   R1,DBLWD                CONVERT TO PACKED
         OI    DBLWD+7,X'0F'           CLEAR THE SIGN
         UNPK  KEYLEN,DBLWD            UNPACK KEYLEN INTO OUTPUT REC
         MVI   RECFM,C'U'              ASSUME UNDEFINED RECORD LENGTH
         TM    DS1RECFM,X'C0'          IS IT UNDEFINED?
         BO    CHKBLKD                 YES
         MVI   RECFM,C'F'              ASSUME FIXED RECORD LENGTH
         TM    DS1RECFM,X'80'          IS IT FIXED?
         BO    CHKBLKD                 YES
         MVI   RECFM,C'V'              ASSUME VARIABLE RECORD LENGTH
         TM    DS1RECFM,X'40'          IS IT VARIABLE?
         BO    CHKBLKD                 YES
         MVC   RECFM,=C'????'          UNIDENTIFIABLE RECFM
         B     FMTFINI                 GO WRITE THE RECORD
CHKBLKD  LA    R1,RECFM+1              POINT TO 2ND BYTE OF RECFM
         MVC   RECFM+1(3),=CL3' '      CLEAR REST OF RECFM FIELD
         TM    DS1RECFM,X'10'          BLOCKED RECORDS?
         BZ    CHKSBIT                 NO
         MVI   0(R1),C'B'              YES, SHOW BLOCKED RECORDS
         LA    R1,1(R1)                AND STEP PAST INDICATOR
CHKSBIT  TM    DS1RECFM,X'08'          STANDARD BLOCKS OR VBL SPANNED?
         BZ    CHKCTL                  NO
         MVI   0(R1),C'S'              YES, SHOW STANDARD/SPANNED
CHKCTL   TM    DS1RECFM,X'04'          ASA CONTROL CHARACTERS?
         BO    SETASA                  YES
         TM    DS1RECFM,X'02'          MACHINE CODE CONTROL CHARS?
         BZ    FMTFINI                 NO
         MVI   0(R1),C'M'              YES, SHOW MACHINE CODE CHARS
         B     FMTFINI                 FORMAT FINISHED
SETASA   MVI   0(R1),C'A'              SHOW ASA CONTROL CHARACTERS
FMTFINI  CLC   DSNAME+8(2),=C'.T'      POSSIBLE TEMPORARY DATASET?
         BNE   WRTOUT                  NO
         MVZ   NUMCK,DSNAME+10         MOVE ZONES FOR NUMERIC CHECK
         CLC   NUMCK,ZEROS             NUMERIC?
         BNE   WRTOUT                  NO, NOT TEMPORARY
         MVZ   NUMCK,DSNAME+3          MOVE ZONES FOR NUMERIC CHECK
         CLC   NUMCK(5),ZEROS          NUMERIC?
         BNE   WRTOUT                  NO, NOT TEMPORARY
         CLC   DSNAME(3),=CL3'SYS'     POSSIBLE TEMPORARY DATASET?
         BNE   WRTOUT                  NO
         B     SEQREAD                 TEMPORARY DATASET, DROP IT
WRTOUT   PUT   OUTPUT1,OUTREC          WRITE THE RECORD
         B     SEQREAD                 YES, NO FORMAT 2 OR 3
*
***********************************************************************
*        EXCP ROUTINE USED TO READ THE NEXT DSCB FROM THE VTOC        *
***********************************************************************
*
EXCPRTN  EXCP  VTOCIOB                 CALL O/S FOR READ
         WAIT  ECB=VTECB               WAIT FOR READ
         CLI   VTECB,X'7F'             ANY ERROR
         BCR   8,R9                    NO, RETURN
         CLI   VTECB,X'42'             EXTENT VIOLATION
         BNE   IOERR                   NO, MUXT BE AN ERROR
         CLOSE VTOC                    END OF VTOC, CLOSE
         B     NEXVOL                  GO OPEN NEXT VOLUME
IOERR    ABEND 104,DUMP
*
***********************************************************************
*        PRINT SUBROUTINE TO WRITE ERROR MESSAGES                     *
***********************************************************************
*
PRINT    PUT   PRINT1,PRTLINE          PRINT MESSAGE
         MVC   PRT,PRTCC               CLEAR PRINT LINE
         MVC   RETCODE,XZROS           SET RETURN CODE
         BR    R9                      RETURN TO CALLER
*
***********************************************************************
*        END OF JOB                                                   *
***********************************************************************
*
EOJ      CLOSE (OUTPUT1,,PRINT1)       CLOSE OUTPUT FILES
         L     R13,4(R13)              GET CALLER'S SAVE AREA ADDRESS
         L     R14,12(R13)             GET CALLER'S RETURN ADDRESS
         L     R15,RETCODE             GET RETURN CODE
         LM    R0,R12,20(R13)          RESTORE CALLER'S REGISTERS
         BR    R14                     RETURN TO CALLER
*
***********************************************************************
*        DATA, WORK, FILE, AND STORAGE AREAS                          *
***********************************************************************
*
DBLWD    DS    D                       DOUBLEWORD WORK AREA
RETCODE  DC    F'0'                    RETURN CODE
NEXCNT   DS    0D                      COUNT RECORD OF NEXT RECORD
NEXRECA  DS    0XL5                    CCHHR ADDRESS OF NEXT RECORD
NEXCCHH  DS    XL4                     CCHH ADDRESS OF NEXT RECORD
NEXREC   DS    XL1                     RECORD NBR ON TRACK
         DS    XL3                     KEY LENG AND DATA LENG
XZROS    DC    2F'0'                   CONSTANT HEX ZEROS
TIOTDD   DS    F                       ADDRESS OF NEXT DD ENTRY IN TIOT
NUMCK    DC    CL6'000000'             NUMERIC CHECK AREA
ZEROS    DC    CL6'000000'             CHARACTER ZEROS
*
OUTREC   DS    0CL80                   OUTPUT RECORD, 80 BYTES
VOLSER   DS    CL6                     VOLUME SERAIL NUMBER
         DC    CL1' '
DSORG    DS    CL2                     DATASET ORGANIZATION
         DC    CL1' '
RECFM    DS    CL4                     RECORDING FORMAT
         DC    CL1' '
LRECL    DS    CL5                     LOGICAL RECORD LENGTH
         DC    CL1' '
BLKSIZE  DS    CL5                     BLOCK SIZE
         DC    CL1' '
KEYLEN   DS    CL3                     KEY LENGTH
         DC    CL1' '
DSNAME   DS    CL44                    DATASET NAME
         DC    CL5' '
*
PRTLINE  DS    0CL133                  PRINT LINE OUTPUT
PRTCC    DC    C' '                    CARRIAGE CONTROL CHARACTER
PRT      DC    CL132' '                PRINT LINE
*
OUTPUT1  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT1,                       X
               RECFM=FB,LRECL=80
PRINT1   DCB   DSORG=PS,MACRF=PM,RECFM=FB,LRECL=133,BLKSIZE=133,       X
               DDNAME=PRINT1
         PRINT GEN
         TITLE '***** EXCP I/O AREAS *****'
CMDCHN   DS    0D                      COMMAND CHAIN TO READ VTOC
         CCW   X'31',VTSRCH,X'40',5    SEARCH ID EQUAL
         CCW   8,*-8,0,0               NOT FOUND, REPEAT SEARCH
READCMD  CCW   X'0E',DSCBFMT1,X'40',140    READ KEY AND DATA INTO DSCB
         CCW   X'92',NEXCNT,0,8        READ COUNT OF NEXT RECORD, M-T
JFCBADDR DS    0F                      DCB EXIT LIST
         DC    X'87'                   RDJFCB ENTRY, LAST ENTRY
         DC    AL3(JFCB)               ADDRESS OF JFCB AREA
VTOC     DCB   DDNAME=VTOC,MACRF=E,EXLST=JFCBADDR
VTOCIOB  EXCPIOB CCW=CMDCHN,DCB=VTOC
         TITLE '***** JOB FILE CONTROL BLOCK (JFCB) *****'
         JFCBDEF DSECT=NO
         TITLE '***** DATASET CONTROL BLOCK (DSCB) *****'
         DSCBDEF FMT1=YES,DSECT=NO
LOCDSNS  CSECT
         END
