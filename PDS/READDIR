         TITLE 'READDIR - READ DIRECTORY OF PDS'
READDIR  CSECT
         REQU
* PROGRAM TO READ THE DIRECTORY IN AN INPUT PDS AND RETURN
* ENTRIES TO THE CALLING PROGRAM. EACH 11 BYTE ENTRY RETURNED IS
* COMPOSED OF AN 8 BYTE MEMBER NAME FOLLOWED BY THE 3 BYTE TTR
* ADDRESS OF THE BEGINNING OF THE MEMBER
* LINKAGE CONVENTIONS ARE STANDARD WITH PARAMETER REQUIREMENTS
* AS FOLLOWS -
* OPEN - FIRST POSITION IS O, LAST 8 POSITIONS ARE DDNAME
* CLOSE - PARAMETER IS C
* READ - FIRST PARAMETER IS R, SECOND PARAMETER IS RECORD ADDRESS AREA.
*        ON RETURN, R1 CONTAINS THE ADDRESS OF THE FULL DIRECORY ENTRY.
* EOF - INDICATED TO CALLER BY HEX FF IN FIRST POSITION OF RECORD AREA.
*
* AUTHOR R. THORNTON   APR 1972
*
*********************************************************************
*   SUBROUTINE READDIR     PROJECT  965294     4/28/97
*   THIS SUBROUTINE HAS BEEN ANALYZED BY CGA AND DETERMINED TO CONTAIN
*   NO DATES AND TO BE Y2000 COMPLIANT.  THEREFORE, THE CDC CORE TEAM
*   HAS CONCLUDED NO CHANGES ARE NECESSARY.  IT WILL REMAIN UNDER
*   BCBS01/COMMON/COMMON ON ENDEVOR.
**********************************************************************
*   CORRECTED END-OF-DIRECTORY DETECTION TO HANDLE IBM'S CHANGES.    *
*   ALSO MODIFIED CODE TO RETURN THE ADDRESS OF THE DIRECTORY ENTRY  *
*   IN R1 ON RETURN. R THORNTON APR 1999                             *
**********************************************************************
         USING READDIR,R3              ESTABLISH ADDRESSABILITY
         STM   R14,R12,12(R13)         SAVE CALLING PROG REGISTERS
         LR    R3,R15                  INITIALIZE BASE REG
         ST    R13,SAVE+4              SAVE RETURN POINTER
         LA    R15,SAVE                GET THIS PGM SAVE ADDR
         ST    R15,8(R13)              STORE FORWARD POINTER
         LR    R13,R15                 INITIALIZE SAVE AREA POINTER
         L     R4,0(R1)                GET FIRST PARAMETER ADDRESS
         L     R5,4(R1)                GET SECOND PARAMETER ADDRESS
         CLI   0(R4),C'O'              OPEN REQUESTED
         BE    OPEN                    YES
         CLI   0(R4),C'C'              CLOSE REQUESTED
         BE    CLOSE                   YES
         CLI   0(R4),C'R'              READ REQUESTED
         BE    READ                    YES
         ABEND 201,DUMP                INVALID REQUEST
RETURN   EQU   *                       RETURN TO CALLING PROG
         L     R13,SAVE+4              POINT TO CALLER'S SAVE AREA
         L     R14,12(R13)             RESTORE RETURN ADDRESS
         SR    R15,R15                 CLEAR OUT RETURN CODE
         L     R0,20(R13)              RESTORE CALLER'S R0
         L     R1,PASSADDR             SEND DIRECTORY ENTRY ADDR IN R1
         LM    R2,R12,28(R13)          RESTORE CALLING PGM R2-R12
         CNOP  2,4                     ALIGN
         BR    R14                     RETURN TO CALLER
*
*
*
OPEN     EQU   *         *** OPEN FILE ROUTINE ***
         MVC   PDS+40(8),1(R4)         DDNAME TO DCB
         OPEN  PDS                     OPEN FILE
         B     RETURN                  GO BACK TO CALLER
*
*
*
CLOSE    EQU   *         *** CLOSE ROUTINE ***
         CLOSE PDS                     CLOSE FILE
         XC REMBYTS,REMBYTS            RESET IN CASE OF NEW OPEN
         FREEPOOL PDS                  FREE THE BUFFER
         B     RETURN                  GO BACK TO CALLER
*
*
*
EOF      EQU   *             *** END OF FILE ROUTINE ***
         MVI   0(R5),X'FF'             INDICATE EOF TO CALLER
         B     RETURN                  RETURN TO CALLER
*
*
*
READ     EQU   *             *** READ DIRECTORY ENTRY ROUTINE ***
         LH    R12,REMBYTS             GET NBR BYTES REMAINING IN BLOCK
         CH    R12,ELEVEN              ANY MORE ENTRIES IN BLOCK
         BNL   GETADR                  YES
NEXREC   GET   PDS                     READ DIRECTORY BLOCK
         LR    R12,R1                  GET BLOCK ADDRESS
         MVC   REMBYTS,0(R12)          MOVE NBR BYTES IN BLOCK
         CLC   REMBYTS,ZERO            ANY BYTES IN BLOCK
         BE    EOF                     NO, EOF
         LA    R12,2(R12)              STEP PAST BLOCK SIZE FIELD
         ST    R12,RECADDR             STORE RECORD ADDRESS
GETADR   L     R12,RECADDR             GET NEXT ENTRY ADDRESS
         ST    R12,PASSADDR            SAVE ENTRY ADDRESS FOR CALLER
         MVC   0(11,R5),0(R12)         MOVE MEMBER ENTRY TO CALLER
         CLI   0(R5),X'F9'             END OF DIRECTORY?
         BH    EOF                     YES
         NI    11(R12),CLRBITS         CLEAR ALIAS, TTR BITS
         SR    R11,R11                 CLEAR WORK REG
         IC    R11,11(R12)             GET NBR USER HALFWORDS
         SLL   R11,1                   MULTIPLY BY 2
         LA    R11,12(R11)             CALCULATE RECORD LENGTH
         LH    R12,REMBYTS             GET NBR BYTES REMAINING
         SR    R12,R11                 SUBTRACT THIS ENTRY LENGTH
         BP    STREM                   ANY LEFT
         SR    R12,R12                 NO, SET TO ZERO
STREM    STH   R12,REMBYTS             STORE REMAINING BYTES
         A     R11,RECADDR             CALCULATE NEXT ENTRY ADDRESS
         ST    R11,RECADDR             STORE NEXT ENTRY ADDRESS
         TRT   0(1,R5),NATNLCH         NAME BEGINS WITH NATIONAL CHAR?
         BNZ   READ                    NO, BAD ENTRY, GO GET NEXT
         TRT   1(7,R5),VALCH           REST OF MEMBER NAME VALID?
         BNZ   READ                    NO, BAD ENTRY, GO GET NEXT
         B     RETURN                  GO BACK TO CALLER
*
*
*                            *** DATA AND FILE AREAS ***
*
SAVE     DS    18F
PASSADDR DS    F                       DIRECTORY ENTRY ADDRESS
REMBYTS  DC    H'0'                    BYTES REMAINING IN BLOCK
ELEVEN   DC    H'11'
ZERO     DC    H'0'
RECADDR  DS    F
CLRBITS  EQU   X'1F'
NATNLCH  DC    256X'FF'      NATIONAL CHARACTERS
         ORG   NATNLCH+C' '    BLANK
         DC    X'00'
         ORG   NATNLCH+C'$'    DOLLAR SIGN
         DC    X'00'
         ORG   NATNLCH+C'#'    POUNDS SIGN
         DC    X'00'
         ORG   NATNLCH+C'@'    AT SIGN
         DC    X'00'
         ORG   NATNLCH+C'A'    ALPHABET A-I
         DC    9X'00'
         ORG   NATNLCH+C'J'    ALPHABET J-R
         DC    9X'00'
         ORG   NATNLCH+C'S'    ALPHABET S-Z
         DC    8X'00'
         ORG
VALCH    DC    256X'FF'        VALID NAME CHARACTERS AFTER 1ST
         ORG   VALCH+C' '      BLANK
         DC    X'00'
         ORG   VALCH+C'$'      DOLLAR SIGN
         DC    X'00'
         ORG   VALCH+C'-'      HYPHEN
         DC    X'00'
         ORG   VALCH+C'#'      POUNDS SIGN
         DC    X'00'
         ORG   VALCH+C'@'      AT SIGN
         DC    X'00'
         ORG   VALCH+C'A'      ALPHABET A-I
         DC    9X'00'
         ORG   VALCH+C'J'      ALPHABET J-R
         DC    9X'00'
         ORG   VALCH+C'S'      ALPHABET S-Z
         DC    8X'00'
         ORG   VALCH+C'0'      DIGITS 0-9
         DC    10X'00'
         ORG
*
*
*
PDS      DCB   DSORG=PS,MACRF=GL,DDNAME=PDS,RECFM=F,                   X
               LRECL=256,BLKSIZE=256,EODAD=EOF
         END
