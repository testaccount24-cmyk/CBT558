         TITLE '***** SUBROUTINE TO DYNAMICALLY ALLOCATE FILES *****'
DYNALLOC SVLNK R3,,,SUB
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*  THIS SUBROUTINE IS CALLED TO PERFORM DYNAMIC ALLOCATION BY DSNAME.
*  THE CALLER PROVIDES TWO PARAMETER FIELDS, THE FIRST CONTAINS THE
*  INFORMATION USED TO ALLOCATE THE FILE, WHILE THE SECOND CONTAINS
*  INFORMATION CONCERNING THE SUCCESS OF THE ALLOCATION.
*  AUTHOR R THORNTON    APRIL 1979
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*********************************************************************
*   SUBROUTINE DYNALLOC    PROJECT  965294     4/28/97
*   THIS SUBROUTINE HAS BEEN ANALYZED BY CGA AND DETERMINED TO CONTAIN
*   NO DATES AND TO BE Y2000 COMPLIANT.  THEREFORE, THE CDC CORE TEAM
*   HAS CONCLUDED NO CHANGES ARE NECESSARY.  IT WILL REMAIN UNDER
*   BCBS01/COMMON/COMMON ON ENDEVOR.
**********************************************************************
         L     R5,0(R1)                @ 1ST PARAMETER
         USING PARM1,R5
         L     R6,4(R1)                @ 2ND PARAMETER
         USING PARM2,R6
         CLI   REQCODE,C'V'            VOLSER FEEDABCK REQUEST?
         BE    VOLFEED                 YES
         LA    R7,S99TUPL              POINT TO 1ST POINTER
         CLC   DDNAM,LOWVAL            DDNAME ENTERED?
         BE    CKDSN                   NO
         MVC   DDNAME,DDNAM            YES, MOVE IT
         LA    R12,L'DDNAME            GET FIELD LENGTH
         LA    R11,DDNKEY              GET @ TEXT UNIT
         BAL   R9,UNITADD              FINISH CONNECTION
         MVI   S99VERB,2               UNALLOCATION REQUEST
         MVI   S99TUPL,X'80'           SHOW DDNAME IS ONLY POINTER
         XC    S99ERROR,S99ERROR       CLEAR ERROR RETURN CODE
         XC    S99INFO,S99INFO         CLEAR INFO RETURN CODE
         LA    R1,S99RBPTR             POINT TO PARM LIST
         DYNALLOC ,                    FREE DDNAME
         MVI   S99TUPL,0               CLEAR LAST POINTER INDIC
CKDSN    CLC   DSNAM,LOWVAL            DSNAME ENTERED?
         BE    CKMBR                   NO
         CLC   DSNAM(6),=CL6'DUMMY '   IS IT DUMMY?
         BE    DUMMY                   YES
         CLC   DSNAM(7),=CL7'SYSOUT='  IS IT SYSOUT?
         BE    SYSOUTD                 YES
         MVC   DSNAME,DSNAM            NO, MOVE DSNAME
         LA    R12,L'DSNAME            LENGTH OF FIELD
         LA    R11,DSNKEY              @ TEXT UNIT
         BAL   R9,UNITADD              FINISH CONNECTION
         B     CKMBR                   CONTINUE
DUMMY    LA    R12,DUMKEY              @ TEXT UNIT
CHAIN1   ST    R12,0(R7)               CHAIN TEXT UNIT
         LA    R7,4(R7)                TO NEXT POINTER
         B     CKMBR                   CONTINUE
SYSOUTD  MVC   SYSOUT,DSNAM+7          MOVE SYSOUT CLASS
         LA    R12,SOKEY               @ TEXT UNIT
         B     CHAIN1                  GO CHAIN UNIT
CKMBR    CLC   MEMBR,LOWVAL            MEMBER NAME ENTERED?
         BE    CKDISP1                 NO
         MVC   MEMBER,MEMBR            YES, MOVE MEMBER NAME
         LA    R12,L'MEMBER            LENGTH OF FIELD
         LA    R11,MBRKEY              @ TEXT UNIT
         BAL   R9,UNITADD              FINISH CONNECTION
CKDISP1  CLI   DISP,0                  STATUS ENTERED?
         BE    CKDISP2                 NO
         MVI   STATUS,1                YES, ASSUME OLD
         CLI   DISP,C'O'               IS IT OLD?
         BE    CHND1                   YES
         MVI   STATUS,2                NO, ASSUME MOD
         CLI   DISP,C'M'               IS IT MOD?
         BE    CHND1                   YES
         MVI   STATUS,4                NO, ASSUME NEW
         CLI   DISP,C'N'               IS IT NEW?
         BE    CHND1                   YES
         MVI   STATUS,8                NO, ASSUME SHR
         CLI   DISP,C'S'               IS IT SHR?
         BNE   CKDISP2                 NO, INVALID, IGNORE IT
CHND1    LA    R11,STATKEY             @ TEXT UNIT
         ST    R11,0(R7)               CHAIN THE TEXT UNIT
         LA    R7,4(R7)                STEP TO NEXT POINTER
CKDISP2  CLI   DISP+1,0                NORMAL DISPOSITION ENTERED?
         BE    CKDISP3                 NO
         MVI   NORMDISP,1              YES, ASSUME UNCATLG
         CLI   DISP+1,C'U'             IS IT UNCATLG?
         BE    CHND2                   YES
         MVI   NORMDISP,2              NO, ASUME CATLG
         CLI   DISP+1,C'C'             IS IT CATLG?
         BE    CHND2                   YES
         MVI   NORMDISP,4              NO, ASUME DELETE
         CLI   DISP+1,C'D'             IS IT DELETE?
         BE    CHND2                   YES
         MVI   NORMDISP,8              NO, ASUME KEEP
         CLI   DISP+1,C'K'             IS IT KEEP?
         BNE   CKDISP3                 NO, INVALID, IGNORE IT
CHND2    LA    R11,NDISPKEY            @ TEXT UNIT
         ST    R11,0(R7)               CHAIN THE TEXT UNIT
         LA    R7,4(R7)                STEP TO NEXT POINTER
CKDISP3  CLI   DISP+2,0                CONDITIONAL DISP ENTERED?
         BE    CKUNNAM                 NO
         MVI   CONDDISP,1              YES, ASSUME UNCATLG
         CLI   DISP+2,C'U'             IS IT UNCATLG?
         BE    CHND3                   YES
         MVI   CONDDISP,2              NO, ASSUME CATLG
         CLI   DISP+2,C'C'             IS IT CATLG?
         BE    CHND3                   YES
         MVI   CONDDISP,4              NO, ASSUME DELETE
         CLI   DISP+2,C'D'             IS IT DELETE?
         BE    CHND3                   YES
         MVI   CONDDISP,8              NO, ASUME KEEP
         CLI   DISP+2,C'K'             IS IT KEEP?
         BNE   CKUNNAM                 NO, INVALID, IGNORE IT
CHND3    LA    R11,CDISPKEY            @ TEXT UNIT
         ST    R11,0(R7)               CHAIN THE TEXT UNIT
         LA    R7,4(R7)                STEP TO NEXT POINTER
CKUNNAM  CLC   UNITNAM,LOWVAL          UNIT NAME ENTERED?
         BE    CKUNTCT                 NO
         MVC   UNITNAME,UNITNAM        YES, MOVE UNIT NAME
         LA    R12,L'UNITNAME          MAX FIELD LENGTH
         LA    R11,UNTKEY              @ TEXT UNIT
         BAL   R9,UNITADD              FINISH CONNECTION
CKUNTCT  CLC   UNITCT,LOWVAL           UNIT COUNT ENTERED?
         BE    CKVOLSR                 NO
         MVC   UNITCNT,UNITCT          YES, MOVE UNIT COUNT
         LA    R12,L'UNITCNT           MAX FIELD LENGTH
         LA    R11,UCKEY               @ TEXT UNIT
         BAL   R9,UNITADD              FINISH CONNECTION
CKVOLSR  CLC   VOLSERL,LOWVAL          VOL SER ENTERED?
         BE    CKLBTYP                 NO
         MVC   VOLSER,VOLSERL          YES, MOVE VOL SER
         LA    R12,L'VOLSER            MAX FIELD LENGTH
         LA    R11,VOLKEY              @ TEXT UNIT
         BAL   R9,UNITADD              FINISH CONNECTION
CKLBTYP  CLC   LBTYPE,LOWVAL           LABEL TYPE ENTERED?
         BE    CKDSSEQ                 NO
         MVI   LBLTYP,1                YES, ASSUME NL
         CLI   LBTYPE,C'N'             IS IT NL?
         BE    CHNLBL                  YES
         MVI   LBLTYP,2                NO, ASSUME SL
         CLI   LBTYPE,C'S'             IS IT SL?
         BE    CHNLBL                  YES
         MVI   LBLTYP,X'10'            NO, ASSUME BLP
         CLI   LBTYPE,C'B'             IS IT BLP?
         BNE   CKDSSEQ                 NO, INVALID, IGNORE
CHNLBL   LA    R11,LTKEY               @ TEXT UNIT
         ST    R11,0(R7)               CHAIN TEXT UNIT
         LA    R7,4(R7)                TO NEXT POINTER
CKDSSEQ  CLC   DSSEQ,LOWVAL            DATASET SEQUENCE ENTERED?
         BE    CKFRECL                 NO
         MVC   DSETSEQ,DSSEQ           YES, MOVE DATASET SEQ
         LA    R11,DSQKEY              @ TEXT UNIT
         ST    R11,0(R7)               CHAIN TEXT UNIT
         LA    R7,4(R7)                TO NEXT POINTER
CKFRECL  CLI   FRECLOS,C'F'            FREE=CLOSE REQUESTED?
         BNE   CKRETPD                 NO
         LA    R11,FRCLKEY             @ TEXT UNIT
         ST    R11,0(R7)               CHAIN TEXT UNIT
         LA    R7,4(R7)                TO NEXT POINTER
CKRETPD  CLC   RETPRD,LOWVAL           RETENTION PERIOD ENTERED?
         BE    CKRECFM                 NO
         MVC   RETPD,RETPRD            YES, MOVE TO TEXT UNIT
         LA    R11,RETKEY              @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                STEP TO NEXT POINTER
CKRECFM  CLC   RECFRM,0                RECFM ENTERED?
         BE    CKLRECL                 NO
         MVI   RECFM,X'80'             ASSUME FIXED LENGTH
         CLI   RECFRM,C'F'             IS IT FIXED?
         BE    CKBLKED                 YES
         MVI   RECFM,X'40'             ASSUME VARIABLE RECORDS
         CLI   RECFRM,C'V'             IS IT VARIABLE?
         BE    CKBLKED                 YES
         MVI   RECFM,X'C0'             ASSUME UNDEFINED
         CLI   RECFRM,C'U'             IS IT UNDEFINED?
         BE    CKBLKED                 YES
         MVI   RECFM,X'88'             ASSUME FIXED STANDARD
         CLI   RECFM,C'S'              IS IT STANDARD?
         BNE   CKLRECL                 NO, ERROR, IGNORE RECFM
CKBLKED  CLI   RECFRM+1,C'B'           BLOCKED RECORDS?
         BNE   CKASA                   NO
         OI    RECFM,X'10'             YES, SET BLOCKED BIT
CKASA    CLI   RECFRM+2,C'A'           ASA CTL CHAR?
         BNE   CHAINRF                 NO
         OI    RECFM,X'04'             YES, SET ASA BIT
CHAINRF  LA    R11,RFKEY               @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                STEP TO NEXT POINTER
CKLRECL  CLC   LRECLNG,LOWVAL          LRECL ENTERED?
         BE    CKBLKSZ                 NO
         MVC   LRECL,LRECLNG           YES, MOVE TO TEXT UNIT
         LA    R11,LRKEY               @ TEXT UNIT
         ST    R11,0(R7)               ADDRESS TO POINTER LIST
         LA    R7,4(R7)                STEP TO NEXT POINTER
CKBLKSZ  CLC   BLOCKSIZ,LOWVAL         BLKSIZE ENTERED?
         BE    CKDEN                   NO
         MVC   BLKSIZE,BLOCKSIZ        YES, MOVE TO TEXT UNIT
         LA    R11,BLKKEY              @ TEXT UNIT
         ST    R11,0(R7)               STORE IN POINTER LIST
         LA    R7,4(R7)                STEP TO NEXT POINTER
CKDEN    CLI   DENSITY,0               DENSITY ENTERED?
         BE    CKBUFNO                 NO
         MVI   DEN,X'83'               ASSUME 800 BPI
         CLI   DENSITY,C'8'            IS IT 800?
         BE    CHNDEN                  YES
         MVI   DEN,X'C3'               ASSUME 1600 BPI
         CLI   DENSITY,C'1'            IS IT 1600?
         BE    CHNDEN                  YES
         MVI   DEN,X'D3'               ASSUME 6250 BPI
         CLI   DENSITY,C'6'            IS IT 6250?
         BNE   CKBUFNO                 NO, ERROR, IGNORE
CHNDEN   LA    R11,DENKEY              @ TEXT UNIT
         ST    R11,0(R7)               SET IT IN POINTER LIST
         LA    R7,4(R7)                STEP TO NEXT POINTER
CKBUFNO  CLC   BUFNBR,LOWVAL           BUFNO ENTERED?
         BE    CKKEY                   NO
         MVC   BUFNO,BUFNBR            YES, MOVE IT TO TEXT UNIT
         LA    R11,BNKEY               @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                STEP TO NEXT POINTER
CKKEY    CLC   KEYLENG,LOWVAL          KEYLEN ENTERED?
         BE    CKDSORG                 NO
         MVC   KEYLEN,KEYLENG          YES, MOVE TO TEXT UNIT
         LA    R11,KLKEY               @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                STEP TO NEXT POINTER
CKDSORG  CLI   DSORGN,0                DSORG ENTERED?
         BE    CKSPTYP                 NO
         MVC   DSORG,=X'0008'          ASSUME VSAM
         CLI   DSORGN,C'V'             IS IT VSAM
         BE    CHNDSRG                 YES
         MVC   DSORG,=X'0200'          ASSUME PARTITIONED
         CLI   DSORGN,C'P'             IS IT PARTITIONED?
         BE    CHNDSRG                 YES
         MVC   DSORG,=X'2000'          ASSUME DA
         CLI   DSORGN,C'D'             IS IT DIRECT ACCESS?
         BE    CHNDSRG                 YES
         MVC   DSORG,=X'4000'          ASSUME SEQUENTIAL
         CLI   DSORGN,C'S'             IS IT SEQUENTIAL?
         BNE   CKSPTYP                 NO, ERROR, IGNORE IT
CHNDSRG  LA    R11,DSOKEY              @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                STEP TO NEXT POINTER
CKSPTYP  CLC   SPACETYP,LOWVAL         SPACE TYPE ENTERED?
         BE    CKPSPAC                 NO
         MVC   SPTYPKEY,=X'0007'       ASSUME TRACKS
         CLI   SPACETYP,C'T'           IS IT TRACKS?
         BE    CHNSPTY                 YES
         MVC   SPTYPKEY,=X'0008'       ASSUME CYLINDERS
         CLI   SPACETYP,C'C'           IS IT SYLINDERS?
         BNE   CKPSPAC                 NO, ERROR, IGNORE IT
CHNSPTY  LA    R11,SPTYPKEY            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                STEP TO NEXT POINTER
CKPSPAC  CLC   PSPAC,LOWVAL            PRIMARY SPACE ENTERED?
         BE    CKSSPAC                 NO
         MVC   PRIMSPAC+1(2),PSPAC     MOVE TO TEXT UNIT
         MVI   PRIMSPAC,0              CLEAR HIGH ORDER BYTE
         LA    R11,PSPCKEY             @ TEXT UNIT
         ST    R11,0(R7)               STORE IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CKSSPAC  CLC   SSPAC,LOWVAL            SECONDARY SPACE ENTERED?
         BE    CKRLSE                  NO
         MVC   SCNDSPAC+1(2),SSPAC     MOVE TO TEXT UNIT
         MVI   SCNDSPAC,0              CLEAR HI-ORDER
         LA    R11,SSPCKEY             @ TEXT UNIT
         ST    R11,0(R7)               STORE IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CKRLSE   CLI   RLSE,C'R'               RLSE SPECIFIED?
         BNE   CKDIRBK                 NO
         LA    R11,RLSKEY              YES, GET @ TEXT UNIT
         ST    R11,0(R7)               SET POINTER IN LIST
         LA    R7,4(R7)                TO NEXT POINTER
CKDIRBK  CLC   DRCTYBLK,LOWVAL         DIRECTORY BLOCKS ENTERED?
         BE    SETPTND                 NO
         MVC   DIRBLK+1(2),DRCTYBLK    YES, MOVE TO TEXT UNIT
         MVI   DIRBLK,0                CLEAR HI-ORDER BYTE
         LA    R11,DBLKEY              @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
SETPTND  SH    R7,=H'4'                BACK UP TO LAST POINTER SET
         OI    0(R7),X'80'             SET LAST POINTER INDIC
         XC    S99ERROR,S99ERROR       CLEAR ERROR RETURN FIELD
         XC    S99INFO,S99INFO         CLEAR INFO RETURN CODE
         MVI   S99VERB,1               ALLOCATE BY DSNAME
         LA    R1,S99RBPTR             POINT TO PARM POINTER
         DYNALLOC ,                    ALLOCATE DYNAMICALLY
         MVI   RETCODE,C'0'            CLEAR HI-ORDER BYTE
         STC   R15,RETCODE+1           STORE RETURN CODE
         OI    RETCODE+1,C'0'          MAKE IT NUMERIC
         CLI   RETCODE+1,X'FC'         WAS IT 12?
         BNE   CKERRCOD                NO
         MVC   RETCODE,=C'12'          YES
CKERRCOD UNPK  WORK5,S99ERROR(3)       UNPACK TO CONVERT
         TR    WORK5,TRCHAR-C'0'       TRANSLATE TO PRINTABLE
         MVC   ERRRET,WORK5            MOVE TO RETURN PARM
CKINFO   UNPK  WORK5,S99INFO(3)        UNPACK TO CONVERT
         TR    WORK5,TRCHAR-C'0'       TRANSLATE TO PRINTABLE
         MVC   INFORET,WORK5           MOVE TO RETURN PARM
RETURN   L     R13,4(R13)              POINT TO CALLER'S SAVE
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGS
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN TO CALLER
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* VOLUME SERIAL NUMBER FEEDBACK. FIRST, LOCATE THE TIOT VIA THE CVT,
* CVTTCBP, AND TCB. HUNT THRU THE TIOT DD ENTRIES FOR THE DESIRED
* DDNAME. WHEN FOUND, GET UCB ADDRESS FROM THE TIOT DD ENTRY, AND MOVE
* VOLUME SERIAL NUMBER FROM THE UCB TO THE PARM FIELD FOR THE CALLER.
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
VOLFEED  MVC   VOLSERL,BLANX           CLEAR IN CASE NOT FOUND
         L     R1,16                   @ CVT
         L     R1,0(R1)                PICK UP CVTTCBP
         L     R1,0(R1)                @ TCB
         L     R1,12(R1)               @ TIOT
         LA    R1,24(R1)               @ 1SDT TIOT DD ENTRY
VTCKEND  CLI   0(R1),0                 END OF TIOT?
         BE    RETURN                  YES, DDNAME NOT FOUND
         CLC   4(8,R1),DDNAM           FOUND THE DD ENTRY?
         BE    VTGOTDD                 YES
         SR    R2,R2                   CLEAR FOR INSERT
         IC    R2,0(R1)                THIS ENTRY LENGTH
         AR    R1,R2                   STEP TO NEXT DD ENTRY
         B     VTCKEND                 AND CONTINUE SEARCH
VTGOTDD  L     R1,16(R1)               @ UCB
         MVC   VOLSERL,28(R1)          UCB VOLSER TO USER PARM
         B     RETURN                  BACK TO CALLER
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* CHAIN TEXT UNIT TO DDDYNAM PARAMETER LIST BY PLACING ITS' ADDRESS IN
* THE POINTER LIST. COMPUTE ACTUAL FIELD LENGTH BY SCANNING FROM RIGHT
* TO LEFT FOR THE FIRST NON-BLANK CHARACTER, AND PLACE ACTUAL LENGTH
* IN THE TEXT UNIT LENGTH FIELD. ON ENTRY, R11=ADDRESS OF THE TEXT
* R12=MAXIMUM FIELD LENGTH, AND R7=ADDRESS OF THE NEXT POINTER FIELD.
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
UNITADD  ST    R11,0(R7)               CHAIN TEXT UNIT
         LA    R7,4(R7)                STEP TO NEXT POINTER
         LA    R15,5(R12,R11)          @ END OF FIELD
CKRHE    CLI   0(R15),C' '             FOUND SOLID CHARACTER?
         BNE   SETLENG                 YES
         BCTR  R12,R0                  DEDUCT 1 FROM LENGTH
         BCTR  R15,R0                  BACK UP 1 BYTE IN FIELD
         CR    R15,R11                 AT BEGINNING OF FIELD?
         BNL   CKRHE                   NO, CONTINUE
SETLENG  STCM  R12,3,4(R11)            SET FIELD LENGTH
         BR    R9                      EXIT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*       DATA, WORK, AND STORAGE AREAS
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
LOWVAL   DC    XL44'00'                CONSTANT BINARY ZEROS
BLANX    DC    CL44' '                 CONSTANT BLANKS
TRCHAR   DC    C'0123456789ABCDEF'     TRANSLATE TABLE
WORK5    DS    CL5                     CONVERSION WORK AREA
*
*
*
PARM1    DSECT ,                       1ST PARAMETER DESCRIPTION
DDNAM    DS    CL8                     DDNAME
DSNAM    DS    CL44                    DATASET NAME
MEMBR    DS    CL8                     MEMBER NAME
DISP     DS    CL3                     DISPOSITION:
*                                    BYTE1: 0=OLD,M=MOD,N=NEW,S=SHR
*                                    BYTE2: U=UNCATLG,C=CATLG,D=DELETE
*                                    K=KEEP; BYTE3: SAME AS BYTE2
UNITNAM  DS    CL8                     UNIT NAME
UNITCT   DS    XL2                     UNIT COUNT
VOLSERL  DS    CL6                     VOLUME SERIAL NUMBER
LBTYPE   DS    CL1                     LABEL TYPE:
*                                      N=NL, S=SL, B=BLP
DSSEQ    DS    XL2                     DATASET SEQUENCE NBR (TAPE)
FRECLOS  DS    CL1                     F: FREE=CLOSE
RETPRD   DS    XL2                     RETENTION PERIOD IN DAYS
RECFRM   DS    CL3                     RECORDING FORMAT:
*                                      BYTE1: F=FIXED, V=VARIABLE,
*                                      U=UNDEFINED; BYTE2: B=BLOCKED,
*                                      BYTE3: A=ASA CONTROL CHARACTERS
LRECLNG  DS    XL2                     LOGICAL RECORD LENGTH
BLOCKSIZ DS    XL2                     BLOCK SIZE
DENSITY  DS    CL1                     TAPE DENSITY: 1=1600,6=6250
BUFNBR   DS    XL2                     BUFNO
KEYLENG  DS    XL2                     KEY LENGTH
DSORGN   DS    CL1                     DATASET ORGANIZATION:
*                                      V=VSAM, P=PDS, D=DIRECT, S=SEQ
SPACETYP DS    CL1                     SPACE TYPE:
*                                      C=CYL, T=TRK
PSPAC    DS    XL2                     PRIMARY SPACE AMOUNT
SSPAC    DS    XL2                     SECONDARY SPACE AMOUNT
RLSE     DS    CL1                     R=RLSE
DRCTYBLK DS    XL2                     NBR DIRECTORY BLOCKS
*
*
*
PARM2    DSECT ,                       2ND PARAMETER DESCRIPTION
REQCODE  DS    CL1                     REQUEST CODE, A=ALLOC, V=VOLSER
RETCODE  DS    CL2                     DYNALLOC RETURN CODE
ERRRET   DS    CL4                     ERROR RETURN CODE
INFORET  DS    CL4                     INFO RETURN CODE
*
*
*
DYNALLOC CSECT
*
*
*
         DS    0F
S99RBPTR DC    X'80',AL3(S99RB)        POINTER TO PARAMETER BLOCK
S99RB    DS    0XL20                   DDDYNAM PARAMETER BLOCK
         DC    AL1(20)                 LENGTH OF BLOCK
S99VERB  DC    AL1(1)                  REQUEST CODE = 01
         DC    XL2'4000'               DO NOT USE EXISTING ALLOCATION
S99ERROR DC    AL2(0)                  ERROR RETURN CODE
S99INFO  DC    AL2(0)                  INFORMATION REASON CODE
         DC    A(S99TUPL)              POINTER TO POINTER LIST
         DC    A(0)                    RESERVED
         DC    A(0)                    FLAGS2
*
*
*
S99TUPL  DS    0F                      LIST OF TEXT UNIT POINTERS
         DS    30F
PTREND   DC    A(*)                    END OF LIST ADDRESS
*
*
*
         DS    0F
DDNKEY   DC    AL2(1),AL2(1),AL2(8)
DDNAME   DS    CL8                     DDNAME
         DS    0F
DSNKEY   DC    AL2(2),AL2(1),AL2(44)
DSNAME   DS    CL44                    DATASET NAME
         DS    0F
MBRKEY   DC    AL2(3),AL2(1),AL2(8)
MEMBER   DS    CL8                     MEMBER NAME
         DS    0F
STATKEY  DC    AL2(4),AL2(1),AL2(1)
STATUS   DS    XL1                     DATASET STATUS:
*                                       01=OLD, 02=MOD, 04=NEW, 08=SHR
         DS    0F
NDISPKEY DC    AL2(5),AL2(1),AL2(1)
NORMDISP DS    XL1                     NORMAL DISPOSITION:
*                                      01=UNCATLG, 02=CATLG, 04=DELETE,
*                                      08=KEEP
         DS    0F
CDISPKEY DC    AL2(6),AL2(1),AL2(1)
CONDDISP DS    XL1                     CONDITIONAL DISPOSITION:
*                                      SAME AS NORMDISP
         DS    0F
SPTYPKEY DC    AL2(0),AL2(0)           SPACE TYPE:
*                                      0007=TRK, 0008=CYL
         DS    0F
PSPCKEY  DC    AL2(10),AL2(1),AL2(3)
PRIMSPAC DS    XL3                     PRIMARY SPACE QUANTITY
         DS    0F
SSPCKEY  DC    AL2(11),AL2(1),AL2(3)
SCNDSPAC DS    XL3                     SECONDARY SPACE AMOUNT
         DS    0F
DBLKEY   DC    AL2(12),AL2(1),AL2(3)
DIRBLK   DS    XL3                     NBR DIRECTORY BLOCKS
         DS    0F
RLSKEY   DC    AL2(13),AL2(0)          RLSE
         DS    0F
VOLKEY   DC    AL2(16),AL2(1),AL2(6)
VOLSER   DS    CL6                     VOLUME SERIAL NBR
         DS    0F
VCKEY    DC    AL2(19),AL2(1),AL2(1)
VOLCNT   DS    XL1                     NBR VOLUMES
         DS    0F
UNTKEY   DC    AL2(21),AL2(1),AL2(8)
UNITNAME DS    CL8
         DS    0F
UCKEY    DC    AL2(22),AL2(1),AL2(1)
UNITCNT  DS    XL1                     NBR UNITS
         DS    0F
FRCLKEY  DC    AL2(28),AL2(0)          FREE=CLOSE
         DS    0F
SOKEY    DC    AL2(24),AL2(1),AL2(1)
SYSOUT   DS    CL1                     SYSOUT CLASS
         DS    0F
LTKEY    DC    AL2(30),AL2(1),AL2(1)
LBLTYP   DS    XL1                     LABEL TYPE:
*                                      01=NL, 02=SL, 10=BLP
         DS    0F
DSQKEY   DC    AL2(31),AL2(1),AL2(2)
DSETSEQ  DS    XL2                     DATASET SEQUENCE NBR ON TAPE
         DS    0F
RETKEY   DC    AL2(35),AL2(1),AL2(2)
RETPD    DS    XL2                     RETENTION PERIOD (DAYS)
         DS    0F
DUMKEY   DC    AL2(36),AL2(0)          DUMMY DATASET
         DS    0F
BLKKEY   DC    AL2(48),AL2(1),AL2(2)
BLKSIZE  DS    XL2                     BLKSIZE
         DS    0F
BNKEY    DC    AL2(52),AL2(1),AL2(1)
BUFNO    DS    XL2                     NBR BUFFERS
         DS    0F
DENKEY   DC    AL2(59),AL2(1),AL2(1)
DEN      DS    XL1                     TAPE DENSITY:
*                                      C3=1600, D3=6250
         DS    0F
DSOKEY   DC    AL2(60),AL2(1),AL2(2)
DSORG    DS    XL2                     DATASET ORGANIZATION:
*                                      0008=VSAM, 0200=PO,
*                                      2000=DA, 4000=PS
         DS    0F
KLKEY    DC    AL2(64),AL2(1),AL2(1)
KEYLEN   DS    XL2                     KEY LENGTH
         DS    0F
LRKEY    DC    AL2(66),AL2(1),AL2(2)
LRECL    DS    XL2                     LRECL
         DS    0F
RFKEY    DC    AL2(73),AL2(1),AL2(1)
RECFM    DS    XL1                     RECORDING FORMAT, SUM OF:
*                                      04=ASA CTL CHAR, 08=STD FIXED,
*                                      10=BLOCKED, 40=VARIABLE,
*                                      80=FIXED, C0=UNDEF
*
*
*
         END
