         TITLE '***** UNSQUZ80: EXPAND LONG RECS IN 80-BYTE FILE ****'
         PRINT NOGEN
UNSQUZ80 SVLNK R3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*   THIS PROGRAM COPIES AN INPUT FILE HAVING FIXED LENGTH 80-BYTE     *
* RECORDS CREATED AS PSEUDO-VARIABLE-SPANNED BY THE SQUEZE80 PROGRAM  *
* TO AN OUTPUT FILE HAVING THE SAME RECFM AND LRECL AS THE ORIGINAL   *
* FILE INPUT TO SQUEZE80. BLKSIZE IS AS SPECIFIED BY THE USER ON THE  *
* OUTPUT1 DD STATEMENT.                                               *
*                                                                     *
* THE FIRST RECORD IN THE FILE CONTAINS THE DSORG, RECFM, AND LRECL   *
* FIELDS FROM THE FILE INPUT TO THE SQUEZE80 RUN. THESE ARE USED TO   *
* SET UP THE OUTPUT1 DCB BEFORE IT IS OPENED.                         *
*                                                                     *
* EACH INPUT RECORD CONTAINS SOME PARTS OF ONE OR MORE RECORDS FROM   *
* THE ORIGINAL FILE INPUT TO SQUEZE80. THE FIRST TWO BYTES OF EACH    *
* INPUT RECORD DESCRIBES THE RECORD PART THAT FOLLOWS, THE FIRST BYTE *
* CONTAINING THE LENGTH OF THE PART, AND THE SECOND BYTE AN INDICATOR *
* WHICH IDENTIFIES THIS PART AS THE FIRST, LAST, OR AN INTERMEDIATE   *
* PART OF A RECORD. THIS PROGRAM PROCESSES SIMILARLY TO THE STANDARD  *
* IBM MACRF=GD, BY READING AND ASSEMBLING ALL THE PARTS OF A RECORD,  *
* THEN WRITING THE RECORD TO THE OUTPUT1 FILE.                        *
*                                                                     *
* AUTHOR R THORNTON    MAY 1986                                       *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         OPEN  INPUT1            OPEN INPUT FILE
         GET   INPUT1,INPREC     READ FIRST RECORD
         MVC   OTRECFM,INPREC+1  RECFM TO OUTPUT DCB
         MVC   OTLRECL,INPREC+2  LRECL TO OUTPUT DCB
         MVC   LRECL,INPREC+2    LRECL TO LRECL SAVE AREA
         MVC   OTLEFT,INPREC+2   LRECL TO OUTPUT BYTES LEFT
         OPEN  (OUTPUT1,OUTPUT)  OPEN OUTPUT FILE
         LH    R0,OTLRECL        GET OUTPUT LRECL
         GETMAIN R,LV=(0)        GET OUTPUT RECORD STORAGE
         TM    OTRECFM,OTUNDEF   POSSIBLE VARIABLE RECORDS
         BNM   SVGOT             NO
         TM    OTRECFM,OTVRBL    IS IT VARIABLE?
         BZ    SVGOT             NO
         XC    0(4,R1),0(R1)     ZERO FIRST 4 BYTES
         LA    R1,4(R1)          ALLOW FOR RDW
SVGOT    ST    R1,OUTRECAD       SAVE OUTPUT RECORD ADDRESS
         LR    R7,R1             POINT TO OUTPUT RECORD
         GET   INPUT1,INPREC     READ SECOND RECORD
         LA    R6,INPREC         POINT TO INPUT RECORD
         USING INPDESC,R6
         TM    PARTYPE,FRSTPART  GOT FIRST PART OF RECORD
         BO    GOTREC            YES
         WTO   'UNSQUZ80: INPUT FILE DOES NOT BEGIN WITH FIRST PART',  X
               ROUTCDE=11
         ABEND 111,DUMP          TERMINATE WITH ERROR
*
*
*
MAINLINE GET   INPUT1,INPREC     READ NEXT INPUT RECORD
GOTREC   LA    R6,INPREC         POINT TO INPUT RECORD
         MVC   INLEFT,H78        SET INPUT REC BYTES LEFT
CKFIRST  TM    PARTYPE,FRSTPART  FIRST PART OF A RECORD?
         BZ    CKNULL            NO
         CLC   OUTLEN,H0         YES, IS THERE A RECORD IN PROGRESS?
         BE    STRTOUT           NO
         WTO   'UNSQUZ80: CURRENT RECORD HAS NO END PART',ROUTCDE=11
         ABEND 222,DUMP          TERMINATE WITH ERROR
STRTOUT  L     R7,OUTRECAD       YES, POINT TO CURRENT OUTPUT BYTE
         XC    OUTLEN,OUTLEN     INITIALIZE LENGTH FOR NEW RECORD
CKNULL   CLI   PARTLEN,0         REST OF RECORD EMPTY?
         BE    MAINLINE          YES
CKFIT    SR    R1,R1             CLEAR FOR INSERT
         IC    R1,PARTLEN        GET PART LENGTH
         CH    R1,OTLEFT         INPUT PART WILL FIT IN OUTPUT?
         BNH   MOVPART           YES
         WTO   'UNSQUZ80: INPUT WILL NOT FIT IN OUTPUT',ROUTCDE=11
         ABEND 333,DUMP
MOVPART  BAL   R9,PARTMOVE       GO MOVE PART TO OUTPUT, WRITE
         LH    R1,INLEFT         GET PART LENGTH
         LTR   R1,R1             TEST REMAINING LENGTH
         BZ    MAINLINE          IF NO MORE, GO READ AGAIN
         BP    CKFIRST           MORE, CHECK DESCRIPTOR
         WTO   'UNSQUZ80: NEGATIVE LENGTH COMPUTED',ROUTCDE=11
         ABEND 444,DUMP          TERMINATE IN ERROR
*
*        MOVE PART OF INPUT RECORD TO OUTPUT AREA, WRITE IF FULL
*
PARTMOVE BCTR  R1,0              COMPUTE MVC LENGTH CODE
         EX    R1,EXPTMOVE       MOVE DATA TO OUTPUT RECORD
         MVC   SAVTYPE,PARTYPE   SAVE PART TYPE
         LA    R1,1(R1)          REAL LENGTH AGAIN
         LH    R2,OTLEFT         DEDUCT BYTES
         SR    R2,R1                MOVED FROM
         STH   R2,OTLEFT               INPUT TO OUTPUT
         LH    R2,OUTLEN         ADD NBR BYTES
         AR    R2,R1                MOVED FROM
         STH   R2,OUTLEN               INPUT TO OUTPUT
         LH    R2,INLEFT         DEDUCT BYTES
         SR    R2,R1                MOVED FROM
         BZ    STORLEFT              .
         SH    R2,H1                 .
         BZ    STORLEFT              .
         SH    R2,H1                  INPUT TO OUTPUT PLUS
STORLEFT STH   R2,INLEFT                  DESCRIPTOR LENGTH
         AR    R7,R1             POINT TO NEXT OUTPUT BYTE
         LA    R6,2(R1,R6)       POINT TO NEXT INPUT BYTE
         TM    SAVTYPE,LASTPART  THIS LAST PART OF RECORD?
         BZ    MOVEXIT           NO
         TM    OTRECFM,OTUNDEF   UNDEFINED LENGTH RECORDS?
         BO    URECS             YES
         TM    OTRECFM,OTVRBL    VARIABLE LENGTH RECORDS?
         BO    VRECS             YES
         CLC   OUTLEN,LRECL      LENGTH CORRECT?
         BE    PNTREC            YES, O.K.
         WTO   'UNSQUZ80: WRONG LENGTH FOR FIXED RECORD',ROUTCDE=11
         ABEND 555,DUMP          ABNORMAL END
URECS    CLC   OUTLEN,LRECL      VALID LENGTH?
         BNH   SETULEN           YES
         WTO   'UNSQUZ80: UNDEFINED RECORD TOO LONG',ROUTCDE=11
         ABEND 666,DUMP          ABNORMAL END
SETULEN  MVC   OTLRECL,OUTLEN    SET LENGTH IN DCB
         B     PNTREC            GO WRITE RECORD
VRECS    L     R12,OUTRECAD      POINT TO OUTPUT RECORD DATA
         SH    R12,H4            BACK UP TO RDW
         LH    R1,OUTLEN         GET OUTPUT LENGTH
         LA    R1,4(R1)          ADD 4 FOR RDW
         CH    R1,LRECL          VALID LENGTH?
         BNH   SETVLEN           YES
         WTO   'UNSQUZ80: VARIABLE RECORD TOO LONG',ROUTCDE=11
         ABEND 777,DUMP          TERMINATE ABNORMALLY
SETVLEN  STH   R1,0(R1)          SET RDW LENGTH
         B     PUTREC            GO WRITE RECORD
PNTREC   L     R12,OUTRECAD      POINT TO OUTPUT RECORD
PUTREC   PUT   OUTPUT1,0(R12)    WRITE THE RECORD
         L     R7,OUTRECAD       POINT TO RECORD AREA
         XC    OUTLEN,OUTLEN     CLEAR LENGTH SO FAR
         MVC   OTLEFT,LRECL      SET OUTPUT REC BYTES LEFT
MOVEXIT  BR    R9                EXIT
EXPTMOVE MVC   0(1,R7),PARTDATA  EXECUTED MOVE
*
*        END OF JOB
*
EOJ      CLC   OUTLEN,H0         ANYTHING IN LAST OUTPUT RECORD?
         BE    EOJ1              NO
         WTO   'UNSQUZ80: LAST RECORD MISSING LAST PART',ROUTCDE=11
         ABEND 888,DUMP          TERMINATE ABNORMALLY
EOJ1     CLOSE (OUTPUT1,,INPUT1)   CLOSE FILES
         L     R13,4(R13)        POINT TO CALLER'S SAVE
         LM    R14,R12,12(R13)   RESTORE CALLER'S REGS
         SR    R15,R15           CLEAR RETURN CODE
         BR    R14               RETURN TO CALLER
*
*
*
OUTRECAD DC    A(0)               @ STORAGE FOR RECORD ASSEMBLY
INLEFT   DC    H'0'               INPUT RECORD BYTES LEFT
OTLEFT   DC    H'78'              OUTPUT RECORD BYTES LEFT
OUTLEN   DC    H'0'               OUTPUT LENGTH SO FAR
LRECL    DC    H'0'               OUTPUT LRECL
H0       DC    H'0'               CONSTANT 0
H1       DC    H'1'               CONSTANT 1
H2       DC    H'2'               CONSTANT 2
H4       DC    H'4'               CONSTANT 4
H78      DC    H'78'              CONSTANT 78
SAVTYPE  DC    X'00'              SAVE AREA FOR PART TYPE
INPREC   DS    CL80               INPUT RECORD
*
*
*
OUTPUT1  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT1
OTRECFM  EQU   OUTPUT1+36,1       RECFM
OTUNDEF  EQU   X'C0'              UNDEFINED
OTFIX    EQU   X'80'              FIXED
OTVRBL   EQU   X'40'              VARIABLE
OTLRECL  EQU   OUTPUT1+82,2       LRECL
INPUT1   DCB   DSORG=PS,MACRF=GM,DDNAME=INPUT1,EODAD=EOJ,              X
               RECFM=FB,LRECL=80
         LTORG
*
*        INPUT PART DESCRIPTOR DSECT
*
INPDESC  DSECT ,                 INPUT PART DESCRIPTION
PARTDESC DS    0XL2              PART DESCRIPTOR
PARTLEN  DS    XL1               PART DATA LENGTH (NOT INCL DESC)
PARTYPE  DS    XL1               PART TYPE FLAGS
FRSTPART EQU   X'80'             FIRST PART OF A RECORD
LASTPART EQU   X'01'             LAST PART OF A RECORD
PARTDATA DS    0X                PART DATA, 1-78 BYTES
UNSQUZ80 CSECT
         END
