         PRINT NOGEN
         TITLE '*** IXVTOC: LIST INDEXED VTOC AND VTOC FOR A FILE ***'
***********************************************************************
* PRINTS INFORMATION FROM THE VTOC INDEX AND VTOC FOR A DATASET. THE  *
* DSNAME AND VOLUME SERIAL ARE GIVEN VIA CONTROL CARD ENTERED IN THE  *
* SYSIN FILE. THE CONTROL CARD CONTAINS VOLUME SERIAL NUMBER IN COL   *
* 1-6 AND DSNAME IN COLUMNS 8-51                                      *
* AUTHOR R THORNTON JUN 1993                                          *
***********************************************************************
*
IXVTOC   SVLNK R3,R4
         LA    R5,4095(R4)                 SET UP
         LA    R5,1(R5)                       THIRD BASE REG
         USING IXVTOC+8192,R5
***********************************************************************
* OPEN SYSPRINT FOR PRINTING AND SYSIN FOR CONTROL INPUT.             *
* ALLOCATE A DD STATEMENT FOR USE BY EXCP AND OPEN THE DCB USED FOR   *
* EXCP. IF EITHER THE ALLOCATE OR OPEN FAILS, A U0333 ABEND WILL BE   *
* PRODUCED WITH AN EXPLANATORY MESSAGE.                               *
***********************************************************************
OPENS    OPEN  (SYSPRINT,OUTPUT,SYSIN) OPEN PRINT AND CONTROL FILES
RETDYN   CALL  DYNALLOC,(DAPARM1,DAPARM2) ALLOCATE A TEMPORARY DATASET
         CLC   RETRNCD,ZEROS           ANY ERROR?
         BE    OPENEXCP                NO
         CLC   ERRRET,L0410            DSNAME IN USE?
         BNE   PRTBADA                 NO
         CLI   DDN+5,C'9'              ALREADY TRIED 9 TIMES?
         BE    PRTBADA                 YES
         IC    R9,DDN+5                NO, GET LAST BYTE OF DDNAME
         LA    R9,1(R9)                ADD 1
         STC   R9,DDN+5                UPDATE DDNAME
         B     RETDYN                  GO TRY AGAIN
PRTBADA  MVC   PRT,UNALOC              MESSAGE TO PRINT
         BAL   R9,PRINT                PRINT MESSAGE
         MVC   DYNRTCD,ERRRET          ERROR RETURN CODE TO MESSAGE
         MVC   DYNINFO,INFORET         INFO RETURN CODE TO MESSAGE
         MVC   PRT,DYNERR              MESSAGE TO PRINT
         BAL   R9,PRINT                PRINT ERROR MESSAGE
         ABEND 333,DUMP                TERMINATE WITH ERROR
OPENEXCP OPEN  (DADCB,OUTPUT)          OPEN FILE FOR EXCP
         TM    DADCB+48,X'10'          WAS OPEN SUCCESSFUL?
         BO    MAINLINE                YES
         MVC   PRT,UNOPEN              MESSAGE TO PRINT
         BAL   R9,PRINT                PRINT ERROR MESSAGE
         ABEND 333,DUMP                TERMINATE WITH ERROR
***********************************************************************
*   MAINLINE ROUTINE. READ SYSIN TO GET THE DSNAME AND VOLUME SERIAL, *
*   THEN CALL APPROPRIATE ROUTINES TO READ AND PRINT THE VTOC INDEX   *
*   AND VTOC.                                                         *
***********************************************************************
MAINLINE BAS   R9,GETCTLCD             PROCESS NEXT CONTROL CARD
         BAS   R9,VOLUME               ALLOCATE THE VOLUME
         BAS   R9,VTOCINDX             SEARCH THE VTOC INDEX
         MVC   DSNAME,DATASET          GET SPECIFIED DSNAME
         BAS   R9,DSNAMEA              ALLOCATE THE VTOC INDEX
         BAS   R9,FMTPRINT             GO FORMAT AND PRINT
         B     MAINLINE                CONTINUE
***********************************************************************
*   READ CONTROL CARD. MOVE THE DATASET NAME TO THE DATASET FIELD AND *
*   THE VOLUME SERIAL NUMBER TO THE VOLSER FIELD                      *
***********************************************************************
GETCTLCD GET   SYSIN,CTRLCARD          PROCESS NEXT CONTROL CARD
         MVC   DATASET,7(R1)           MOVE THE DATASET NAME
         MVC   VOLSER,0(R1)            MOVE THE VOLUME SERIAL NUMBER
         BR    R9                      RETURN TO CALLER
***********************************************************************
*   SEARCH THE VTOC INDEX FOR THE DSNAME IN THE FIELD NAMED DATASET   *
*   AND SAVE THE DATA FOR THE FMTPRINT ROUTINE.                       *
***********************************************************************
VTOCINDX ST    R9,VI9                  SAVE RETURN ADDRESS
VIXIT    L     R9,VI9                  GET RETURN ADDRESS
         BR    R9                      EXIT
***********************************************************************
*   FORMAT AND PRINT VTOC INDEX AND VTOC INFORMATION.                 *
***********************************************************************
FMTPRINT ST    R9,FP9                  SAVE RETURN ADDRESS
FPXIT    L     R9,FP9                  GET RETURN ADDRESS
         BR    R9                      RETURN TO CALLER
***********************************************************************
*        LOOK THROUGH THE UCB TABLE IN O/S FOR THE REQUESTED VOLUME.  *
*        IF A UCB IS FOUND, SET THE EXCP FILE DEB UCB ADDRESS TO THIS *
*        UCB, AND CONVERT THE UCB VTOC ADDRESS FROM TTR TO CCHHR FORM.*
*        READ THE  FORMAT 4 DSCB AND SET THE DEB EXTENTS FOR THE VTOC *
*        DATASET.                                                     *
***********************************************************************
VOLUME   ST    R9,VOL9                 SAVE RETURN ADDRESS
         XC    WORK100,WORK100         CLEAR FOR EACH NEW INVOCATION
VLSLOOP  SMODE KEY=0,STATE=S
         GBLC  &ZPRINT
&ZPRINT  SETC  'NO'                    PREVENT UCBSCAN PRINTING
         UCBSCAN ADDRESS,WORKAREA=WORK100,UCBPTR=ADDRUCB,              X
               NOPIN,DYNAMIC=NO,RANGE=ALL,DEVCLASS=DASD
         ST    R15,SAV15               SAVE RETURN CODE
         SMODE KEY=NZERO,STATE=P
         CLC   SAV15,FZERO             FOUND UCB?
         BNE   NOVOL                   NO
         L     R2,ADDRUCB              YES, GET THE UCB ADDRESS
         USING UCBOB,R2
         TM    UCBSTAT,UCBONLI         IS IT ONLINE?
         BZ    VLSLOOP                 NO
         CLC   UCBVOLI,VOLSER          FOUND UCB FOR THIS VOLSER?
         BNE   VLSLOOP                 NO, CONTINUE SEARCH
         B     GOTUCB                  GO PROCESS UCB
NOVOL    MVC   PRT,BADVOL              ERROR MESSAGE
         BAL   R9,PRINT                TELL USER NO SUCH VOL
         B     VOLXIT                  AND EXIT
GOTUCB   L     R12,DADCB+44            @ DEB FOR EXCP FILE
         SMODE KEY=0,STATE=P
         STCM  R2,7,33(R12)            CHANGE DEB UCB ADDRESS
         SMODE KEY=NZERO,STATE=P
         SR    R10,R10                 CLEAR FOR DIVIDE
         SR    R11,R11                 CLEAR FOR INSERT
         ICM   R11,3,UCBVTOC           PICK UP VTOC START TRACK
         CLI   UCBUNTYP,X'0B'          IS IT A 3350?
         BE    GOT3350                 YES
         CLI   UCBUNTYP,X'0E'          IS IT A 3380?
         BE    GOT3380                 YES
         CLI   UCBUNTYP,X'0F'          IS IT A 3390?
         BE    GOT3390                 YES
         MVC   PRT,INVDVC              NO, MOVE MESSAGE
         BAL   R9,PRINT                SEND INVALID DEVICE TYPE MSG
         B     VOLXIT                  GO GET ANOTHER VOLSER
GOT3350  D     R10,F30                 COMPUTE CYL-HD
         MVC   VLADVC,L3350            DEVICE=3350
         B     SETVTOC                 CONTINUE
GOT3380  D     R10,F15                 COMPUTE CYL-HD
         MVC   VLADVC,L3380            DEVICE=3380
         B     SETVTOC                 CONTINUE
GOT3390  D     R10,F15                 COMPUTE CYL-HD
         MVC   VLADVC,L3390            DEVICE=3390
SETVTOC  STH   R11,VTOCCYL             SAVE VTOC CYLINDER NBR
         STH   R10,VTOCHD              SAVE VTOC HEAD NUMBER
         MVC   VTOCREC,UCBVTOC+2       VTOC BEGIN RECORD NBR
         ICM   R15,15,UCBVTOC          GET VTOC TTR0 TO R15
         DROP  R2
         BAL   R9,HEXPRNT              CONVERT TO PRINTABLE
         MVC   BGNXTNT,VTOCADR         SET EXTENT BEGIN TO VTOC START
         MVC   ENDXTNT,VTOCADR         SET EXTENT END TO VTOC START
         MVI   XTNTS,1                 INDICATE SINGLE EXTENT
         BAL   R9,SETXTNT              GO SET DEB EXTENT
         BAL   R9,EXCPREAD             GO READ FORMAT 4 DSCB
         CLI   EXCPIND,C' '            ANY ERROR?
         BE    VOLCKID                 NO
BADVREC  MVC   PRT,INVFMT4             MESSAGE TO PRINT
         BAL   R9,PRINT                TELL USER UNABLE TO READ FMT4
         B     VOLXIT                  AND EXIT
VOLCKID  LA    R1,RKEYDATA             POINT TO INPUT AREA
         CLI   DS4IDFMT-DSCBFMT4(R1),C'4' POSSIBLE FORMAT 4 DSCB?
         BNE   BADVREC                 NO
         CLI   RKEYDATA,X'04'          POSSIBLE FORMAT 4 DSCB?
         BNE   BADVREC                 NO
         CLC   RKEYDATA+1(43),RKEYDATA IS IT THE FORMAT 4 DSCB?
         BNE   BADVREC                 NO
         MVC   DSCBFMT4,RKEYDATA       YES, SAVE FORMAT 4 DSCB
         MVC   EXTENTS,DS4VTOCE        SET EXTENTS TO VTOC EXTENTS
         MVI   XTNTS,1                 INDICATE SINGLE EXTENT
         BAL   R9,SETXTNT              SET DEB EXTENTS FOR VTOC
         ICM   R15,15,RCOUNT           GET FORMAT 4 CCHH
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   VLACHR(8),WORK          MOVE TO PRINT
         ICM   R15,8,RCOUNT+4          GET FORMAT 4 REC NBR
         BAL   R9,HEXPRNT              MAKE IT PRINTABLE
         MVC   VLACHR+8(2),WORK        MOVE TO PRINT
         ICM   R15,15,DS4HPCHR         GET HIGHEST USED CCHH
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   VLAHI(8),WORK           MOVE TO PRINT
         ICM   R15,8,DS4HPCHR+4        GET HIGHEST USED REC NBR
         BAL   R9,HEXPRNT              MAKE IT PRINTABLE
         MVC   VLAHI+8(2),WORK         MOVE TO PRINT
         SR    R15,R15                 CLEAR FOR INSERT
         ICM   R15,3,DS4DSREC          GET NUMBER AVAILABLE DSCBS
         CVD   R15,DBLWD               CONVERT TO PACKED
         UNPK  VLANDSCB,DBLWD          MOVE TO PRINT
         OI    VLANDSCB+4,C'0'         CLEAR SIGN
         MVC   PRT,VLA1                VOLUME LINE 1 TO PRINT
         BAL   R9,PRINT                PRINT IT
         SR    R15,R15                 CLEAR FOR INSERT
         ICM   R15,3,DS4NOCYL          GET NBR CYL PER VOLUME
         CVD   R15,DBLWD               CONVERT TO PACKED
         UNPK  VLANCYL,DBLWD           UNPACK TO PRINT
         OI    VLANCYL+4,C'0'          CLEAR SIGN
         ICM   R15,3,DS4TKLC           GET NBR TRACKS PER CYLINDER
         CVD   R15,DBLWD               CONVERT TO PACKED
         UNPK  VLANTRK,DBLWD           UNPACK TO PRINT
         OI    VLANTRK+4,C'0'          CLEAR SIGN
         ICM   R15,3,DS4DEVTK          GET BYTES PER TRACK
         CVD   R15,DBLWD               CONVERT TO PACKED
         UNPK  VLABTRK,DBLWD           UNPACK TO PRINT
         OI    VLABTRK+4,C'0'          CLEAR SIGN
         SR    R15,R15                 CLEAR FOR INSERT
         IC    R15,DS4DEVDT            GET NBR DSCBS/TRACK
         CVD   R15,DBLWD               CONVERT TO PACKED
         UNPK  VLADSCT,DBLWD           UNPACK TO PRINT
         OI    VLADSCT+2,C'0'          CLEAR SIGN
         MVC   PRT,VLA2                VOLUME LINE 2 TO PRINT
         BAL   R9,PRINT                PRINT IT
         SR    R15,R15                 CLEAR FOR INSERT
         IC    R15,DS4DEVDB            GET NBR DIRECTORY BLOCKS/TRACK
         CVD   R15,DBLWD               CONVERT TO PACKED
         UNPK  VLADBTRK,DBLWD          UNPACK TO PRINT
         OI    VLADBTRK+2,C'0'         CLEAR SIGN
         ICM   R15,15,DS4AMTIM         1ST 4 BYTES OF VSAM TIME STAMP
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   VLATMSTP(8),WORK        MOVE TO PRINT
         ICM   R15,15,DS4AMTIM+4       LAST 4 BYTES OF TIME STAMP
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   VLATMSTP+8(8),WORK      MOVE TO PRINT
         MVC   VLAVSOWN,NO             ASSUME NOT VSAM OWNED
         TM    DS4VSIND,X'80'          IS IT OWNED BY VSAM?
         BZ    VLAPRT3                 NO
         MVC   VLAVSOWN,YES            YES
VLAPRT3  MVC   PRT,VLA3                VOLUME LINE 3 TO PRINT
         BAL   R9,PRINT                PRINT IT
         SR    R15,R15                 CLEAR FOR INSERT
         ICM   R15,3,DS4VSCRA          GET REL TRK OF CRA
         CVD   R15,DBLWD               CONVERT TO PACKED
         UNPK  VLACRA,DBLWD            UNPACK TO PRINT
         OI    VLACRA+4,C'0'           CLEAR SIGN
         ICM   R15,15,DS4R2TIM         GET CATALOG MATCH TIME STAMP
         BAL   R9,HEXPRNT              CONVERT TO PRINTABLE
         MVC   VLACMTS(8),WORK         MOVE TO PRINT
         ICM   R15,15,DS4R2TIM+4       LAST 4 BYTES
         BAL   R9,HEXPRNT              CONVERT TO PRINTABLE
         MVC   VLACMTS+8(8),WORK       MOVE TO PRINT
         MVC   PRT,VLA4                VOLUME LINE 4 TO PRINT
         BAL   R9,PRINT                PRINT IT
         SR    R15,R15                 CLEAR FOR INSERT
         ICM   R15,15,DS4VTOCE+2       GET BEGIN EXTENT CCHH
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   VLABGN,WORK             MOVE TO PRINT
         ICM   R15,15,DS4VTOCE+6       GET END EXTENT CCHH
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   VLAEND,WORK             MOVE TO PRINT
         MVC   PRT,VLA5                VOLUME LINE 5 TO PRINT
         BAL   R9,PRINT                PRINT IT
VOLXIT   L     R9,VOL9                 GET RETURN ADDRESS
         BR    R9                      RETURN
***********************************************************************
*        SEARCH THE VTOC FOR THE NAME SPECIFIED IN THE DSNAME FIELD.  *
*        WHEN FOUND, ESTABLISH THE EXTENTS USING THE FORMATS 1 AND 3  *
*        DSCB'S.                                                      *
***********************************************************************
DSNAMEA  ST    R9,DSN9                 SAVE RETURN ADDRESS
         CLI   DS4IDFMT,C'4'           IS A FORMAT 4 DSCB AVAILABLE?
         BE    DSALSET                 YES
         MVC   PRT,NOFMT4              MESSAGE TO PRINT
         BAL   R9,PRINT                TELL USER NO FORMAT 4 HERE
         B     DSNXIT                  EXIT
DSALSET  MVC   EXTENTS,DS4VTOCE        SET EXTENTS FOR VTOC
         MVI   XTNTS,1                 INDICATE SINGLE EXTENT
         BAL   R9,SETXTNT              SET UP DEB EXTENTS FOR VTOC
         BAL   R9,EXCPKEY              GO READ THE FORMAT 1 DSCB
         CLI   EXCPIND,C' '            ANY EXCEPTIONAL CONDITION?
         BE    GOTLABEL                NO
         MVC   PRT,BADDSN              MOVE MESSAGE
         BAL   R9,PRINT                TELL USER DSNAME INVALID
         B     DSNXIT                  EXIT
GOTLABEL MVC   DS1FMTID(96),RKEYDATA   MOVE DATA PORTION
         MVC   DS1DSNAM,DSNAME         MOVE DATASET NAME
         ICM   R15,15,RCOUNT           GET CCHH ADDRESS OF FORMAT 1
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   DSADSCB1(8),WORK        MOVE TO PRINT
         ICM   R15,8,RCOUNT+4          GET R OF FORMAT 1
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   DSADSCB1+8(2),WORK      MOVE TO PRINT
         MVC   DSADSN,DS1DSNAM         DSNAME TO PRINT
         MVC   PRT,DSA1                DATA LINE 1 TO PRINT
         BAL   R9,PRINT                PRINT IT
         MVC   DSADSORG,PS             ASSUME PS
         TM    DS1DSORG,X'40'          IS IT PS?
         BO    DORECFM                 YES
         MVC   DSADSORG,PO             ASSUME PO
         TM    DS1DSORG,X'02'          IS IT PO?
         BO    DORECFM                 YES
         MVC   DSADSORG,VSAM           ASSUME VSAM
         TM    DS1DSORG+1,X'08'        IS IT VSAM?
         BO    DORECFM                 YES
         MVC   DSADSORG,ISAM           ASSUME ISAM
         TM    DS1DSORG,X'80'          IS IT ISAM?
         BO    DORECFM                 YES
         MVC   DSADSORG,DA             ASSUME DA
         TM    DS1DSORG,X'20'          IS IT DA?
         BO    DORECFM                 YES
         MVC   DSADSORG,QUESTION       UNIDENTIFIABLE DSORG
DORECFM  MVC   DSARECFM,U              ASSUME UNDEFINED
         TM    DS1RECFM,X'C0'          IS IT U?
         BO    DOBLKD                  YES
         MVC   DSARECFM,F              ASSUME FIXED
         TM    DS1RECFM,X'80'          IS IT F?
         BO    DOBLKD                  YES
         MVC   DSARECFM,V              ASSUME VARIABLE
         TM    DS1RECFM,X'40'          IS IT VARIABLE?
         BO    DOBLKD                  YES
         MVC   DSARECFM,QUESTION       UNIDENTIFIABLE RECFM
DOBLKD   TM    DS1RECFM,X'10'          IS IT BLOCKED?
         BZ    DOCTLCH                 NO
         MVI   DSARECFM+1,C'B'         YES, BLOCKED
         TM    DS1RECFM,X'06'          CONTROL CHARACTERS?
         BZ    DOLRECL                 NO
         MVI   DSARECFM+2,C'A'         ASSUME ASA
         TM    DS1RECFM,X'04'          IS IT ASA?
         BO    DOLRECL                 YES
         MVI   DSARECFM+2,C'M'         NO, MACHINE CODE
         B     DOLRECL                 CONTINUE
DOCTLCH  TM    DS1RECFM,X'06'          CONTROL CHARACTERS?
         BZ    DOLRECL                 NO
         MVI   DSARECFM+1,C'A'         ASSUME ASA
         TM    DS1RECFM,X'04'          IS IT ASA?
         BO    DOLRECL                 YES
         MVI   DSARECFM+1,C'M'         NO, MACHINE CODE
DOLRECL  SR    R15,R15                 CLEAR FOR INSERT
         ICM   R15,3,DS1LRECL          PICK UP LRECL
         CVD   R15,DBLWD               CONVERT TO PACKED
         UNPK  DSALRECL,DBLWD          UNPACK TO PRINT
         OI    DSALRECL+4,C'0'         CLEAR SIGN
         ICM   R15,3,DS1BLKL           PICK UP BLKSIZE
         CVD   R15,DBLWD               CONVERT TO PACKED
         UNPK  DSABLKSI,DBLWD          UNPACK TO PRINT
         OI    DSABLKSI+4,C'0'         CLEAR SIGN
         SR    R15,R15                 CLEAR FOR INSERT
         IC    R15,DS1KEYL             PICK UP KEY LENGTH
         CVD   R15,DBLWD               CONVERT TO PACKED
         UNPK  DSAKEYL,DBLWD           UNPACK TO PRINT
         OI    DSAKEYL+2,C'0'          CLEAR SIGN
         ICM   R15,3,DS1RKP            PICK UP RELATIVE KEY POSITION
         CVD   R15,DBLWD               CONVERT TO PACKED
         UNPK  DSARKP,DBLWD            UNPACK TO PRINT
         OI    DSARKP+4,C'0'           CLEAR SIGN
         MVC   PRT,DSA2                DATASET INFO LINE 2 TO PRINT
         BAL   R9,PRINT                PRINT IT
         MVC   DSAVOL,DS1DSSN          VOLSER TO PRINT
         SR    R15,R15                 CLEAR FOR INSERT
         IC    R15,DS1NOEPV            GET NBR EXTENTS
         CVD   R15,DBLWD               CONVERT TO PACKED
         UNPK  DSANOEXT,DBLWD          UNPACK TO PRINT
         OI    DSANOEXT+1,C'0'         CLEAR SIGN
         ICM   R15,3,DS1VOLSQ          GET VOLUME SEQUENCE NUMBER
         CVD   R15,DBLWD               CONVERT TO PACKED
         UNPK  DSAVLSQ,DBLWD           UNPACK TO PRINT
         OI    DSAVLSQ+2,C'0'          CLEAR SIGN
         SR    R9,R9                   CLEAR FOR INSERT
         IC    R9,DS1CREDT             YEAR OF CREATION
         CVD   R9,DBLWD                CONVERT TO PACKED
         UNPK  DSACREAT(2),DBLWD       UNPACK TO PRINT
         OI    DSACREAT+1,C'0'         CLEAR SIGN
         ICM   R9,3,DS1CREDT+1         DAY OF CREATION
         CVD   R9,DBLWD                CONVERT TO PACKED
         UNPK  DSACREAT+3(3),DBLWD     UNPACK TO PRINT
         OI    DSACREAT+5,C'0'         CLEAR SIGN
         MVI   DSACREAT+2,C'/'         DELIMIT
         SR    R9,R9                   CLEAR FOR INSERT
         IC    R9,DS1EXPDT             YEAR OF EXPIRATION
         CVD   R9,DBLWD                CONVERT TO PACKED
         UNPK  DSAEXP(2),DBLWD         UNPACK TO PRINT
         OI    DSAEXP+1,C'0'           CLEAR SIGN
         ICM   R9,3,DS1EXPDT+1         DAY OF EXPIRATION
         CVD   R9,DBLWD                CONVERT TO PACKED
         UNPK  DSAEXP+3(3),DBLWD       UNPACK TO PRINT
         OI    DSAEXP+5,C'0'           CLEAR SIGN
         MVI   DSAEXP+2,C'/'           DELIMIT
         MVC   PRT,DSA3                DATASET INFO LINE 3 TO PRINT
         BAL   R9,PRINT                PRINT IT
         SR    R9,R9                   CLEAR FOR INSERT
         IC    R9,DS1REFD              YEAR OF LAST REFERENCE
         CVD   R9,DBLWD                CONVERT TO PACKED
         UNPK  DSAREF(2),DBLWD         UNPACK TO PRINT
         OI    DSAREF+1,C'0'           CLEAR SIGN
         ICM   R9,3,DS1REFD+1          DAY OF LAST REFERENCE
         CVD   R9,DBLWD                CONVERT TO PACKED
         UNPK  DSAREF+3(3),DBLWD       UNPACK TO PRINT
         OI    DSAREF+5,C'0'           CLEAR SIGN
         MVI   DSAREF+2,C'/'           DELIMIT
         MVC   DSAPSWD,NONE            ASSUME NO PASSWORD
         TM    DS1DSIND,X'14'          IS IT PASSWORD PROTECTED?
         BZ    DOALLOC                 NO
         MVC   DSAPSWD,WRITONLY        ASSUME WRITE PROTECT ONLY
         BO    DOALLOC                 BRANCH IF BOTH READ AND WRITE
         MVC   DSAPSWD,READWRIT        ASSUME READ AND WRITE PROT
DOALLOC  MVC   DSALLOC,CYL             ASSUME CYLINDER ALLOC
         TM    DS1SCALO,X'C0'          IS IT CYLINDERS?
         BO    DOSECND                 YES
         MVC   DSALLOC,ABSTRK          ASSUME ABSOLUTE TRACK
         BZ    DOSECND                 BRANCH IF ABS TRK
         MVC   DSALLOC,TRK             ASSUME TRACK ALLOCATION
         TM    DS1SCALO,X'80'          IS IT TRACK?
         BO    DOSECND                 YES
         MVC   DSALLOC,BLOCKS          ASSUME BLOCK ALLOCATION
DOSECND  SR    R15,R15                 CLEAR FOR INSERT
         ICM   R15,7,DS1SCAL           GET SECONDARY ALLOCATION SIZE
         CVD   R15,DBLWD               CONVERT TO PACKED
         UNPK  DSASEC,DBLWD            UNPACK TO PRINT
         OI    DSASEC+5,C'0'           CLEAR SIGN
         MVC   PRT,DSA4                DATASET INFO LINE 4 TO PRINT
         BAL   R9,PRINT                PRINT IT
         SR    R15,R15                 CLEAR FOR INSERT
         ICM   R15,14,DS1LSTAR         PICK UP TTR OF LAST BLOCK
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   DSALBT,WORK             MOVE TO PRINT
         ICM   R15,15,DS1PTRDS         GET CCHH FOR FORMAT3
         BAL   R9,HEXPRNT              CONVERT TO PRINTABLE
         MVC   DSAFMT3(8),WORK         MOVE TO PRINT
         ICM   R15,8,DS1PTRDS+4        GET R FOR FORMAT3
         BAL   R9,HEXPRNT              CONVERT TO PRINTABLE
         MVC   DSAFMT3+8(2),WORK       MOVE TO PRINT
         MVC   PRT,DSA5                DATASET INFO LINE 5 TO PRINT
         BAL   R9,PRINT                PRINT IT
         MVC   DS1FMTID(96),RKEYDATA   SAVE FORMAT 1 DSCB DATA
         CLC   DS1PTRDS,XZROS          IS THERE A FORMAT 3?
         BE    SET1EXT                 NO
         MVC   RCOUNT(5),DS1PTRDS      YES, SET UP TO READ FORMAT 3
         IC    R15,RCOUNT+4            GET RECORD NUMBER
         BCTR  R15,0                   BACK UP 1
         STC   R15,RCOUNT+4            SET SEARCH TO PRECEDING REC
         BAL   R9,EXCPREAD             GO READ FORMAT 3 DSCB
         CLI   EXCPIND,C' '            ANY ERROR?
         BNE   ERRFMT3                 YES
         CLC   RKEYDATA(4),THREES      IS IT A FORMAT 3?
         BE    MOVE3                   YES
ERRFMT3  MVC   PRT,FMT3ERR             MESSAGE TO PRINT
         BAL   R9,PRINT                PRINT FORMAT 3 ERROR
         B     SET1EXT                 CONTINUE
MOVE3    MVC   DSCBFMT3,RKEYDATA       SAVE FORMAT 3 LABEL
         MVC   EXTADNL+20(40),DS3EXT1  MOVE LAST 13 EXTENTS
         MVC   EXTADNL+60(90),DS3EXT5  MOVE LAST 13 EXTENTS
SET1EXT  MVC   EXTENTS(30),DS1EXT1     MOVE 1ST 3 EXTENTS
         MVC   XTNTS,DS1NOEPV          SET NUMBER EXTENTS
         BAL   R9,SETXTNT              SET UP EXTENTS FOR DATASET
         SR    R10,R10                 CLEAR FOR INSERT
         IC    R10,DS1NOEPV            GET NBR EXTENTS
         LA    R11,EXTENTS             POINT TO EXTENT SAVE AREA
         CLI   DS1NOEPV,0              ANY EXTENTS?
         BNE   NEXTXTNA                YES
         MVC   PRT(34),NOEXTS          DATASET HAS NO EXTENTS LITERAL
         BAL   R9,PRINT                PRINT MESSAGE
         B     DSNXIT                  NO
NEXTXTNA MVC   DSAXTYP,DATA            ASSUME DATA EXTENT
         TM    0(R11),X'01'            IS IT DATA EXTENT?
         BO    DOXSEQ                  YES
         MVC   DSAXTYP,OFLO            ASSUME OVERFLOW EXTENT
         TM    0(R11),X'02'            IS IT OVERFLOW?
         BO    DOXSEQ                  YES
         MVC   DSAXTYP,INDX            ASSUME INDEX EXTENT
         TM    DSAXTYP,X'04'           IS IT INDEX?
         BO    DOXSEQ                  YES
         MVC   DSAXTYP,ULBL            ASSUME USER LABEL EXTENT
         TM    DSAXTYP,X'40'           IS IT USER LABEL EXTENT?
         BO    DOXSEQ                  YES
         MVC   DSAXTYP,SHRD            ASSUME SHARED EXTENT
         TM    0(R11),X'80'            IS IT A SHARED EXTENT?
         BO    DOXSEQ                  YES
         MVC   DSAXTYP,QUESTION        UNIDENTIFIABLE EXTENT
DOXSEQ   SR    R15,R15                 CLEAR FOR INSERT
         IC    R15,1(R11)              PICK UP EXTENT SEQUENCE NBR
         CVD   R15,DBLWD               CONVERT TO PACKED
         UNPK  DSAXSEQ,DBLWD           UNPACK TO PRINT
         OI    DSAXSEQ+2,C'0'          CLEAR SIGN
         ICM   R15,15,2(R11)           GET BEGIN EXTENT CCHH
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   DSAXBGN,WORK            MOVE TO PRINT
         ICM   R15,15,6(R11)           GET END EXTENT CCHH
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   DSAXEND,WORK            MOVE TO PRINT
         MVC   PRT,DSA6                EXTENT INFO LINE TO PRINT
         BAL   R9,PRINT                PRINT IT
         LA    R11,10(R11)             POINT TO NEXT EXTENT BLOCK
         BCT   R10,NEXTXTNA            LOOP THRU ALL EXTENTS
DSNXIT   L     R9,DSN9                 GET RETURN ADDRESS
         BR    R9                      EXIT
***********************************************************************
*           END OF JOB ROUTINE                                        *
***********************************************************************
EOJ      CLOSE (SYSIN,,SYSPRINT,,DADCB) CLOSE FILES
         L     R13,4(R13)              GET CALLER'S SAVE AREA ADDR
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGS
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN TO CALLER
***********************************************************************
*        SEARCH FOR NEXT BLOCK USING THE VALUE IN DSNAME AS THE KEY   *
***********************************************************************
EXCPKEY  ST    R9,XKY9                 SAVE RETURN ADDRESS
         LA    R1,CMDCHNK              @ CCWS TO READ RECORD 0
         BAL   R9,EXCP                 CALL EXCP ROUTINE
         L     R9,XKY9                 GET RETURN ADDRESS
         BR    R9                      EXIT
***********************************************************************
*        READ NEXT BLOCK USING EXCP. SEARCH ADDRESS IS IN THE RCOUNT  *
*        FIELD: SET UP BY THE GETCHR, VOLUME, OR DSNAME ROUTINES, OR  *
*        BY THE LAST EXECUTION OF THIS ROUTINE.                       *
***********************************************************************
EXCPREAD ST    R9,XRD9                 SAVE RETURN ADDRESS
         LA    R1,CMDCHNR              @ CCWS TO READ RECORD 0
         CLI   RCOUNT+4,0              WANT FIRST RECORD ON TRACK?
         BNE   XRDLST                  NO
         LA    R1,CMDCHNR0             YES, USE ALTERNATE CCW'S
XRDLST   BAL   R9,EXCP                 CALL EXCP ROUTINE
         CLI   EXCPIND,C'X'            GOOD I/O?
         BE    EXCPRXIT                NO
         CLI   EXCPIND,C'E'            END OF EXTENT?
         BE    EXCPRXIT                YES
EXCPRXIT L     R9,XRD9                 GET RETURN ADDRESS
         BR    R9                      EXIT
***********************************************************************
*        ISSUE EXCP TO PERFORM THE OPERATION SET UP BY EXCPREAD,      *
*        EXCPKEY, OR REWRITE. SET EXCEPTION INDICATOR AS APPROPRIATE. *
*        THE CALLER MUST PLACE THE ADDRESS OF THE COMMAND CHAIN TO BE *
*        EXECUTED IN R1 BEFORE CALLING EXCP.                          *
***********************************************************************
EXCP     ST    R9,EXCP9                SAVE RETURN ADDRESS
         ST    R1,DACCWAD              STORE COMMAND ADDRESS
REISSUE  MVI   EXCPIND,C' '            CLEAR ERROR INDICATOR
         MVC   DASRCH,RCOUNT           SEARCH ON LAST RECD READ
         EXCP  DAIOB                   READ COUNT, KEY, AND DATA
         WAIT  ECB=DAECB               AWAIT COMPLETION
         CLI   DAECB,X'7F'             GOOD READ
         BE    EXCPCHEK                YES
         MVI   EXCPIND,C'E'            INDICATE END OF EXTENT RANGE
         CLI   DAECB,X'42'             IS IT EOE?
         BNE   SETXHE                  NO
         SR    R15,R15                 CLEAR FOR INSERT
         IC    R15,XTNTS               GET NBR REMAINING EXTENTS
         BCT   R15,NEWXTNT             DECREMENT NUMBER EXTENTS
         B     EXCPEXIT                BRANCH IF NO MORE EXTENTS
NEWXTNT  MVC   EXTENTS,EXTADNL         SHIFT IN NEXT EXTENT
         STC   R15,XTNTS               UPDATE EXTENT COUNT
         BAL   R9,SETXTNT              GO SET NEW EXTENT IN DEB
         L     R1,DACCWAD              GET CCW ADDRESS
         B     REISSUE                 AND GO REISSUE COMMAND
SETXHE   MVI   EXCPIND,C'X'            INDICATE HARD I/O ERROR
         CLI   DAECB,X'41'             I/O ERROR INDICATED
         BNE   EXHDERR                 NO
         TM    DAUNST,1                IS IT EOF RECORD
         BO    ENDF                    YES
EXHDERR  BAL   R9,HARDERR              NO, HARD I/O ERROR
         B     EXCPEXIT                EXIT
EXCPCHEK MVI   NEWRECD,0               INDICATE NEW RECORD
         CLC   DACCWAD+1(3),CMDCHN0A+1 THIS WAS THE R0 READ CCW?
         BNE   LDRKD                   NO
         MVC   DACCWAD+1(3),CMDCHNRA+1 YES, SET TO NORMAL READ
LDRKD    LA    R1,RKEYDATA             POINT TO I/O AREA
         SR    R15,R15                 CLEAR FOR INSERT
         IC    R15,RCOUNT+5            GET KEY LENGTH
         AR    R1,R15                  ADD TO START
         AH    R1,RCOUNT+6             ADD DATA LENGTH
         ST    R1,AREAEND              SAVE AREA END ADDRESS
         B     EXCPEXIT                AND EXIT NORMALLY
ENDF     MVI   EXCPIND,C'F'            INDICATE EOF RECORD
EXCPEXIT L     R9,EXCP9                GET RETURN ADDRESS
         BR    R9                      EXIT
***********************************************************************
*       PRINT HARD I/O ERROR DATA                                     *
***********************************************************************
HARDERR  ST    R9,HE9                  SAVE RETURN ADDRESS
         ICM   R15,8,DAECBCC           PICK UP ECB COMPLETION CODE
         BAL   R9,HEXPRNT              GO MAKE PRINTABLE
         MVC   IOECC,WORK              MOVE TO PRINT
         ICM   R15,15,DACSW            1ST 4 BYTES OF CSW
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOECSW1,WORK            MOVE TO PRINT
         ICM   R15,15,DACSW+4          2ND 4 BYTES OF CSW
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOECSW2,WORK            MOVE TO PRINT
         L     R14,DANXCCW             POINT TO NEXT CCW
         LA    R14,0(R14)              CLEAR HIGH ORDER BYTE
         SH    R14,H8                  BACK UP TO FAILING CCW
         C     R14,CMDCHN0A            THIS ONE OF MY CCW'S?
         BL    UNKNCCW                 NO
         C     R14,WRITCCWA            THIS ONE OF MY CCW'S?
         BNH   FORMCCWD                YES
UNKNCCW  MVC   IOECCW1,QUESTION        UNKNOWN CCW
         MVC   IOECCW2,QUESTION        UNKNOWN CCW
         MVC   IOEBYTS,BLANX           IGNORE BYTES READ
         MVC   IOECD1,BLANX            IGNORE DATA READ
         MVC   IOECD2,BLANX            IGNORE DATA READ
         MVC   IOECD3,BLANX            IGNORE DATA READ
         B     HECHNAM                 CONTINUE
FORMCCWD ICM   R15,15,0(R14)           1ST 4 BYTES OF FAILING CCW
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOECCW1,WORK            MOVE TO PRINT
         ICM   R15,15,4(R14)           2ND 4 BYTES OF FAILING CCW
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOECCW2,WORK            MOVE TO PRINT
         LH    R15,6(R14)              PICK UP CCW LENGTH
         SH    R15,DARESID             COMPUTE BYTES READ
         CVD   R15,DBLWD               CONVERT TO PACKED
         UNPK  IOEBYTS,DBLWD           UNPACK TO PRINT
         L     R14,0(R14)              GET CCW DATA ADDRESS
         ICM   R15,15,0(R14)           POINT TO CCW DATA
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOECD1,WORK             MOVE TO PRINT
         ICM   R15,15,4(R14)           PICK UP NEXT 4 BYTES
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOECD2,WORK             MOVE TO PRINT
         ICM   R15,15,8(R14)           PICK UP NEXT 4 BYTES
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOECD3,WORK             MOVE TO PRINT
         OI    IOEBYTS+4,C'0'          CLEAR SIGN
HECHNAM  MVC   IOECHNM,CCHN0LIT        ASSUME CMDCHNR0
         CLC   DACCWAD+1(3),CMDCHN0A+1 IS IT CMDCHNR0?
         BE    ERRSCH                  YES
         MVC   IOECHNM,CCHNRLIT        NO, ASSUME CMDCHNR
         CLC   DACCWAD+1(3),CMDCHNRA+1 IS IT CMDCHNR?
         BE    ERRSCH                  YES
         MVC   IOECHNM,CCHNKLIT        ASSUME CMDCHNK
         CLC   DACCWAD+1(3),CMDCHNKA+1 IS IT CMDCHNK?
         BE    ERRSCH                  YES
         MVC   IOECHNM,QUESTION        UNKNOWN CCW CHAIN
ERRSCH   ICM   R15,15,DASRCH           PICK UP SEARCH CCHH
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOESRCH(8),WORK         MOVE TO PRINT
         ICM   R15,8,DASRCH+4          PICK UP SEARCH RECORD NBR
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOESRCH+8(2),WORK       MOVE TO PRINT
         ICM   R15,12,DAUCSNS          PICK UP SENSE BYTES
         BAL   R9,HEXPRNT              MAKE PRINTABLE
         MVC   IOESNS,WORK             MOVE TO PRINT
         MVC   PRT,IOERR1              LINE 1 TO PRINT
         BAL   R9,PRINT                PRINT IT
         MVC   PRT,IOERR2              LINE 2 TO PRINT
         BAL   R9,PRINT                PRINT IT
         MVC   PRT,IOERR3              LINE 3 TO PRINT
         BAL   R9,PRINT                PRINT IT
         MVC   PRT+15(16),CONDIT
         LA    R14,PRT+31              POINT TO CONDITION DESCRIPTION
         CLI   DAECBCC,X'41'           IS IT PERMANENT I/O ERROR?
         BNE   IOE1                    NO
         LA    R15,0                   LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE1     CLI   DAECBCC,X'42'           IS IT EXTENT VIOLATION?
         BNE   IOE2                    NO
         LA    R15,1                   LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE2     CLI   DAECBCC,X'44'           IS IT INTERCEPTED?
         BNE   IOE3                    NO
         LA    R15,2                   LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE3     TM    DAUNST,X'20'            IS IT UNIT CHECK?
         BZ    IOE4                    NO
         LA    R15,3                   LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE4     TM    DAUNST,X'10'            IS IT UNIT EXCEPTION?
         BZ    IOE5                    NO
         LA    R15,4                   LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE5     TM    DACHST,X'40'            IS IT WRONG LENGTH RECORD?
         BZ    IOE6                    NO
         LA    R15,5                   LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE6     TM    DACHST,X'20'            IS IT CHANNEL PROGRAM CHECK?
         BZ    IOE7                    NO
         LA    R15,6                   LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE7     TM    DACHST,X'10'            IS IT PROTECTION CHECK?
         BZ    IOE8                    NO
         LA    R15,7                   LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE8     TM    DACHST,X'08'            IS IT CHANNEL DATA CHECK?
         BZ    IOE9                    NO
         LA    R15,8                   LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE9     TM    DACHST,X'04'            IS IT CHANNEL CONTROL CHECK?
         BZ    IOE10                   NO
         LA    R15,9                   LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE10    TM    DACHST,X'02'            IS IT INTERFACE CONTROL CHECK?
         BZ    IOE11                   NO
         LA    R15,10                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE11    TM    DAUCSNS,X'80'           IS IT COMMAND REJECT?
         BZ    IOE12                   NO
         LA    R15,11                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE12    TM    DAUCSNS,X'10'           IS IT EQUIPMENT CHECK?
         BZ    IOE13                   NO
         LA    R15,12                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE13    TM    DAUCSNS,X'08'           IS IT DATA CHECK?
         BZ    IOE14                   NO
         LA    R15,13                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE14    TM    DAUCSNS,X'04'           IS IT OVERRUN?
         BZ    IOE15                   NO
         LA    R15,14                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE15    TM    DAUCSNS,X'02'           IS IT TRK CONDITION CHECK?
         BZ    IOE16                   NO
         LA    R15,15                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE16    TM    DAUCSNS,X'01'           IS IT SEEK CHECK?
         BZ    IOE17                   NO
         LA    R15,16                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE17    TM    DAUCSNS+1,X'80'         IS IT DATA CHECK IN COUNT?
         BZ    IOE18                   NO
         LA    R15,17                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE18    TM    DAUCSNS+1,X'40'         IS IT WRITE TRACK OVERRUN?
         BZ    IOE19                   NO
         LA    R15,18                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE19    TM    DAUCSNS+1,X'20'         IS IT END OF CYLINDER ON M-T?
         BZ    IOE20                   NO
         LA    R15,19                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE20    TM    DAUCSNS+1,X'10'         IS IT INVALID COMMAND SEQUENCE?
         BZ    IOE21                   NO
         LA    R15,20                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE21    TM    DAUCSNS+1,X'08'         IS IT NO RECORD FOUND?
         BZ    IOE22                   NO
         LA    R15,21                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE22    TM    DAUCSNS+1,X'04'         IS IT FILE PROTECTED?
         BZ    IOE23                   NO
         LA    R15,22                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE23    TM    DAUCSNS+1,X'02'         IS IT MISSING ADDRESS MARKER?
         BZ    IOE24                   NO
         LA    R15,23                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOE24    TM    DAUCSNS+1,X'01'         IS IT OVERFLOW INCOMPLETE?
         BZ    IOECKPTD                NO
         LA    R15,24                  LITERAL SUBSCRIPT
         BAL   R9,CONDPRT              GO PRINT
IOECKPTD CLC   PRT,BLANX               ANYTHING LEFT IN PRT?
         BE    HEXIT                   NO
         BAL   R9,PRINT                YES, PRINT IT
HEXIT    L     R9,HE9                  GET RETURN ADDRESS
         BR    R9                      EXIT
***********************************************************************
*        PRINT I/O ERROR CONDITION LITERALS                           *
***********************************************************************
CONDPRT  ST    R9,CND9                 SAVE RETURN ADDRESS
         MH    R15,H30                 GET OFFSET TO LITERAL
         LA    R15,CONDTBL(R15)        POINT TO LITERAL
         ST    R15,LITADR              SAVE LITERAL ADDRESS
CHKLENG  L     R15,LITADR              POINT TO LITERAL
         LR    R1,R14                  POINT TO CURRENT PRINT ADDR
         AH    R1,0(R15)               ADD THIS LITERAL LENGTH
         C     R1,PRTCOL78             PAST END OF PRINT LINE?
         BH    LINEFULL                YES
         LH    R1,0(R15)               NO, GET LITERAL LENGTH
         EX    R1,MOVLTRL              MOVE TO PRINT
         AH    R14,0(R15)              STEP PAST LITERAL
         LA    R14,1(R14)              ADD A SPACE
         B     CNDXIT                  AND EXIT
LINEFULL BAL   R9,PRINT                GO PRINT THE LINE
         LA    R14,PRT+15              POINT TO NEXT PRINT LOC
         B     CHKLENG                 CONTINUE
CNDXIT   L     R9,CND9                 GET RETURN ADDRESS
         BR    R9                      EXIT
MOVLTRL  MVC   0(1,R14),2(R15)         EXECUTED MOVE
***********************************************************************
*        PRINT A LINE                                                 *
***********************************************************************
PRINT    PUT   SYSPRINT,PRT            WRITE PRINT LINE
         MVC   PRT,BLANX               CLEAR PRINT LINE
         BR    R9                      EXIT
***********************************************************************
*        ROUTINE TO CONVERT HEX TO PRINTABLE CHARACTERS (2 CHARACTERS *
*        PER HEX BYTE. ON ENTRY, HEX TO BE CONVERTED IS IN R15. THE   *
*        CHARACTER EQUIVALENT IS PLACED IN THE FIRST 8 BYTES OF WORK. *
***********************************************************************
HEXPRNT  STCM  R15,15,WORK              SAVE HEX VALUE
         UNPK  WORK(9),WORK(5)          CONVERT TO 1 NIBBLE PER BYTE
         MVZ   WORK(8),XZROS            CLEAR ZONES FOR TRANSLATE
         TR    WORK(8),TRTBLA           TRANSLATE TO PRINTABLE
         BR    R9                       EXIT
***********************************************************************
*   SET DEB EXTENTS FOR THE RANGE TO BE ACCESSED                      *
***********************************************************************
SETXTNT  L     R12,DADCB+44            @ DEB FOR INPUT1 FILE
         SMODE KEY=0,STATE=P
         MVC   38(5,R12),BGNXTNT       SET DEB START EXTENT
         MVC   42(5,R12),ENDXTNT       SET DEB END EXTENT
         SMODE KEY=NZERO,STATE=P
         MVC   RCOUNT(4),BGNXTNT       SET BEGIN SEARCH ADDRESS
         MVI   RCOUNT+4,0              BEGIN AT RECORD 0
         BR    R9                      EXIT
***********************************************************************
*        DYNAMIC ALLOCATION PARAMETER LISTS                           *
***********************************************************************
DAPARM1  DS    0F                      * 1ST PARAMETER FOR DYNALLOC *
DDN      DC    CL8'INPUT1'             DDNAME
         DC    CL44'&&DADCB'           DATASET NAME
         DC    XL8'00'                 MEMBER NAME
         DC    XL3'00'                 DISPOSITION:
*                                    BYTE1: 0=OLD,M=MOD,N=NEW,S=SHR
*                                    BYTE2: U=UNCATLG,C=CATLG,D=DELETE
*                                    K=KEEP; BYTE3: SAME AS BYTE2
         DC    CL8'DISK'               UNIT NAME
         DC    XL2'00'                 UNIT COUNT
         DC    XL6'00'                 VOLUME SERIAL NUMBER
         DC    XL1'00'                 LABEL TYPE:
*                                      N=NL, S=SL, B=BLP
         DC    XL2'00'                 DATASET SEQUENCE NBR (TAPE)
         DC    XL1'00'                 F: FREE=CLOSE
         DC    XL2'00'                 RETENTION PERIOD IN DAYS
         DC    XL3'00'                 RECORDING FORMAT:
*                                      BYTE1: F=FIXED, V=VARIABLE,
*                                      U=UNDEFINED; BYTE2: B=BLOCKED,
*                                      BYTE3: A=ASA CONTROL CHARACTERS
         DC    XL2'00'                 LOGICAL RECORD LENGTH
         DC    XL2'00'                 BLOCK SIZE
         DC    XL1'00'                 TAPE DENSITY: 1=1600,6=6250
         DC    XL2'00'                 BUFNO
         DC    XL2'00'                 KEY LENGTH
         DC    XL1'00'                 DATASET ORGANIZATION:
*                                      V=VSAM, P=PDS, D=DIRECT, S=SEQ
         DC    CL1'C'                  SPACE TYPE:
*                                      C=CYL, T=TRK
         DC    XL2'01'                 PRIMARY SPACE AMOUNT
         DC    XL2'00'                 SECONDARY SPACE AMOUNT
         DC    CL1'00'                 R=RLSE
         DC    XL2'00'                 NBR DIRECTORY BLOCKS
         DC    XL5'00'                 EXPIRATION DATE YYDDD
*
DAPARM2  DS    0F                      2ND PARAMETER FOR DYNALLOC
         DC    CL1'A'                  REQUEST CODE:
*                                      A=ALLOCATE A DATASET
*                                      V=VOLSER FEEDBACK
RETRNCD  DC    CL2' '                  DYNALLOC RETURN CODE
ERRRET   DC    CL4' '                  ERROR RETURN CODE
INFORET  DC    CL4' '                  INFO RETURN CODE
***********************************************************************
*        WORK AREAS FOR THE UCBSCAN ROUTINE                           *
***********************************************************************
SAV15    DC    F'0'                    SAVE AREA FOR R15 AFTER UCBSCAN
FZERO    DC    F'0'                    CONSTANT ZERO
*
         DS    0D                      DOUBLEWORD ALIGN WORK100
WORK100  DC    XL100'00'               WORK AREA FOR CVTUCBSC
ADDRUCB  DC    A(0)                    UCB ADDR FROM IOSVSUCB
***********************************************************************
*        REGISTER SAVE AREAS FOR ROUTINES                             *
***********************************************************************
VI9      DS    A                       R9 SAVE FOR VTOCINDX
FP9      DS    A                       R9 SAVE FOR FMTPRINT
VOL9     DS    A                       R9 SAVE FOR VOLUME ROUTINE
DSN9     DS    A                       R9 SAVE FOR DSNAMEA ROUTINE
XRD9     DS    A                       R9 SAVE FOR EXCPREAD ROUTINE
XKY9     DS    A                       R9 SAVE FOR EXCPKEY  ROUTINE
HE9      DS    A                       R9 SAVE FOR HARDERR ROUTINE
CND9     DS    A                       R9 SAVE FOR CONDPRNT ROUTINE
LITADR   DS    A                       R15 SAVE FOR CONDPRNT ROUTINE
EXCP9    DS    A                       R9 SAVE FOR EXCP ROUTINE
***********************************************************************
*        MISCELLANEOUS DATA AREAS                                     *
***********************************************************************
WRITCCWA DC    A(WRITCCW)              ADDRESS OF WRITCCW
CMDCHN0A DC    A(CMDCHNR0)             ADDRESS OF CMDCHNR0
CMDCHNRA DC    A(CMDCHNR)              ADDRESS OF CMDCHNR
CMDCHNKA DC    A(CMDCHNK)              ADDRESS OF CMDCHNK
PRTCOL78 DC    A(PRT+78)               ADDRESS OF PRINT COLUMN 79
AREAEND  DS    A                       END OF I/O AREA ADDRESS
F15      DC    F'15'                   CONSTANT 15
F30      DC    F'30'                   CONSTANT 30
H30      DC    H'30'                   CONSTANT 30
H44      DC    H'44'                   CONSTANT 44
H8       DC    H'8'                    CONSTANT 8
H96      DC    H'96'                   CONSTANT 96
THREES   DC    X'03030303'             CONSTANT HEX 03030303
DSNAME   DC    CL44' '                 DATASET NAME FOR VTOC READS
CTRLCARD DS    CL80                    CONTROL CARD
DATASET  DC    CL44' '                 DATASET NAME FROM CTL CARD
VOLSER   DC    CL6' '                  VOLSER FROM CTL CARD
         DS    0F
XZROS    DC    XL8'00'                 HEX ZEROS
HEX      DS    XL80                    HEX RESULT FROM CHARHEX
CHERR    DC    X'00'                   ERROR INDICATOR FROM CHARHEX
TRCHAR   DC    256X'FF'                TRANSLATE TABLE FOR CHARHEX
         ORG   TRCHAR+X'81'            ORG TO LOWER CASE A
         DC    X'0A0B0C0D0E0F'         A-F = 0A-0F
         ORG   TRCHAR+X'C1'            ORG TO UPPER CASE A
         DC    X'0A0B0C0D0E0F'         A-F = 0A-0F
         ORG   TRCHAR+C'0'             ORG TO ZERO
         DC    X'00010203040506070809' 0-9 = 00-09
         ORG
QUESTION DC    CL4'????????'           QUESTION MARKS
ABSTRK   DC    C'ABSTRK'               ABSTRK LITERAL
CCHNKLIT DC    CL8'CMDCHNK'            CMDCHNK LITERAL
CCHNRLIT DC    CL8'CMDCHNR'            CMDCHNR LITERAL
CCHN0LIT DC    CL8'CMDCHNR0'           CMDCHNR0 LITERAL
ZEROS    DC    C'00'                   ZEROS LITERAL
L0410    DC    C'0410'                 0410 LITERAL
L3350    DC    C'3350'                 3350 LITERAL
L3380    DC    C'3380'                 3380 LITERAL
L3390    DC    C'3390'                 3390 LITERAL
BLOCKS   DC    C'BLOCKS'               BLOCKS LITERAL
CYL      DC    C'CYL   '               CYL LITERAL
TRK      DC    C'TRK   '               TRK LITERAL
DA       DC    C'DA    '               DA LITERAL
F        DC    C'F  '                  F LITERAL
U        DC    C'U  '                  U LITERAL
V        DC    C'V  '                  V LITERAL
DATA     DC    C'DATA'                 DATA LITERAL
NONE     DC    CL10'NONE'              NONE LITERAL
READWRIT DC    CL10'READ/WRITE'        READ/WRITE LITERAL
WRITONLY DC    CL10'WRITE ONLY'        WRITE ONLY LITERAL
CONDIT   DC    CL16'CONDITIONS ARE: '  CONDITIONS ARE: LITERAL
NOEXTS   DC    CL34'    *** DATASET HAS NO EXTENTS ***'
INDX     DC    C'INDX'                 INDX LITERAL
IS       DC    C'IS'                   IS LITERAL
VS       DC    C'VS'                   VS LITERAL
NO       DC    C'NO'                   NO LITERAL
PO       DC    C'PO  '                 PO LITERAL
PS       DC    C'PS  '                 PS LITERAL
ISAM     DC    C'ISAM'                 ISAM LITERAL
VSAM     DC    C'VSAM'                 VSAM LITERAL
SHRD     DC    C'SHRD'                 SHRD LITERAL
ULBL     DC    C'ULBL'                 ULBL LITERAL
OFLO     DC    C'OFLO'                 OFLO LITERAL
YES      DC    C'YES'                  YES LITERAL
WORK     DS    CL11                    WORK AREA
POS      DC    PL3'0'                  RECORD POSITION COUNTER
NEWRECD  DC    X'00'                   00=NEW RECORD READ
XTNTS    DC    X'00'                   NUMBER OF EXTENTS
EXTENTS  DS    0XL10                   CURRENT EXTENT
         DS    XL2
BGNXTNT  DS    XL4                     CCHHR EXTENT BEGIN
ENDXTNT  DS    XL4                     CCHHR EXTENT END
EXTADNL  DS    15XL10                  15 ADDITIONAL EXTENTS
EXCPIND  DS    XL1                     EXCP INDICATOR: BLANK=O.K.,
*                                      E=END EXTENT, X=HARD ERROR,
*                                      F=EOF RECORD
         DS    0H
VTOCADR  DS    0CL5                    VTOC CCHHR START ADDRESS
VTOCCYL  DS    H                       VTOC CYLINDER
VTOCHD   DS    H                       VTOC HEAD
VTOCREC  DS    XL1                     VTOC RECORD NUMBER
TRTBLA   DC    C'0123456789ABCDEF'     TRANSLATE TABLE
DBLWD    DS    D                       DOUBLEWORD WORK AREA
*
PRT      DC    CL80' '                 PRINT AREA
BLANX    DC    CL80' '                 CONSTANT BLANKS
***********************************************************************
*        GENERAL ERROR MESSAGES                                       *
***********************************************************************
UNALOC   DC    CL80'UNABLE TO ALLOCATE WORK DATASET'
UNOPEN   DC    CL80'UNABLE TO OPEN WORK DATASET'
FMT3ERR  DC    CL80'ERROR READING FORMAT 3 DSCB'
BADVOL   DC    CL80'REQUESTED VOLUME SERIAL NOT AVAILABLE'
GOODREW  DC    CL80'RECORD SUCCESSFULLY REWRITTEN'
INVDVC   DC    CL80'DEVICE TYPE NOT SUPPORTED'
BADDSN   DC    CL80'DATASET NOT ON VOLUME OR I/O ERROR READING VTOC'
INVFMT4  DC    CL80'ERROR: UNABLE TO ACCESS VTOC FORMAT 4'
NOFMT4   DC    CL80'NO VOLUME ALLOCATED'
***********************************************************************
*        I/O ERROR MESSAGES                                           *
***********************************************************************
CONDTBL  DC    H'19',CL28'PERMANENT I/O ERROR,        '
         DC    H'16',CL28'EXTENT VIOLATION,           '
         DC    H'11',CL28'INTERCEPTED,                '
         DC    H'10',CL28'UNIT CHECK,                 '
         DC    H'14',CL28'UNIT EXCEPTION,             '
         DC    H'19',CL28'WRONG LENGTH RECORD,        '
         DC    H'21',CL28'CHANNEL PROGRAM CHECK,      '
         DC    H'16',CL28'PROTECTION CHECK,           '
         DC    H'18',CL28'CHANNEL DATA CHECK,         '
         DC    H'21',CL28'CHANNEL CONTROL CHECK,      '
         DC    H'23',CL28'INTERFACE CONTROL CHECK,    '
         DC    H'14',CL28'COMMAND REJECT,             '
         DC    H'15',CL28'EQUIPMENT CHECK,            '
         DC    H'10',CL28'DATA CHECK,                 '
         DC    H'07',CL28'OVERRUN,                    '
         DC    H'21',CL28'TRACK CONDITION CHECK,      '
         DC    H'10',CL28'SEEK CHECK,                 '
         DC    H'19',CL28'DATA CHECK IN COUNT,        '
         DC    H'19',CL28'WRITE TRACK OVERRUN,        '
         DC    H'22',CL28'END OF CYLINDER ON M-T,     '
         DC    H'25',CL28'INVALID COMMAND SEQUENCE,   '
         DC    H'15',CL28'NO RECORD FOUND,            '
         DC    H'14',CL28'FILE PROTECTED,             '
         DC    H'22',CL28'MISSING ADDRESS MARKER,     '
         DC    H'19',CL28'OVERFLOW INCOMPLETE,        '
***********************************************************************
*        VOLUME ALLOCATION DETAIL PRINT LINES                         *
***********************************************************************
VLA1     DS    0CL80                   VOLUME ALLOCATE LINE 1
         DC    CL17'FORMAT 4 DSCB AT '
VLACHR   DS    CL10
         DC    CL21', HIGH USED VTOC CHR='
VLAHI    DS    CL10
         DC    CL13', FREE DSCBS='
VLANDSCB DS    CL5
         DC    CL4' '
*
VLA2     DS    0CL80                   VOLUME ALLOCATE LINE 2
         DC    CL15'NBR CYL IN VOL='
VLANCYL  DS    CL5
         DC    CL19', NBR TRKS PER CYL='
VLANTRK  DS    CL5
         DC    CL16', BYTES PER TRK='
VLABTRK  DS    CL5
         DC    CL11', DSCB/TRK='
VLADSCT  DS    CL3
         DC    CL1' '
*
VLA3     DS    0CL80                   VOLUME ALLOCATE LINE 3
         DC    CL18'DIRECTORY BLK/TRK='
VLADBTRK DS    CL3
         DC    CL18', VSAM TIME STAMP='
VLATMSTP DS    CL16
         DC    CL13', VSAM OWNED='
VLAVSOWN DS    CL3
         DC    CL9' '
*
VLA4     DS    0CL80                   VOLUME ALLOCATE LINE 4
         DC    CL15'REL TRK OF CRA='
VLACRA   DS    CL5
         DC    CL26', CATALOG MATCH TIMESTAMP='
VLACMTS  DS    CL16
         DC    CL18' '
*
VLA5     DS    0CL80                   VOLUME ALLOCATE LINE 5
         DC    CL25'VTOC EXTENTS (CCHH) FROM '
VLABGN   DS    CL8
         DC    CL4' TO '
VLAEND   DS    CL8
         DC    CL9', DEVICE='
VLADVC   DS    CL4
         DC    CL22' '
***********************************************************************
*        DATASET ALLOCATION DETAIL PRINT LINES                        *
***********************************************************************
*
DSA1     DS    0CL80                   DATASET ALLOCATION DATA LINE 1
         DC    CL17'FORMAT 1 DSCB AT '
DSADSCB1 DC    CL10' '
         DC    CL9', DSNAME='
DSADSN   DC    CL44' '
*
DSA2     DS    0CL80                   DATASET ALLOCATION DATA LINE 2
         DC    CL4' '
         DC    CL6'DSORG='
DSADSORG DC    CL4'____'
         DC    CL8', RECFM='
DSARECFM DC    CL3'___'
         DC    CL8', LRECL='
DSALRECL DC    CL5'00000'
         DC    CL10', BLKSIZE='
DSABLKSI DC    CL5'00000'
         DC    CL9', KEYLEN='
DSAKEYL  DC    CL3'000'
         DC    CL6', RKP='
DSARKP   DC    CL5'00000'
         DC    CL4' '
*
DSA3     DS    0CL80                   DATASET ALLOCATION DATA LINE 3
         DC    CL4' '
         DC    CL7'VOLSER='
DSAVOL   DC    CL6'______'
         DC    CL14', NBR EXTENTS='
DSANOEXT DC    CL2'00'
         DC    CL10', VOL SEQ='
DSAVLSQ  DC    CL3'000'
         DC    CL10', CREATED='
DSACREAT DC    CL6'______'
         DC    CL10', EXPIRES='
DSAEXP   DC    CL6'______'
         DC    CL2' '
*
DSA4     DS    0CL80                   DATASET ALLOCATION DATA LINE 4
         DC    CL4' '
         DC    CL11'LAST REFER='
DSAREF   DC    CL6'______'
         DC    CL11', PASSWORD='
DSAPSWD  DC    CL10'__________'
         DC    CL11', ALLOC IN='
DSALLOC  DC    CL6'______'
         DC    CL12', SEC ALLOC='
DSASEC   DC    CL6'000000'
         DC    CL4' '
*
DSA5     DS    0CL80                  DATASET ALLOCATION DATA LINE 5
         DC    CL4' '
         DC    CL13'LAST BLK TTR='
DSALBT   DC    CL6'______'
         DC    CL24', FORMAT 3 DSCB ADDRESS='
DSAFMT3  DC    CL10'__________'
         DC    CL23' '
*
DSA6     DS    0CL80                  DATASET ALLOCATION EXTENT LINES
         DC    CL8' '
         DC    CL12'EXTENT TYPE='
DSAXTYP  DC    CL4'____'
         DC    CL6', SEQ='
DSAXSEQ  DC    CL3'___'
         DC    CL13', BEGIN CCHH='
DSAXBGN  DC    CL8'________'
         DC    CL11', END CCHH='
DSAXEND  DC    CL8'________'
         DC    CL7' '
***********************************************************************
*        I/O ERROR DETAIL PRINT LINES                                 *
***********************************************************************
IOERR1   DS    0CL80                   I/O ERROR LINE 1
         DC    CL21'*** I/O ERROR: ECBCC='
IOECC    DS    CL2
         DC    CL6', CSW='
IOECSW1  DS    CL8
         DC    CL1' '
IOECSW2  DS    CL8
         DC    CL14', FAILING CCW='
IOECCW1  DS    CL8
         DC    CL1' '
IOECCW2  DS    CL8
         DC    CL3' '
*
IOERR2   DS    0CL80                  I/O ERROR LINE 2
         DC    CL21'               SENSE='
IOESNS   DS    CL4
         DC    CL19', COMMAND CHAIN IS '
IOECHNM  DS    CL8
         DC    CL17', SEARCH ADDRESS='
IOESRCH  DS    CL10
         DC    CL1' '
*
IOERR3   DS    0CL80                 I/O ERROR LINE 3
         DC    CL26'               BYTES READ='
IOEBYTS  DS    CL5
         DC    CL22', DATA AT CCW ADDRESS='
IOECD1   DS    CL8
         DC    CL1' '
IOECD2   DS    CL8
         DC    CL1' '
IOECD3   DS    CL8
         DC    CL1' '
DYNERR   DC    CL31'DYNALLOC ERROR, RETURN CODE IS '
DYNRTCD  DS    CL4
         DC    CL22', INFO RETURN CODE IS '
DYNINFO  DS    CL4
         DC    CL19' '
***********************************************************************
*       COMMAND CHAINS FOR EXCP                                       *
***********************************************************************
CMDCHNR0 CCW   X'39',DASRCH,X'40',4     SEARCH HOME ADDRESS EQUAL
         CCW   X'08',*-8,0,0            TIC
         CCW   X'1E',RCOUNT,X'20',32767 READ CKD
*
CMDCHNR  CCW   X'31',DASRCH,X'40',5    SEARCH FOR PRECEDING RECORD
         CCW   8,*-8,0,0               TIC
         CCW   X'9E',RCOUNT,X'20',32767 READ CKD MULTI TRK
*
CMDCHNK  CCW   X'39',DASRCH,X'40',4     SEARCH HOME ADDRESS EQUAL
         CCW   X'08',CMDCHNK,0,0        TIC
KRDCT    CCW   X'92',RCOUNT,X'40',8     READ COUNT RECORD
         CCW   X'29',DSNAME,X'40',44    SEARCH KEY EQUAL
         CCW   8,KRDCT,0,0              TIC
         CCW   X'06',RKEYDATA,X'20',32767  READ DATA
*
CMDCHNW  CCW   X'31',DASRCH,X'40',5    SEARCH FOR CURRENT RECORD
         CCW   8,*-8,0,0               TIC
WRITCCW  CCW   X'05',RKEYDATA,0,32767  WRITE DATA (OR KEY+DATA)
***********************************************************************
*        PRINT AND CONTROL FILE DCB'S                                 *
***********************************************************************
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=EOJ,               X
               RECFM=FB,LRECL=80
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FB,LRECL=80
***********************************************************************
*        EXCP FILE, VTOC RECORDS, INPUT DATA AREA                     *
***********************************************************************
         PRINT GEN
DAIOB    EXCPIOB CCW=CMDCHNR,DDNAME=INPUT1
         DSCBDEF FMT2=NO,FMT5=NO,FMT6=NO,DSECT=NO
         DS    0D
RCOUNT   DS    XL8                     THIS RECORD'S COUNT
RKEYDATA DS    CL32768                 THIS RECORD'S KEY AND DATA
***********************************************************************
*        VTOC INDEX AREA DSECTS                                       *
***********************************************************************
         ICVAFMAP DSECT=YES
         ICVVIER  DSECT=YES
         PRINT NOGEN
***********************************************************************
*        COMMUNICATION VECTOR TABLE (CVT) DSECT                       *
***********************************************************************
         CVT   DSECT=YES               GENERATE CVT DSECT
***********************************************************************
*        UNIT CONTROL BLOCK (UCB) DSECT                               *
***********************************************************************
         IEFUCBOB ,                    GENERATE UCB DSECT
IXVTOC   CSECT
         END
