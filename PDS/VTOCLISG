         TITLE '    ***** VTOCLIST - STRIP DISK PACK VTOCS *****'
VTOCLIST CSECT
         YREGS
         MACRO
         JFCBDEF &DSECT=YES
*
*
*
         AIF   ('&DSECT' EQ 'YES').DSECT
JFCB     DS    0CL176   *** JFCB DESCRIPTION ***
         AGO   .START
.DSECT   ANOP
JFCB     DSECT ,        *** JFCB DESCRIPTION ***
.START   ANOP
JFCBDSNM DS    CL44          DATA SET NAME (ALL HEX 04'S FOR FMT 4 DSCB
JFCBELNM DS    CL8           ELEMENT NAME, GENERATION NBR, OR ISAM
*                              TYPE OF AREA
JFCBTSDM DS    XL1           JOB MGMT/DATA MGMT INTERFACE
*                              BIT0-CATALOGUED
*                              BIT1-VOL SER LIST WAS CHANGED
*                              BIT2-SYSIN OR SYSOUT DATA SET
*                              BIT3-JOB STEP TO BE RESTARTED
*                              BIT4-NO JFCB WRITE-BACK DURING OPEN
*                              BIT5-NO DSCB OR LABEL MERGE TO JFCB
*                            BIT6-NO DCB MERGE TO JFCB
*                              BIT7-THE PATTERNING DSCB IS COMPLETE
JFCBDSCB DS    XL3           TTR OF FORMAT 1 DSCB ON FIRST VOLUME
JFCFBID  DS    CL4           FORMS CONTROL BUFFER IMAGE FOR 3211
         DS    CL6           RESERVED
JFCBLTYP DS    XL1           LABEL TYPE
JFCBUFOF DS    XL1           TAPE DATA SET BUFFER OFFSET
JFCBFLSQ DS    XL2           TAPE FILE SEQ NBR
JFCBVLSQ DS    XL2           VOLUME SEQ NBR
JFCBMASK DS    XL8           DATA MANAGEMENT MASK
JFCBCRDT DS    XL3           CREATION DATE, BINARY, YDD
JFCBXPDT DS    XL3           EXPIRATION DATE, BINARY, YDD
JFCBIND1 DS    XL1           INDICATOR BYTE, BIT6-GEN MEM, BUT7-PDS MEM
JFCBIND2 DS    XL1           INDICATOR BYTE, BITS01=01-OLD,
*                              BITS01=10-MOD DATA SET,
*                              BITS01=11-NEW DATA SET
*                              BITS23-PASSWORD, BIT4-SHARED, BIT5-DELET
*                              THIS JFCB BEFORE RESTART, BIT6-STORAGE V
*                              VOLUME REQ, BIT7-TEMPORARY DATA SET
JFCBUFNO DS    XL1           NUMBER BUFFERS
JFCBFTEK DS    XL1           BUFFERING TECHNIQUE
JFCBUFL  DS    XL2           BUFFER LENGTH
JFCEROPT DS    XL1           ERROR OPTION, BIT0-ACCEPT, BIT1-SKIP,
*                              BIT2-ABEND
JFCKEYLE DS    XL1           KEY LENGTH FOR DASD, UNIQUE BY DEVICE
JFCDEN   DS    XL1           TAPE DENSITY
JFCLIMCT DS    XL3           BDAM SEARCH LIMIT
JFCDSORG DS    XL1           DATA SET ORGANIZATION, BIT0-I S, BIT1-PS,
*                              BIT2-DA, BIT6-PO, BIT7-UNMOVABLE
         DS    XL1           BIT1-GAM
JFCRECFM DS    XL1           RECORD FORMAT
*                              BITS01=10-FIXED, BITS01=01-VARIABLE,
*                              BITS01=11-UNDEFINED, BIT2-TRK OFLO,
*                              BIT3-BLOCKED, BIT4-F(B)S OR VS,
*                              BITS56=10-ASA CTL CHR, BITS56=01-MACH CT
*                              CHAR, BITS56=00-NO CTL CHAR
JFCOPTCD DS    XL1           OPTION CODES
JFCBLKSI DS    XL2           MAXIMUM BLOCK SIZE
JFCLRECL DS    XL2           LOGICAL RECORD LENGTH
JFCNCP   DS    XL1           NUMBER OF CHANNEL PROGRAMS
JFCNTM   DS    XL1           NUMBER MASTER INDEX TRACKS
JFCRKP   DS    XL2           RELATIVE KEY POSITION
JFCCYLOF DS    XL1           NBR TRKS OVERFLOW PER CYL FOR I S
         DS    XL1           RESERVED
JFCINTVL DS    XL1           QTAM NBR SECONDS INTENTIONAL DELAY
JFCOUTL1 DS    XL3           SMF SYSOUT LIMIT
         DS    XL1           RESERVED
JFCBNVOL DS    XL1           NBR VOLUMES SER NBRS TO FOLLOW
JFCBVOLS DS    5CL6          UP TO 5 VOL SER NBRS
JFCBEXTL DS    XL1           RESERVED
JFCBEXAD DS    XL3           TTR OF FIRST JFCB EXTENSION
JFCBPQTY DS    XL3           PRIMARY DASD SPACE REQUIRED
JFCBCTRI DS    XL1           SPACE PARAMETERS, BITS01=00-ABSTR,
*                              BITS01=01-BLOCKS, BITS01=10-TRACKS,
*                              BITS01=11-CYL, BIT4-CONTIG, BIT5-MXIG,
*                              BIT6-ALX, BIT7-ROUND
JFCBSQTY DS    XL3           SECONDARY QUANTITY
         DS    XL1           RESERVED
JFCBDQTY DS    XL3           DIRECTORY QUANTITY
JFCBSPNM DS    XL3           DATA MGMT ADDRESS
JFCBABST DS    XL2           TTR OF FIRST TRK ALLOCATED
JFCBSBNM DS    XL3           DAAT MANAGEMENT ADDRESS
JFCBDRLH DS    XL3           AVERAGE BLOCK LENGTH
JFCBVLCT DS    XL1           VOLUME COUNT
JFCBSPTN DS    XL1           NBR TRKS USED FOR SPLIT CYL
*
*
*
         AIF   ('&DSECT' NE 'YES').XIT
&SYSECT  CSECT
.XIT     MEXIT
         MEND
         MACRO
&NAME    EXCPIOB &TYPE=DA,&ECB=0,&CCW=0,&DCB=0,&DDNAME=,&DSECT=NO
         LCLC  &N
&N       SETC  '&NAME'(1,2)
         AIF   ('&DSECT' EQ 'YES').DSECT
.NOSET   AIF   ('&TYPE' EQ 'DA').CKCCW
         AIF   ('&TYPE' EQ 'TA').CKCCW
         MNOTE 5,'&TYPE IS INVALID FOR TYPE, MUST BE DA OR TA'
         MEXIT
.CKCCW   AIF   ('&CCW' NE '0').CKDCB
         MNOTE 5,'CCW ADDRESS NOT GIVEN'
         MEXIT
.CKDCB   AIF   ('&DCB' EQ '0').DDNM
         AIF   (T'&DDNAME EQ 'O').GENECB
         MNOTE 5,'DCB AND DDNAME MUTUALLY EXCLUSIVE'
         MEXIT
.DDNM    AIF   (T'&DDNAME NE 'O').GENECB
         MNOTE 5,'EITHER DCB OR DDNAME MUST BE SPECIFIED'
         MEXIT
.DSECT   ANOP
EXCPIOB  DSECT ,        *** INPUT OUTPUT BLOCK DESCRIPTION ***
         AGO   .BDR
.GENECB  ANOP
         EJECT
         AIF   ('&ECB' NE '0').GENIOB
&N.ECB   DC    F'0'                    EVENT CONTROL BLOCK
.GENIOB  ANOP
*
*
         AIF   ('&TYPE' EQ 'DA').DHDR
*                       *** INPUT/OUTPUT BLOCK FOR TAPE USING EXCP
         AGO   .BDR
.DHDR    ANOP
*                       *** INPUT/OUTPUT BLOCK FOR DISK USING EXCP
.BDR     ANOP
*
*
         DS    0F                      ALIGN TO FULLWORD BOUNDARY
         AIF   ('&TYPE' EQ 'DA').DASTRT
&NAME    DS    0XL32                   IOB START, 32 BYTES
         AGO   .FLGS
.DASTRT  ANOP
&NAME    DS    0XL40                   IOB START, 40 BYTES
.FLGS    ANOP
&N.FLAGS DC    X'42'                   COMMAND CHAIN + UNRELATED
         DC    X'00'                   SYSTEM FLAGS BYTE
&N.UCSNS DC    XL2'00'                 FIRST 2 SENSE BYTES AFTER UNT CH
         AIF   (T'&NAME EQ 'O').GENDSK
         AIF   ('&TYPE' NE 'DA').CKTP
.GENDSK  ANOP
*                                   *** DISK ***
*                                      BYTE 1 -
*                                        BIT 0 = COMMAND REJECT
*                                        BIT 3 = EQUIPMENT CHECK
*                                        BIT 4 = DATA CHECK
*                                        BIT 5 = OVERRUN
*                                        BIT 6 = TRK CONDITION CHK
*                                        BIT 7 = SEEK CHECK
*                                      BYTE 2 -
*                                        BIT 0 = DATA CHK IN COUNT
*                                        BIT 1 = WRITE TRAK OVERRUN
*                                        BIT 2 = END OF CYLINDER ON M-T
*                                        BIT 3 = INVALID COMMAND SEQ
*                                        BIT 4 = NO RECORD FOUND
*                                        BIT 5 = FILE PROTECTED
*                                        BIT 6 = MISSING ADDRESS MARKER
*                                        BIT 7 = OVERFLOW INCOMPLETE
.CKTP    ANOP
         AIF   (T'&NAME EQ 'O').GENTAP
         AIF   ('&TYPE' EQ 'TA').GENTAP
         AGO   .CC
.GENTAP  ANOP
*                                   *** TAPE ***
*                                      BYTE 1 -
*                                        BIT 0 = COMMAND REJECT
*                                        BIT 3 = EQUIPMENT CHECK
*                                        BIT 4 = DATA CHECK
*                                        BIT 5 = OVERRUN
*                                        BIT 6 = WORD COUNT ZERO
*                                        BIT 7 = CONVERTER CHECK
*                                      BYTE 2 -
*                                        BIT 0 = NOISE RECORD
*                                        BITS 1-2 , 01 = NO T.U.
*                                                   01 = NOT READY
*                                                   10 = RDY, NOT RWND
*                                                   11 = RDY, REWINDING
*                                        BIT 4 = AT LOAD POINT
*                                        BIT 5 = IN WRITE STATUS
*                                        BIT 6 = FILE PROTECTED
*                                        BIT 7 = T.U. NOT COMATABLE
.CC      ANOP
&N.ECBCC DS    0XL1                    ECB COMPLETION CODE
*                                        7F = GOOD I/O COMPLETION
*                                        41 = PERM I/O ERROR, CSW 0/GOO
         AIF   ('&TYPE' EQ 'TA').ECB44
*                                        42 = EXTENT VIOL NO CSW
.ECB44   ANOP
*                                        44 = INTERCEPTED NO CSW
*                                        OTHER - HARD ERRORS
         AIF   ('&ECB' NE '0').USRECB
         AIF   (T'&NAME EQ 'O').USRECB
         AIF   ('&DSECT' EQ 'YES').USRECB
&N.ECBAD DC    A(&N.ECB)               ECB ADDRESS
         AGO   .CSW
.USRECB  ANOP
&N.ECBAD DC    A(&ECB)                 ECB ADDRESS
.CSW     ANOP
&N.CSW   DS    0XL8                    CHANNEL STATUS WORD
&N.NXCCW DC    A(0)                    ADDR OF LAST EXEC COMM + 8
&N.UNST  DC    XL1'00'              *** UNIT STATUS BYTE
*                                      BIT 0 = ATTENTION
*                                      BIT 1 = STATUS MODIFIER
*                                      BIT 2 = CONTROL UNIT END
*                                      BIT 3 = BUSY
*                                      BIT 4 = CHANNEL END
*                                      BIT 5 = DEVICE END
*                                      BIT 6 = UNIT CHECK (ERROR)
*                                      BIT 7 = UNIT EXCEPTION (EOF)
&N.CHST  DC    XL1'00'              *** CHANNEL STATUS BYTE
*                                      BIT 0 = PCI
*                                      BIT 1 = WRONG LENGTH RECORD
*                                      BIT 2 = CHANNEL PROGRAM CHECK
*                                      BIT 3 = PROTECTION CHECK
*                                      BIT 4 = CHANNEL DATA CHECK
*                                      BIT 5 = CHANNEL CONTROL CHECK
*                                      BIT 6 = INTERFACE CONTROL CHK
*                                      BIT 7 = CHAINING CHECK
&N.RESID DC    H'0'                    RESIDUAL COUNT
&N.SIOCC DS    0XL1                    COND CODE AFTER SIO COMMAND
&N.CCWAD DC    A(&CCW)                 ADDRESS OF CHANNEL PROGRAM
         AIF   (T'&NAME EQ 'O').USRDCB
         AIF   ('&DSECT' EQ 'YES').USRDCB
         AIF   ('&DCB' EQ '0').GNDCB
.USRDCB  ANOP
&N.DCBAD DC    A(&DCB)                 ADDRESS OF DCB
         AGO   .RSTRT
.GNDCB   ANOP
&N.DCBAD DC    A(&N.DCB)               ADDRESS OF DCB
.RSTRT   DC    A(0)                    SYSTEM RESTART FIELD
         AIF   ('&TYPE' EQ 'DA').FW0
&N.BLKINC DC H'1'                      DCB BLOCK COUNT INCREMENT
         AGO   .RETRY
.FW0     DC    H'0'                    RESERVED
.RETRY   ANOP
&N.RET   DC    H'0'                    NBR RETRIES DURING ERRECOV
         AIF   ('&TYPE' EQ 'TA').GENDCB
&N.EXTM  DC    XL1'00'                 EXTENT NBR BEGINNING WITH 0
&N.SEEK  DS    0XL6                    SEEK ADDRESS
&N.BIN   DC    XL2'00'                 BIN NBR
&N.SRCH  DS    0XL5                    SEARCH ADDRESS
&N.CYL   DC    XL2'00'                 CYLINDER NBR
         DC    X'00'                   FIRST BYTE OF HEAD NBR, ZERO
&N.HEAD  DC    XL1'00'                 HEAD NBR
&N.REC   DC    X'01'                   RECORD NBR
*
*
*
.GENDCB  AIF   (T'&DDNAME EQ 'O').END
&N.DCB   DCB   DDNAME=DDNAME,MACRF=(E)
         ORG   &N.DCB+40
         DC    CL8'&DDNAME'            SET DDNAME IN DCB
         ORG
*
*
*
.END     ANOP
         MEND
         EJECT
         PRINT NOGEN
         USING VTOCLIST,R3
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* THIS PROGRAM SEARCHES IT'S TIOT FOR DD CARDS WHOSE NAMES BEGIN WITH
* VTOC. WHEN FOUND, THE DDNAME IS MOVED TO THE VTOC DCB DDNAME FIELD,
* AND THE JFCB IS READ. THE DSNAME FIELD OF THE JFCB IS SET TO ALL
* HEX 04'S TO PERMIT OPENING THE VTOC, AS THE FORMAT 4 DSCB DEFINES THE
* VTOC EXTENTS. THE VTOC IS THEN READ AS FOLLOWS: THE FORMAT 4 DSCB
* IS READ TO OBTAIN THE DEVICE CHARACTERISTICS, THEN THE DATA SET
* DSCB'S ARE READ AND USED TO LOCATE THEIR ASSOCIATED FORMAT 2 AND 3
* DSCB'S.  AN OUTPUT DATASET IS CREATED CONTAINING ONE RECORD PER
* DATASET ON THE VOLUME.  EACH RECORD CONTAINS THE FOLLOWING
* INFORMATION:  DATASET NAME, VOLUME SERIAL NUMBER, DATE CREATED, DATE
* LAST REFERENCED, TRACKS ALLOCATED, TRACKS USED, RECFM, DSORG, LRECL,
* BLOCKSIZE, AND NUMBER OF EXTENTS.
* MAY, 1983
* ADDED EXPIRATION DATE AND 3 BYTE FILLER TO FILL RECORD OUT TO
* 80 BYTES.  TOM GOLLADAY, 06/14/91.
* ADDED CODE TO HANDLE MORE THAN 16 EXTENTS (READ MULTIPLE FORMAT 2
* DSCB'S.    TOM GOLLADAY, 07/01/91.
* FIXED PREVIOUS DAY'S CODE TO HANDLE DATA SETS WITH 0 EXTENTS; WAS
* USING OLD VALUES IN THE EXTENT TABLE.    TOM GOLLADAY, 07/02/91.
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         STM   R14,R12,12(R13)         SAVE CALLER'S REGISTERS
         LR    R3,R15                  INITIALIZE BASE REGISTER
         LA    R15,SAVE                GET SAVE AREA ADDRESS
         ST    R15,8(R13)              STORE FORWARD POINTER
         ST    R13,SAVE+4              STORE BACK POINTER
         LR    R13,R15                 INITIALIZE SAVE POINTER
         L     R1,0(R1)                GET PARM FIELD ADDRESS
         CH    R1,ZEROS                ANY PARM FIELD CODED
         BE    OPENS                   NO
         MVC   PARM,2(R1)              SAVE PARM FIELD
         SPACE 1
OPENS    OPEN  (OUTPUT1,OUTPUT,PRINT1,OUTPUT) OPEN OUTPUT FILES
         L     R1,16                   GET CVT ADDRESS
         L     R1,0(R1)                GET CVTTCBP
         L     R1,0(R1)                GET TCB ADDRESS
         L     R1,12(R1)               GET TIOT ADDRESS
         LA    R1,24(R1)               GET ADDRESS OF 1ST DD ENTRY
         ST    R1,TIOTDD               SAVE TIOT DD ENTRY ADDRESS
         EJECT
NEXVOL   EQU   *                       *** INITIALIZE FOR NEXT VOLUME *
         L     R1,TIOTDD               GET TIOT DD ENTRY ADDRESS
         SR    R2,R2                   CLEAR WORK REG
         SPACE 1
CKLSTDD  CLI   0(R1),0                 LAST TIOT DD ENTRY
         BE    EOJ                     YES
         CLC   4(4,R1),=C'VTOC'        DDNAME BEGINS WITH VTOC
         BE    USEDD                   YES, USE IT
         IC    R2,0(R1)                GET DD ENTRY LENGTH
         AR    R1,R2                   STEP TO NEXT DD ENTRY
         B     CKLSTDD                 GO CK NEXT DD
         SPACE 1
USEDD    MVC   VTOC+40(8),4(R1)        MOVE DNAME IN TIOT TO DCB
         IC    R2,0(R1)                GET DD ENTRY LENGTH
         AR    R1,R2                   STEP TO NEXT DD ENTRY
         ST    R1,TIOTDD               SAVE IT'S ADDRESS
         XC    JFCBDSNM,JFCBDSNM       CLEAR JFCB DSNAME FOR CHECK
         RDJFCB VTOC                   READ THE JFCB
         CLC   JFCBDSNM(8),ZEROS       WAS JFCB READ
         BNE   CKSERNO                 YES, DSNAME NOT ZEROS
         MVC   PRT(16),=C'NO JFCB READ FOR'
         SPACE 1
MOVDD    MVC   PRT+21(8),VTOC+40       DDNAME TO MESSAGE
         BAL   R9,PRINT                GO PRINT THE MESSAGE
         B     NEXVOL                  GO START NEXT VOLUME
         SPACE 1
CKSERNO  CLC   JFCBVOLS(8),=CL8' '     SERIAL NBR IN DD CARD OMITTED
         BNE   DS4NAME                 NO, O.K.
         MVC   PRT(20),=C'NO VOL SER IN DD FOR'
         B     MOVDD                   GO MOVE DDNAME
         SPACE 1
DS4NAME  MVI   JFCBDSNM,4              DATA SET NAME FOR FMT 4 DSCB
         MVC   JFCBDSNM+1(43),JFCBDSNM DATA SET NAME FOR FORMAT 4 DSC
         MVI   JFCBTSDM,X'08'          SUPPRESS JFCB REWRITE
         OPEN  VTOC,TYPE=J             OPEN USING MODIFIED JFCB
         L     R1,VTOC+44              GET DEB ADDRESS
         MVC   NEXCCHH,38(R1)          MOVE BEGIN CCHH TO NEXT RECADR
         MVI   NEXREC,1                BEGIN RECORD IS 1
         MVC   RNAME,JFCBVOLS          RNAME FOR ENQ IS VOLSER
         ENQ   (QNAME,RNAME,S,6,SYSTEM) ENQ ON VTOC
         SPACE 2
SEQREAD  OI    READCMD+4,X'40'         SET CHAIN FLAG TO READ COUNT
         MVC   VTSRCH,NEXRECA          MOVE IN NEXT REC ADDR
         BAL   R9,EXCPRTN              GO READ THE RECORD
         CLI   DS1FMTID,C'4'           IS IT FORMAT 4
         BE    FORMAT4                 YES
         CLI   DS1FMTID,C'1'           IS IT FORMAT 1
         BNE   SEQREAD                 NO, GO READ NEXT
         MVC   DSNAME,DS1DSNAM         MOVE DSNAME TO SORT FIELD
         MVC   OUTFILL,=C'   '         MOVE SPACES TO FILL FIELD
         EJECT
GETCDATE SR    R5,R5                   CREATE DATE
         IC    R5,DS1CREDT             CONVERT DATE TO DECIMAL
         CVD   R5,DBLWORD              AND MOVE TO OUTPUT RECORD
         MVO   CREDATE(2),DBLWORD+6(2) IN THE FORMAT 'YYDDDF'
         SR    R5,R5
         ICM   R5,3,DS1CREDT+1
         CVD   R5,DBLWORD
         MVC   CREDATE+1(2),DBLWORD+6
         OI    CREDATE+2,X'0F'
         SPACE 1
GETRDATE SR    R5,R5                    LAST REFERENCED DATE
         IC    R5,DS1REFD               CONVERT DATE TO DECIMAL
         CVD   R5,DBLWORD               AND MOVE TO OUTPUT RECORD
         MVO   LREFDATE(2),DBLWORD+6(2) IN THE FORMAT 'YYDDDF'
         SR    R5,R5
         ICM   R5,3,DS1REFD+1
         CVD   R5,DBLWORD
         MVC   LREFDATE+1(2),DBLWORD+6
         OI    LREFDATE+2,X'0F'
         SPACE 1
GETEDATE SR    R5,R5                    EXPIRATION DATE
         IC    R5,DS1EXPDT              CONVERT DATE TO DECIMAL
         CVD   R5,DBLWORD               AND MOVE TO OUTPUT RECORD
         MVO   EXPDATE(2),DBLWORD+6(2)  IN THE FORMAT 'YYDDDF'
         SR    R5,R5
         ICM   R5,3,DS1EXPDT+1
         CVD   R5,DBLWORD
         MVC   EXPDATE+1(2),DBLWORD+6
         OI    EXPDATE+2,X'0F'
         SPACE 1
GETDSORG TM    DS1DSORG,X'40'     IS IT SEQUENTIAL?
         BNO   CHKPO              NO, CHECK FOR PARTITIONED
         MVC   DSORG,=C'PS'       YES, MOVE 'PS' TO PRINT LINE
         B     GETRECFM           GO GET RECFM
         SPACE 1
CHKPO    TM    DS1DSORG,X'02'     IS IT PARTITIONED?
         BNO   CHKVS              NO, CHECK FOR VSAM
         MVC   DSORG,=C'PO'       YES, MOVE 'PO' TO PRINT LINE
         B     GETRECFM           GO GET RECFM
         SPACE 1
CHKVS    TM    DS1DSORG+1,X'08'   IS IT VSAM?
         BNO   CHKDA              NO, CHECK FOR DIRECT ACCESS
         MVC   DSORG,=C'VS'       YES, MOVE 'VS' TO PRINT LINE
         B     GETRECFM           GO GET RECFM
         SPACE 1
CHKDA    TM    DS1DSORG,X'20'     IS IT DIRECT ACCESS?
         BNO   CHKIS              NO, CHECK FOR ISAM
         MVC   DSORG,=C'DA'       YES, MOVE 'DA' TO PRINT LINE
         B     GETRECFM           GO GET RECFM
         SPACE 1
CHKIS    TM    DS1DSORG,X'80'     IS IT ISAM?
         BNO   QMARKS             NO, GO MOVE '??'
         MVC   DSORG,=C'IS'       YES, MOVE 'IS' TO PRINT LINE
         B     GETRECFM           GO GET RECFM
         SPACE 1
QMARKS   MVC   DSORG,=C'??'       MOVE '??' TO PRINT LINE
         SPACE 1
GETRECFM MVC   RECFM,=CL3' '      CLEAR RECFM FIELD
         TM    DS1RECFM,X'C0'     IS IT UNDEFINED?
         BNO   CHKFIX             NO, CHECK FOR FIXED
         MVI   RECFM,C'U'         YES, MOVE 'U' TO PRINT LINE
         B     CHKBLK             GO CHECK FOR BLOCKED
         SPACE 1
CHKFIX   TM    DS1RECFM,X'80'     IS IT FIXED?
         BNO   CHKVAR             NO, CHECK FOR VARIABLE
         MVI   RECFM,C'F'         YES, MOVE 'F' TO PRINT LINE
         B     CHKBLK             GO CHECK FOR BLOCKED
         SPACE 1
CHKVAR   TM    DS1RECFM,X'40'     IS IT VARIABLE?
         BNO   QMARK              NO, GO MOVE '?'
         MVI   RECFM,C'V'         YES, MOVE 'V' TO PRINT LINE
         B     CHKBLK             GO CHECK FOR BLOCKED
         SPACE 1
QMARK    MVI   RECFM,C'?'         MOVE '?' TO PRINT LINE
         SPACE 1
CHKBLK   LA    R6,RECFM+1         GET @ OF NEXT RECFM PRINT POSITION
         TM    DS1RECFM,X'10'     IS IT BLOCKED?
         BNO   CHKSPAN            NO, CHECK FOR SPANNED
         MVI   0(R6),C'B'         YES, MOVE 'B' TO PRINT LINE
         LA    R6,1(R6)           BUMP TO NEXT RECFM PRINT POSITION
         SPACE 1
CHKSPAN  TM    DS1RECFM,X'08'     IS IT SPANNED?
         BNO   CHKASA             NO, CHECK FOR ASA
         MVI   0(R6),C'S'         YES, MOVE 'S' TO PRINT LINE
         B     GETLRECL           GO GET LRECL
         SPACE 1
CHKASA   TM    DS1RECFM,X'04'     IS IT ASA?
         BNO   GETLRECL           NO, GO GET LRECL
         MVI   0(R6),C'A'         YES, MOVE 'A' TO PRINT LINE
         SPACE 1
GETLRECL MVC   LRECL,DS1LRECL          MOVE LRECL TO OUTPUT
         MVC   BLKSIZE,DS1BLKL         MOVE BLKSIZE TO OUTPUT
         MVC   NUMEXTS,DS1NOEPV        NUMBER OF EXTENTS TO OUTPUT
         MVC   SAVETTR,DS1LSTAR        SAVE LAST TRACK USED TTR
         SPACE 1
F1EXTS   DS    0H
*        MVI   EXTABLE,X'00'           CLEAR EXTENT TABLE
*        MVC   EXTABLE+1(159),EXTABLE
         XC    EXTABLE(256),EXTABLE    CLEAR BEGINNING OF EXTENT TABLE
*                                      TO HANDLE 0 EXTENT DATA SETS
         LA    R7,EXTABLE              GET @ OF EXTENT TABLE
         LA    R8,DS1EXT1              GET @ OF 1ST EXTENT IN FORMAT 1
         LA    R5,3                    SET BCT REG TO 3
         BAL   R9,MOVEXTS              GO MOVE F1 EXTENTS TO TABLE
         SPACE 1
CHKPTRDS CLC   DS1PTRDS,ZEROS          POINTER TO NEXT DSCB ZERO
         BE    GETSPACE                YES, NO FORMAT 2 OR 3
         MVC   VTSRCH,DS1PTRDS         MOVE POINTER TO IOB SEARCH FIELD
         MVI   READCMD+4,0             TURN OFF CHAIN FLAG
         BAL   R9,EXCPRTN              GO READ THE RECORD
         CLI   DS1FMTID,C'2'           IS IT A FORMAT 2
         BE    CHKPTRDS                YES
         SPACE 1
CKFMT3   CLI   DS1FMTID,C'3'           IS IT FORMAT 3
         BNE   ERROR                   NO, GO TO ERROR ROUTINE
         MVC   DS3FMTID(90),DS3ADEXT   MAKE EXTENTS CONTIGUOUS
         LA    R8,DS3EXTNT             LOAD @ OF 1ST EXTENT FIELD
         LA    R5,13                   SET UP BCT REGISTER FOR MAX
         BAL   R9,MOVEXTS              MOVE EXTENTS TO TABLE
         CLC   DS3PTRDS,ZEROS          IS THERE ANOTHER FORMAT 3 ?
         BNE   CHKPTRDS                YES, GO READ IT
         SPACE 1
GETSPACE BAL   R9,CALCSPCE             CALCULATE TRKS ALLOC AND USED
         PUT   OUTPUT1,OUTREC          WRITE OUTPUT RECORD
         B     SEQREAD                 GO READ NEXT DSCB
         SPACE 3
FORMAT4  EQU   *
         MVC   TRKCYL,DS4DEVSZ+2       SAVE TRACKS PER CYLINDER
         MVC   VOLSER,JFCBVOLS         MOVE VOLSER TO OUTPUT RECORD
         B     SEQREAD                 GO READ NEXT DSCB
         SPACE 3
ERROR    MVC   PRT(27),=C'INCORRECT CHAIN POINTER FOR'
         MVC   PRT+28(44),DSNAME       MOVE DSNAME TO MESSAGE
         BAL   R9,PRINT                PRINT MESSAGE
         B     SEQREAD                 GO READ NEXT DSCB
         SPACE 3
MOVEXTS  ST    R9,SAVER9               SAVE RETURN ADDRESS
EXTUSED  CLI   0(R8),X'00'             IF EXTENT NOT USED
         BE    RETURN                  BRANCH TO RETURN
         MVC   0(10,R7),0(R8)          ELSE, MOVE EXTENT INFO TO TABLE
         LA    R7,10(R7)               BUMP TO NEXT TABLE ENTRY
         LA    R8,10(R8)               BUMP TO NEXT EXTENT
         BCT   R5,EXTUSED              REPEAT LOOP
RETURN   L     R9,SAVER9               LOAD RETURN ADDRESS
         BR    R9                      RETURN
         EJECT
CALCSPCE EQU   *
         ST    R9,SAVER9          SAVE RETURN ADDRESS
         LA    R10,EXTABLE        GET ADDRESS OF EXTENT TABLE
         USING EXTENT,R10
*        LA    R11,16             SET BCT REGISTER TO 16
         SR    R11,R11            CLEAR FOR INSERT
         ICM   R11,B'0001',NUMEXTS  LOAD NUMBER OF EXTENTS FOR LOOP
         SR    R12,R12            CLEAR REG 12
SPCELOOP CLI   EXTYP,X'00'        IF EXTENT NOT USED
         BE    ENDEXT             BRANCH TO ENDEXT
         SR    R7,R7              ELSE, CLEAR REG 7
         ICM   R7,3,EXTLOLIM      GET LOW CYLINDER
         SR    R8,R8              CLEAR REG 8
         ICM   R8,3,EXTUPLIM      GET HIGH CYLINDER
         SR    R8,R7              SUBTRACT FOR NUM CYL IN EXTENT
         MH    R8,TRKCYL          MULTIPLY BY TRKS/CYL
         AR    R12,R8             ADD TO TOTAL TRACKS
         SR    R7,R7              CLEAR REG 7
         ICM   R7,3,EXTLOLIM+2    GET LOW TRACK
         SR    R8,R8              CLEAR REG 8
         ICM   R8,3,EXTUPLIM+2    GET HIGH TRACK
         LA    R8,1(R8)           ADD '1' TO HIGH TRACK
         SR    R8,R7              SUBTRACT FOR NUMBER OF TRACKS
         AR    R12,R8             ADD TO TOTAL TRACKS
         LA    R10,10(R10)        BUMP TO NEXT TABLE ENTRY
         BCT   R11,SPCELOOP       REPEAT LOOP (UP TO NUMEXTS TIMES)
ENDEXT   EQU   *
         DROP  R10
         SR    R10,R10            CLEAR REG 10
         ICM   R10,3,SAVETTR      GET LAST TRACK USED
         CLI   SAVETTR+2,X'00'    IF LAST RECORD IS ZERO
         BE    NOADD              DON'T ADD '1' TO TRACKS USED
         LA    R10,1(R10)         ADD '1' TO NUMBER OF TRACKS USED
NOADD    EQU   *
         ST    R10,TRKUSED        SAVE TRKS USED TO OUTPUT RECORD
         ST    R12,TRKALLOC       SAVE TRKS ALLOC TO OUTPUT RECORD
         L     R9,SAVER9          LOAD RETURN ADDRESS
         BR    R9                 RETURN
         EJECT
EXCPRTN  EXCP  VTOCIOB                 CALL O/S FOR READ
         WAIT  ECB=VTECB               WAIT FOR READ
         CLI   VTECB,X'7F'             ANY ERROR
         BCR   8,R9                    NO, RETURN
         CLI   VTECB,X'42'             EXTENT VIOLATION
         BNE   IOERR                   NO, GO TO ERROR ROUTINE
         DEQ   (QNAME,RNAME,6,SYSTEM)  RELEASE VTOC
         CLOSE VTOC                    END OF VTOC, CLOSE
         B     NEXVOL                  GO OPEN NEXT VOLUME
         SPACE 3
IOERR    ABEND 104,DUMP
         SPACE 3
PRINT    EQU   *
         PUT   PRINT1,PRTLINE
         MVC   PRT,PRTCC               CLEAR PRINT LINE
         L     R1,ERRCOD               GET ERROR INDICATOR
         LA    R1,4(R1)                INCREMENT ERROR
         ST    R1,ERRCOD               STORE UPDATED ERROR INDIC
         CLC   PARM,=C'DUMP'           USER WANTS DUMP
         BCR   7,R9                    NO, RETURN TO CALLER
         ABEND 999,DUMP
         SPACE 3
EOJ      EQU   *                       *** END OF JOB ***
         CLOSE (OUTPUT1,,PRINT1)       CLOSE OUTPUT FILES
         L     R13,SAVE+4              GET CALLER'S SAVE AREA ADDRESS
         MVC   16(4,R13),ERRCOD        ERROR INDICATOR TO R15 IN SAVE
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGISTERS
         BR    R14                     RETURN TO CALLER
         EJECT
*
*                       *** DATA, WORK, FILE, AND STORAGE AREAS ***
*
         LTORG
         SPACE 1
SAVE     DS    18F                     REGISTER SAVE AREA
SAVER9   DS    F                       BAL REGISTER SAVE AREA
         SPACE 1
CMDCHN   DS    0D                      COMMAND CHAIN TO READ VTOC
         CCW   X'31',VTSRCH,X'40',5    SEARCH ID EQUAL
         CCW   8,*-8,0,0               NOT FOUND, REPEAT SEARCH
READCMD  CCW   X'0E',DSCB,X'40',140    READ KEY AND DATA INTO DSCB
         CCW   X'92',NEXCNT,0,8        READ COUNT OF NEXT RECORD, M-T
NEXCNT   DS    0D                      COUNT RECORD OF NEXT RECORD
NEXRECA  DS    0XL5                    CCHHR ADDRESS OF NEXT RECORD
NEXCCHH  DS    XL4                     CCHH ADDRESS OF NEXT RECORD
NEXREC   DS    XL1                     RECORD NBR ON TRACK
         DS    XL3                     KEY LENG AND DATA LENG
ERRCOD   DC    F'0'                    ERROR INDICATOR
QNAME    DC    CL8'SYSVTOC'            QNAME TO ENQ ON VTOC
RNAME    DS    CL6                     RNAME = VOLUME SERIAL NBR
         SPACE 1
DBLWORD  DS    D                       CVD WORKAREA
TRKCYL   DS    H                       TRACKS PER CYLINDER
         SPACE 1
ZEROS    DC    2F'0'
PARM     DC    C'    '                 PARM FIELD ON JOB CARD
SAVETTR  DS    XL3                     SAVE AREA FOR LAST TRACK USED
         EJECT
         DS    0F
OUTREC   DS    0CL80                   OUTPUT RECORD
DSNAME   DS    CL44                    DATASET NAME
VOLSER   DS    CL6                     VOLUME SERIAL NUMBER
CREDATE  DS    PL3                     DATE CREATED
LREFDATE DS    PL3                     DATE LAST REFERENCED
TRKALLOC DS    F                       TRACKS ALLOCATED
TRKUSED  DS    F                       TRACKS USED
RECFM    DS    CL3                     RECORD FORMAT
DSORG    DS    CL2                     DATASET ORGANIZATION
LRECL    DS    XL2                     LOGICAL RECORD LENGTH
BLKSIZE  DS    XL2                     BLOCKSIZE
NUMEXTS  DS    XL1                     NUMBER OF EXTENTS
EXPDATE  DS    PL3                     EXPIRATION DATE
OUTFILL  DS    CL3                     FILLER
*
JFCBADDR DS    0F                      DCB EXIT LIST
         DC    X'87'                   RDJFCB ENTRY, LAST ENTRY
         DC    AL3(JFCB)               ADDRESS OF JFCB AREA
TIOTDD   DS    F                       ADDRESS OF NEXT DD ENTRY IN TIOT
*
PRTLINE  DS    0CL133                  PRINT LINE OUTPUT
PRTCC    DC    C' '                    CARRIAGE CONTROL CHARACTER
PRT      DC    CL132' '                PRINT LINE
*
         EJECT
         JFCBDEF DSECT=NO
*
VTOC     DCB   DDNAME=VTOC,MACRF=E,EXLST=JFCBADDR
*
VTOCIOB  EXCPIOB CCW=CMDCHN,DCB=VTOC
*
OUTPUT1  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT1,RECFM=FB,LRECL=80
*
PRINT1   DCB   DSORG=PS,MACRF=PM,RECFM=FB,LRECL=133,BLKSIZE=133,       X
               DDNAME=PRINT1
*
         EJECT
         PRINT GEN
DSCB     DS    0CL140
FMT1     IECSDSL1 (1)
         ORG   DSCB
FMT2     IECSDSL1 (2)
         ORG   DSCB
FMT3     IECSDSL1 (3)
         ORG   DSCB+44
FMT4     IECSDSL1 (4)
         EJECT
EXTABLE  DS    128CL10             EXTENT TABLE
         SPACE 3
EXTENT   DSECT
EXTYP    DS    XL1                 EXTENT TYPE, X'00'=UNUSED
EXTSEQ   DS    XL1                 SEQUENCE
EXTLOLIM DS    XL4                 LOWER LIMIT CCHH
EXTUPLIM DS    XL4                 UPPER LIMIT CCHH
*
         END
