         TITLE '*****SCANIMS: SCAN IMS GEN FOR PROGRAM/CLASS INFO ***'
SCANIMS SVLNK R3
         PRINT NOGEN
*
***********************************************************************
* SCAN IMSVS.IMSGEN(IMS1APPL) FOR PROGRAM (PSB), TYPE (PGMTYPE),      *
* TRANSACTION CODE (CODE) AND CLASS (FROM MSGTYPE). WRITE A RECORD FOR*
* EACH COMBINATION FOUND.                                             *
* AUTHOR R THORNTON JUL 2000                                          *
***********************************************************************
*
*
***********************************************************************
* INITIALIZATION: OPEN FILES                                          *
***********************************************************************
*
         OPEN  (OUTPUT1,OUTPUT,INPUT1) OPEN FILES
*
***********************************************************************
* MAINLINE PROCESSING: READ INPUT RECORD, MODIFY AS NEEDED, AND       *
* WRITE RESULT TO OUTPUT FILE                                         *
***********************************************************************
*
MAINLINE GET   INPUT1,INREC            READ NEXT INPUT RECORD
         CLI   INREC,C'*'              COMMENT RECORD?
         BE    MAINLINE                YES, IGNORE IT
         MVC   INREC+71(8),HIVAL       CLEAR COL 73-80 FOR SCANS
         LR    R12,R1                  COPY RECORD ADDRESS
         LA    R11,70(R1)              R11 = LAST DATA BYTE ADDRESS
RETEST   SR    R2,R2                   CLEAR FOR TRT
         TRT   1(71,R1),FINDKEY        CHECK RECORD FOR KEYWORDS
         ST    R1,LASTSCAN             SAVE LAST SCAN ADDRESS
         BZ    MAINLINE                IF NONE, GO READ AGAIN
         CR    R1,R11                  FOUND WITHIN RECORD?
         BH    MAINLINE                NO, GO READ AGAIN
         B     *(R2)                   GO CHECK IF KEYWORD
         B     GOTP                    GO CHECK 'P'
         B     GOTC                    GO CHECK 'C'
         B     GOTM                    GO CHECK 'M'
         B     GOTT                    GO CHECK 'T'
GOTP     CLC   0(4,R1),=CL4'PSB='      THIS A PSB= KEYWORD?
         BE    GOTPSB                  YES
         CLC   0(8,R1),=CL8'PGMTYPE='  THIS A PGMTYPE= KEYWORD?
         BE    GOTTYPE                 YES
         B     RETEST                  GO LOOK AGAIN
GOTC     CLC   0(5,R1),=CL5'CODE='     THIS A CODE= KEYWORD?
         BE    GOTCODE                 YES
         B     RETEST                  GO LOOK AGAIN
GOTM     CLC   0(8,R1),=CL8'MSGTYPE='  THIS A MSGTYPE= KEYWORD?
         BE    GOTMSGTY                YES
         B     RETEST                  GO LOOK AGAIN
GOTT     CLC   0(9,R1),=CL8'TRANSACT ' THIS A TRANSACT MACRO?
         BE    GOTRNSCT                YES
         B     RETEST                  GO LOOK AGAIN
GOTPSB   CLI   LAST,0                  ANYTHING WRITTEN FOR LAST PSB?
         BNE   NEWPSB                  YES
         PUT   OUTPUT1,OUTREC          WRITE RECORD TO OUTPUT
         L     R1,LASTSCAN             GET LAST SCAN ADDRESS
NEWPSB   MVI   LAST,0                  SHOW NO RECORD WRITTEN
         MVI   TCOUNT,0                RESET TRANSACT COUNTER
         MVC   OUTREC,BLANKS           CLEAR RECORD AREA
         LA    R10,OUTPGM              POINT TO PSBNAME IN OUTPUT REC
         LA    R9,4(R1)                POINT TO 1ST BYTE OF VALUE
         LA    R8,8                    MAX LENGTH OF VALUE
         BAL   R14,MVKEYVAL            GO MOVE KEYWORD VALUE
         MVC   OUTCLS,BLANKS           CLEAR LAST CLASS AREA
         L     R1,LASTSCAN             GET LAST SCAN ADDRESS
         B     RETEST                  CONTINUE THIS RECORD SCAN
GOTTYPE  CLC   OUTTYPE,BLANKS          ALREADY HAVE A PGMTYPE?
         BE    GETPTVAL                NO
         PUT   OUTPUT1,OUTREC          YES, WRITE THIS RECORD
         MVC   OUTREC+8(72),BLANKS     CLEAR ALL BUT PROGRAM NAME
         MVI   LAST,1                  SHOW RECORD WRITTEN
         MVC   OUTTYPE,BLANKS          CLEAR PGMTYPE IN OUTPUT RECORD
         L     R1,LASTSCAN             GET LAST SCAN ADDRESS
GETPTVAL LA    R10,OUTTYPE             POINT TO PGMTYPE IN OUTPUT REC
         LA    R9,8(R1)                POINT TO 1ST BYTE OF VALUE
         LA    R8,5                    MAX LENGTH OF VALUE
         BAL   R14,MVKEYVAL            GO MOVE KEYWORD VALUE
         L     R1,LASTSCAN             GET LAST SCAN ADDRESS
         B     RETEST                  CONTINUE THIS RECORD SCAN
GOTCODE  CLC   OUTCODE,BLANKS          ALREADY HAVE A TRANCODE?
         BE    GETCDVAL                NO
         PUT   OUTPUT1,OUTREC          YES, WRITE THIS RECORD
         MVC   OUTREC+8(72),BLANKS     CLEAR ALL BUT PROGRAM NAME
         MVI   LAST,1                  SHOW RECORD WRITTEN
         MVC   OUTCODE,BLANKS          CLEAR PGMTYPE IN OUTPUT RECORD
         L     R1,LASTSCAN             GET LAST SCAN ADDRESS
GETCDVAL LA    R10,OUTCODE             POINT TO TRANCODE IN OUTPUT REC
         LA    R9,5(R1)                POINT TO 1ST BYTE OF VALUE
         LA    R8,8                    MAX LENGTH OF VALUE
         BAL   R14,MVKEYVAL            GO MOVE KEYWORD VALUE
         L     R1,LASTSCAN             GET LAST SCAN ADDRESS
         B     RETEST                  CONTINUE THIS RECORD SCAN
GOTMSGTY CLC   OUTCLS,BLANKS           ALREADY HAVE A CLASS?
         BE    GETCLVAL                NO
         PUT   OUTPUT1,OUTREC          YES, WRITE THIS RECORD
         MVC   OUTREC+8(72),BLANKS     CLEAR ALL BUT PROGRAM NAME
         MVI   LAST,1                  SHOW RECORD WRITTEN
         L     R1,LASTSCAN             GET LAST SCAN ADDRESS
GETCLVAL LA    R10,OUTCLS              POINT TO CLASS IN OUTPUT REC
         LA    R9,8(R1)                POINT TO 1ST BYTE OF VALUE
         TRT   0(60,R1),FINDRPRN       GO FIND RIGHT PARENTHESIS
         ST    R1,LASTSCAN             SAVE LAST SCAN ADDRESS
         BZ    CLSQUES                 NOT FOUND, USE ??
         CR    R1,R11                  FOUND WITHIN RECORD?
         BH    CLSQUES                 NO, USE ??
         SH    R1,=H'3'                BACK UP 3 BYTES BEFORE THE ')'
         CLI   0(R1),C','              TWO DIGIT CLASS?
         BE    TWODIG                  YES
         MVI   OUTCLS,C'0'             YES, MOVE LEADING ZERO
         MVC   OUTCLS+1(1),2(R1)       THEN MOVE THE DIGIT
         B     LVCLS                   GO WRITE RECORD
CLSQUES  LA    R1,=C'???'              POINT TO QUESTION MARKS
TWODIG   MVC   OUTCLS,1(R1)            MOVE TWO-DIGIT CLASS
LVCLS    L     R1,LASTSCAN             GET LAST SCAN ADDRESS
         B     RETEST                  CONTINUE THIS RECORD SCAN
GOTRNSCT IC    R15,TCOUNT              ADD 1
         LA    R15,1(R15)                 TO TRANSACT
         STC   R15,TCOUNT                     MACRO COUNT
         CLI   TCOUNT,1                FIRST TIME FOR THIS PROGRAM?
         BE    LVTRNSCT                YES, JUST LEAVE
         PUT   OUTPUT1,OUTREC          WRITE CURRENT RECORD
         MVC   OUTREC+8(72),BLANKS     CLEAR ALL BUT PROGRAM NAME
         MVI   LAST,1                  SHOW RECORD WRITTEN
LVTRNSCT L     R1,LASTSCAN             GET LAST SCAN ADDRESS
         B     RETEST                  CONTINUE THIS RECORD SCAN
***********************************************************************
MVKEYVAL ST    R14,MK14                SAVE RETURN ADDRESS
         TRT   0(80,R9),FINDRHE        SCAN FOR RIGHT END OF VALUE
         ST    R1,LASTSCAN             SAVE LAST SCAN ADDRESS
         BZ    MKXIT                   NOT FOUND, EXIT
         CR    R1,R11                  FOUND PAST END OF RECORD?
         BH    MKXIT                   YES, EXIT
         SR    R1,R9                   COMPUTE LENGTH
         BZ    MKXIT                   EXIT IF ZERO LENGTH
         CR    R1,R8                   TOO LONG?
         BNH   MKLC                    NO, USE IT
         LR    R1,R8                   TOO LONG, USE MAX
MKLC     BCTR  R1,0                    COMPUTE LENGTH CODE
         EX    R1,MOVALUE              EXECUTE THE MOVE
MKXIT    L     R14,MK14                GET RETURN ADDRESS
         BR    R14                     RETURN TO CALLER
MOVALUE  MVC   0(1,R10),0(R9)          MOVE VALUE TO CALLER AREA
MK14     DC    A(0)                    RETURN ADDRESS
***********************************************************************
*        END OF INPUT FILE AND END OF JOB                             *
***********************************************************************
EOJ      CLOSE (OUTPUT1,,INPUT1)       CLOSE FILES
         L     R13,4(R13)              GET CALLER'S SAVE ADDRESS
         LM    R14,R12,12(R13)         GET CALLER'S REGISTERS
         SR    R15,R15                 ZERO RETURN CODE
         BR    R14                     RETURN TO CALLER
***********************************************************************
*        STORAGE AND FILE AREAS                                       *
***********************************************************************
LASTSCAN DC    A(0)                    LAST TRT SCAN ADDRESS
LAST     DC    X'01'                   LAST RECORD WRITTEN = 01
INREC    DS    CL80                    INPUT RECORD AREA
HIVAL    DC    80X'FF'                 SCAN END BUFFER
TCOUNT   DC    X'00'                   NBR TRANSACT MACROS FOUND
*
OUTREC   DS    0CL80                   OUTPUT RECORD AREA
OUTPGM   DC    CL8' '                    PROGRAM NAME
         DC    CL1' '
OUTCLS   DC    CL2' '                    CLASS
         DC    CL1' '
OUTCODE  DC    CL8' '                    TRANSACTION CODE
         DC    CL1' '
OUTTYPE  DC    CL5' '                    PROGRAM TYPE
         DC    CL54' '
*
BLANKS   DC    CL80' '                 BLANKS
FINDKEY  DC    256X'00'                KEYWORD SCAN TABLE
         ORG   FINDKEY+C'P'              PSB= OR PGMTYPE=
         DC    X'04'
         ORG   FINDKEY+C'C'              CODE=
         DC    X'08'
         ORG   FINDKEY+C'M'              MSGTYPE=
         DC    X'0C'
         ORG   FINDKEY+C'T'              TRANSACT
         DC    X'0C'
         ORG
FINDRHE  DC    256X'00'                FIND BLANK OR COMMA
         ORG   FINDRHE+C' '
         DC    C' '
         ORG FINDRHE+C','
         DC    C','
         ORG
FINDRPRN DC    256X'00'                FIND RIGHT PARENTHESIS
         ORG   FINDRPRN+C')'
         DC    C')'
         ORG
*
OUTPUT1  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT1,                       X
               RECFM=FB,LRECL=80
INPUT1   DCB   DSORG=PS,MACRF=GM,DDNAME=INPUT1,EODAD=EOJ,              X
               RECFM=FB,LRECL=80
SCANIMS  CSECT
         LTORG
         END
