         TITLE '*** ALLDSNS: WRITE CREATION DATES FOR DSNAMES *****'
ALLDSNS  CSECT
ALLDSNS  AMODE 24
ALLDSNS  RMODE 24
*********************************************************************
* WRITTEN TO SPECS PROVIDED BY DOUG HENNINGER. IN SYS1.TECHLOAD     *
*********************************************************************
* READS A CONTROL DATASET TO OBTAIN DATASET NAMES WHOSE CREATION    *
* DATES ARE DESIRED. CONTROL RECORDS EACH CONTAIN ONE DSNAME        *
* BEGINNING IN COLUMN 1 AND CONTAINING A NORMAL, FULLY QUALIFIED    *
* DSNAME EXCEPT THAT THE DSNAME MUST CONTAIN ONE OR MORE WILDCARD   *
* (*) CHARACTERS OCCUPYING ALL OR PART OF A NODE.                   *
*                                                                   *
* USES THE CALLTSSR MACRO TO INVOKE IKJEHCIR TO RETRIEVE SYSTEM     *
* CATALOG INFORMATION FOR ALL DSNAMES THAT MATCH THE GENERIC DSNAME *
* GIVEN IN THE CONTROL RECORD.                                      *
*                                                                   *
* FOR EACH QUALIFYING DSNAME FOUND, ISSUES AN OBTAIN TO READ THE    *
* FORMAT 1 LABEL FROM THE DISK VOLUME. AN OUTPUT RECORD IS WRITTEN  *
* CONTAINING THE FULLY QUALIFIED DSNAME, CREATION DATE, AND OTHER   *
* DATA FROM THE FORMAT 1 LABEL IF IT IS READ SUCCESSFULLY. MIGRATED *
* DATASETS, AND DATASETS THAT DO NOT EXIST ON THE VOLUME INDICATED  *
* BY THE CATALOG AS WELL AS NON-DASD DATASETS WILL CONTAIN ONLY THE *
* FULLY QUALIFIED DSNAME AND A COMMENT.                             *
*                                                                   *
* AUTHOR R THORNTON SEP 1999                                        *
*********************************************************************
*
*********************************************************************
*        SAVE REGISTERS, SET UP BASE REGS, CHAIN SAVE AREAS         *
*********************************************************************
         USING ALLDSNS,R3,R4,R5
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)             SET UP SECOND
         LA    R4,1(R4)                    BASE REGISTER
         LA    R5,4095(R4)             SET UP THIRD
         LA    R5,1(R5)                    BASE REGISTER
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     OPENS                   BRANCH AROUND CONSTANTS
         DC    CL8'ALLDSNS'            PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
*********************************************************************
*        OPEN FILES, GET CIR WORKING STORAGE                        *
*********************************************************************
OPENS    OPEN  (SYSOUT,OUTPUT,SYSPRINT,OUTPUT,SYSIN)   OPEN FILES
         STORAGE OBTAIN,LENGTH=(16777216,48),ADDR=CIRWA,LOC=BELOW
         ST    R0,CIRWKLN             SAVE STORAGE REQUEST LENGTH
         A     R0,CIRWA               COMPUTE END OF
         SH    R0,H48                    CIR WORKING STORAGE
         ST    R0,CIRWKEND            AND SAVE IT
         USING CIRWORK,R1
         MVC   AREALN,CIRWKLN         SET AREA LENGTH IN CIRWORK
         XC    DATALIN,DATALIN        CLEAR RETURN LENGTH
         DROP  R1
*********************************************************************
*        MAINLINE PROCESSING                                        *
*********************************************************************
MAINLINE MVI   ERROR,0                 CLEAR ERROR FLAG
         BAS   R9,GETCNTL              READ/PROCESS NEXT CONTROL REC
         CLI   ERROR,1                 ANY ERROR?
         BE    MAINLINE                YES
         BAS   R9,CNTLRECD             GO PROCESS CONTROL RECORD
         B     MAINLINE                LOOP THROUGH CONTROL FILE
*********************************************************************
*        READ NEXT CONTROL RECORD, VALIDATE IT, AND SET THE FIXED,  *
*        LEADING PORTION UP TO THE FIRST NODE CONTAINING AN * INTO  *
*        THE DSNPROG FIELD FOR USE BY THE IKJEHCIR IN READING THE   *
*        CATALOG INFORMATION.                                       *
*********************************************************************
GETCNTL  ST    R9,GC9                  SAVE RETURN ADDRESS
GCREGET  GET   SYSIN,CONTROL           READ CONTROL RECORD
         TRT   CONTROL(44),SCANSTAR    DSNAME CONTAINS AN ASTERISK?
         BNZ   GCCHKBY1                YES
         MVC   PRTLINE,BADSTAR         NO, PRINT
         BAS   R9,PRINT                   ERROR MESSAGE
         MVC   RETCODE,F8              SET JOB RC=8
         B     GCREGET                 AND GO READ AGAIN
GCCHKBY1 CLI   CONTROL,C'*'            FIRST BYTE IS ASTERISK?
         BE    GCREGET                 YES, JUST A COMMENT
         TRT   CONTROL(1),SCANNATL     FIRST BYTE NATIONAL?
         BZ    GCFSTAR                 YES
GCBADCRD MVC   PRTLINE,BADCNTL         PRINT
         BAS   R9,PRINT                   ERROR MESSAGE
         MVC   RETCODE,F8              SET JOB RC=8
         B     GCREGET                 AND GO READ AGAIN
GCFSTAR  LA    R1,CONTROL-1            SET SCAN START ADDRESS
         MVC   DSNPROG,BLANKS          CLEAR DSNPROG
         XC    LASTDOT,LASTDOT         CLEAR LAST DOT ADDRESS
         XC    FIRSTAST,FIRSTAST       CLEAR FIRST ASTERISK ADDRESS
         XC    LEADEND,LEADEND         CLEAR LEADING NODE END ADDR
GCSCAN   TRT   1(44,R1),SCANDSNM       SCAN FOR *, ., OR BLANK
         BZ    GCBADCRD                ERROR, NONE FOUND
         CLI   0(R1),C'.'              FOUND DOT?
         BNE   GCCKSTR                 NO
         LR    R15,R1                  POINT TO THIS DOT ADDRESS
         L     R14,LASTDOT             POINT TO LAST DOT ADDRESS
         LTR   R14,R14                 THIS THE FIRST DOT FOUND?
         BNE   GCCKNL                  NO
         LA    R14,CONTROL-1           YES, USE -1 ADDRESS
GCCKNL   SR    R15,R14                 COMPUTE LAST NODE LENGTH
         CH    R15,H9                  VALID NODE LENGTH?
         BH    GCBADCRD                NO
         ST    R1,LASTDOT              YES, SAVE THE ADDRESS
         TRT   1(1,R1),SCANNATL        FIRST BYTE OF NEXT NODE NATIONAL
         BNZ   GCBADCRD                NO, ERROR
         L     R1,LASTDOT              RESTORE R1 VALUE
         B     GCSCAN                  CONTINUE SCANS
GCCKSTR  CLI   0(R1),C'*'              FOUND AN ASTERISK?
         BNE   GCFATBLK                NO, MUST BE AT A BLANK
         CLI   1(R1),C'.'              DOT FOLLOWS ASTERISK?
         BE    GCCKFAST                YES
         CLI   1(R1),C' '              BLANK FOLLOWS ASTERISK?
         BNE   GCBADCRD                ERROR, * MUST BE END OF NODE
GCCKFAST CLC   FIRSTAST,F0             WAS AN ASTERISK FOUND ALREADY?
         BNE   GCSCAN                  YES, IGNORE IT
         ST    R1,FIRSTAST             SAVE FIRST ASTERISK ADDRESS
         CLC   LASTDOT,F0              ANY DOT FOUND YET?
         BE    GCBADCRD                NO, ERROR
         L     R15,LASTDOT             GET LAST DOT POINTER
         BCTR  R15,0                   BACK UP 1 BYTE
         ST    R15,LEADEND             SAVE END OF FIXED PART ADDR
         B     GCSCAN                  CONTINUE
GCFATBLK LR    R15,R1                  POINT TO LAST DOT ADDRESS
         S     R15,LASTDOT             COMPUTE LAST NODE LENGTH
         CH    R15,H9                  VALID NODE LENGTH?
         BH    GCBADCRD                NO
         L     R15,LEADEND             POINT TO END OF FIXED PART
         LA    R1,CONTROL              POINT TO FIRST BYTE OF DSNAME
         SR    R15,R1                  COMPUTE FIXED PORTION LENGTH COD
         EX    R15,GCMVFIX             MOVE FIXED PORTION
GCXIT    L     R9,GC9                  GET RETURN ADDRESS
         BR    R9                      EXIT
GCMVFIX  MVC   DSNPROG(1),CONTROL      MOVE FIXED LEADING PORTION
*********************************************************************
*        PROCESS EACH RECORD IN THE CONTROL DATASET                 *
*********************************************************************
CNTLRECD ST    R9,CR9                  SAVE RETURN ADDRESS
         BAS   R9,CALLCIR              GO GET CATALOG INFO
         L     R1,LEADEND              COMPUTE OFFSET
         LA    R15,CONTROL                TO START OF
         SR    R1,R15                         COMPARISON OF NAMES
         ST    R1,OFFSET                         AND SAVE IT
         L     R1,CIRWA                POINT TO CIRWORK
         USING CIRWORK,R1
         LA    R10,DSNENTRY            POINT TO DSNAME ENTRY
         DROP  R1
         USING DSNENTRY,R10
CRDSCKND C     R10,CIRWKEND            PAST END OF LIST?
         BNL   CRXIT                   YES, EXIT
         CLI   DSNTYPE,X'FF'           END OF LIST?
         BE    CRXIT                   YES, EXIT
         CLI   DSNTYPE,C'A'            NON-VSAM DATASET ENTRY?
         BE    CRUSEIT                 YES
         CLI   DSNTYPE,C'D'            VSAM DATA COMPONENT ENTRY?
         BE    CRUSEIT                 YES
CRDSNADV LA    R10,45(R10)             ADVANCE TO NEXT ENTRY
         B     CRDSCKND                CONTINUE THRU LIST
         DROP  R10
CRUSEIT  BAS   R9,HANDLDSN             GO PROCESS THE DSNAME
         B     CRDSNADV                CONTINUE THRU LIST
CRXIT    L     R9,CR9                  GET RETURN ADDRESS
         BR    R9                      EXIT
*********************************************************************
*        COMPARE THIS DSNAME TO SEE IF IT MATCHES CONTROL CARD      *
*        AND IF IT DOES, GET THE VOLUME AND CREATION DATE INFO AND  *
*        WRITE A RECORD TO THE OUTPUT FILE.                         *
*********************************************************************
HANDLDSN STM   R9,R10,HD910            SAVE REGISTERS
         USING DSNENTRY,R10
         MVI   ERROR,0                 RESET ERROR FLAG
         MVI   ERRORS,0                RESET ERROR FLAG
         XC    TRACKS,TRACKS           CLEAR TRACKS COUNTER
         LA    R12,DSNNAME             POINT TO LIST DSNAME
         ST    R12,CIR2SRCH            POINT CIRPARM TO LIST DSNAME
         MVC   OUTREC,BLANKS           CLEAR OUTPUT RECORD AREA
         MVC   SAVEDSNM,DSNNAME        SAVE THE DSNAME
         MVC   ODSNAME,DSNNAME         MOVE DSNAME TO OUTPUT RECORD
         MVC   OTYPE,NONVSAM           ASSUME NON-VSAM ENTRY
         CLI   DSNTYPE,C'D'            IS IT VSAM?
         BNE   HDCADOF                 NO
         MVC   OTYPE,VSAM              YES, MOVE VSAM TO OUTPUT RECORD
         DROP  R10
HDCADOF  A     R12,OFFSET              POINT TO START OF COMPARE
         L     R11,LEADEND             POINT TO START OF COMPARE
         LA    R8,45                   MAX BYTES TO COMPARE
HDCKEND  CLI   0(R11),C' '             END OF CONTROL CARD NAME?
         BE    HDUSEIT                 YES
         CLI   0(R12),C' '             END OF LIST NAME?
         BE    HDXIT                   YES, TOO SHORT, IGNORE IT
         CLI   0(R11),C'*'             AT AN ASTERISK IN CONTROL DSN?
         BE    HDATSTAR                YES
HDCKBYTS CLC   0(1,R11),0(R12)         ARE DSNAME BYTES THE SAME?
         BNE   HDXIT                   NO
         LA    R11,1(R11)              ADVANCE IN CONTROL DSNAME
         LA    R12,1(R12)              ADVANCE IN LIST DSNAME
         BCT   R8,HDCKEND              LOOP TO COMPARE
         B     HDUSEIT                 END OF COMPARE AND ALL EQUAL
HDATSTAR LA    R11,1(R11)              ADVANCE PAST ASTERISK
HDCKDOT  CLI   0(R12),C'.'             AT A DOT IN LIST NAME?
         BNE   HDISITBK                NO
         CLI   0(R11),C' '             AT END OF CONTROL DSNAME?
         BE    HDUSEIT                 YES, ACCEPT DATASET RECORD
         B     HDCKBYTS                NO, GO CHECK BYTES SAME
HDISITBK CLI   0(R12),C' '             AT A BLANK IN LIST NAME?
         BE    HDCKEND                 YES, GO SEE IF CONTROL AT END
         LA    R12,1(R12)              STEP TO NEXT BYTE IN LIST NAME
         BCT   R8,HDCKDOT              LOOP TO SKIP WILDCARD BYTES
HDUSEIT  MVI   CIRLOCRC,0              CLEAR LOCATE RETURN CODE
         L     R1,CIRWA                POINT TO CIRWORK
         USING CIRWORK,R1
         LA    R1,DSNENTRY             POINT TO DSNAME ENTRY
         USING DSNENTRY,R1
         MVI   DSNTYPE,X'FF'           PRESET END OF LIST
         DROP  R1
         CALLTSSR EP=IKJEHCIR,MF=(E,CIR2PRM) EXECUTE IKJEHCIR
         ST    R15,SAVER15             YES, SAVE R15
         ST    R0,SAVER0               AND R0
         LTR   R15,R15                 ANY ERROR?
         BNZ   HDERRS1                 YES
         CLI   CIRLOCRC,0              ANY LOCATE ERROR?
         BE    HDFMT1                  NO
HDERRS1  MVC   SAVLOCRC,CIR2LCRC       SAVE LOCATE RETURN CODE
         MVC   PRTLINE(34),ERRDVOL     MOVE MSG TEXT
         MVC   PRTLINE+34(44),SAVEDSNM DSNAME TO MESSAGE
         BAS   R9,PRINT                PRINT DSNAME MESSAGE
         BAS   R9,CIRERROR             YES, GO HANDLE ERRORS
         B     HDXIT                   AND EXIT
HDFMT1   XC    VOLNBR,VOLNBR           XERO OUT VOLUME NUMBER
HDVOLCKN CLC   CIR2NVOL,VOLNBR+1       END OF VOLUMES FOR THIS DSN?
         BE    HDXIT                   YES
         LH    R1,VOLNBR               PICK UP VOLUME NBR
         MH    R1,H12                  MULTIPLY BY ENTRY LENGTH
         LA    R1,CIR2DEVT(R1)         POINT TO CURRENT
         MVC   DEVT,0(R1)              HOLD DEVICE TYPE
         MVC   VOLSER,4(R1)            HOLD VOLUME SERIAL
         CLC   VOLSER,STARVOL          IS VOLSER=*?
         BE    HDSTEPVL                YES, IGNORE IT
         MVC   OVOLSER,CIR2VOLS        MOVE VOLUME SERIAL
         CLC   OVOLSER,MIGRAT          IS IT MIGRATED?
         BNE   HDCKDASD                NO
         MVC   OCREATED,MIGRATED       MOVE COMMENT
         B     HDWRITE                 AND GO WRITE OUTPUT
HDCKDASD CLI   DEVT+2,X'20'            IS IT A DASD VOLUME?
         BE    HDRDVTOC                YES
HDNOTDA  MVC   OCREATED,NOTDASD        MOVE COMMENT
         B     HDWRITE                 GO WRITE OUTPUT RECORD
HDRDVTOC MVC   DS1DSNAM,SAVEDSNM       SET DSNAME FOR READ
         BAS   R9,COUNTRKS             GO COUNT TRACKS USED
         CLI   ERRORS,0                ANY ERROR FOUND?
         BNE   HDXIT                   YES, EXIT
         MVI   DATYP,C'J'              SHOW JULIAN DATE SUPPLIED
         SR    R1,R1                   CLEAR FOR INSERT
         IC    R1,DS1CREDT             PICK UP YEAR
         CVD   R1,DBLWD                CONVERT TO PACKED
         MVO   JULDATE(3),DBLWD+6(2)   MOVE YEAR TO JULDATE
         ICM   R1,3,DS1CREDT+1         PICK UP DAY OF YEAR
         CVD   R1,DBLWD                CONVERT TO PACKED
         MVC   JULDATE+2(2),DBLWD+6    MOVE DAY OF YEAR TO JULDATE
         OI    JULDATE+3,X'0F'         SET JULDATE SIGN TO 'F'
         MVI   JULDATE,X'19'           ASSUME CENTURY=19
         CLI   JULDATE+1,X'50'         YEAR > 50?
         BH    HDCALLGD                YES, ACCEPT CENTURY AS 19
         MVI   JULDATE,X'20'           NO, USE CENTURY=20
HDCALLGD EQU   *
         UNPK  DBLWD,JULDATE           UNPACK JULIAN DATE
         MVC   OCREATED(10),=XL10'40212020206120202040' EDIT WORD
         ED    OCREATED,JULDATE        EDIT JULIAN DATE
*        CALL  GENLDAT2,(DATEFLD)      CALL GENLDAT2 TO CONVERT DATE
*        CLI   DATERR,C'E'             ANY ERROR?
*        BE    HDWRITE                 YES
*        MVC   OCREATED(4),GREGYMD     MOVE IN CENTURY AND YEAR
*        MVI   OCREATED+4,C'/'         MOVE IN SLASH
*        MVC   OCREATED+5(2),GREGYMD+4 MOVE IN MONTH
*        MVI   OCREATED+7,C'/'         MOVE SECOND SLASH
*        MVC   OCREATED+8(2),GREGYMD+6 MOVE IN DAY OF MONTH
HDWRITE  DS    0H
*         CLI   OTYPE,C'V'              THIS A VSAM DATA COMPONENT?
*         BNE   HDWRITE2                NO
*         XC    FINALDOT,FINALDOT       CLEAR LAST DOT ADDRESS
*         LA    R1,ODSNAME              POINT TO DSNAME IN OUTPUT REC
*HDWSCN   TRT   0(44,R1),FINDDOT        SEARCH FOR A DOT
*         BZ    HDGETLDT                NONE FOUND
*         C     R1,ENDDSN               FOUND PAST END OF DSNAME?
*         BH    HDGETLDT                YES
*         ST    R1,FINALDOT             NO, SAVE LAST DOT ADDRESS
*         LA    R1,1(R1)                STEP PAST THE DOT
*         B     HDWSCN                  CONTINUE SCAN
*HDGETLDT L     R1,FINALDOT             GET FINAL DOT ADDRESS
*         LTR   R1,R1                   WAS THERE A DOT?
*         BZ    HDWRITE2                NO
*HDLMVBK  MVI   0(R1),C' '              CLEAR BYTE
*         LA    R1,1(R1)                STEP PAST IT
*         CLI   0(R1),C' '              PAST LAST NODE?
*         BE    HDWRITE2                YES
*         C     R1,ENDDSN               END OF DSNAME?
*         BH    HDWRITE2                YES
*         B     HDLMVBK                 ELSE LOOP TO CLEAR LAST NODE
HDWRITE2 BAS   R9,WRITEOUT             GO WRITE OUTPUT RECORD
HDSTEPVL LH    R1,VOLNBR               GET VOLUME NUMBER
         LA    R1,1(R1)                ADD 1
         STH   R1,VOLNBR               UPDATE CURRENT VOLUME NBR
         B     HDVOLCKN                AND CONTINUE TO NEXT
HDXIT    LM    R9,R10,HD910            GET RETURN REG, RESTORE R10
         BR    R9
*********************************************************************
*        CALL IKJEHCIR TO GET NEXT DSNAME NODE                      *
*********************************************************************
CALLCIR  ST    R9,CC9                  SAVE RETURN ADDRESS
         MVI   CIRLOCRC,0              CLEAR LOCATE RETURN CODE
         L     R1,CIRWA                POINT TO CIRWORK
         USING CIRWORK,R1
         LA    R1,DSNENTRY             POINT TO DSNAME ENTRY
         USING DSNENTRY,R1
         MVI   DSNTYPE,X'FF'           PRESET END OF LIST
         DROP  R1
         CALLTSSR EP=IKJEHCIR,MF=(E,CIRPARM) EXECUTE IKJEHCIR
         ST    R15,SAVER15             YES, SAVE R15
         ST    R0,SAVER0               AND R0
         LTR   R15,R15                 ANY ERROR?
         BNZ   CCERRS                  YES
         CLI   CIRLOCRC,0              ANY LOCATE ERROR?
         BE    CCXIT                   NO
CCERRS   MVC   SAVLOCRC,CIRLOCRC       SAVE LOCATE RETURN CODE
         BAS   R9,CIRERROR             GO HANDLE CIR ERROR
CCXIT    L     R9,CC9                  GET RETURN ADDRESS
         BR    R9                      EXIT
*********************************************************************
*             COUNT TRACKS USED BY THE DATASET                      *
*********************************************************************
COUNTRKS ST    R9,CT9                  SAVE RETURN ADDRESS
         MVI   ERRORS,0                CLEAR ERROR FLAG
         XC    TRACKS,TRACKS           CLEAR TOTAL COUNTER
         OBTAIN CAMMAC                 READ THE FORMAT1 DSCB
         ST    R15,SAVER15             YES, SAVE R15
         LTR   R15,R15                 ANY ERROR?
         BNZ   CTERRS                  YES
         MVC   PTRDS,DS1PTRDS          SAVE FORMAT 2/3 POINTER
         LA    R12,DS1EXT1             POINT TO FIRST EXTENT FIELD
         LA    R11,3                   3 EXTENTS TO PROCESS
CTLUP1   BAS   R9,ADD1EXT              GO ADD IN THIS EXTENT
         LA    R12,10(R12)             STEP TO NEXT EXTENT
         CLC   0(5,R12),XZROS          ANY EXTENT INFO?
         BE    CTOUTPUT                NO, ALL THRU
         BCT   R11,CTLUP1              LOOP THROUGH THESE EXTEMNTS
CTCKFOR3 CLC   PTRDS,XZROS             IS THERE A FORMAT 2/3 PTR?
         BE    CTOUTPUT                NO
         MVC   CCHHR,PTRDS             YES, MOVE IN CCHHR ADDRESS
CTNEX3   OBTAIN CAMFMT3                READ THE FORMAT2/3 DSCB
         ST    R15,SAVER15             SAVE R15
         LTR   R15,R15                 ANY ERROR?
         BNZ   CTERRS                  YES
         MVC   PTRDS,DS3PTRDS          SAVE FORMAT 2/3 POINTER
         CLI   DS3FMTID,C'3'           THIS A FORMAT 3 DSCB?
         BNE   CTCKFOR3                NO, SKIP IT
         LA    R12,DS3EXT1             POINT TO FIRST EXTENT FIELD
         LA    R11,13                  13 EXTENTS TO PROCESS
         MVC   DS3FMTID(90),DS3EXT5    SHIFT LAST 9 EXTENTS BACK 1 BYTE
         B     CTLUP1                  GO PROCESS THESE 16 EXTENTS
CTERRS   MVI   ERRORS,1                SET ERROR FLAG
         MVC   PRTLINE(36),ERRDFMT1    MOVE MSG TEXT
         MVC   PRTLINE+36(44),DS1DSNAM DSNAME TO MESSAGE
         BAS   R9,PRINT                PRINT DSNAME MESSAGE
         MVC   OCREATED(13),NOINVTOC   MOVE MESSAGE
         B     HDWRITE                 AND GO WRITE
CTOUTPUT ICM   R1,15,TRACKS            PICK UP TOTAL TRACKS
         BZ    CTXIT                   BRANCH IF ZERO
         CVD   R1,DBLWD                CONVERT TO PACKED DECIMAL
         MVC   ETRACKS,EDITWORD        MOVE IN EDIT WORD
         ED    ETRACKS,DBLWD+4         EDIT NBR TRACKS TO WORK
         MVC   OTRACKS,ETRACKS+1       MOVE EDITED TRACKS TO OUTPUT
CTXIT    L     R9,CT9                  GET RETURN ADDRESS
         BR    R9                      RETURN TO CALLER
*********************************************************************
*             ADD CURRENT EXTENT TO TOTAL TRACK COUNTER             *
*********************************************************************
ADD1EXT  ST    R9,AD9                  SAVE RETURN ADDRESS
         LH    R1,6(R12)               GET HIGH CYL NBR
         SH    R1,2(R12)               DEDUCT LOW CYL NBR
         MH    R1,H15                  MULTIPLY BY TRKS/CYL
         AH    R1,8(R12)               ADD HIGH TRK NBR
         SH    R1,4(R12)               DEDUCT LOW TRK NBR
         LA    R1,1(R1)                ADD 1
         A     R1,TRACKS               ACCUMULATE TOTAL
         ST    R1,TRACKS               AND SAVE NEW TOTAL
ADXIT    L     R9,AD9                  GET RETURN ADDRESS
         BR    R9                      RETURN TO CALLER
*********************************************************************
*             PROCESS ERRORS FROM IKJEHCIR                          *
*********************************************************************
CIRERROR ST    R9,CE9                  SAVE RETURN ADDRESS
         MVI   ERROR,1                 YES, INDICATE ERROR
         CLI   CIRLOCRC,0              LOCATE ERROR?
         BE    CEOTHER                 NO
         LA    R1,LOCATERC             POINT TO MESSAGE TABLE
CETSTEND CLI   0(R1),X'FF'             END OF TABLE?
         BE    CEOTHER                 YES, CONTINUE
         CLC   0(1,R1),CIRLOCRC        FOUND THE CORRECT MESSAGE?
         BE    CEFOUND                 YES
         LA    R1,81(R1)               ADVANCE TO NEXT EXTRY
         B     CETSTEND                CONTINUE TESTING
CEFOUND  MVC   PRTLINE(80),1(R1)       MOVE MESSAGE
         B     CEPRINT                 CONTINUE
CEOTHER  L     R15,SAVER15             GET R15 VALUE
         CVD   R15,DBLWD               CONVERT TO PACKED DECIMAL
         UNPK  R15VALU,DBLWD+6(2)      UNPACK
         OI    R15VALU+2,C'0'          AND CLEAR SIGN
         SR    R15,R15                 CLEAR FOR INSERT
         IC    R15,SAVLOCRC            PICK UP LOCATE RETURN CODE
         CVD   R15,DBLWD               CONVERT R15 VALUE
         UNPK  LOCVALU,DBLWD+6(2)      UNPACK
         OI    LOCVALU+2,C'0'          AND CLEAR SIGN
         MVC   PRTLINE,BADCIR          PRINT
CEPRINT  BAS   R9,PRINT                   ERROR MESSAGE
         MVC   RETCODE,F8              SET JOB RC=8
         MVI   ERROR,1                 SET ERROR FLAG
CEXIT    L     R9,CE9                  GET RETURN ADDRESS
         BR    R9                      EXIT
*********************************************************************
*             WRITE A RECORD TO SYSOUT                              *
*********************************************************************
WRITEOUT ST    R9,WO9                  SAVE RETURN ADDRESS
         PUT   SYSOUT,OUTREC           WRITE THE RECORD
         MVC   OUTREC,BLANKS           CLEAR RECORD AREA TO BLANKS
WOXIT    L     R9,WO9                  GET RETURN ADDRESS
         BR    R9                      RETURN
*********************************************************************
*             PRINT A LINE TO SYSPRINT                              *
*********************************************************************
PRINT    ST    R9,PR9                  SAVE RETURN ADDRESS
         CLC   CONTROL,LASTPRTD        HAS CONTROL CARD BEEN PRINTED?
         BE    PRTERR                  YES
         PUT   SYSPRINT,CONTROL        NO, PRINT IT
         MVC   LASTPRTD,CONTROL        AND SAVE IT
PRTERR   PUT   SYSPRINT,PRTLINE        WRITE PRINT LINE
         MVC   PRTLINE,BLANKS          CLEAR PRINT LINE TO BLANKS
PRXIT    L     R9,PR9                  GET RETURN ADDRESS
         BR    R9                      RETURN
*********************************************************************
*             END OF JOB                                            *
*********************************************************************
EOJ      CLOSE (SYSOUT,,SYSIN)         CLOSE FILES
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         L     R14,12(R13)             RESTORE RETURN REG: R14
         L     R15,RETCODE             SET RETURN CODE
         LM    R0,R12,20(R13)          RESTORE CALLER'S REGS 0-12
         BR    R14                     RETURN
*********************************************************************
*        STORAGE AND FILE AREAS                                     *
*********************************************************************
*
DBLWD    DS    D                      DOUBLEWORD WORK AREA
WO9      DC    A(0)                    RETURN ADDRESS FOR WRITEOUT
PR9      DC    A(0)                    RETURN ADDRESS FOR PRINT
GC9      DC    A(0)                    RETURN ADDRESS FOR GETCNTRL
CR9      DC    A(0)                    RETURN ADDRESS FOR CNTLRECD
CC9      DC    A(0)                    RETURN ADDRESS FOR CALLCIR
CE9      DC    A(0)                    RETURN ADDRESS FOR CIRERROR
CT9      DS    A                       RETURN ADDRESS FOR COUNTRKS
AD9      DC    A(0)                    RETURN ADDRESS FOR ADD1EXT
HD910    DS    2A                      RETURN ADDR+SAVE FOR HANDLDSN
OFFSET   DS    F                       OFFSET TO START OF COMPARE
RETCODE  DS    F                       RETURN CODE
SAVER15  DS    F                       SAVE AREA FOR R15 FROM IKJEHCIR
SAVER0   DS    F                       SAVE AREA FOR R0 FROM IKJEHCIR
CIRWKLN  DC    F'0'                    CIR WORK LENGTH
CIRWKEND DC    A(0)                    CIR WORK END ADDRESS
TRACKS   DC    F'0'                    TOTAL TRACK ALLOCATION WORK
F0       DC    F'0'                    CONSTANT 0
F8       DC    F'8'                    CONSTANT 8
LASTDOT  DC    A(0)                    ADDRESS OF LAST DOT IN DSNAME
FIRSTAST DC    A(0)                    FIRST ASTERISK ADDRESS
LEADEND  DC    A(0)                    FIXED LEADING NODE END ADDR
ENDDSN   DC    A(ODSNAME+43)           POINTER TO END OF DSNAME
FINALDOT DC    A(0)                    FINAL DOT IN DSNAME
H9       DC    H'9'                    CONSTANT 9
H15      DC    H'15'                   CONSTANT 15
H12      DC    H'12'                   CONSTANT 12
H48      DC    H'48'                   CONSTANT 48
VOLNBR   DC    H'0'                    CURRENT VOLUME NUMBER IN CIR2
XZROS    DC    XL5'00'                 HEX ZEROS
CCHHR    DC    XL5'00'                 CCHHR DISK ADDRESS FOR CAMLST
PTRDS    DC    XL5'00'                 NEXT DSCB POINTER
ERRORS   DC    XL1'0'                  ERROR FLAG
DEVT     DC    XL4'00'                 CURRENT VOLUME DEVICE TYPE
VOLSER   DC    CL6' '                  CURRENT VOLUME SERIAL NUMBER
ERROR    DC    X'00'                   ERROR INDICATOR
SAVLOCRC DC    X'00'                   LOCATE RETURN CODE SAVE AREA
BLANKS   DC    CL80' '                 BLANKS
SAVEDSNM DC    CL44' '                 SAVED DSNAME
DSNPROG  DC    CL44'SPP'               DSNAME IN PROGRESS
BADSTAR  DC    CL80'   ABOVE CONTROL RECORD DSNAME HAS NO ASTERISK'
BADCNTL  DC    CL80'   ABOVE CONTROL RECORD HAS INVALID DSNAME'
BADCIR   DC    CL28'   ERROR FROM IKJEHCIR: R15='
ERRDVOL  DC    CL34'    ERROR READING VOLUME INFO FOR '
ERRDFMT1 DC    CL36'    ERROR READING FORMAT 1 DSCB FOR '
NONVSAM  DC    CL7'NONVSAM'
VSAM     DC    CL7'VSAM'
MIGRAT   DC    CL6'MIGRAT'
STARVOL  DC    CL6'*     '             INVALID VOLUME SERIAL
MIGRATED DC    CL10'*MIGRATED*'
NOTDASD  DC    CL10'*NOT DASD*'
NOINVTOC DC    CL13'*NOT IN VTOC*'
ETRACKS  DC    CL10' '
EDITWORD DC    XL10'40206B2020206B202021'
R15VALU  DC    CL3'  '
         DC    CL12', LOCATE RC='
LOCVALU  DC    CL3' '
         DC    CL34' '
*
LOCATERC DS    0CL81                   NON-ZERO LOCATE RC MESSAGES
         DC    X'04'
         DC    CL80'CATALOG DOES NOT EXIST OR CANNOT BE OPENED.'
         DC    X'08'
         DC    CL80'NO CATALOG ENTRY FOUND.'
         DC    X'0C'
         DC    CL80'INVALID LOW LEVEL GDG NAME FOUND IN CATALOG.'
         DC    X'10'
         DC    CL50'A CATALOGED DATASET NAME EXISTS ABOVE THE LOWEST'
         DC    CL30' LEVEL SPECIFIED.'
         DC    X'20'
         DC    CL80'CATALOG SEARCH FAILED: FIRST BYTE OF DSN IS BLANK.'
         DC    X'24'
         DC    CL80'CATALOG SEARCH FAILED: UNRECOVERABLE I/O ERROR.'
         DC    X'28'
         DC    CL80'CATALOG SEARCH FAILED: INVALID TTR FOR CATALOG.'
         DC    X'38'
         DC    CL42'CATALOG SEARCH FAILED: DFSMSHSM LOCATE PRE'
         DC    CL38'PROCESSOR ERROR.'
         DC    X'FF'
*
FINDDOT  DC    256X'00'                FIND A DOT (PERIOD)
         ORG FINDDOT+C'.'
         DC    X'FF'
         ORG
*
SCANDSNM DC    256X'00'                SCAN FOR *, ., BLANK
         ORG   SCANDSNM+C' '
         DC    X'FF'
         ORG   SCANDSNM+C'.'
         DC    X'FF'
         ORG   SCANDSNM+C'*'
         DC    X'FF'
         ORG
SCANNATL DC    256X'FF'                SCAN TABLE FOR NATIONAL CHARS
         ORG   SCANNATL+C'*'
         DC    X'00'
         ORG   SCANNATL+C'@'
         DC    X'00'
         ORG   SCANNATL+C'$'
         DC    X'00'
         ORG   SCANNATL+C'#'
         DC    X'00'
         ORG   SCANNATL+C'A'
         DC    9X'00'
         ORG   SCANNATL+C'J'
         DC    9X'00'
         ORG   SCANNATL+C'S'
         DC    8X'00'
         ORG
*
SCANSTAR DC    256X'00'               SCAN FOR ASTERISK
         ORG SCANSTAR+C'*'
         DC    X'FF'
         ORG
*
CONTROL  DS    CL80                    CONTROL RECORD
LASTPRTD DS    CL80                    LAST CONTROL CARD PRINTED
*
PRTLINE  DC    CL80' '                 PRINT LINE
*
OUTREC   DS    0CL80                   OUTPUT RECORD
ODSNAME  DC    CL44' '                   DSNAME
         DC    CL1' '
OVOLSER  DC    CL6' '                    VOLUME SERIAL
         DC    CL1' '
OCREATED DC    CL10' '                   CREATION DATE YY/DDD
         DC    CL1' '
OTYPE    DC    CL7'       '              TYPE: VSAM OR NONVSAM
         DC    CL1' '
OTRACKS  DC    CL9' '                    TRACKS ALLOCATED TO FILE
*
CIRPARM  DS    0F                     PARAMETER LIST FOR IKJEHCIR
CIROPT   DC    XL1'02'                   REQUEST FOR ALL DSNAMES
CIRWA2   DC    XL1'80'                   CIRWORK HAS FULLWORD LENGTHS
         DC    XL1'00'                   RESERVED
CIRLOCRC DC    XL1'00'                   LOCATE RETURN CODE
CIRSRCH  DC    A(DSNPROG)                POINTER TO DSNAME IN PROGRESS
CIRVOL   DC    A(0)                      POINTER TO USERCAT DSNAME
CIRWA    DC    A(0)                      POINTER TO WORK AREA
CIRSAVE  DC    A(CIRREGS)                POINTER TO REGISTER SAVE AREA
CIRPSWD  DC    A(0)                      POINTER TO CATALOG PASSWORD
CIRREGS  DS    16F                    REGISTER SAVE AREA FOR IKJEHCIR
*
CIR2PRM DS     0F                     PARAMETER LIST FOR IKJEHCIR
CIR2OPT  DC    XL1'04'                   REQUEST FOR ALL VOLUME INFO
CIR2WA2  DC    XL1'00'                   CIRWORK HAS HALFWORD LENGTHS
         DC    XL1'00'                   RESERVED
CIR2LCRC DC    XL1'00'                   LOCATE RETURN CODE
CIR2SRCH DC    A(0)                      POINTER TO DSNAME IN LIST
CIR2VOL  DC    A(0)                      POINTER TO USERCAT DSNAME
CIR2WA   DC    A(CIR2WORK)               POINTER TO WORK AREA
CIR2SAVE DC    A(CIR2REGS)               POINTER TO REGISTER SAVE AREA
CIR2PSWD DC    A(0)                      POINTER TO CATALOG PASSWORD
CIR2REGS DS    16F                    REGISTER SAVE AREA FOR IKJEHCIR
CIR2WORK DS    0H                     CIR WORK AREA FOR VOLSER INFO
AREALN2  DC    AL2(CIR2END-CIR2WORK)     WORK AREA LENGTH
DATALIN2 DS    H                         RETURNED DATA LENGTH
VAR2DATA DS    0C                        RETURNED DATA
CIR2NVOL DS    XL1                       NUMBER OF VOLUMES USED BY DSN
CIR2VOLN DS    0XL12                     VOLUME ENTRY
CIR2DEVT DS    XL4                          DEVICE TYPE
CIR2VOLS DS    CL6                          VOLUME SERIAL
CIR2FILS DS    XL2                          FILE SQUENCE NUMBER (TAPE)
         DS    255XL12                  REMAINING ENTRIES
CIR2END  EQU   *
*
CAMMAC   CAMLST SEARCH,DS1DSNAM,OVOLSER,DS1FMTID READ FORMAT 1 DSCB
CAMFMT3  CAMLST SEEK,CCHHR,OVOLSER,DSCBFMT3 READ THE FORMAT 2/3
*
         DSCBDEF DSECT=NO,FMT1=YES,FMT2=NO,FMT3=YES,                   X
               FMT4=NO,FMT5=NO,FMT6=NO
ALLDSNS  CSECT
*
DATEFLD  DS    0CL79        ***** PARAMETER AREA FOR GENLDAT2 *****
DATYP    DC    CL1'J'        .DATE TYPE SUPPLIED: J=JULIAN,
DATERR   DC    CL1' '        .ERROR FLAG: ' '=OK, 'E'=ERROR
DAYWK    DS    CL1           .DAY OF WEEK INDICATOR
HOLIDAY  DS    CL1           .HOLIDAY INDICATOR
YEARTYP  DS    CL1           .0=NOT LEAP YEAR, 1=LEAP YEAR
JULDATE  DS    PL4           .JULIAN DATE: YYYYDDDF
GREGMDY  DS    CL8           .GREGORIAN DATE MMDDYYYY
GREGYMD  DS    CL8           .GREGORIAN DATE YYYYMMDD
LITDATE  DS    CL18          .A LITERAL DATE
JULSLASH DS    CL8           .JULIAN DATE WITH SLASH: YYYY/DDD
GRGSLASH DS    CL10          .GREGORIAN DATE WITH SLASHES: MM/DD/YYYY
DAYLIT   DS    CL9           .LITERAL DAY OF WEEK
MONTHLIT DS    CL9           .LITERAL MONTH
*
*********************************************************************
*             DCB'S                                                 *
*********************************************************************
SYSOUT   DCB   DSORG=PS,MACRF=PM,DDNAME=SYSOUT,RECFM=FB,LRECL=80
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=EOJ,               X
               RECFM=FB,LRECL=80
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FB,LRECL=80
         LTORG
**********************************************************************
*        DSECTS                                                      *
**********************************************************************
*
CIRWORK  DSECT ,                      VOLUME INFORMATION FROM IKJEHCIR
AREALN   DS    A                         LENGTH OF AREA
DATALIN  DS    A                         LENGTH OF DATA RETURNED + 8
VARDATA  DS    0C                        VARIABLE LENGTH DATA RETURNED
DSNENTRY DS    0CL45                       DSNAME ENTRY
DSNTYPE  DS    CL1                            TYPE: V=VOLUME, C=CLUSTER
* G=ALTERNATE INDEX, R=PATH, F=FREE, Y=UPGRADE, B=GDG BASE, X=ALIAS
* P=PAGE SPACE, M=MASTER CATALOG, U=USER CATALOG, A=NON-VSAM DATASET
* D=DATA COMPONENT, I=INDEX COMPONENT    REMAINING 254 ENTRIES
DSNNAME  DS    CL44                           NAME OF DATASET
ALLDSNS CSECT
*********************************************************************
*             REGISTER EQUATES                                      *
*********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*********************************************************************
*  CVT DESCRIPTION (REQUIRED BY THE CALLTSSR MACRO)                 *
*********************************************************************
         CVT   DSECT=YES
         END
