         TITLE '***** PRINT CSECT NAMES AND LANGUAGES *****'
PGMTYPE  SVLNK R3,R4
         PRINT NOGEN
*
***********************************************************************
* READS A LOAD MODULE AND PRINTS ONE LINE PER CSECT SHOWING THE       *
* CSECT NAME, LENGTH, AND LANGUAGE (COBOL OR ASSEMBLER).              *
* FILES USED BY THIS PROGRAM INCLUDE THE FOLLOWING:                   *
*     DDNAME SYSLIB: RECFM=U. INPUT LOAD MODULE LIBRARY.              *
*     DDNAME SYSPRINT: RECFM=FBA,LRECL=133.  PRINTED OUTPUT CONTAINING*
*                      A LIST OF THE CSECTS.                          *
*     PARM FIELD OF THE EXEC STATMENT MUST CONTAIN THE MEMBER NAME OF *
*                      THE LOAD MODULE TO BE PROCESSED                *
*                                                                     *
* AUTHOR R THORNTON - JAN 1984                                        *
*                                                                     *
***********************************************************************
* OPEN FILES, READ THE MEMBER NAME FROM SYSIN, AND             *
* GET STORAGE FOR THE SYMBOL TABLE, AND RLD TABLE              *
****************************************************************
*
OPEN1    L     R1,0(R1)                READ THE CONTROL CARD
         MVC   MEMBER,2(R1)            SAVE MEMBER NAME
         OPEN  (SYSPRINT,OUTPUT,SYSLIB) OPEN FILES
         BLDL  SYSLIB,BLDLIST          ISSUE BLDL
         LTR   R15,R15                 ANY ERRORS
         BNZ   MISSMEM                 YES
         MVI   CCAT,0                  INSURE TTR0
         POINT SYSLIB,TTRMOD           POINT TO 1ST BLOCK OF MODULE
         GETMAIN R,LV=65535            GET BUFFER STORAGE
         ST    R1,BUFAD                SAVE BUFFER ADDRESS
         GETMAIN R,LV=38000            GET SYMBOL TABLE STORAGE
         ST    R1,SYMTBAD              SAVE SYMBOL TABLE ADDRESS
         ST    R1,CURRSYM              SAVE CURRENT SYMBOL ADDR
         MVI   0(R1),X'FF'             TABLE END INDIC
         A     R1,ENDSYM               COMPUTE END ADDR
         ST    R1,ENDSYM               STORE TBL END ADDR
         GETMAIN R,LV=32767            GET STORAGE FOR TEXT
         ST    R1,TXTSTRT              SAVE TEXT ADDR
*
****************************************************************
* MAINLINE PROCESSING FOR THE LOAD MODULE.                     *
****************************************************************
*
MAINLINE L     R6,BUFAD                GET BUFFER ADDRESS
         READ  DECB,SF,SYSLIB,(6),'S'  READ BLOCK FROM MEMBER
         CHECK DECB                    AWAIT COMPLETION
         CLI   0(R6),X'20'             CESD RECORD
         BNE   TESTOTHR                NO
         BAL   R9,CESDREC              PROCESS CESD RECORDS
         B     MAINLINE                GO READ AGAIN
TESTOTHR CLI   0(R6),1                 IT IS CONTROL
         BE    PERFORM                 YES
         CLI   0(R6),5                 IS IT CONTROL
         BE    PERFORM                 YES
         CLI   0(R6),13                IS IT CONTROL
         BE    PERFORM                 YES
         CLI   0(R6),3                 IS IT CTL AND RLD
         BE    PERFORM                 YES
         CLI   0(R6),7                 IS IT CTL AND RLD
         BE    PERFORM                 YES
         CLI   0(R6),15                IS IT CTL AND RLD
         BE    PERFORM                 YES
         CLI   0(R6),2                 IS IT RLD?
         BE    RLDREC                  YES
         CLI   0(R6),6                 IS IT RLD?
         BE    RLDREC                  YES
         CLI   0(R6),14                IS IT RLD?
         BNE   MAINLINE                NONE OF THESE, SKIP
RLDREC   TM    0(R6),X'08'             LAST RECORD IN MEMBER?
         BO    EOJ                     YES
         B     MAINLINE                ELSE SKIP IT
PERFORM  BAL   R9,CNTLRECS             PROCESS CONTROL RECORD
         TM    PROCESS,X'40'           MODULE PROCESSING DONE
         BZ    MAINLINE                NO, GO READ AGAIN
         B     EOJ                     YES, GO TO END OF JOB
*
****************************************************************
* PROCESS LOAD MODULE CONTROL RECORDS. THESE RECORDS PRECEDE   *
* TEXT RECORDS, WHICH ARE READ AND PLACED IN STORAGE IN CONTIG-*
* UOUS LOCATIONS.                                              *
****************************************************************
*
CNTLRECS ST    R9,CT9                  SAVE RETURN ADDR
         L     R9,TXTSTRT              POINT TO TEXT STORAGE AREA
READTEXT READ  DECB,SF,,(9),MF=E       READ FOLLOWING TEXT RECORD
         CHECK DECB                    AWAIT COMPLETION
         SR    R8,R8                   CLEAR WORK
         TM    0(R6),X'08'             RECD PRECEDES LAST RECD OF MBR?
         BZ    CNCKTYP                 NO
         OI    PROCESS,X'40'           YES, SHOW END OF FILE
CNCKTYP  TM    0(R6),X'02'             CONTROL AND RLD?
         BO    CNPASRLD                YES
         LA    R12,16(R6)              @ CESD ENTRY NBR
         B     CNCKESD                 CONTINUE
CNPASRLD LH    R12,6(R6)               GET RLD SECTION LENGTH
         LA    R12,16(R6,R12)          @ CESD ENTRY NBR
CNCKESD  LH    R11,4(R6)               LENGTH OF CONTROL INFO SECTION
         SRL   R11,2                   COMPUTE NBR CNTL ENTRIES
         SR    R10,R10                 OFFSET TO 1ST BYTE
         SR    R9,R9                   INITIALIZE TEXT OFFSET
         SR    R1,R1                   CLEAR FOR INSERT
CNCKESD1 L     R1,SYMTBAD              POINT TO SYMBOL TABLE
         USING SYMTBL,R1
SYMNDCK1 CLI   0(R1),X'FF'             END OF TABLE?
         BNE   CPRESDID                NO
         XC    SYMENT,SYMENT           YES, CLEAR ENTRY
         MVC   EXTSYM,=C'????????'     SYMBOL NAME UNKNOWN
         MVI   TYPSYM,X'FF'            UNKNOWN TYPE
         MVC   SYMESDID,0(R12)         SET ESD ID
         MVC   SYMPGMTY,C' '           SET PROGRAM TYPE
         MVI   SYMENT+L'SYMENT,X'FF'   SET NEW TABLE END
CPRESDID CLC   SYMESDID,0(R12)         FOUND CORRECT ENTRY?
         BE    CHKUSED                 YES
         LA    R1,L'SYMENT(R1)         STEP TO NEXT ENTRY
         B     SYMNDCK1                CONTINUE
CHKUSED  CLI   SYMPGMTY,C' '           ENTRY ALREADY FILLED?
         BNE   NEXTCTL                 YES
         LR    R2,R10                  COPY TEXT OFFSET
         A     R2,TXTSTRT              COMPUTE TEXT ADDRESS
         CLC   COBOLEP,0(R2)           PROBABLY COBOL?
         BNE   NOTCBL                  NO
         CLC   COBOLEP2,24(R2)         IS IT COBOL?
         BNE   NOTCBL                  NO
         MVI   SYMPGMTY,C'C'           YES, SET COBOL INDICATOR
         B     NEXTCTL                 CONTINUE
NOTCBL   MVI   SYMPGMTY,C'A'           NO, SET ASSEMBLER INDICATOR
         DROP  R1
NEXTCTL  AH    R10,2(R12)              UPDATE TEXT OFFSET
         LA    R12,4(R12)              TO NEXT CNTL ENTRY
         BCT   R11,CNCKESD1            LOOP THRU CNTL ENTRIES
CTXIT    L     R9,CT9                  GET RETURN ADDR
         BR    R9                      EXIT
*
****************************************************************
* PROCESS COMPOSITE ESD RECORDS. DATA FROM THESE RECORDS IS    *
* PLACED IN THE SYMBOL TABLE.                                  *
****************************************************************
*
CESDREC  ST    R9,CES9                 SAVE RETURN
         L     R7,CURRSYM              GET SYMBOL TBL ADDR
         USING SYMTBL,R7
         LH    R10,4(R6)               GET ESD ID OF 1ST ITEM
         LH    R8,6(R6)                NBR BYTES OF ESD DATA
         SRL   R8,4                    COMPUTE NBR ENTRIES
         LA    R6,8(R6)                STEP TO 1ST RECORD ESD ITEM
CESDNXT  C     R7,ENDSYM               END OF TABLE
         BNL   SYMFULL                 YES, ERROR
         MVC   EXTSYM,0(R6)            SYMBOL NAME
         MVC   TYPSYM,8(R6)            TYPE
         NI    TYPSYM,X'0F'            CLEAR BITS 0-3
         MVC   SYMIND,8(R6)            INDICATOR BYTE
         NI    SYMIND,X'0F'            CLEAR BITS 4-7
         TM    8(R6),X'14'             POSSIBLE ENTAB/SEGTAB
         BNO   CEMVAD                  NO
         TM    8(R6),X'03'             IS IT ENTAB/SEGTAB
         BNZ   CEMVAD                  NO
         MVC   TYPSYM(2),=X'0F00'      SHOW ENTAB/SEGTAB
CEMVAD   MVC   SYMADDR,9(R6)           ADDRESS OF SYMBOL
         MVC   SYMSEG,12(R6)           SEGMENT WHERE DEFINED
         MVC   SYMLENG,13(R6)          LENGTH OR LR ESD ID
         MVI   SYMPGMTY,C' '           CLEAR PROGRAM TYPE
         STCM  R10,3,SYMESDID          ESD ID
         CLI   TYPSYM,0                IS THIS AN SD?
         BE    ADVNC                   YES
         CLI   TYPSYM,4                IS IT AN UNNAMED CSECT?
         BNE   ADVNC2                  NO
ADVNC    LA    R7,L'SYMENT(R7)         TO NEXT TBL ENTRY LOCATION
ADVNC2   LA    R10,1(R10)              ADD 1 TO ESD COUNTER
         LA    R6,16(R6)               TO NEXT ESD ITEM IN INPUT
         BCT   R8,CESDNXT              LOOP THRU INPUT RECORD
         MVI   0(R7),X'FF'             SET END OF TABLE INDIC
         ST    R7,CURRSYM              SAVE NEXT TABLE ADDR
CESDEXIT L     R9,CES9                 GET RETURN ADDR
         BR    R9                      EXIT
         DROP  R7
*
****************************************************************
* CREATE PRINTABLE HEX FROM HEX. ON ENTRY, REG 12 CONTAINS THE *
* ADDRESS OF THE DATA TO BE REFORMATTED. ENTRY POINT USED      *
* DETERMINES THE SIZE OF THE FIELD. OUTPUT DATA IS PLACED IN   *
* THE PRTABL FIELD, 2 CHARACTERS PER BYTE.                     *
****************************************************************
*
HEXPRT1  UNPK  PRTABL(3),0(2,R12)      UNPACK HEX
         B     HEXCLTR                 CONTINUE
HEXPRT2  UNPK  PRTABL(5),0(3,R12)      UNPACK HEX
         B     HEXCLTR                 CONTINUE
HEXPRT3  UNPK  PRTABL(7),0(4,R12)      UNPACK HEX
         B     HEXCLTR                 CONTINUE
HEXPRT4  UNPK  PRTABL(9),0(5,R12)      UNPACK HEX
HEXCLTR  MVZ   PRTABL(8),XZROS         CLEAR FOR TRANSLATE
         TR    PRTABL(8),TRTBL         MAKE PRINTABLE
         BR    R9                      EXIT
*
****************************************************************
* PRINT USING SYSPRINT.                                        *
****************************************************************
*
PRINT    PUT   SYSPRINT,PRTLINE        WRITE PRINT LINE
         MVC   PRT,BLANX               CLEAR PRINT LINE
         AP    LINECT,P1               INCR LINE COUNTER
         MVI   PCC,C' '                SET SINGLE SPACING
         CP    LINECT,P58              PAST END OF PAGE
         BH    NEWPAGE                 YES
         BR    R9                      EXIT
NEWPAGE  MVI   PCC,C'1'                SET SKIP TO HOF
         ZAP   LINECT,P0               RESET LINE COUNTER
         BR    R9                      EXIT
*
****************************************************************
* MISCELLANEOUS ERROR MESSAGES.                                *
****************************************************************
*
NOCTL    MVC   PRT(L'NOCNTRL),NOCNTRL  NO CONTROL INFO MESSAGE
         B     ERREND                  GO PRINT
NAMEOV8  MVC   PRT(L'OVER8),OVER8      NAME OVER 8 MESSAGE
         B     ERREND                  GO PRINT
NOMBR    MVC   PRT(L'NOMEM),NOMEM      MISSING MEMBER NAME MESSAGE
         B     ERREND                  GO PRINT
MISSMEM  MVC   PRT(L'INVMEM),INVMEM    MEMBER NOT IN PDS MESSAGE
         B     ERREND                  GO PRINT
MISSCS   MVC   PRT(L'INVCSECT),INVCSECT CSECT NOT IN MEMBER MESSAGE
         B     ERREND                  GO PRINT
SYMFULL  MVC   PRT(L'FULLSYM),FULLSYM  FULL SYM TBL MSG
ERREND   BAL   R9,PRINT                GO PRINT MESSAGE
         ABEND 777,DUMP                ABEND
*
****************************************************************
* END OF JOB.                                                  *
****************************************************************
EOJ      MVC   PRTLINE,PH1LBL          PRINT HEADER
         BAL   R9,PRINT                PRINT IT
         MVC   PRTLINE,PH1HDR          SECOND HEADER
         BAL   R9,PRINT                PRINT IT
         L     R12,SYMTBAD             POINT TO SYMBOL TABLE
         USING SYMTBL,R12
SYMENDCK CLI   0(R12),X'FF'            END OF TABLE?
         BE    EOJ1                    YES
         CLC   EXTSYM(3),=C'ILB'       COBOL LIBRARY MODULE?
         BE    STEPSYM                 YES, IGNORE IT
         CLC   EXTSYM(3),=C'DFS'       IMS MODULE?
         BE    STEPSYM                 YES, IGNORE IT
         CLI   TYPSYM,0                IS IT AN SD?
         BNE   CHPRVT                  NO
         MVC   PSYM,EXTSYM             YES, MOVE PROGRAM NAME
         B     SETLANG                 CONTINUE
CHPRVT   CLI   TYPSYM,4                UNNAMED CSECT?
         BNE   SETLANG                 NO
         MVC   PSYM,=CL8'$PRIVATE'     YES
SETLANG  MVC   PLANG,=C'COB'           ASSUME COBOL
         CLI   SYMPGMTY,C'C'           IS IT COBOL?
         BE    PRTSYM                  YES
         MVC   PLANG,=C'ASM'           ASSUME ASSEMBLER
         CLI   SYMPGMTY,C'A'           IS IT ASSEMBLER?
         BE    PRTSYM                  YES
         MVC   PLANG,=C'???'           NEITHER
PRTSYM   BAL   R9,PRINT                PRINT A LINE
STEPSYM  LA    R12,L'SYMENT(R12)       STEP TO NEXT ENTRY
         B     SYMENDCK                CONTINUE
         DROP  R12
EOJ1     CLOSE (SYSLIB,,SYSPRINT) CLOSE FILES
         L     R13,4(R13)              GET POINTER TO CALLER'S SAVE ARE
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGS
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN TO CALLER
*
*
*
****************************************************************
*                     DATA AND WORK AREAS
****************************************************************
*
         DS    0D
DBLWD    DS    D                       DOUBLEWORD WORK AREA
CSECT    DC    CL8' '                  SPECIFIED CSECT NAME
ESDID    DC    X'0001'                 ESD ID OF SPECIFIED CSECT
ENDLBLNM DC    CL8' '                  SYMBOL FOR END STMT BEGIN POINTE
LINECT   DC    PL2'0'                  PRINT LINE COUNTER
START    DC    F'0'                    LKED ASSIGNED START ADDR OF CSEC
END      DC    F'0'                    CSECT END ADDRESS
LENGTH   DC    F'0'                    LENGTH OF SPECIFIED CSECT
TXTSTRT  DS    F                       @ TEXT STORAGE AREA
TXTEND   DS    F                       @ END OF TEXT AREA
TXTCURR  DS    F                       @ CURRENT TEXT LOC
*
*
*
PH1LBL   DC    CL80'1***** SYMBOL DATA TABLE *****'
PH1HDR   DC    CL80'0 SYMBOL  LANGUAGE'
PRTLINE  DS    0CL80                   PRINT LINE
PCC      DC    C'1'                    CARRIAGE CONTROL
PRT      DC    0CL79' '                PRINT DATA
PSYM     DS    CL8
         DC    CL4'  '
PLANG    DS    CL3
         DC    CL65' '
*
*
*
         DS    0F
BLDLIST  DS    0CL62                   BLDL LIST
         DC    H'1'                    ONE ENTRY
         DC    H'58'                   LENGTH OF ENTRY
MEMBER   DC    CL8' '                  MEMBER NAME
TTRMOD   DC    XL3'000000'             TTR OF MODULE
CCAT     DC    XL1'00'                 CONCATENATION NUMBER
         DC    XL1'00'
ALIASIND DC    XL1'00'                 ALIAS AND MISC INDICATOR
*                           80=ALIAS
TTR1TXT  DC    XL3'000000'             TTR OF 1ST TXT RECORD
         DC    XL1'00'
TTRNS    DC    XL3'000000'             TTR OF NOTE OR SCATTER LIST
NNOTE    DC    XL1'00'                 NBR ENTRIES IN NOTE LIST
ATTR1A   DC    XL1'00'                 MODULE ATTRIBUTES 1, BYTE 1
*                           80=RENT
*                           40=REUS
*                           20=OVERLAY
*                           10=UNDER TEST
*                           08=ONLY LOADABLE
*                           04=SCATTER FORMAT
*                           02=EXECUTABLE
*                           01=ONE TXT, NO RLD RECORDS
ATTR1B   DC    XL1'00'                 ATTRIBUTES 1, BYTE 2
*                           80=CANNOT BE REPROCESSED BY LKED E
*                           40=ORIGIN OF 1ST TXT RECORD IS ZERO
*                           20=ASSIGNED ENTRY POINT ADDR IS ZERO
*                           10=CONTAINS NO RLD RECORD
*                           08=CANNOT BE REPROCESSED BY LKED
*                           04=CONTAINS TESTRAN SYMBOLS
*                           02=CREATED BY LKED
*                           01=REFR
TOTVIRT  DC    XL3'000000'             TOTAL VIRTUAL STRG REQRD FOR MOD
LENG1    DC    XL2'0000'               LENGTH OF 1ST TEXT RECORD
LKEPA    DC    XL3'000000'             ASSIGNED ENTRY POINT ADDR
ATTR2    DC    XL1'00'                 ATTRIBUTES 2
*                           80=PROCESSED BY OS/VS LKED
*                           20=PAGE ALIGNMENT REQUIRED FOR MODULE
*                           10=SSI PRESENT
         DC    XL2'0000'
SCTRLEN  DC    XL2'0000'               SCATTER LIST LENGTH
TTLEN    DC    XL2'0000'               TRANSLATION TABLE LENGTH
SCESDID  DC    XL2'0000'               CESD NBR FOR 1ST TXT RECD
SCEPESD  DC    XL2'0000'               CESD NBR FOR ENTRY POINT
ALEPA    DC    XL3'000000'             ENTRY POINT OF THE MEMBER NAME
ALMEM    DC    CL8' '                  REAL MEMBER NAME FOR ALIAS
SSI      DS    XL4'00000000'           SSI BYTES
AUTHLEN  DC    XL1'00'                 AUTH CODE LENGTH
AUTHCOD  DC    XL1'00'                 AUTH CODE
*
*
*
SYMTBL   DSECT ,                       EXTERNAL SYMBOL TABLE ENTRY
SYMENT   DS    0CL20                   20 BYTE ENTRIES
EXTSYM   DS    CL8                     EXTERNAL SYMBOL NAME
TYPSYM   DS    XL1                     SYMBOL TYPE
*                        00=SD (NAMED CSECT)
*                        02=ER (EXTRN)
*                        03=LR (ENTRY)
*                        04=PC (UNNAMED CSECT)
*                        05=CM (COM)
*                        06=PR (PSEUDO REGISTER)
*                        07=NULL
*                        0A=WX (WXTRN)
*                        0F=ENTAB OR SEGTAB
SYMIND   DS    XL1                     INDICATOR
*                        BIT 0 = MAP
*                        BIT 1 = CHAIN
*                        BIT 2 = INSERT
*                        BIT 3 = DELETE/REPLACE
SYMADDR  DS    XL3                     SYMBOL ADDRESS (0 FOR ER, WX, NU
SYMSEG   DS    XL1                     SEGMENT ID (0 FOR ER, WX, NULL)
SYMLRID  DS    0XL2                    ESD ID OF DEF FOR LR
SYMLENG  DS    XL3                     LENGTH FOR SD, PC, CM, PR
*                        0 FOR ER, WX, NULL
SYMESDID DS    XL2                     ESD ID OF THIS ITEM
SYMPGMTY DS    CL1                     PROGRAM TYPE, C=COBOL, A=ASM
PGMTYPE  CSECT
*
*
*
COBOLEP  DC    X'90ECD00C185D05F04580F010'
COBOLEP2 DC    X'0700989FF02407FF'
BUFAD    DS    F                       SYSLIB BUFFER ADDR
SYMTBAD  DS    F                       SYMBOL TABLE ADDRESS
CURRSYM  DS    F                       CURRENT SYM TBL ADDR
ENDSYM   DC    F'38000'                SYM TBL END ADDR
PROCESS  DC    XL1'00'                 PROCESS INDIC 40=LAST RECD
CES9     DS    F                       CESDREC RETURN ADDR
BL9      DS    F                       BLDL RTN RETURN ADDR
CR9      DS    F                       CTRLRECS RETURN ADDR
CT9      DS    F                       CNTLRECS RETURN ADDR
RL9      DS    F                       RLDRECS RETURN ADDR
TX9      DS    F                       TXTFMT RETURN ADDR
HIVAL    DC    4X'FF'                  CONSTANT F'S
H1000    DC    H'1000'                 CONSTANT 1000
H100     DC    H'100'                  CONSTANT 100
H10      DC    H'10'                   CONSTANT 10
SYMLEN   DC    AL2(L'SYMENT)           LENGTH OF SYMTBL ENTRY
PRTABL   DS    CL9                     HEX-PRINTABLE CONVERSION AREA
P0       DC    P'0'                    CONSTANT 0
P1       DC    P'1'                    CONSTANT 1
P58      DC    P'58'                   CONSTANT 58
*
*
*
H1       DC    H'1'                    CONSTANT 1
H5       DC    H'5'                    CONSTANT 5
H11      DC    H'11'                   CONSTANT 11
H16      DC    H'16'                   CONSTANT 16
H256     DC    H'256'                  CONSTANT 256
BLANX    DC    CL121' '                CONSTANT BLANKS
XZROS    DC    8X'00'                  CONSTANT ZEROS
TRTBL    DC    C'0123456789ABCDEF'     TRANSLATE TBL
NOCNTRL  DC    C'MEMBER AND CSECT MUST BE ENTERED VIA PARM'
OVER8    DC    C'MEMBER OR CSECT NAME OVER 8 CHARACTERS'
NOMEM    DC    C'NO MEMBER NAME FOUND IN CONTROL CARD OR PARM'
INVMEM   DC    C'SPECIFIED MEMBER NOT FOUND IN SYSLIB PDS'
INVCSECT DC    C'SPECIFIED CSECT NOT FOUND IN MEMBER'
FULLSYM  DC    C'SYMBOL TABLE FULL: OVER 2000 ENTRIES'
POFSET   DC    F'0'                    OFFSET FOR TEXT PRINT
PRTCHAR  DC    256C'.'                 CHARACTER TRANSLATE TABLE
         ORG   PRTCHAR+C' '
         DC    C' '
         ORG   PRTCHAR+C'A'
         DC    C'ABCDEFGHI'
         ORG   PRTCHAR+C'J'
         DC    C'JKLMNOPQR'
         ORG   PRTCHAR+C'S'
         DC    C'STUVWXYZ'
         ORG   PRTCHAR+C'0'
         DC    C'0123456789'
         ORG
*
*
*
SYSLIB   DCB   DSORG=PO,MACRF=R,DDNAME=SYSLIB,                         X
               RECFM=U,NCP=1
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FBA,LRECL=80
         END
