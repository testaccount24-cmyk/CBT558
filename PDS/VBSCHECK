         TITLE '***** CHECK A VBS FILE AND PRINT STATISTICS *****'
         PRINT NOGEN
VBSCHECK SVLNK R3,R4
**********************************************************************
*  READ A VBS DATASET, CONSTRUCT RECORDS AND PRINT STATISTICS.       *
*                                                                    *
*  DDNAME RECFM LRECL IN/OUT CONTENT                                 *
*  INPUT1   VBS 32760+INPUT  VBS DATA  (LOGICAL RECORDS BUILT BY PGM)*
*  PRINT1    FB    80 LISTING OUTPUT                                 *
*                                                                    *
*  AUTHOR R. THORNTON MAY 1992                                       *
**********************************************************************
*
***********************************************************************
*        INITIALIZATION                                               *
***********************************************************************
OPENS    OPEN  (PRINT1,OUTPUT,INPUT1)   OPEN FILES
         L     R2,=F'65536'             GET VBS RECORD AREA LENGTH
         STORAGE OBTAIN,LENGTH=(2),ADDR=VBSRECDA GET VBS RECD AREA
***********************************************************************
*        MAINLINE PROCESSING                                          *
***********************************************************************
MAINLINE BAS   R9,GETVBS                GET INPUT AREA ADDRESS
         L     R15,RECDCNT              ADD 1
         LA    R15,1(R15)                  TO RECORD
         ST    R15,RECDCNT                    COUNTER
         CLC   VBSLEN,MAXSIZE           THIS RECORD LONGEST SO FAR?
         BNH   CHKSHRT                  NO
         MVC   MAXSIZE,VBSLEN           YES, SAVE LONGEST SIZE
CHKSHRT  CLC   VBSLEN,MINSIZE           THIS THE SHORTEST SO FAR?
         BNL   CHKMORE                  NO
         MVC   MINSIZE,VBSLEN           YES, SAVE SHORTEST SIZE
CHKMORE  B     MAINLINE                 CONTINUE
***********************************************************************
*        ASSEMBLE NEXT VBS RECORD IN VBSRECD (GOTTEN) AREA            *
*        ON RETURN, R10 WILL POINT TO THE NEXT VBS RECORD, FULLY      *
*        ASSEMBLED. RECORD LENGTH WILL BE RIGHT JUSTIFIED IN THE      *
*        VBSLEN FULLWORD. DO NOT USE THE RDW OF THE RECORD AREA, AS   *
*        THIS WILL ONLY BE ACCURATE FOR RECORDS CONTAINED COMPLETELY  *
*        IN ONE BLOCK WHICH ARE PROCESSED IN THE INPUT BLOCK.         *
***********************************************************************
GETVBS   GET   INPUT1                   READ NEXT VBS SEGMENT
         CLI   2(R1),X'01'              IS IT FIRST SEGMENT OF A RECD?
         BH    GETVBS                   NO
SAVADLN  ST    R1,LASTSEGA              SAVE ITS ADDRESS
         LH    R2,0(R1)                 GET RECORD LENGTH
         ST    R2,VBSLEN                AND SAVE IT
         CLI   2(R1),X'00'              IS IT A COMPLETE RECORD?
         BH    GOTFIRST                 NO
         LR    R10,R1                   COPY RECORD ADDRESS
         BR    R9                       RETURN
GOTFIRST L     R10,VBSRECDA             R10 ALWAYS POINTS TO VBS RECD
         LR    R14,R1                   COPY SEGMENT ADDRESS
         LH    R15,0(R14)               GET SEGMENT LENGTH
         LR    R1,R15                   COPY LENGTH
         LR    R0,R10                   COPY RECORD AREA ADDRESS
         MVCL  R0,R14                   MOVE 1ST SEGMENT TO AREA
GETSEGMT GET   INPUT1                   GET NEXT SEGMENT OF RECORD
         ST    R1,LASTSEGA              SAVE ITS ADDRESS
         CLI   2(R1),X'01'              FIRST SEGMENT AGAIN?
         BH    OKNOT1                   NO
         WTO   'VBSCHECK: SEGMENT 1 FOUND BEFORE END OF RECORD',       X
               ROUTCDE=11
         ABEND 111,DUMP
OKNOT1   CLI   2(R1),X'04'              VALID SEGMENT TYPE?
         BL    GOTMIDL                  YES
         WTO   'VBSCHECK: INVALID SEGMENT TYPE IN RECORD',             X
               ROUTCDE=11
         ABEND 222,DUMP
GOTMIDL  LA    R14,4(0,R1)              COPY SEGMENT (DATA) ADDRESS
         LH    R2,2(R1)                 GET SEGMENT LENGTH
         SH    R2,=H'4'                 DEDUCT RDW SIZE
         LR    R1,R2                    COPY LENGTH FOR MOVE
         LR    R15,R1                   COPY LENGTH
         LR    R0,R10                   COPY RECORD AREA ADDRESS
         A     R0,VBSLEN                COMPUTE JOIN POINT ADDRESS
         A     R2,VBSLEN                COMPUTE LENGTH SO FAR
         C     R2,=F'65536'             WILL IT EXCEED AREA SIZE?
         BL    SETLENG                  NO, OK TO CONTINUE
         WTO   'VBSCHECK: RECORD EXCEEDS 65536 BYTES, AREA OVERFLOW',  X
               ROUTCDE=11
         ABEND 333,DUMP
SETLENG  ST    R2,VBSLEN                UPDATE LENGTH
         MVCL  R0,R14                   MOVE THIS SEGMENT TO AREA
         L     R1,LASTSEGA              POINT TO THIS SEGMENT
         CLI   2(R1),X'03'              IS IT AN INTERMEDIATE SEGMENT?
         BE    GETSEGMT                 YES
         BR    R9                       NO, LAST SEGMENT, RETURN
*
***********************************************************************
*        END OF JOB                                                   *
***********************************************************************
EOJ      L     R1,RECDCNT              GET RECORD COUNTER
         CVD   R1,DBLWD                CONVERT
         MVC   PRTCNT,=X'402020206B2020206B202120'
         ED    PRTCNT,DBLWD+3
         MVC   PRTRSN,=CL44'RECORDS READ FROM INPUT DATASET'
         PUT   PRINT1,PRT
         L     R1,MAXSIZE              GET MAXIMUM RECORD SIZE
         CVD   R1,DBLWD                CONVERT
         MVC   PRTCNT,=X'402020206B2020206B202120'
         ED    PRTCNT,DBLWD+3
         MVC   PRTRSN,=CL44'BYTES IN LONGEST RECORD READ'
         PUT   PRINT1,PRT
         L     R1,MINSIZE              GET MINIMUM RECORD SIZE
         CVD   R1,DBLWD                CONVERT
         MVC   PRTCNT,=X'402020206B2020206B202120'
         ED    PRTCNT,DBLWD+3
         MVC   PRTRSN,=CL44'BYTES IN SHORTEST RECORD READ'
         PUT   PRINT1,PRT
         CLOSE (PRINT1,,INPUT1)        CLOSE FILES
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         L     R14,12(R13)             PICK UP RETURN ADDRESS
         L     R15,RETCODE             GET RETURN CODE
         LM    R0,R12,20(R13)          RESTORE CALLER'S REGS
         BR    R14                     RETURN TO CALLER
***********************************************************************
*        DATA DEFINITIONS                                             *
***********************************************************************
DBLWD    DS    D                       WORK AREA
RETCODE  DC    F'0'                    RETURN CODE
P1       DC    PL1'1'                   CONSTANT 1
RECDCNT  DC    F'0'                     INPUT RECORD COUNTER
MAXSIZE  DC    F'0'                     MAX RECORD SIZE FOUND
MINSIZE  DC    X'7FFFFFFF'              MINIMUM SIZE RECORD FOUND
VBSRECDA DS    A                       POINTER TO VBS RECORD AREA
VBSLEN   DS    F                       TOTAL VBS RECORD LENGTH
LASTSEGA DS    A                       ADDRESS OF LAST VBS SEGMENT
*
PRT      DS    0CL80
PRTCNT   DC    CL12' '                 COUNT
         DC    CL1' '
PRTRSN   DC    CL44' '                 DSNAME
         DC    CL25' '
***********************************************************************
*        FILE DEFINITIONS                                             *
***********************************************************************
INPUT1   DCB   DSORG=PS,MACRF=GL,DDNAME=INPUT1,EODAD=EOJ,              X
               RECFM=VBS,LRECL=X
PRINT1   DCB   DSORG=PS,MACRF=PM,DDNAME=PRINT1,                        X
               RECFM=FB,LRECL=80
         LTORG
         END
