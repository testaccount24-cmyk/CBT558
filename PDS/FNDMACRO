FNDMACRO SVLNK R3
***********************************************************************
* THIS PROGRAM SCANS AN ASSEMBLER SOURCE PDS FOR MACROS AND COPY      *
* STATEMENTS.                                                         *
*                                                                     *
* EACH INPUT RECORD IS SCANNED TO LOCATE THE OPERATION CODE MNEMONIC  *
* MNEMONIC. IF THE MNEMONIC FOUND IS 'COPY', A FURTHER SCAN IS MADE TO*
* EXTRACT THE OPERAND. IF NOT COPY, AN OP-CODE TABLE LOOK-UP IS PER-  *
* FORMED TO SEE IF THE MNEMONIC IS AN INSTRUCTION. WHEN THE MNEMONIC  *
* IS NOT FOUND IN THE INSTRUCTION TABLE, A MACRO IS ASSUMED.          *
* WHEN A MACRO OR COPY STATEMENT IS FOUND, AN IN-STORAGE TABLE IS     *
* ACCESSED, AND AN ENTRY IS MADE FOR THE MACRO IF IT DID NOT EXIST    *
* BEFORE. IF IT DID EXIST, A COUNTER IS INCREMENTED.                  *
* WHEN ALL PDS MEMBERS HAVE BEEN PROCESSED, THE IN-STORAGE TABLE IS   *
* PRINTED, SHOWING THE MACRO NAME (OR COPY OPERAND), WITH THE COUNT OF*
* NUMBER OF USES FOUND.                                               *
* A DETAIL LISTING IS WRITTEN TO THE DETAIL FILE. IF NOT NEEDED, THIS *
* FILE CAN BE DUMMIED.                                                *
* AUTHOR R THORNTON SEP 2001 (BASED ON PROGRAM FNDALLMC)              *
***********************************************************************
**********************************************************************
* INITIALIZATION: OPEN FILES                                         *
**********************************************************************
OPENS    OPEN  (MACROS,OUTPUT,DETAIL,OUTPUT) OPEN OUTPUT FILES
         CALL  READDIR,OPEN            OPEN DIRECTORY FILE
         CALL  READMEM,OPEN            OPEN MEMBERS FOR INPUT
         STORAGE OBTAIN,LENGTH=60000   GET TABLE STORAGE
         ST    R1,TBLADDR              SAVE THE ADDRESS
         MVI   0(R1),X'FF'             SET TABLE STOPPER
         A     R1,=F'59986'            COMPUTE END ADDRESS
         ST    R1,TBLENDA              SAVE END ADDRESS
**********************************************************************
* MAINLINE: READ INPUT PDS DIRECTORY TO EXHAUSTION. FOR EACH MEMBER, *
* READ ALL RECORDS AND CALL THE SCAN ROUTINE TO SEARCH FOR MACROS    *
* AND COPY STATEMENTS. IF ANY ARE FOUND, CALL THE TABLE ROUTINE TO   *
* BUILD OR UPDATE THE ENTRY FOR THE MACRO/COPY.                      *
**********************************************************************
MAINLINE EQU   *
NEXDIR   BAL   R9,READDIR              GET NEXT DIRECTORY ENTRY
         CLI   DIRCTY,X'FF'            END OF DIRECTORY?
         BE    EOJ                     YES, PDS PROCESSING COMPLETE
NEXREC   BAL   R9,READMEM              READ NEXT RECORD IN MEMBER
         CLI   RECORD,X'FF'            END OF MEMBER?
         BE    MAINLINE                YES, GO TO NEXT MEMBER
         LA    R1,RECORD               NO, POINT TO START OF RECORD
         CLI   CONTIN,C' '             THIS A CONTINUATION?
         MVC   CONTIN,INCONT           MOVE IN CONTINUATION BYTE
         BNE   NEXREC                  YES, GO READ NEXT RECORD
         CLI   RECORD,C' '             ANY LABEL
         BE    NOLBL                   NO
         CLI   RECORD,C'*'             IS IT A COMMENT?
         BE    NEXREC                  YES, GO READ NEXT RECORD
         CLC   RECORD(2),=C'.*'        IS IT A COMMENT
         BE    NEXREC                  YES, GO READ NEXT RECORD
         LA    R14,RECORD              POINT TO 1ST BYTE OF LABEL
         TRT   RECORD(9),FINDBLNK      LOCATE BLANK AFTER LABEL
         BZ    NEXREC                  DROP RECORD IF NOT FOUND
         C     R1,ENDIN                PAST END OF RECORD?
         BNL   NEXREC                  YES, SKIP THE RECORD
         MVC   OUTOPER,BLANX           CLEAR MNEMONIC FIELD
         LR    R15,R1                  SAVE POINTER PAST LABEL
         SR    R1,R14                  COMPUTE LENGTH
         BCTR  R1,0                    COMPUTE LENGTH CODE
         LTR   R1,R1                   NEGATIVE LENGTH CODE?
         BM    NEXREC                  YES, DROP THE RECORD
         CH    R1,=H'7'                OVER 8 BYTES?
         BH    NEXREC                  YES, SKIP IT
         EX    R1,MVOPCD               O.K., MOVE THE LABEL
         TRT   OUTOPER(1),VALIDNM1     POSSIBLE VALID NAME?
         BNZ   NEXREC                  NO, IGNORE IT
         TRT   OUTOPER+1(7),VALIDNM2   IS OPERATION A VALID NAME?
         BNZ   NEXREC                  NO, IGNORE IT
         LR    R1,R15                  POINT TO BLANK AFTER LABEL
NOLBL    TRT   1(72,R1),FINDNONB       LOCATE MNEMONIC
         BZ    NEXREC                  DROP RECORD IF NOT FOUND
         C     R1,ENDIN                PAST END OF RECORD?
         BNL   NEXREC                  YES, SKIP THE RECORD
         LR    R14,R1                  SAVE MNEMONIC START ADDR
         TRT   1(72,R1),FINDBLNK       FIND NEXT BLANK
         BZ    NEXREC                  DROP RECORD IF NOT FOUND
         C     R1,ENDIN                PAST END OF RECORD?
         BNL   NEXREC                  YES, SKIP THE RECORD
MVOPERCD MVC   OUTOPER,BLANX           CLEAR MNEMONIC FIELD
         LR    R15,R1                  SAVE POINTER PAST MNEMONIC
         SR    R1,R14                  COMPUTE LENGTH
         BCTR  R1,0                    COMPUTE LENGTH CODE
         LTR   R1,R1                   NEGATIVE LENGTH CODE?
         BM    NEXREC                  YES, DROP THE RECORD
         CH    R1,=H'7'                OVER 8 BYTES?
         BH    NEXREC                  YES, SKIP IT
         EX    R1,MVOPCD               O.K., MOVE THE MNEMONIC
         TRT   OUTOPER(1),VALIDNM1     POSSIBLE VALID NAME?
         BNZ   NEXREC                  NO, IGNORE IT
         TRT   OUTOPER+1(7),VALIDNM2   IS OPERATION A VALID NAME?
         BNZ   NEXREC                  NO, IGNORE IT
         CLC   OUTOPER,=CL8'COPY'      IS IT A COPY STATEMENT?
         BE    COPYSTMT                YES
         CLI   RECORD,C' '             PROGRAMMER MACRO HEADER?
         BNE   CKPGMR                  NO
         CLC   OUTOPER,=CL8'MACRO'     PROGRAMMER MACRO HEADER?
         BNE   CKPGMR                  NO
         MVI   MACROHDR,1              YES, SET FLAG FOR NEXT
         B     NEXREC                  AND GO TO NEXT CARD
CKPGMR   CLI   MACROHDR,1              EXPECTING PROGRAMMER MACRO?
         BNE   CKOPCD                  NO
         MVI   MACROHDR,0              YES, CLEAR INDICATOR
         MVI   OUTYPE,C'P'             INDICATE PROGRAMMER MACRO
         B     MVLINE
CKOPCD   LA    R11,OCTBL               OP CODE TABLE ADDRESS
         MVI   MACROHDR,0              CLEAR INDICATOR
OPLKUP   CLC   OUTOPER,0(R11)          FOUND OP CODE IN TBL
         BE    NEXREC                  YES, SKIP THE CARD
         LA    R11,8(R11)              STEP TO NEXT ENTRY
         CLI   0(R11),X'FF'            END OF TABLE
         BNE   OPLKUP                  NO, CONTINUE SEARCH
         MVI   OUTYPE,C'M'             SET TYPE=M (MACRO)
MVLINE   L     R1,TBLADDR              POINT TO TABLE START
         MVI   MACROHDR,0              CLEAR INDICATOR
TSTEOT   CLI   0(R1),X'FF'             END OF TABLE?
         BE    NEWNTRY                 YES, NEW ENTRY
         CLC   0(9,R1),OUTNTRY         FOUND AN ENTRY?
         BE    ADD1                    YES
TBLSTEP  LA    R1,12(R1)               NO, ADVANCE TO NEXT
         C     R1,TBLENDA              PAST END OF TABLE?
         BNH   TSTEOT                  NO
         WTO   'FNDMACRO: TABLE OVERFLOW, EXPAND AND RERUN',ROUTCDE=11
         ABEND 777,DUMP                TERMINATE IN ERROR
ADD1     SR    R15,R15                 CLEAR FOR INSERT
         ICM   R15,7,9(R1)             PICK UP COUNT
         LA    R15,1(R15)              ADD 1
         STCM  R15,7,9(R1)             UPDATE COUNTER
         B     WRTDET                  GO TO NEXT INPUT RECORD
NEWNTRY  MVC   0(13,R1),OUTNTRY        MACRO/COPY ENTRY TO TABLE
WRTDET   MVC   DETNAME,0(R1)           MACRO NAME
         MVC   DETTYPE,8(R1)           MACRO TYPE
         MVC   DETMBR,MEMNAME          MEMBER NAME
         UNPK  DETNBR,LINES            MEMBER LINE NBR
         OI    DETNBR+7,C'0'           CLEAR SIGN
         PUT   DETAIL,DETREC
         B     NEXREC                  GO READ NEXT RECORD
COPYSTMT MVI   OUTYPE,C'C'             SET TYPE=C (COPY)
         TRT   1(72,R15),FINDNONB      POINT TO OPERAND START
         BZ    NEXREC                  COULDN'T FIND IT
         C     R2,ENDIN                PAST END OF CARD?
         BNL   NEXREC                  YES, GO TO NEXT CARD
         LR    R14,R1                  COPY OPERAND START
         TRT   1(72,R1),FINDBLNK       FIND NEXT BLANK
         BZ    NEXREC                  DROP RECORD IF NOT FOUND
         C     R1,ENDIN                PAST END OF RECORD?
         BNL   NEXREC                  YES, SKIP THE RECORD
         MVC   OUTOPER,BLANX           CLEAR NAME FIELD
         SR    R1,R14                  COMPUTE LENGTH
         BCTR  R1,0                    COMPUTE LENGTH CODE
         LTR   R1,R1                   NEGATIVE LENGTH CODE?
         BM    NEXREC                  YES, DROP THE RECORD
         CH    R1,=H'7'                OVER 8 BYTES?
         BH    NEXREC                  YES, SKIP IT
         EX    R1,MVOPCD               O.K., MOVE THE OPERAND
         TRT   OUTOPER(1),VALIDNM1     POSSIBLE VALID NAME?
         BNZ   NEXREC                  NO, IGNORE IT
         TRT   OUTOPER+1(7),VALIDNM2   IS OPERATION A VALID NAME?
         BNZ   NEXREC                  NO, IGNORE IT
         B     MVLINE                  GO ENTER IN TABLE
MVOPCD   MVC   OUTOPER(1),0(R14)       MOVE MNEMONIC (EXECUTED)
**********************************************************************
* READDIR: READ NEXT DIRECTORY ENTRY. IF AN ENTRY IS FOUND, POSITION *
* TO THE BEGINNING OF THE MEMBER.                                    *
**********************************************************************
READDIR  CALL  READDIR,(READ,DIRCTY)   READ DIRECTORY RECORD
         CLI   DIRCTY,X'FF'            END OF DIRECTORY
         BE    RDXIT                   YES, JUST EXIT
         ZAP   LINES,P0                CLEAR LINE COUNTER
         MVC   FINDTTR,MEMTTR          TTR TO FIND PARAMETER
         CALL  READMEM,FIND            GO FIND MEMBER
RDXIT    BR    R9                      RETURN
**********************************************************************
* READMEM: READ NEXT RECORD FROM THE CURRENT PDS MEMBER.             *
**********************************************************************
READMEM  CALL  READMEM,(READ,RECORD)   READ NEXT RECORD
         AP    LINES,P1                INCREMENT LINE COUNTER
         BR    R9                      RETURN
**********************************************************************
* EOJ: PRINT OUT THE MACRO TABLE, CLOSE FILES, AND RETURN TO CALLER  *
**********************************************************************
EOJ      MVC   MACREC,BLANX            CLEAR PRINT LINE
         L     R9,TBLADDR              POINT TO TABLE START
EOJTSTND CLI   0(R9),X'FF'             END OF TABLE?
         BE    EOJ2                    YES, ALL THROUGH
         MVC   MACNAME,0(R9)           MACRO/COPY NAME TO PRINT LINE
         MVC   MACTYPE,8(R9)           TYPE (M OR C)
         MVC   MACNBR,EDITWORD         MOVE EDIT WORD
         SR    R1,R1                   CLEAR FOR INSERT
         ICM   R1,7,9(R9)              GET COUNT
         CVD   R1,DBLWD                CONVERT TO PACKED DECIMAL
         ED    MACNBR,DBLWD+3          NUMBER OF OCCURRENCES TO PRINT
         PUT   MACROS,MACREC           WRITE PRINT LINE
         LA    R9,12(R9)               ADVANCE TO NEXT ENTRY
         B     EOJTSTND                LOOP THROUGH TABLE
EOJ2     CALL  READDIR,CLOSE           CLOSE DIRECTORY FILE
         CALL  READMEM,CLOSE           CLOSE MEMBER FILE
         CLOSE (MACROS,,DETAIL)        CLOSE OUTPUT FILES
         L     R13,4(R13)              GET CALLER'S SAVE POINTER
         LM    R14,R12,12(R13)         RESTORE HIS REGS
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN TO CALLER
**********************************************************************
* DATA AND FILE AREAS                                                *
**********************************************************************
DBLWD    DS    D                       DOUBLEWORD WORK AREA
TBLADDR  DC    A(0)                    TABLE ADDRESS
TBLENDA  DC    A(0)                    TABLE END ADDRESS
FIRSTSW  DC    X'01'                   FIRST TIME SWITCH
TESTNUM  DC    CL6'000000'             WORK FIELD
BLANX    DC    CL80' '                 BLANKS
CONTIN   DC    X'00'                   CONTINUED CARD INDIC
MACROHDR DC    X'00'                   MACRO HEADER INDICATOR
ENDIN    DC    A(INCONT)               ADDR OF LAST INPUT DATA COLUMN
EDITWORD DC    XL12'402020206B2020206B202120'
LINES    DC    PL5'0'                  NBR LINES IN MEMBER
P0       DC    P'0'                    CONSTANT 0
P1       DC    P'1'                    CONSTANT 1
*
OUTNTRY  DS    0CL13                   NEW TABLE ENTRY
OUTOPER  DC    CL8' '                    MACRO/COPY NAME
OUTYPE   DC    CL1' '                    TYPE (M OR C)
         DC    FL3'1'                    INITIAL COUNT
         DC    X'FF'                     TABLE STOPPER
*
RECORD   DS    0CL80                   INPUT CARD
         DC    CL71' '
INCONT   DC    CL1' '                  CONTINUATION COLUMN
INSEQ    DC    CL8' '                  SEQUENCE NUMBER
*
OPEN     DC    CL9'OINPUT1'            OPEN PARAMETER
READ     DC    C'R'                    READ PARAMETER
CLOSE    DC    C'C'                    CLOSE PARAMETER
*
DIRCTY   DS    0CL11                   READ DIRECTORY PARAMETER
MEMNAME  DS    CL8                     MEMBER NAME
MEMTTR   DS    XL3                     TTR OF MEMBER
*
FIND     DS    0CL5                    FIND PARAMETER
         DC    C'FT'                   FIND BY TTR
FINDTTR  DS    XL3                     TTR TO FIND
*
MACREC   DS    0CL80                   OUTPUT RECORD
MACNAME  DC    CL8' '                    NAME OF MACRO OR COPY BOOK
         DC    CL1' '
MACTYPE  DS    CL1' '                    M, C, OR P
MACNBR   DS    CL12' '                   COUNT: ZZZ,ZZZ,ZZ9
         DC    CL58' '
*
DETREC   DS    0CL80                   OUTPUT RECORD
         DC    CL6'MACRO='
DETNAME  DC    CL8' '                    NAME OF MACRO OR COPY BOOK
         DC    CL7', TYPE='
DETTYPE  DS    CL1' '                    M, C, OR P
         DC    CL9', MEMBER='
DETMBR   DS    CL8' '                    MEMBER NAME
         DC    CL7', LINE='
DETNBR   DS    CL8' '                    LINE NUMBER IN MEMBER
         DC    CL26' '
*
MACROS DCB     DSORG=PS,MACRF=PM,DDNAME=MACROS,                        X
               RECFM=FB,LRECL=80
DETAIL DCB     DSORG=PS,MACRF=PM,DDNAME=DETAIL,                        X
               RECFM=FB,LRECL=80
*
VALIDNM1 DC    256X'FF'           USE TO VALIDATE 1ST BYTE OF NAME
         ORG   VALIDNM1+X'50'        AMPERSAND
         DC    X'00'
         ORG   VALIDNM1+C'$'
         DC    X'00'
         ORG   VALIDNM1+C'@'
         DC    X'00'
         ORG   VALIDNM1+C'#'
         DC    X'00'
         ORG   VALIDNM1+C'A'
         DC    9X'00'
         ORG   VALIDNM1+C'J'
         DC    9X'00'
         ORG   VALIDNM1+C'S'
         DC    9X'00'
         DC    X'FF'
         ORG
*
VALIDNM2 DC    256X'FF'           USE TO VALIDATE NAME BYTES 2-8
         ORG   VALIDNM2+C' '
         DC    X'00'
         ORG   VALIDNM2+C'$'
         DC    X'00'
         ORG   VALIDNM2+C'@'
         DC    X'00'
         ORG   VALIDNM2+C'#'
         DC    X'00'
         ORG   VALIDNM2+C'A'
         DC    9X'00'
         ORG   VALIDNM2+C'J'
         DC    9X'00'
         ORG   VALIDNM2+C'S'
         DC    9X'00'
         ORG   VALIDNM2+C'0'
         DC    10X'00'
         DC    X'FF'
         ORG
*
FINDBLNK DC    256X'00'           TRT TABLE TO SCAN FOR BLANK
         ORG   FINDBLNK+C' '
         DC    X'FF'
         ORG
*
FINDNONB DC    256X'FF'           TRT TABLE TO SCAN FOR NON-BLANK
         ORG   FINDNONB+C' '
         DC    X'00'
         ORG
         LTORG
*
OCTBL    DS    0CL8              TABLE OF INSTRUCTIONS MNEMONICS,
         DC    CL8'A'               EXTENDED MNEMONICS, AND
         DC    CL8'ACTR'            ASSEMBLER INSTRUCTIONS
         DC    CL8'AD'
         DC    CL8'ADR'
         DC    CL8'AE'
         DC    CL8'AER'
         DC    CL8'AGO'
         DC    CL8'AH'
         DC    CL8'AIF'
         DC    CL8'AL'
         DC    CL8'ALR'
         DC    CL8'AMODE'
         DC    CL8'ANOP'
         DC    CL8'AP'
         DC    CL8'AR'
         DC    CL8'AREAD'
         DC    CL8'AU'
         DC    CL8'AUR'
         DC    CL8'AW'
         DC    CL8'AWR'
         DC    CL8'AXR'
         DC    CL8'B'
         DC    CL8'BAKR'
         DC    CL8'BAL'
         DC    CL8'BALR'
         DC    CL8'BAS'
         DC    CL8'BASR'
         DC    CL8'BASSM'
         DC    CL8'BC'
         DC    CL8'BCR'
         DC    CL8'BCT'
         DC    CL8'BCTR'
         DC    CL8'BE'
         DC    CL8'BER'
         DC    CL8'BH'
         DC    CL8'BHR'
         DC    CL8'BL'
         DC    CL8'BLR'
         DC    CL8'BM'
         DC    CL8'BM'
         DC    CL8'BMR'
         DC    CL8'BMR'
         DC    CL8'BNE'
         DC    CL8'BNER'
         DC    CL8'BNH'
         DC    CL8'BNHR'
         DC    CL8'BNL'
         DC    CL8'BNLR'
         DC    CL8'BNM'
         DC    CL8'BNM'
         DC    CL8'BNMR'
         DC    CL8'BNMR'
         DC    CL8'BNO'
         DC    CL8'BNO'
         DC    CL8'BNOR'
         DC    CL8'BNOR'
         DC    CL8'BNP'
         DC    CL8'BNPR'
         DC    CL8'BNZ'
         DC    CL8'BNZ'
         DC    CL8'BNZR'
         DC    CL8'BNZR'
         DC    CL8'BO'
         DC    CL8'BO'
         DC    CL8'BOR'
         DC    CL8'BOR'
         DC    CL8'BP'
         DC    CL8'BPR'
         DC    CL8'BR'
         DC    CL8'BSM'
         DC    CL8'BXH'
         DC    CL8'BXLE'
         DC    CL8'BZ'
         DC    CL8'BZ'
         DC    CL8'BZR'
         DC    CL8'BZR'
         DC    CL8'C'
         DC    CL8'CCW'
         DC    CL8'CCW0'
         DC    CL8'CCW1'
         DC    CL8'CD'
         DC    CL8'CDR'
         DC    CL8'CDS'
         DC    CL8'CE'
         DC    CL8'CER'
         DC    CL8'CFC'
         DC    CL8'CH'
         DC    CL8'CL'
         DC    CL8'CLC'
         DC    CL8'CLCL'
         DC    CL8'CLI'
         DC    CL8'CLM'
         DC    CL8'CLR'
         DC    CL8'CNOP'
         DC    CL8'COM'
         DC    CL8'COPY'
         DC    CL8'CP'
         DC    CL8'CPYA'
         DC    CL8'CR'
         DC    CL8'CS'
         DC    CL8'CSCH'
         DC    CL8'CSECT'
         DC    CL8'CVB'
         DC    CL8'CVD'
         DC    CL8'CXD'
         DC    CL8'D'
         DC    CL8'DC'
         DC    CL8'DD'
         DC    CL8'DDR'
         DC    CL8'DE'
         DC    CL8'DER'
         DC    CL8'DP'
         DC    CL8'DR'
         DC    CL8'DROP'
         DC    CL8'DS'
         DC    CL8'DSECT'
         DC    CL8'DXD'
         DC    CL8'DXR'
         DC    CL8'EAR'
         DC    CL8'ED'
         DC    CL8'EDMK'
         DC    CL8'EJECT'
         DC    CL8'END'
         DC    CL8'ENTRY'
         DC    CL8'EPAR'
         DC    CL8'EQU'
         DC    CL8'EREG'
         DC    CL8'ESAR'
         DC    CL8'ESTA'
         DC    CL8'EX'
         DC    CL8'EXTRN'
         DC    CL8'GBLA'
         DC    CL8'GBLB'
         DC    CL8'GBLC'
         DC    CL8'HDR'
         DC    CL8'HER'
         DC    CL8'HSCH'
         DC    CL8'IAC'
         DC    CL8'IC'
         DC    CL8'ICM'
         DC    CL8'ICTL'
         DC    CL8'IPK'
         DC    CL8'IPM'
         DC    CL8'IPTE'
         DC    CL8'ISEQ'
         DC    CL8'ISKE'
         DC    CL8'IVSK'
         DC    CL8'L'
         DC    CL8'LA'
         DC    CL8'LAE'
         DC    CL8'LAM'
         DC    CL8'LASP'
         DC    CL8'LCDR'
         DC    CL8'LCER'
         DC    CL8'LCLA'
         DC    CL8'LCLB'
         DC    CL8'LCLC'
         DC    CL8'LCR'
         DC    CL8'LCTL'
         DC    CL8'LD'
         DC    CL8'LDR'
         DC    CL8'LE'
         DC    CL8'LER'
         DC    CL8'LH'
         DC    CL8'LM'
         DC    CL8'LNDR'
         DC    CL8'LNER'
         DC    CL8'LNR'
         DC    CL8'LOCTR'
         DC    CL8'LPDR'
         DC    CL8'LPER'
         DC    CL8'LPR'
         DC    CL8'LPSW'
         DC    CL8'LR'
         DC    CL8'LRA'
         DC    CL8'LRDR'
         DC    CL8'LRER'
         DC    CL8'LTDR'
         DC    CL8'LTER'
         DC    CL8'LTORG'
         DC    CL8'LTR'
         DC    CL8'LURA'
         DC    CL8'M'
         DC    CL8'MACRO'
         DC    CL8'MC'
         DC    CL8'MD'
         DC    CL8'MDR'
         DC    CL8'ME'
         DC    CL8'MEND'
         DC    CL8'MER'
         DC    CL8'MEXIT'
         DC    CL8'MH'
         DC    CL8'MHELP'
         DC    CL8'MNOTE'
         DC    CL8'MP'
         DC    CL8'MR'
         DC    CL8'MSCH'
         DC    CL8'MSTA'
         DC    CL8'MVC'
         DC    CL8'MVCDK'
         DC    CL8'MVCIN'
         DC    CL8'MVCK'
         DC    CL8'MVCL'
         DC    CL8'MVCP'
         DC    CL8'MVCS'
         DC    CL8'MVCSK'
         DC    CL8'MVI'
         DC    CL8'MVN'
         DC    CL8'MVO'
         DC    CL8'MVZ'
         DC    CL8'MXD'
         DC    CL8'MXDR'
         DC    CL8'MXR'
         DC    CL8'N'
         DC    CL8'NC'
         DC    CL8'NI'
         DC    CL8'NOP'
         DC    CL8'NOPR'
         DC    CL8'NR'
         DC    CL8'O'
         DC    CL8'OC'
         DC    CL8'OI'
         DC    CL8'OPSYN'
         DC    CL8'OR'
         DC    CL8'ORG'
         DC    CL8'PACK'
         DC    CL8'PALB'
         DC    CL8'PC'
         DC    CL8'POP'
         DC    CL8'PR'
         DC    CL8'PRINT'
         DC    CL8'PT'
         DC    CL8'PTLB'
         DC    CL8'PUNCH'
         DC    CL8'PUSH'
         DC    CL8'RCHP'
         DC    CL8'REPRO'
         DC    CL8'RMODE'
         DC    CL8'RRBE'
         DC    CL8'RSCH'
         DC    CL8'S'
         DC    CL8'SAC'
         DC    CL8'SAL'
         DC    CL8'SAR'
         DC    CL8'SCHM'
         DC    CL8'SCK'
         DC    CL8'SCKC'
         DC    CL8'SD'
         DC    CL8'SDR'
         DC    CL8'SE'
         DC    CL8'SER'
         DC    CL8'SETA'
         DC    CL8'SETB'
         DC    CL8'SETC'
         DC    CL8'SH'
         DC    CL8'SIE'
         DC    CL8'SIGP'
         DC    CL8'SL'
         DC    CL8'SLA'
         DC    CL8'SLDA'
         DC    CL8'SLDL'
         DC    CL8'SLL'
         DC    CL8'SLR'
         DC    CL8'SP'
         DC    CL8'SPACE'
         DC    CL8'SPKA'
         DC    CL8'SPM'
         DC    CL8'SPT'
         DC    CL8'SPX'
         DC    CL8'SR'
         DC    CL8'SRA'
         DC    CL8'SRDA'
         DC    CL8'SRDL'
         DC    CL8'SRL'
         DC    CL8'SRP'
         DC    CL8'SSAR'
         DC    CL8'SSCH'
         DC    CL8'SSKE'
         DC    CL8'SSM'
         DC    CL8'ST'
         DC    CL8'STAM'
         DC    CL8'STAP'
         DC    CL8'START'
         DC    CL8'STC'
         DC    CL8'STCK'
         DC    CL8'STCKC'
         DC    CL8'STCM'
         DC    CL8'STCPS'
         DC    CL8'STCRW'
         DC    CL8'STCTL'
         DC    CL8'STD'
         DC    CL8'STE'
         DC    CL8'STH'
         DC    CL8'STIDP'
         DC    CL8'STM'
         DC    CL8'STNSM'
         DC    CL8'STOSM'
         DC    CL8'STPT'
         DC    CL8'STPX'
         DC    CL8'STSCH'
         DC    CL8'STURA'
         DC    CL8'SU'
         DC    CL8'SUR'
         DC    CL8'SVC'
         DC    CL8'SW'
         DC    CL8'SWR'
         DC    CL8'SXR'
         DC    CL8'TAR'
         DC    CL8'TB'
         DC    CL8'TITLE'
         DC    CL8'TM'
         DC    CL8'TPI'
         DC    CL8'TPROT'
         DC    CL8'TR'
         DC    CL8'TRACE'
         DC    CL8'TRT'
         DC    CL8'TS'
         DC    CL8'TSCH'
         DC    CL8'UNPK'
         DC    CL8'UPT'
         DC    CL8'USING'
         DC    CL8'VA'
         DC    CL8'VACD'
         DC    CL8'VACDR'
         DC    CL8'VACE'
         DC    CL8'VACER'
         DC    CL8'VACRS'
         DC    CL8'VACSW'
         DC    CL8'VAD'
         DC    CL8'VADQ'
         DC    CL8'VADR'
         DC    CL8'VADS'
         DC    CL8'VAE'
         DC    CL8'VAEQ'
         DC    CL8'VAER'
         DC    CL8'VAES'
         DC    CL8'VAQ'
         DC    CL8'VAR'
         DC    CL8'VAS'
         DC    CL8'VC'
         DC    CL8'VCD'
         DC    CL8'VCDQ'
         DC    CL8'VCDR'
         DC    CL8'VCDS'
         DC    CL8'VCE'
         DC    CL8'VCEQ'
         DC    CL8'VCER'
         DC    CL8'VCES'
         DC    CL8'VCOVM'
         DC    CL8'VCQ'
         DC    CL8'VCR'
         DC    CL8'VCS'
         DC    CL8'VCVM'
         DC    CL8'VCZVM'
         DC    CL8'VDD'
         DC    CL8'VDDQ'
         DC    CL8'VDDR'
         DC    CL8'VDDS'
         DC    CL8'VDE'
         DC    CL8'VDEQ'
         DC    CL8'VDER'
         DC    CL8'VDES'
         DC    CL8'VL'
         DC    CL8'VLBIX'
         DC    CL8'VLCDR'
         DC    CL8'VLCER'
         DC    CL8'VLCR'
         DC    CL8'VLCVM'
         DC    CL8'VLD'
         DC    CL8'VLDQ'
         DC    CL8'VLDR'
         DC    CL8'VLE'
         DC    CL8'VLEL'
         DC    CL8'VLELD'
         DC    CL8'VLELE'
         DC    CL8'VLEQ'
         DC    CL8'VLER'
         DC    CL8'VLH'
         DC    CL8'VLI'
         DC    CL8'VLID'
         DC    CL8'VLIE'
         DC    CL8'VLINT'
         DC    CL8'VLM'
         DC    CL8'VLMD'
         DC    CL8'VLMDQ'
         DC    CL8'VLMDR'
         DC    CL8'VLME'
         DC    CL8'VLMEQ'
         DC    CL8'VLMER'
         DC    CL8'VLMQ'
         DC    CL8'VLMR'
         DC    CL8'VLNDR'
         DC    CL8'VLNER'
         DC    CL8'VLNR'
         DC    CL8'VLPDR'
         DC    CL8'VLPER'
         DC    CL8'VLPR'
         DC    CL8'VLQ'
         DC    CL8'VLR'
         DC    CL8'VLVCA'
         DC    CL8'VLVCU'
         DC    CL8'VLVM'
         DC    CL8'VLY'
         DC    CL8'VLYD'
         DC    CL8'VLYE'
         DC    CL8'VLZDR'
         DC    CL8'VLZER'
         DC    CL8'VLZR'
         DC    CL8'VMAD'
         DC    CL8'VMADQ'
         DC    CL8'VMADS'
         DC    CL8'VMAE'
         DC    CL8'VMAEQ'
         DC    CL8'VMAES'
         DC    CL8'VMCD'
         DC    CL8'VMCDR'
         DC    CL8'VMCE'
         DC    CL8'VMCER'
         DC    CL8'VMD'
         DC    CL8'VMDQ'
         DC    CL8'VMDR'
         DC    CL8'VMDS'
         DC    CL8'VME'
         DC    CL8'VMEQ'
         DC    CL8'VMER'
         DC    CL8'VMES'
         DC    CL8'VMNSD'
         DC    CL8'VMNSE'
         DC    CL8'VMQ'
         DC    CL8'VMR'
         DC    CL8'VMRRS'
         DC    CL8'VMRSV'
         DC    CL8'VMS'
         DC    CL8'VMSD'
         DC    CL8'VMSDQ'
         DC    CL8'VMSDS'
         DC    CL8'VMSE'
         DC    CL8'VMSEQ'
         DC    CL8'VMSES'
         DC    CL8'VMXAD'
         DC    CL8'VMXAE'
         DC    CL8'VMXSD'
         DC    CL8'VMXSE'
         DC    CL8'VN'
         DC    CL8'VNQ'
         DC    CL8'VNR'
         DC    CL8'VNS'
         DC    CL8'VNVM'
         DC    CL8'VO'
         DC    CL8'VOQ'
         DC    CL8'VOR'
         DC    CL8'VOS'
         DC    CL8'VOVM'
         DC    CL8'VRCL'
         DC    CL8'VRRS'
         DC    CL8'VRSV'
         DC    CL8'VRSVC'
         DC    CL8'VS'
         DC    CL8'VSD'
         DC    CL8'VSDQ'
         DC    CL8'VSDR'
         DC    CL8'VSDS'
         DC    CL8'VSE'
         DC    CL8'VSEQ'
         DC    CL8'VSER'
         DC    CL8'VSES'
         DC    CL8'VSLL'
         DC    CL8'VSPSD'
         DC    CL8'VSQ'
         DC    CL8'VSR'
         DC    CL8'VSRL'
         DC    CL8'VSRRS'
         DC    CL8'VSRSV'
         DC    CL8'VSS'
         DC    CL8'VST'
         DC    CL8'VSTD'
         DC    CL8'VSTE'
         DC    CL8'VSTH'
         DC    CL8'VSTI'
         DC    CL8'VSTID'
         DC    CL8'VSTIE'
         DC    CL8'VSTK'
         DC    CL8'VSTKD'
         DC    CL8'VSTKE'
         DC    CL8'VSTM'
         DC    CL8'VSTMD'
         DC    CL8'VSTME'
         DC    CL8'VSTVM'
         DC    CL8'VSTVP'
         DC    CL8'VSVMM'
         DC    CL8'VTVM'
         DC    CL8'VX'
         DC    CL8'VXEL'
         DC    CL8'VXELD'
         DC    CL8'VXELE'
         DC    CL8'VXQ'
         DC    CL8'VXR'
         DC    CL8'VXS'
         DC    CL8'VXVC'
         DC    CL8'VXVM'
         DC    CL8'VXVMM'
         DC    CL8'VZPSD'
         DC    CL8'WXTRN'
         DC    CL8'X'
         DC    CL8'XC'
         DC    CL8'XI'
         DC    CL8'XR'
         DC    CL8'ZAP'
INITEND  DC    X'FF'
         END
