         TITLE '*** EXERCISE THE READLMOD SUBROUTINE ***'
CALLRDLM CSECT
*********************************************************************
* CALL THE READLMOD SUBROUTINE TO READ THE VARIOUS DATA RECORDS FROM*
* A LOAD MODULE AND PRINT THE RESULTS.                              *
*                                                                   *
* CONTROL STATEMENTS ARE ENTERED TO GIVE THE DDNAME FOR THE LOAD    *
* LIBRARY CONTAINING THE LOAD MODULE, THE MEMBER NAME OF THE LOAD   *
* MODULE, AND THE CSECT WITHIN THE LOAD MODULE.                     *
*                                                                   *
* FOR EACH CONTROL RECORD READ, THE READLMOD SUBROUTINE IS CALLED TO*
* OBTAIN THE ESD, MAP, NAME, RLD, SYM, TEXT, IDRB, IDRL, IDRU, AND  *
* IDRZ RECORDS. THE OUTPUT DATASET CONTAINS LINES THAT SHOW THE     *
* CONTROL STATEMENTS READ IN, THE STATUS FOLLOWING EACH CALL TO THE *
* LMOD SUBROUTINE, AND ONE OR MORE LINES OF INFORMATION FOR THE DATA*
* RETURNED BY READLMOD.                                             *
*                                                                   *
* THE ESD, RLD, TEXT, IDRL, IDRU, AND NAME RECORDS ARE FORMATTED FOR*
* PRINTING. FOR OTHER RECORD TYPES, ONLY A SIMPLE STATEMENT IS      *
* TO SHOW WHETHER OR NOT DATA WAS RETURNED BY READLMOD.             *
*                                                                   *
* AUTHOR R THORNTON FEB 2002                                        *
*********************************************************************
*
*********************************************************************
*        SAVE REGISTERS, SET UP BASE REGS, CHAIN SAVE AREAS         *
*********************************************************************
         USING CALLRDLM,R3,R4
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)             SET UP SECOND
         LA    R4,1(R4)                    BASE REGISTER
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     START                   BRANCH AROUND CONSTANTS
         DC    CL8'CALLRDLM'           PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
START    DS    0H                      BEGIN PROCESSING
*********************************************************************
*        OPEN PRINT FILE, CONTROL CARD FILE                         *
*********************************************************************
OPENS    OPEN  (PRINT1,OUTPUT,READER1) OPEN PRINT FILE
*********************************************************************
*             MAINLINE ROUTINE                                      *
*********************************************************************
MAINLINE GET   READER1,CNTLCARD        READ CONTROL CARD
         MVC   PRMDDNAM,CCDDNAM        MOVE REQUESTED DDNAME
         MVC   PRMEMBER,CCMEMBER       MOVE REQUESTED MEMBER NAME
         MVC   PRMCSECT,CCCSECT        MOVE REQUESTED CSECT NAME
         MVC   PRT(29),=CL29'CONTROL CARD READ HAS DDNAME='
         MVC   PRT+29(8),CCDDNAM       MOVE DDNAME
         MVC   PRT+39(7),=CL7'MEMBER='
         MVC   PRT+46(8),CCMEMBER      MOVE MEMBER NAME
         MVC   PRT+56(6),=CL6'CSECT='
         MVC   PRT+62(8),CCCSECT       MOVE CSECT NAME
         BAL   R9,PRINT                PRINT CONTROL CARD INFO
         LA    R1,ACTIONS              POINT TO TABLE
MLCKEND  CLI   0(R1),X'FF'             END OF TABLE?
         BE    MAINLINE                YES, ALL THROUGH
         MVC   PRMREQST,0(R1)          MOVE IN DATA REQUESTED TYPE
         ST    R1,SAVER1               SAVE TABLE POINTER
         BAL   R9,CALLSUBR             GO CALL READLMOD TO GET THE DATA
         L     R1,SAVER1               POINT TO THE TABLE ENTRY
         LA    R1,12(R1)               POINT TO NEXT TABLE ENTRY
         B     MLCKEND                 LOOP
*********************************************************************
*             MAINLINE ROUTINE                                      *
*********************************************************************
CALLSUBR ST    R9,CS9                  SAVE RETURN ADDRESS
CSCALL   CALL  READLMOD,PARMAREA       CALL READLMOD FOR ESD DATA
         MVC   PRTREQST,PRMREQST       MOVE REQUESTED DATA TYPE
         MVC   PRTRERR(6),=CL6'=====>' ASSUME NO ERROR
         CLI   PRMERROR,C' '           WAS THERE AN ERROR?
         BE    CSCURS                  NO
         MVC   PRTRERR,=CL5' ERR='     YES, MOVE DELIMITER
         MVC   PRTERROR,PRMERROR       AND THE ERROR CODE
CSCURS   UNPK  PRTCURSR(9),PRMCURSR(5) CURSOR TO PRINT
         TR    PRTCURSR,TRCHAR         MAKE IT PRINTABLE
         MVI   PRTCURSR+8,C' '         CLEAR TRASH
         UNPK  PRTRETCD(9),PRMRETCD(5) RETURN CODE TO PRINT
         TR    PRTRETCD,TRCHAR         MAKE IT PRINTABLE
         MVI   PRTRETCD+8,C' '         CLEAR TRASH
         UNPK  PRTRSNCD(9),PRMRSNCD(5) REASON CODE TO PRINT
         TR    PRTRSNCD,TRCHAR         MAKE IT PRINTABLE
         MVI   PRTRSNCD+8,C' '         CLEAR TRASH
         UNPK  PRTCOUNT(9),PRMCOUNT(5) COUNT TO PRINT
         TR    PRTCOUNT,TRCHAR         MAKE IT PRINTABLE
         MVI   PRTCOUNT+8,C' '         CLEAR TRASH
         MVC   PRT,PRTRETRN            DATA LINE
         BAL   R9,PRINT                PRINT THE LINE
         L     R1,SAVER1               POINT TO TABLE ENTRY
         L     R1,8(R1)                POINT TO PRINT ROUTINE
         BAL   R9,0(R1)                GO PRINT THE DATA
         CLI   PRMERROR,C' '           ANY ERROR IN READLMOD CALL?
         BNE   CSXIT                   YES
         CLC   PRMRETCD,FWD4           IEWBIND ERROR?
         BH    CSXIT                   YES
         CLC   PRMRETCD,ZERO           RETURN CODE IS 0 (MORE DATA)?
         BNE   CSXIT                   NO, EXIT
         CLC   PRMCOUNT,ZERO           ANY ITEMS RETURNED?
         BNE   CSCALL                  YES, GO GET NEXT BUFFER
CSXIT    L     R9,CS9                  GET RETURN ADDRESS
         BR    R9                      EXIT
CS9      DC    A(0)                    RETURN ADDRESS
*********************************************************************
*             FORMAT ESD DATA                                       *
*********************************************************************
ESDPRT   ST    R9,EP9                  SAVE RETURN ADDRESS
         CLC   PRMCOUNT,ZERO           ANY DATA RETURNED?
         BNE   ESDPRT1                 YES
         MVC   PRT(35),=CL35' **ESD* NO DATA RETURNED BY IEWBIND'
         BAL   R9,PRINT                PRINT THE LINE
         B     EPXIT                   AND EXIT
ESDPRT1  L     R10,PRMCOUNT            GET NUMBER ELEMENTS FOUND
         L     R11,PRMBUFAD            POINT TO BUFFER HEADER
         USING ESDHEADR,R11
         LA    R12,ESDHEND             POINT TO FIRST ELEMENT
         USING ESDENTRY,R12
ESDNEXT  STM   R10,R12,WORKSAVE        SAVE WORK REGISTERS
         MVC   EPLNAME,BLANKS          CLEAR SYMBOL NAME
         MVC   EPLOWNR,BLANKS          PRE-CLEAR OWNER NAME
         MVC   EPLTGTN,BLANKS          PRE-CLEAR ER SYMBOL RESIDENCE
         MVC   EPLXATCN,BLANKS         PRE-CLEAR EXT ATTR CLASS NAME
         MVC   EPLCNTCN,BLANKS         PRE-CLEAR NAME TO BLANKS
         MVC   EPLTYPE,ESDTYPE         MOVE ESD TYPE
         MVC   EPLTYPEQ,ESDTYPEQ       MOVE ESD TYPE QUALIFIER
         UNPK  EPLNAMES(3),ESDNAMES(2) UNPACK NAME SPACE OF SYMBOL
         MVI   EPLNAMES+2,C' '         CLEAR TRASH
         TR    EPLNAMES,TRCHAR         MAKE IT PRINTABLE
         UNPK  EPLSCOPE(3),ESDSCOPE(2) UNPACK NAME SPACE OF SYMBOL
         MVI   EPLSCOPE+2,C' '         CLEAR TRASH
         TR    EPLSCOPE,TRCHAR         MAKE IT PRINTABLE
         LH    R1,ESDNAMEC             GET LENGTH OF SYMBOL
         LTR   R1,R1                   ANY LENGTH?
         BZ    EPMVSTWK                NO
         BCTR  R1,0                    COMPUTE LENGTH CODE
         CH    R1,EIGHT                EXCESSIVE LENGTH?
         BL    EPMVNAM2                NO
         LA    R1,7                    YES, SET MAX LENGTH
EPMVNAM2 L     R2,ESDNAMEP             POINT TO THE SYMBOL
         EX    R1,EPMVSYMX             MOVE SYMBOL NAME
EPMVSTWK UNPK  EPLSYMAT(3),ESDSYMAT(2) UNPACK SYMBOL ATTRIBUTES
         MVI   EPLSYMAT+2,C' '         CLEAR TRASH
         TR    EPLSYMAT,TRCHAR         MAKE IT PRINTABLE
EPMVOWNR LH    R1,ESDRESCL             GET OWNER NAME LENGTH
         LTR   R1,R1                   ANY LENGTH?
         BZ    EPMVLENG                NO
         BCTR  R1,0                    COMPUTE LENGTH CODE
         CH    R1,EIGHT                EXCESSIVE LENGTH?
         BL    EPMVOWN2                NO
         LA    R1,7                    YES, SET MAX LENGTH
EPMVOWN2 L     R2,ESDRESCP             POINT TO OWNING NAME
         EX    R1,EPMVOWNX             MOVE IN OWNING NAME
EPMVLENG UNPK  EPLENGTH(9),ESDLENG(5)  UNPACK SYMBOL LENGTH
         MVI   EPLENGTH+8,C' '         CLEAR TRASH
         TR    EPLENGTH,TRCHAR         MAKE IT PRINTABLE
         UNPK  EPLALIGN(3),ESDALIGN(2) UNPACK ALIGNMENT
         MVI   EPLALIGN+2,C' '         CLEAR TRASH
         TR    EPLALIGN,TRCHAR         MAKE IT PRINTABLE
         UNPK  EPLUSBLT(3),ESDUSBLT(2) UNPACK USABILITY
         MVI   EPLUSBLT+2,C' '         CLEAR TRASH
         TR    EPLUSBLT,TRCHAR         MAKE IT PRINTABLE
         UNPK  EPLAMODE(3),ESDAMODE(2) UNPACK AMODE
         MVI   EPLAMODE+2,C' '         CLEAR TRASH
         TR    EPLAMODE,TRCHAR         MAKE IT PRINTABLE
         UNPK  EPLRMODE(3),ESDRMODE(2) UNPACK RMODE
         MVI   EPLRMODE+2,C' '         CLEAR TRASH
         TR    EPLRMODE,TRCHAR         MAKE IT PRINTABLE
         UNPK  EPLRECFM(5),ESDRECFM(3) UNPACK RECORD FORMAT FOR CLASS
         MVI   EPLRECFM+4,C' '         CLEAR TRASH
         TR    EPLRECFM,TRCHAR         MAKE IT PRINTABLE
         UNPK  EPLLOADF(3),ESDLOADF(2) UNPACK LOAD ATTRIBUTES
         MVI   EPLLOADF+2,C' '         CLEAR TRASH
         TR    EPLLOADF,TRCHAR         MAKE IT PRINTABLE
         UNPK  EPLBINDF(3),ESDBINDF(2) UNPACK BIND ATTRIBUTES
         MVI   EPLBINDF+2,C' '         CLEAR TRASH
         TR    EPLBINDF,TRCHAR         MAKE IT PRINTABLE
         UNPK  EPLBINDC(3),ESDBINDC(2) UNPACK TYPE PROGRAM CODE
         MVI   EPLBINDC+2,C' '         CLEAR TRASH
         TR    EPLBINDC,TRCHAR         MAKE IT PRINTABLE
         LH    R1,ESDXATCL             GET EXT ATTR CLASS NAME LENGTH
         LTR   R1,R1                   ANY LENGTH?
         BZ    EPMVXAT3                NO
         BCTR  R1,0                    COMPUTE LENGTH CODE
         CH    R1,EIGHT                EXCESSIVE LENGTH?
         BL    EPMVXAT2                NO
         LA    R1,7                    YES, SET MAX LENGTH
EPMVXAT2 L     R2,ESDXATCP             POINT TO EXT ATTR CLASS NAME
         EX    R1,EPMVXTAX             MOVE IN EXT ATTR CLASS NAME
EPMVXAT3 UNPK  EPLXATOF(9),ESDXATOF(5) UNPACK EXT ATTRIBUTES OFFSET
         MVI   EPLXATOF+8,C' '         CLEAR TRASH
         TR    EPLXATOF,TRCHAR         MAKE IT PRINTABLE
         UNPK  EPLSEGMN(5),ESDSEGMN(3) UNPACK OVERLAY SEGMENT NBR
         MVI   EPLSEGMN+4,C' '         CLEAR TRASH
         TR    EPLSEGMN,TRCHAR         MAKE IT PRINTABLE
         UNPK  EPLREGN(5),ESDREGN(3)   UNPACK OVERLAY SEGMENT NBR
         MVI   EPLREGN+4,C' '          CLEAR TRASH
         TR    EPLREGN,TRCHAR          MAKE IT PRINTABLE
         UNPK  EPLSIGN(5),ESDSIGN(3)   UNPACK OVERLAY SEGMENT NBR
         MVI   EPLSIGN+4,C' '          CLEAR TRASH
         TR    EPLSIGN,TRCHAR          MAKE IT PRINTABLE
         UNPK  EPLAUTOC(3),ESDAUTOC(2) UNPACK AMODE
         MVI   EPLAUTOC+2,C' '         CLEAR TRASH
         TR    EPLAUTOC,TRCHAR         MAKE IT PRINTABLE
         UNPK  EPLSTAT(3),ESDSTAT(2)   UNPACK AMODE
         MVI   EPLSTAT+2,C' '          CLEAR TRASH
         TR    EPLSTAT,TRCHAR          MAKE IT PRINTABLE
         LH    R1,ESDTGTL              GET ER SYMBOL RES NAME LENGTH
         LTR   R1,R1                   ANY LENGTH?
         BZ    EPMVCTN                 NO
         BCTR  R1,0                    COMPUTE LENGTH CODE
         CH    R1,EIGHT                EXCESSIVE LENGTH?
         BL    EPMVTGT2                NO
         LA    R1,7                    YES, SET MAX LENGTH
EPMVTGT2 L     R2,ESDTGTP              POINT TO ER SYMBOL RES NAME
         EX    R1,EPMVTGTX             MOVE IN ER SYMBOL RES NAME
EPMVCTN  LH    R1,ESDCNTCL             GET CONTAINING CLASS NAME LENG
         LTR   R1,R1                   ANY LENGTH?
         BZ    EPMVOFF                 NO
         BCTR  R1,0                    COMPUTE LENGTH CODE
         CH    R1,EIGHT                EXCESSIVE LENGTH?
         BL    EPMVCTN2                NO
         LA    R1,7                    YES, SET MAX LENGTH
EPMVCTN2 L     R2,ESDCNTCP             POINT TO CONTAINING CLASS NAME
         EX    R1,EPMVCNTX             MOVE CONTAINING CLASS NAME
EPMVOFF  UNPK  EPLELOFF(9),ESDELOFF(5) UNPACK OFFSET W/IN ELEMENT
         MVI   EPLELOFF+8,C' '         CLEAR TRASH
         TR    EPLELOFF,TRCHAR         MAKE IT PRINTABLE
         UNPK  EPLCLOFF(9),ESDCLOFF(5) UNPACK OFFSET W/IN ELEMENT
         MVI   EPLCLOFF+8,C' '         CLEAR TRASH
         TR    EPLCLOFF,TRCHAR         MAKE IT PRINTABLE
         MVC   PRT,ESDPRTL1            MOVE ESD DATA PRINT LINE 1
         BAL   R9,PRINT                PRINT THE LINE
         MVC   PRT,ESDPRTL2            MOVE ESD DATA PRINT LINE 2
         BAL   R9,PRINT                PRINT THE LINE
         MVC   PRT,ESDPRTL3            MOVE ESD DATA PRINT LINE 3
         BAL   R9,PRINT                PRINT THE LINE
         MVC   PRT,ESDPRTL4            MOVE ESD DATA PRINT LINE 4
         BAL   R9,PRINT                PRINT THE LINE
         MVC   PRT,ESDPRTL5            MOVE ESD DATA PRINT LINE 5
         BAL   R9,PRINT                PRINT THE LINE
ESDSTEP  LM    R10,R12,WORKSAVE        GET WORK REGISTERS
         A     R12,ESDHENTL            POINT TO NEXT ELEMENT
         BCT   R10,ESDNEXT             LOOP THRU ESD ENTRIES
EPXIT    L     R9,EP9                  GET RETURN ADDRESS
         BR    R9                      EXIT
EPMVCNTX MVC   EPLCNTCN(1),0(R2)       EXECUTED MOVE
EPMVTGTX MVC   EPLTGTN(1),0(R2)        EXECUTED MOVE
EPMVXTAX MVC   EPLXATCN(1),0(R2)       EXECUTED MOVE
EPMVSYMX MVC   EPLNAME(1),0(R2)        EXECUTED MOVE
EPMVOWNX MVC   EPLOWNR(1),0(R2)        EXECUTED MOVE
EP9      DC    A(0)                    RETURN ADDRESS
         DROP  R11
         DROP  R12
*********************************************************************
*             FORMAT RLD DATA                                       *
*********************************************************************
RLDPRT   ST    R9,RP9                  SAVE RETURN ADDRESS
         CLC   PRMCOUNT,ZERO           ANY DATA RETURNED?
         BNE   RLDPRT1                 YES
         MVC   PRT(35),=CL35' **RLD* NO DATA RETURNED BY IEWBIND'
         BAL   R9,PRINT                PRINT THE LINE
         B     RPXIT                   AND EXIT
RLDPRT1  L     R10,PRMCOUNT            GET NUMBER ELEMENTS FOUND
         L     R11,PRMBUFAD            POINT TO BUFFER HEADER
         USING RLDHEADR,R11
         LA    R12,RLDHEND             POINT TO FIRST ELEMENT
         USING RLDENTRY,R12
RLDNEXT  STM   R10,R12,WORKSAVE        SAVE WORK REGISTERS
         MVC   RPLRESNN,BLANKS         PRE-CLEAR TO BLANKS
         MVC   RPLRESCN,BLANKS         PRE-CLEAR TO BLANKS
         MVC   RPLXATCN,BLANKS         PRE-CLEAR TO BLANKS
         MVC   RLDTGTNN,BLANKS         PRE-CLEAR TO BLANKS
         MVC   RLDRESPN,BLANKS         PRE-CLEAR TO BLANKS
         UNPK  RPLTYPE(3),RLDTYPE(2)   RLD TYPE
         MVI   RPLTYPE+2,C' '          CLEAR TRASH
         TR    RPLTYPE,TRCHAR          MAKE IT PRINTABLE
         UNPK  RPLSTAT(3),RLDSTAT(2)   ADCON TYPE
         MVI   RPLSTAT+2,C' '          CLEAR TRASH
         TR    RPLSTAT,TRCHAR          MAKE IT PRINTABLE
         LH    R1,RLDRESNL             GET LENGTH OF RES CSECT NAME
         LTR   R1,R1                   ANY LENGTH?
         BZ    RLDMVAC                 NO
         BCTR  R1,0                    COMPUTE LENGTH CODE
         CH    R1,EIGHT                EXCESSIVE LENGTH?
         BL    RLDMVRES                NO
         LA    R1,7                    YES, SET MAX LENGTH
RLDMVRES L     R2,RLDRESNP             POINT TO THE SYMBOL
         EX    R1,RLDMVREX             MOVE SYMBOL NAME
RLDMVAC  UNPK  RPLADCNL(5),RLDADCNL(3) ADCON LENGTH
         MVI   RPLADCNL+4,C' '         CLEAR TRASH
         TR    RPLADCNL,TRCHAR         MAKE IT PRINTABLE
         LH    R1,RLDRESCL             GET LENGTH OF RES CLASS NAME
         LTR   R1,R1                   ANY LENGTH?
         BZ    RLDMVROF                NO
         BCTR  R1,0                    COMPUTE LENGTH CODE
         CH    R1,EIGHT                EXCESSIVE LENGTH?
         BL    RLDRESCM                NO
         LA    R1,7                    YES, SET MAX LENGTH
RLDRESCM L     R2,RLDRESCP             POINT TO THE SYMBOL
         EX    R1,RLDRESCX             MOVE SYMBOL NAME
RLDMVROF UNPK  RPLRESOF(9),RLDRESOF(5) MOVE ADCON OFFSET IN ELEM/PART
         MVI   RPLRESOF+8,C' '         CLEAR TRASH
         TR    RPLRESOF,TRCHAR         MAKE IT PRINTABLE
         UNPK  RPLCLOF(9),RLDCLOF(5)   MOVE ADCON OFFSET IN CLASS
         MVI   RPLCLOF+8,C' '          CLEAR TRASH
         TR    RPLCLOF,TRCHAR          MAKE IT PRINTABLE
         UNPK  RPLADCNB(3),RLDADCNB(2) MOVE ADCON BOUNDARY SPEC.
         MVI   RPLADCNB+2,C' '         CLEAR TRASH
         TR    RPLADCNB,TRCHAR         MAKE IT PRINTABLE
         UNPK  RPLBNDAT(3),RLDBNDAT(2) MOVE ADCON BOUNDARY STATUS
         MVI   RPLBNDAT+2,C' '         CLEAR TRASH
         TR    RPLBNDAT,TRCHAR         MAKE IT PRINTABLE
         LH    R1,RLDXATCL             GET LENGTH OF EXT ATTR CLASS NAM
         LTR   R1,R1                   ANY LENGTH?
         BZ    RLDXAT2                 NO
         BCTR  R1,0                    COMPUTE LENGTH CODE
         CH    R1,EIGHT                EXCESSIVE LENGTH?
         BL    RLDXAT1                 NO
         LA    R1,7                    YES, SET MAX LENGTH
RLDXAT1  L     R2,RLDXATCP             POINT TO THE SYMBOL
         EX    R1,RLDXATCX             MOVE SYMBOL NAME
RLDXAT2  UNPK  RPLXATOF(9),RLDXATOF(5) MOVE EXT ATTR ELEMENT OFFSET
         MVI   RPLXATOF+8,C' '         CLEAR TRASH
         TR    RPLXATOF,TRCHAR         MAKE IT PRINTABLE
         UNPK  RPLNAMSP(3),RLDNAMSP(2) MOVE NAME SPACE
         MVI   RPLNAMSP+2,C' '         CLEAR TRASH
         TR    RPLNAMSP,TRCHAR         MAKE IT PRINTABLE
         LH    R1,RLDTGTNL             GET LENGTH OF SYMBOL POINTED TO
         LTR   R1,R1                   ANY LENGTH?
         BZ    RLDMVRSP                NO
         BCTR  R1,0                    COMPUTE LENGTH CODE
         CH    R1,EIGHT                EXCESSIVE LENGTH?
         BL    RLDMVTGT                NO
         LA    R1,7                    YES, SET MAX LENGTH
RLDMVTGT L     R2,RLDTGTNP             POINT TO THE SYMBOL
         EX    R1,RLDTGTNX             MOVE SYMBOL NAME
RLDMVRSP LH    R1,RLDRESPL             GET LENGTH OF SYMBOL
         LTR   R1,R1                   ANY LENGTH?
         BZ    RLDPRINT                NO
         BCTR  R1,0                    COMPUTE LENGTH CODE
         CH    R1,EIGHT                EXCESSIVE LENGTH?
         BL    RLDMVRS2                NO
         LA    R1,7                    YES, SET MAX LENGTH
RLDMVRS2 L     R2,RLDRESPP             POINT TO THE SYMBOL
         EX    R1,RLDRESPX             MOVE SYMBOL NAME
RLDPRINT MVC   PRT,RLDPRTL1            MOVE RLD DATA PRINT LINE 1
         BAL   R9,PRINT                PRINT THE LINE
         MVC   PRT,RLDPRTL2            MOVE RLD DATA PRINT LINE 2
         BAL   R9,PRINT                PRINT THE LINE
         MVC   PRT,RLDPRTL3            MOVE RLD DATA PRINT LINE 3
         BAL   R9,PRINT                PRINT THE LINE
RLDSTEP  LM    R10,R12,WORKSAVE        GET WORK REGISTERS
         A     R12,RLDHENTL            POINT TO NEXT ELEMENT
         BCT   R10,RLDNEXT             LOOP THRU ESD ENTRIES
RPXIT    L     R9,RP9                  GET RETURN ADDRESS
         BR    R9                      EXIT
RLDMVREX MVC   RPLRESNN(1),0(R2)       EXECUTED MOVE
RLDRESCX MVC   RPLRESCN(1),0(R2)       EXECUTED MOVE
RLDXATCX MVC   RPLXATCN(1),0(R2)       EXECUTED MOVE
RLDTGTNX MVC   RLDTGTNN(1),0(R2)       EXECUTED MOVE
RLDRESPX MVC   RLDRESPN(1),0(R2)       EXECUTED MOVE
RP9      DC    A(0)                    RETURN ADDRESS
         DROP  R11
         DROP  R12
*********************************************************************
*             FORMAT TXT DATA                                       *
*********************************************************************
TXTPRT   ST    R9,TX9                  SAVE RETURN ADDRESS
         CLC   PRMCOUNT,ZERO           ANY DATA RETURNED?
         BNE   TXTPRT1                 YES
         MVC   PRT(35),=CL35' **TXT* NO DATA RETURNED BY IEWBIND'
         BAL   R9,PRINT                PRINT THE LINE
         B     TXXIT                   AND EXIT
TXTPRT1  L     R10,PRMCOUNT            GET NUMBER BYTES IN BUFFER
         L     R11,PRMBUFAD            POINT TO BUFFER HEADER
         USING TXTHEADR,R11
         LA    R12,TXTHEND             POINT TO FIRST TEXT BYTE
         USING TXTENTRY,R12
         L     R1,PRMCURSR             SAVE STARTING
         S     R1,PRMCOUNT                TEXT LOCATION
         ST    R1,STARTLOC                   FOR PRINTING
         MVC   PRT(7),=CL7' **TXT*'    DELIMIT FOR TEXT
TXTNEXT  STM   R10,R12,WORKSAVE        SAVE WORK REGISTERS
         UNPK  PRT+8(7),STARTLOC+1(4)  STARTING LOCATION TO PRINT
         MVI   PRT+14,C' '             CLEAR TRASH
         TR    PRT+8(6),TRCHAR         MAKE PRINTABLE
         LR    R1,R10                  COPY REMAINING LENGTH
         CH    R1,SIXTEEN              AT LEAST 16 BYTES LEFT TO PRINT?
         BL    TXTLENPT                NO
         LA    R1,16                   YES, SET TO MAX FOR 1 LINE
TXTLENPT SR    R10,R1                  COMPUTE BYTES LEFT AFTER THIS
         L     R2,STARTLOC             UPDATE STARTING
         AR    R2,R1                      LOCATION FOR
         ST    R2,STARTLOC                   NEXT LINE
         BCTR  R1,0                    COMPUTE LENGTH CODE
         EX    R1,TXMVCHRS             MOVE CHARACTERS
         UNPK  PRT+16(9),PRT+53(5)     UNPACK 1ST WORD
         UNPK  PRT+25(9),PRT+57(5)     UNPACK SECOND WORD
         UNPK  PRT+34(9),PRT+61(5)     UNPACK THIRD WORD
         UNPK  PRT+43(9),PRT+65(5)     UNPACK FOURTH WORD
         MVI   PRT+24,C' '             CLEAR TRASH
         MVI   PRT+33,C' '             CLEAR TRASH
         MVI   PRT+42,C' '             CLEAR TRASH
         MVI   PRT+51,C' '             CLEAR TRASH
         TR    PRT+16(36),TRCHAR       MAKE HEX PRINTABLE
         EX    R1,TXTRCHRS             MAKE NON-PRINTABLES INTO DOTS
         LA    R12,1(R1,R12)           TO NEXT BYTE IN TEXT BUFFER
         LA    R1,1(R1)                BACK TO TRUE LENGTH PRINTED
         CH    R1,SIXTEEN              PRINTED SIXTEEN BYTES?
         BL    TXTSHORT                NO
         BAL   R9,PRINT                PRINT THE TXT DATA LINE
         LTR   R10,R10                 ANY LEFT TO PRINT?
         BP    TXTNEXT                 YES, CONTINUE
         B     TXXIT                   ELSE EXIT
TXTSHORT CH    R1,TWELVE               OVER 12 BYTES PRINTED?
         BNH   TXTLT13                 NO
         SH    R1,TWELVE               YES, ADJUST LENGTH
         LA    R2,PRT+43               POINT TO LAST PRINT WORD
         B     TXTLAST3                CONTINUE
TXTLT13  MVC   PRT+43(8),BLANKS        CLEAR LAST TEXT BLOCK
         BE    TXTSHPRT                BRANCH IF EXACTLY 12 PRINTED
         CH    R1,EIGHT                OVER 8 BYTES PRINTED?
         BNH   TXTLT9                  NO
         SH    R1,EIGHT                YES, ADJUST LENGTH
         LA    R2,PRT+34               POINT TO THIRD PRINT WORD
         B     TXTLAST3                CONTINUE
TXTLT9   MVC   PRT+34(8),BLANKS        CLEAR THIRD TEXT BLOCK
         BE    TXTSHPRT                BRANCH IF EXACTLY 8 PRINTED
         CH    R1,FOUR                 OVER 4 BYTES PRINTED?
         BNH   TXTLT5                  NO
         SH    R1,FOUR                 YES, ADJUST LENGTH
         LA    R2,PRT+25               POINT TO 2ND PRINT WORD
         B     TXTLAST3                CONTINUE
TXTLT5   MVC   PRT+25(8),BLANKS        CLEAR SECOND PRINT BLOCK
         BE    TXTSHPRT                BRANCH IF EXACTLY 4 PRINTED
         LA    R2,PRT+16               POINT TO 1ST TEXT BLOCK IN PRINT
TXTLAST3 MVC   6(2,R2),BLANKS          CLEAR FOURTH BYTE IN BLOCK
         CH    R1,THREE                THREE BYTES PRINTED IN BLOCK?
         BE    TXTSHPRT                YES
         MVC   4(2,R2),BLANKS          CLEAR THIRD BYTE IN BLOCK
         CH    R1,TWO                  TWO BYTES PRINTED IN BLOCK?
         BE    TXTSHPRT                YES
         MVC   2(2,R2),BLANKS          NO, CLEAR SECOND BYTE IN BLOCK
TXTSHPRT BAL   R9,PRINT                PRINT LAST LINE
TXXIT    L     R9,TX9                  GET RETURN ADDRESS
         BR    R9                      EXIT
TXMVCHRS MVC   PRT+53(1),0(R12)        EXECUTED MOVE
TXTRCHRS TR    PRT+53(1),TRPRTBL       EXECUTED TRANSLATE
TX9      DC    A(0)                    RETURN ADDRESS
         DROP  R11
         DROP  R12
*********************************************************************
*             FORMAT SYM DATA                                       *
*********************************************************************
SYMPRT   ST    R9,SP9                  SAVE RETURN ADDRESS
         CLC   PRMCOUNT,ZERO           ANY DATA RETURNED?
         BNE   SYMPRT1                 YES
         MVC   PRT(35),=CL35' **SYM* NO DATA RETURNED BY IEWBIND'
         BAL   R9,PRINT                PRINT THE LINE
         B     SPXIT                   AND EXIT
SYMPRT1  L     R10,PRMCOUNT            GET NUMBER ELEMENTS FOUND
         L     R11,PRMBUFAD            POINT TO BUFFER HEADER
         USING SYMHEADR,R11
         LA    R12,SYMHEND             POINT TO FIRST ELEMENT
         USING SYMENTRY,R12
SYMNEXT  STM   R10,R12,WORKSAVE        SAVE WORK REGISTERS
* * * * * * * * FORMAT HERE * * * * * * *
         MVC   PRT(36),=CL36' **SYM* DATA WAS RETURNED BY IEWBIND'
         BAL   R9,PRINT                PRINT THE LINE
         B     SPXIT                   ???? TESTING ????
SYMSTEP  LM    R10,R12,WORKSAVE        GET WORK REGISTERS
         A     R12,SYMHENTL            POINT TO NEXT ELEMENT
         BCT   R10,SYMNEXT             LOOP THRU ESD ENTRIES
SPXIT    L     R9,SP9                  GET RETURN ADDRESS
         BR    R9                      EXIT
SP9      DC    A(0)                    RETURN ADDRESS
         DROP  R11
         DROP  R12
*********************************************************************
*             FORMAT IDRU DATA                                      *
*********************************************************************
IDRUPRT  ST    R9,IU9                  SAVE RETURN ADDRESS
         CLC   PRMCOUNT,ZERO           ANY DATA RETURNED?
         BNE   IDUPRT1                 YES
         MVC   PRT(35),=CL35' *IDRU* NO DATA RETURNED BY IEWBIND'
         BAL   R9,PRINT                PRINT THE LINE
         B     IDUXIT                  AND EXIT
IDUPRT1  L     R10,PRMCOUNT            GET NUMBER ELEMENTS FOUND
         L     R11,PRMBUFAD            POINT TO BUFFER HEADER
         USING IDUHEADR,R11
         LA    R12,IDUHEND             POINT TO FIRST ELEMENT
         USING IDRUNTRY,R12
IDUNEXT  STM   R10,R12,WORKSAVE        SAVE WORK REGISTERS
         MVC   IUPRESNN,BLANKS         PRE-CLEAR TO BLANKS
         MVC   IUPCREDT,IDUCREDT       IDRU DATA CREATION DATE
         MVC   IUPDATA,IDUDATA         IDRU IDENTIFICATION DATA
         LH    R1,IDURESNL             GET LENGTH OF CSECT NAME
         LTR   R1,R1                   VALID LENGTH?
         BNP   IDUPRNT                 NO
         CH    R1,EIGHT                LENGTH OVER 8 BYTES?
         BNH   IUPLNCD                 NO
         LA    R1,8                    YES, SET TO MAX FOR LINE
IUPLNCD  BCTR  R1,0                    COMPUTE LENGTH CODE
         L     R2,IDURESNP             POINT TO THE CSECT NAME
         EX    R1,IDUMVRSX             MOVE CSECT NAME
IDUPRNT  MVC   PRT,IUPPRTL1            MOVE PRINT LINE
         BAL   R9,PRINT                PRINT THE LINE
IDUSTEP  LM    R10,R12,WORKSAVE        GET WORK REGISTERS
         A     R12,IDUHENTL            POINT TO NEXT ELEMENT
         BCT   R10,IDUNEXT             LOOP THRU ESD ENTRIES
IDUXIT   L     R9,IU9                  GET RETURN ADDRESS
         BR    R9                      EXIT
IDUMVRSX MVC   IUPRESNN(1),0(R2)       EXECUTED MOVE
IU9      DC    A(0)                    RETURN ADDRESS
         DROP  R11
         DROP  R12
*********************************************************************
*             FORMAT IDRL DATA                                      *
*********************************************************************
IDRLPRT  ST    R9,IL9                  SAVE RETURN ADDRESS
         CLC   PRMCOUNT,ZERO           ANY DATA RETURNED?
         BNE   IDLPRT1                 YES
         MVC   PRT(35),=CL35' *IDRL* NO DATA RETURNED BY IEWBIND'
         BAL   R9,PRINT                PRINT THE LINE
         B     IDLXIT                  AND EXIT
IDLPRT1  L     R10,PRMCOUNT            GET NUMBER ELEMENTS FOUND
         L     R11,PRMBUFAD            POINT TO BUFFER HEADER
         USING IDLHEADR,R11
         LA    R12,IDLHEND             POINT TO FIRST ELEMENT
         USING IDLENTRY,R12
IDLNEXT  STM   R10,R12,WORKSAVE        SAVE WORK REGISTERS
         MVC   ILPRESNN,BLANKS         PRE-CLEAR TO BLANKS
         MVC   ILPPIDID,IDLPIDID       MOVE PID ORDER NUMBER
         MVC   ILPVER,IDLVER           MOVE VERSION NUMBER
         MVC   ILPMODLV,IDLMODLV       MOVE MOD LEVEL
         MVC   ILPDATPR,IDLDATPR       MOVE COMPILE/ASSEMBLY DATE
         LH    R1,IDLRESNL             LENGTH OF THE RESIDENT SECTION
         LTR   R1,R1                   ANY LENGTH?
         BNP   IDLPRNT                 NO
         CH    R1,EIGHT                OVER 8 BYTES?
         BNH   IDLLCOD                 NO
         LA    R1,8                    YES, SET MAX LENGTH
IDLLCOD  BCTR  R1,0                    COMPUTE LENGTH CODE
         L     R2,IDLRESNP             POINT TO THE RESIDENT CSECT NAME
         EX    R1,IDLMVRSX             MOVE THE CSECT NAME
IDLPRNT  MVC   PRT,ILPPRTL1            MOVE THE PRINT LINE
         BAL   R9,PRINT                PRINT THE LINE
IDLSTEP  LM    R10,R12,WORKSAVE        GET WORK REGISTERS
         A     R12,IDLHENTL            POINT TO NEXT ELEMENT
         BCT   R10,IDLNEXT             LOOP THRU ESD ENTRIES
IDLXIT   L     R9,IL9                  GET RETURN ADDRESS
         BR    R9                      EXIT
IDLMVRSX MVC   ILPRESNN(1),0(R2)       EXECUTED MOVE
IL9      DC    A(0)                    RETURN ADDRESS
         DROP  R11
         DROP  R12
*********************************************************************
*             FORMAT IDRZ DATA                                      *
*********************************************************************
IDRZPRT  ST    R9,IZ9                  SAVE RETURN ADDRESS
         CLC   PRMCOUNT,ZERO           ANY DATA RETURNED?
         BNE   IDZPRT1                 YES
         MVC   PRT(35),=CL35' *IDRZ* NO DATA RETURNED BY IEWBIND'
         BAL   R9,PRINT                PRINT THE LINE
         B     IDZXIT                  AND EXIT
IDZPRT1  L     R10,PRMCOUNT            GET NUMBER ELEMENTS FOUND
         L     R11,PRMBUFAD            POINT TO BUFFER HEADER
         USING IDZHEADR,R11
         LA    R12,IDZHEND             POINT TO FIRST ELEMENT
         USING IDZENTRY,R12
IDZNEXT  STM   R10,R12,WORKSAVE        SAVE WORK REGISTERS
* * * * * * * * FORMAT HERE * * * * * * *
         MVC   PRT(36),=CL36' *IDRZ* DATA WAS RETURNED BY IEWBIND'
         BAL   R9,PRINT                PRINT THE LINE
         B     IDZXIT                  ???? TESTING ????
IDZSTEP  LM    R10,R12,WORKSAVE        GET WORK REGISTERS
         A     R12,IDZHENTL            POINT TO NEXT ELEMENT
         BCT   R10,IDZNEXT             LOOP THRU ESD ENTRIES
IDZXIT   L     R9,IZ9                  GET RETURN ADDRESS
         BR    R9                      EXIT
IZ9      DC    A(0)                    RETURN ADDRESS
         DROP  R11
         DROP  R12
*********************************************************************
*             FORMAT IDRB DATA                                      *
*********************************************************************
IDRBPRT  ST    R9,IB9                  SAVE RETURN ADDRESS
         CLC   PRMCOUNT,ZERO           ANY DATA RETURNED?
         BNE   IDBPRT1                 YES
         MVC   PRT(35),=CL35' *IDRB* NO DATA RETURNED BY IEWBIND'
         BAL   R9,PRINT                PRINT THE LINE
         B     IDBXIT                  AND EXIT
IDBPRT1  L     R10,PRMCOUNT            GET NUMBER ELEMENTS FOUND
         L     R11,PRMBUFAD            POINT TO BUFFER HEADER
         USING IDBHEADR,R11
         LA    R12,IDBHEND             POINT TO FIRST ELEMENT
         USING IDBENTRY,R12
IDBNEXT  STM   R10,R12,WORKSAVE        SAVE WORK REGISTERS
* * * * * * * * FORMAT HERE * * * * * * *
         MVC   PRT(36),=CL36' *IDRB* DATA WAS RETURNED BY IEWBIND'
         BAL   R9,PRINT                PRINT THE LINE
         B     IDBXIT                  ???? TESTING ????
IDBSTEP  LM    R10,R12,WORKSAVE        GET WORK REGISTERS
         A     R12,IDBHENTL            POINT TO NEXT ELEMENT
         BCT   R10,IDBNEXT             LOOP THRU ESD ENTRIES
IDBXIT   L     R9,IB9                  GET RETURN ADDRESS
         BR    R9                      EXIT
IB9      DC    A(0)                    RETURN ADDRESS
         DROP  R11
         DROP  R12
*********************************************************************
*             FORMAT NAME DATA                                      *
*********************************************************************
NAMEPRT  ST    R9,NP9                  SAVE RETURN ADDRESS
         CLC   PRMCOUNT,ZERO           ANY DATA RETURNED?
         BNE   NAMPRT1                 YES
         MVC   PRT(35),=CL35' **NAM* NO DATA RETURNED BY IEWBIND'
         BAL   R9,PRINT                PRINT THE LINE
         B     NPXIT                   AND EXIT
NAMPRT1  L     R10,PRMCOUNT            GET NUMBER ELEMENTS FOUND
         L     R11,PRMBUFAD            POINT TO BUFFER HEADER
         USING BNLHEADR,R11
         LA    R12,BNLHEND             POINT TO FIRST ELEMENT
         USING BNLENTRY,R12
NAMNEXT  STM   R10,R12,WORKSAVE        SAVE WORK REGISTERS
         MVC   NAMNAMEN,BLANKS         PRE-CLEAR TO BLANKS
         UNPK  NAMCLSL(9),BNLCLSL(5)   UNPACK CLASS LENGTH TO PRINT
         MVI   NAMCLSL+8,C' '          CLEAR TRASH
         TR    NAMCLSL,TRCHAR          MAKE PRINTABLE
         UNPK  NAMBINDF(3),BNLBINDF(2) UNPACK FLAG BYTE TO PRINT
         MVI   NAMBINDF+2,C' '         CLEAR TRASH
         TR    NAMBINDF,TRCHAR         MAKE IT PRINTABLE
         LH    R1,BNLNAMEL             GET LENGTH OF NAME
         LTR   R1,R1                   ANY NAME?
         BNP   NAMNBEL                 NO
         CH    R1,EIGHT                TOO LONG FOR PRINT FIELD?
         BNH   NAMLNCD                 NO
         LA    R1,8                    YES, FORCE MAX LENGTH
NAMLNCD  BCTR  R1,0                    COMPUTE LENGTH CODE
         L     R2,BNLNAMEP             GET POINTER TO NAME
         EX    R1,NAMMVNMX             MOVE THE CSECT NAME
NAMNBEL  UNPK  NAMELEMC(9),BNLELEMC(5) UNPACK NBR ELEMENTS
         MVI   NAMELEMC+8,C' '         CLEAR TRASH
         TR    NAMELEMC,TRCHAR         MAKE IT PRINTABLE
         MVC   PRT,NAMPRTL1            MOVE NAME LINE TO PRINT
         BAL   R9,PRINT                PRINT THE LINE
NAMSTEP  LM    R10,R12,WORKSAVE        GET WORK REGISTERS
         A     R12,BNLHENTL            POINT TO NEXT ELEMENT
         BCT   R10,NAMNEXT             LOOP THRU ESD ENTRIES
NPXIT    L     R9,NP9                  GET RETURN ADDRESS
         BR    R9                      EXIT
NAMMVNMX MVC   NAMNAMEN(1),0(R2)       EXECUTED MOVE
NP9      DC    A(0)                    RETURN ADDRESS
         DROP  R11
         DROP  R12
*********************************************************************
*             FORMAT MAP DATA                                       *
*********************************************************************
MAPPRT   ST    R9,MP9                  SAVE RETURN ADDRESS
         CLC   PRMCOUNT,ZERO           ANY DATA RETURNED?
         BNE   MAPPRT1                 YES
         MVC   PRT(35),=CL35' **MAP* NO DATA RETURNED BY IEWBIND'
         BAL   R9,PRINT                PRINT THE LINE
         B     MPXIT                   AND EXIT
MAPPRT1  L     R10,PRMCOUNT            GET NUMBER ELEMENTS FOUND
         L     R11,PRMBUFAD            POINT TO BUFFER HEADER
         USING MAPHEADR,R11
         LA    R12,MAPHEND             POINT TO FIRST ELEMENT
         USING MAPENTRY,R12
MAPNEXTS STM   R10,R12,WORKSAVE        SAVE WORK REGISTERS
* * * * * * * * FORMAT HERE * * * * * * *
         MVC   PRT(36),=CL36' **MAP* DATA WAS RETURNED BY IEWBIND'
         BAL   R9,PRINT                PRINT THE LINE
         B     MPXIT                   ???? TESTING ????
MAPSTEP  LM    R10,R12,WORKSAVE        GET WORK REGISTERS
         A     R12,MAPHENTL            POINT TO NEXT ELEMENT
         BCT   R10,MAPNEXTS            LOOP THRU ESD ENTRIES
MPXIT    L     R9,MP9                  GET RETURN ADDRESS
         BR    R9                      EXIT
MP9      DC    A(0)                    RETURN ADDRESS
         DROP  R11
         DROP  R12
*********************************************************************
*             PRINT SUBROUTINE                                      *
*********************************************************************
PRINT    PUT   PRINT1,PRT              WRITE PRINT LINE
         MVC   PRT,BLANKS              CLEAR PRINT LINE
         BR    R9                      RETURN
*********************************************************************
*             END OF JOB                                            *
*********************************************************************
EOJ      CLOSE (PRINT1,,READER1)       CLOSE FILES
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         L     R14,12(R13)             RESTORE RETURN REG: R14
         L     R15,RETCODE             SET RETURN CODE
         LM    R0,R12,20(R13)          RESTORE CALLER'S REGS 0-12
         BR    R14                     RETURN
*********************************************************************
*        STORAGE AND FILE AREAS                                     *
*********************************************************************
*
DBLWD    DS    D                       DOUBLEWORD WORK AREA
RETCODE  DC    F'0'                    RETURN CODE
ZERO     DC    F'0'                    CONSTANT ZERO
FWD4     DC    F'4'                    CONSTANT FOUR
WORKSAVE DC    3A(0)                   FORMAT WORK REGISTERS
STARTLOC DC    F'0'                    STARTING LOCATION FOR PRINTING
SIXTEEN  DC    H'16'                   CONSTANT 16
TWELVE   DC    H'12'                   CONSTANT 12
EIGHT    DC    H'8'                    CONSTANT 8
FOUR     DC    H'4'                    CONSTANT 4
THREE    DC    H'3'                    CONSTANT 3
TWO      DC    H'2'                    CONSTANT 2
BLANKS   DC    CL133' '                BLANKS
TRCHAR   DC    256C' '                 TRANSLATE HEX TO PRINTABLE
         ORG   TRCHAR+C'0'
         DC    C'0123456789ABCDEF'
         ORG
*                    0 1 2 3 4 5 6 7 8 9 A B C D E F
TRPRTBL  DC    XL16'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B' 00-0F
         DC    XL16'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B' 10-1F
         DC    XL16'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B' 20-2F
         DC    XL16'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B' 30-3F
         DC    XL16'404B4B4B4B4B4B4B4B4B4B4B4C4D4E4B' 40-4F
         DC    XL16'504B4B4B4B4B4B4B4B4B5A5B5C5D5E4B' 50-5F
         DC    XL16'60614B4B4B4B4B4B4B4B4B6B6C4B6E6F' 60-6F
         DC    XL16'4B4B4B4B4B4B4B4B4B4B7A7B7C7D7E7F' 70-7F
         DC    XL16'4B8182838485868788894B4B4B4B4B4B' 80-8F
         DC    XL16'4B9192939495969798994B4B4B4B4B4B' 90-9F
         DC    XL16'4B4BA2A3A4A5A6A7A8A94B4B4B4B4B4B' A0-AF
         DC    XL16'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B' B0-BF
         DC    XL16'4BC1C2C3C4C5C6C7C8C94B4B4B4B4B4B' C0-CF
         DC    XL16'4BD1D2D3D4D5D6D7D8D94B4B4B4B4B4B' D0-DF
         DC    XL16'4B4BE2E3E4E5E6E7E8E94B4B4B4B4B4B' E0-EF
         DC    XL16'F0F1F2F3F4F5F6F7F8F94B4B4B4B4B4B' F0-FF
*
PRT      DC    CL80' '                 PRINT LINE
*
PRTRETRN DS    0CL80                   PRINT READLMOD RETURNED DATA
         DC    CL5' REQ='
PRTREQST DS    CL5                        REQUESTED DATA TYPE
PRTRERR  DC    CL5' ERR='
PRTERROR DS    CL1                        ERROR INDICATOR
         DC    CL8' CURSOR='
PRTCURSR DS    CL8                        IEWBIND CURSOR
         DC    CL8' RETCOD='
PRTRETCD DS    CL8                        IEWBIND RETURN CODE
         DC    CL8' RSNCOD='
PRTRSNCD DS    CL8                        IEWBIND REASON CODE
         DC    CL7' COUNT='
PRTCOUNT DS    CL8                        IEWBIND COUNT
         DC    CL1' '
*
RLDPRTL1 DS    0CL80                   RELOCATION DICTIONARY LINE 1
         DC    CL8' **RLD* '             DATA IDENTIFIER
         DC    CL5'TYPE='
RPLTYPE  DS    CL2                       ADCON TYPE
         DC    CL6' STAT='
RPLSTAT  DS    CL2                       ADCON RELOCATION STATUS
         DC    CL7' LIVES='
RPLRESNN DS    CL8                       ADCON RESIDENT CSECT
         DC    CL6' LENG='
RPLADCNL DS    CL4                       ADCON LENGTH
         DC    CL6' CLAS='
RPLRESCN DS    CL8                       ADCON RESIDENT CLASS
         DC    CL7' ELOFF='
RPLRESOF DS    CL8                       ADCON OFFSET IN ELEMENT/PART
         DC    CL3' '
RLDPRTL2 DS    0CL80                   RELOCATION DICTIONARY LINE 2
         DC    CL8' '
         DC    CL6'CLOFF='
RPLCLOF  DS    CL8                       ADCON OFFSET IN CLASS SEGMENT
         DC    CL7' BNDSP='
RPLADCNB DS    CL2                       ADCON BOUNDARY SPEC
         DC    CL7' BNDST='
RPLBNDAT DS    CL2                       ADCON BOUNDARY STATUS
         DC    CL7' XATCL='
RPLXATCN DS    CL8                       ADCON EXTENDED ATTR CLASS NAME
         DC    CL7' XAOFF='
RPLXATOF DS    CL8                       ADCON EXT ATTR OFFSET IN ELEM.
         DC    CL7' NAMSP='
RPLNAMSP DS    CL2                       ADCON NAME SPACE
         DC    CL1' '
RLDPRTL3 DS    0CL80                   RELOCATION DICTIONARY LINE 2
         DC    CL8' '
         DC    CL7'SYMPT2='
RLDTGTNN DS    CL8                       ADCON SYMBOL POINTED TO
         DC    CL8' RESPRT='
RLDRESPN DS    CL8                       ADCON RESIDENT PART NAME
         DC    CL41' '
*
*
ESDPRTL1 DS    0CL80                   EXT SYMBOL DICT LINE 1
         DC    CL8' **ESD* '             DATA IDENTIFIER
         DC    CL5'TYPE='
EPLTYPE  DS    CL2                       ESD ITEM TYPE
         DC    CL1'-'
EPLTYPEQ DS    CL2                       ESD TYPE QUALIFIER
         DC    CL7' NMSPC='
EPLNAMES DS    CL2                       ESD NAME SPACE OF SYMBOL
         DC    CL6' SCOP='
EPLSCOPE DS    CL2                       ESD NAME SPACE OF SYMBOL
         DC    CL7' SYMBL='
EPLNAME  DS    CL8                       ESD SYMBOL NAME
         DC    CL6' ATTR='
EPLSYMAT DS    CL2                       SYMBOL ATTRIBUTES
         DC    CL7' OWNER='
EPLOWNR  DS    CL8                       SYMBOL OWNER
         DC    CL7' '
ESDPRTL2 DS    0CL80                   EXT SYMBOL DICT LINE 2
         DC    CL8' '
         DC    CL5'LENG='
EPLENGTH DS    CL8                       SYMBOL LENGTH
         DC    CL6' ALGN='
EPLALIGN DS    CL2                       SYMBOL ALIGNMENT
         DC    CL6' REUS='
EPLUSBLT DS    CL2                       SYMBOL USABILITY
         DC    CL5' AMO='
EPLAMODE DS    CL2                       SYMBOL AMODE
         DC    CL5' RMO='
EPLRMODE DS    CL2                       SYMBOL RMODE
         DC    CL7' RECFM='
EPLRECFM DS    CL4                       RECORD FORMAT FOR CLASS
         DC    CL7' LOADF='
EPLLOADF DS    CL2                       LOAD ATTRIBUTES
         DC    CL9' '
ESDPRTL3 DS    0CL80                   EXT SYMBOL DICT LINE 3
         DC    CL8' '
         DC    CL5'BNDF='
EPLBINDF DS    CL2                       BIND ATTRIBUTES
         DC    CL6' BNDC='
EPLBINDC DS    CL2                       TYPE OF PROGRAM CODE
         DC    CL7' XATCL='
EPLXATCN DS    CL8                       NAME OF EXT ATTR CLASS
         DC    CL7' XATOF='
EPLXATOF DS    CL8                       EXT ATTR OFFSET
         DC    CL7' OVSEG='
EPLSEGMN DS    CL4                       OVERLAY SEGMENT NUMBER
         DC    CL7' OVRGN='
EPLREGN  DS    CL4                       OVERLAY REGION NUMBER
         DC    CL5' '
ESDPRTL4 DS    0CL80                   EXT SYMBOL DICT LINE 4
         DC    CL8' '
         DC    CL5'SIGN='
EPLSIGN  DS    CL4                       INTERFACE SIGNATURE
         DC    CL7' AUTCL='
EPLAUTOC DS    CL2                       AUTOCALL SPEC
         DC    CL6' STAT='
EPLSTAT  DS    CL2                       SYMBOL STATUS
         DC    CL7' ERTGT='
EPLTGTN  DS    CL8                       SECTION OF RESIDENCE FOR ER
         DC    CL7' CLSNM='
EPLCNTCN DS    CL8                       CONTAINING CLASS NAME
         DC    CL16' '
ESDPRTL5 DS    0CL80                   EXT SYMBOL DICT LINE 4
         DC    CL8' '
         DC    CL6'ELMOF='
EPLELOFF DS    CL8                       OFFSET WITHIN CLASS ELEMENT
         DC    CL7' SEGOF='
EPLCLOFF DS    CL8                       OFFSET WITHIN CLASS SEGMENT
         DC    CL43' '
*
NAMPRTL1 DS    0CL80                   NAME PRINT LINE
         DC    CL17' *NAME* CLASLENG='
NAMCLSL  DS    CL8                        CLASS LENGTH FOR CLASS NAMES
         DC    CL7' FLAGS='
NAMBINDF DS    CL2                        FLAG BYTE
         DC    CL11' CLS/CSECT='
NAMNAMEN DS    CL8                        CLASS/SECTION NAME
         DC    CL10' NBRELEMS='
NAMELEMC DS    CL8                        NBR ELEMENTS IN CLASS/CSECT
         DC    CL9' '
*
IUPPRTL1 DS    0CL80                   IDRU PRINT LINE
         DC    CL16' *IDRU* CREATDT='
IUPCREDT DS    CL7                        DATE THIS DATA WAS CREATED
         DC    CL7' CSECT='
IUPRESNN DS    CL8                        CSECT NAME
         DC    CL6' DATA='
IUPDATA  DS    CL80                       IDRU USER IDENTIFICATION DATA
*
ILPPRTL1 DS    0CL80                   IDRL PRINT LINE
         DC    CL19' *IDRL* TRANSLATOR='
ILPPIDID DS    CL10                       PID ORDER NUMBER
         DC    CL2' V'
ILPVER   DS    CL2                        VERSION NUMBER
         DC    CL1'M'
ILPMODLV DS    CL2                        MODIFICATION LEVEL
         DC    CL10' COMPILED='
ILPDATPR DS    CL7                        COMPILE/ASSEMBLY DATE YYYYDDD
         DC    CL7' CSECT='
ILPRESNN DS    CL8                        RESIDENT CSECT NAME
         DC    CL12' '
*
CNTLCARD DS    0CL80              CONTROL STATEMENT
CCDDNAM  DS    CL8                   DDNAME
CCMEMBER DS    CL8                   MEMBER NAME
CCCSECT  DS    CL8                   CSECT NAME
*
***********************************************************************
*  PARAMETER AREA PASSED TO THE READLMOD SUBROUTINE                   *
***********************************************************************
PARMAREA DS    0F          READLMOD PARAMETER AREA
PRMDDNAM DC    CL8'SYSLIB'    DDNAME FOR LOADLIB CONTAINING MEMBER
PRMEMBER DC    CL8'CEN300'    MEMBER NAME
PRMCSECT DC    CL8'ADJCANC'   CSECT NAME
PRMREQST DC    CL8'ESD'       NAME OF DATA TO BE RETRIEVED: ESD, RLD,
*                                TEXT, SYM, IDRU, IDRL, IDRZ, IDRB,
*                                NAME, OR MAP
PRMCURSR DC    F'0'        CURSOR VALUE. CALLER SETS THIS TO ZERO
*                             BEFORE A FIRST CALL FOR A SET OF DATA,
*                             THEN LEAVES IT AS-IS WHEN RETURNING FOR
*                             ADDITIONAL DATA UNTIL IT HAS ALL BEEN
*                             RETURNED. CURRENT VALUE IS RETURNED BY
*                             THIS SUBROUTINE AFTER EACH CALL.
PRMRETCD DC    F'0'        RETURN CODE FROM IEWBIND (S/B ZERO)
PRMRSNCD DC    F'0'        REASON CODE FROM IEWBIND (ZERO MEANS
*                             MORE DATA OF THIS TYPE IS AVAILABLE AND
*                             WILL BE RETURNED IN SUBSEQUENT CALLS.
*                             4 MEANS THE DATA IN THE BUFFER IS ALL
*                             THAT IS AVAILABLE OF THE REQUESTED TYPE
PRMCOUNT DC    F'0'        NUMBER ELEMENTS AVAILABLE IN THE BUFFER
PRMBUFAD DC    A(0)        ADDRESS OF THE DATA BUFFER HEADER. THE
*                             HEADER IS 32 BYTES LONG, FOLLOWED BY
*                             THE DATA ELEMENTS.
PRMERROR DS    CL1         ERROR INDICATOR ON RETURN:
PRMOK    EQU   C' '           SUCCESSFUL READLMOD CALL
PRMPRMER EQU   C'P'           PARAMETER ERROR
PRMACERR EQU   C'E'           IEWBIND MACRO ERROR OCCURRED
*
ACTIONS  DS    0F          ACTIONS TABLE
         DC    CL8'ESD     ',A(ESDPRT)    ESD
         DC    CL8'RLD     ',A(RLDPRT)    RLD
         DC    CL8'TEXT    ',A(TXTPRT)    TEXT
         DC    CL8'SYM     ',A(SYMPRT)    SYM
         DC    CL8'IDRU    ',A(IDRUPRT)   IDRU
         DC    CL8'IDRL    ',A(IDRLPRT)   IDRL
         DC    CL8'IDRZ    ',A(IDRZPRT)   IDRZ
         DC    CL8'IDRB    ',A(IDRBPRT)   IDRB
         DC    CL8'NAME    ',A(NAMEPRT)   NAME
         DC    CL8'MAP     ',A(MAPPRT)    MAP
         DC    8X'FF'
SAVER1   DS    A                       SAVE AREA FOR ENTRY ADDRESS
*
*********************************************************************
*             DCB'S                                                 *
*********************************************************************
PRINT1   DCB   DSORG=PS,MACRF=PM,DDNAME=PRINT1,                        X
               RECFM=FB,LRECL=80
READER1  DCB   DSORG=PS,MACRF=GM,DDNAME=READER1,EODAD=EOJ,             X
               RECFM=FB,LRECL=80
         LTORG
CALLRDLM CSECT
*********************************************************************
*             REGISTER EQUATES                                      *
*********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
***********************************************************************
* THE TWO FOLLOWING DSECTS DESCRIBE THE CONTENT OF AN IEWBUFF         *
* EXTERNAL SYMBOL DICTIONARY (ESD) BUFFER:                            *
*    ESDHEADR DESCRIBES THE BUFFER HEADER.                            *
*    ESDENTRY DESCRIBES EACH ESD ENTRY THAT FOLLOWS THE HEADER.       *
***********************************************************************
ESDHEADR DSECT ,    DESCRIBE THE IEWBUFF ESD BUFFER HEADER              01-IEWBU
ESDHBUFI DS    CL8  BUFFER EYECATCHER.                                  02-00073
ESDHBUFL DS    F    TOTAL BUFFER LENGTH INCLUDING THIS                  02-00074
ESDHVERS DS    AL1  VERSION OF BUFFER.                                  02-00077
         DS    AL3  RESERVED. MUST BE ZERO.                             02-00078
ESDHENTL DS    F    LENGTH OF EACH BUFFER ENTRY.                        02-00079
ESDHENTC DS    F    NUMBER ESDENTRY ELEMENTS CONTAINED IN THIS BUFFER   02-00080
ESDHNAMO DS    F    OFFSET OF NAME IN NAMES LIST AREA.                  02-00081
ESDHSTRP DS    F    ADDRESS OF BINDER NAMES LIST AREA.                  02-00082
ESDHEND  DS    0F   BEGINNING OF 1ST BUFFER ENTRY.                      02-00083
*
ESDENTRY DSECT ,    DESCRIBE ESDENTRY. OCCURS ESDHENTC TIMES            01-IEWBU
ESDTYPE  DS    CL2  TYPE OF ESD ENTRY.                                  01-IEWBU
ESDTYPEQ DS    CL2  ESD RECORD TYPE QUALIFIER                           01-IEWBU
ESDNAMES DS    CL1  NAME SPACE OF SYMBOL                                01-IEWBU
ESDSCOPE DS    CL1  SCOPE OF THE SYMBOL                                 01-IEWBU
ESDNAME  DS    0CL6 SYMBOL REPRESENTED BY ESD RECORD                    01-IEWBU
ESDNAMEC DS    H      LENGTH OF THE NAME.                               01-IEWBU
ESDNAMEP DS    A      POINTS TO THE NAME OF THE SYMBOL (BLANK = $PRIV)  01-IEWBU
ESDSYMAT DS    BL1  SYMBOL ATTRIBUTE FLAGS                              01-IEWBU
ESDSTRNG EQU   X'80'  ON=STRONG REFERENCE OR DEFINITION                 01-IEWBU
ESDRNMBL EQU   X'40'  ON=THIS SYMBOL IS MAPPED,NOT RENAMED              01-IEWBU
ESDDESCL EQU   X'20'  ON=SYMBOL DEFINES OR REFERENCES A LINKAGE BLOCK   01-IEWBU
ESDMNGLD EQU   X'10'  ON=NAME MAY BE MANGLED                            01-IEWBU
ESDXPLNK EQU   X'08'  ON=USES XPLINK LINKAGE CONVENTIONS                01-IEWBU
         DS    CL1                                                      01-IEWBU
ESDRESCS DS    0CL6 NAME OF OWNING OR CONTAINING SECTION                01-IEWBU
ESDRESCL DS    H       LENGTH OF THE RESIDENT SECTION NAME              01-IEWBU
ESDRESCP DS    A       POINTER TO NAME OF SECTION WHERE THIS SPEC. OF   01-IEWBU
*                        THE SYMBOL RESIDES. FOR LD, PR.
ESDLENG  DS    F    LENGTH OF DEFINED ELEMENT                           01-IEWBU
ESDALIGN DS    XL1  ALIGNMENT SPECIFICATION FOR SD, PR                  01-IEWBU
ESDUSBLT DS    XL1  REUSABILITY OF SD                                   01-IEWBU
ESDAMODE DS    XL1  ADDRESSING MODE OF SD                               01-IEWBU
ESDRMODE DS    XL1  RMODE OF SD                                         01-IEWBU
ESDRECFM DS    H    RECORD FORMAT FOR CLASS                             01-IEWBU
ESDLOADF DS    BL1  LOAD ATTRIBUTES                                     01-IEWBU
ESDRO    EQU   X'80'   READ-ONLY                                        01-IEWBU
ESDNL    EQU   X'40'   DO NOT LOAD WITH MODULE                          01-IEWBU
ESDMOVE  EQU   X'20'   MOVEABLE                                         01-IEWBU
ESDSHR   EQU   X'10'   SHAREABLE                                        01-IEWBU
ESDDEFER EQU   X'08'   DEFERRED LOAD                                    01-IEWBU
ESDBINDF DS    BL1  BIND ATTRIBUTES                                     01-IEWBU
ESDGEND  EQU   X'80'   BINDER-GENERATED                                 01-IEWBU
ESDNOCLS EQU   X'40'   NO CLASS DATA AVAILABLE                          01-IEWBU
ESDVL    EQU   X'20'   VARIABLE LENGTH RECORDS                          01-IEWBU
ESDDESCD EQU   X'10'   DESCRIPTIVE DATA                                 01-IEWBU
ESDINIT  EQU   X'08'   HAS PART INITIALIZERS                            01-IEWBU
ESDFILLX EQU   X'04'   ILL HAS BEEN SET                                 01-IEWBU
ESDPADST EQU   X'02'   CLASS HAS PADDING AT START                       01-IEWBU
ESDBINDC DS    BL1  TYPE OF PROGRAM CODE DESCRIBED BY SYMBOL            01-IEWBU
ESDMETH  EQU   X'30'   BINDING METHOD                                   01-IEWBU
*                        '00'B = CATENATE
*                        '01'B = MERGE
*                        '1-'B = RESERVED
ESDTXTTY EQU   X'0F'   TEXT TYPE                                        01-IEWBU
*                        '0000'B = UNSPECIFIED
*                        '0001'B = INSTRUCTIONS
*                        '0010'B = DATA
*                        '0011'B = TRANSLATOR DEFN
         DS    XL1                                                      01-IEWBU
ESDXATCL DS    H    LENGTH OF XATTR CLASS NAME                          01-IEWBU
ESDXATCP DS    A    PTR TO EXTENDED ATTRIBUTES CLASS NAME               01-IEWBU
ESDXATOF DS    F    EXTENDED ATTRIBUTES OFFSET                          01-IEWBU
ESDSEGMN DS    H    OVERLAY SEGMENT NUMBER OF SECTION                   01-IEWBU
ESDREGN  DS    H    OVERLAY REGION NUMBER OF SECTION                    01-IEWBU
ESDSIGN  DS    CL8  INTERFACE SIGNATURE                                 01-IEWBU
ESDAUTOC DS    BL1  AUTOCALL SPEC. APPLIES TO REFERENCES                01-IEWBU
ESDNVRCL EQU   X'80'      NEVERCALL WAS SPECIFIED                       01-IEWBU
ESDMINOR EQU   X'40'      AUTOCALLED FROM LPA                           01-IEWBU
ESDSTAT  DS    BL1  STATUS                                              01-IEWBU
ESDRESLV EQU   X'80'      SYMBOL IS RESOLVED                            01-IEWBU
ESDACPRC EQU   X'40'      PROCESSED BY AUTOCALL                         01-IEWBU
ESDINCLD EQU   X'20'      INCLUDE ATTEMPTED                             01-IEWBU
ESDNOTFD EQU   X'10'      MEMBER NOT FOUND                              01-IEWBU
ESDEXTRN EQU   X'08'      RESOLVED OUTSIDE MODULE                       01-IEWBU
ESDNOCAL EQU   X'04'      NOCALL/NEVERCALL                              01-IEWBU
ESDNOREF EQU   X'02'      NO STRONG REFERENCES                          01-IEWBU
ESDLIBRY EQU   X'01'      SPECIAL CALL LIBRARY REQUESTED                01-IEWBU
ESDTGTL  DS    H    LENGTH OF THE TARGET.                               01-IEWBU
ESDTGTP  DS    A    POINTS TO NAME OF SECTION WHERE SYMBOL RESIDES. FOR 01-IEWBU
*                      EXTERNAL REFERENCES.
         DS    H                                                        01-IEWBU
ESDCNTCL DS    H    LENGTH OF THE CLASS                                 01-IEWBU
ESDCNTCP DS    A    POINTS TO NAME OF CONTAINING CLASS                  01-IEWBU
ESDELOFF DS    F    OFFSET WITHIN THE CLASS ELEMENT                     01-IEWBU
ESDCLOFF DS    F    OFFSET WITHIN THE CLASS SEGMENT                     01-IEWBU
         DS    H                                                        01-IEWBU
ESDADAL  DS    H    ASSOCIATED DATA LENG                                01-IEWBU
ESDADAP  DS    A    POINTS TO ASSOCIATED DATA                           01-IEWBU
         DS    F                                                        01-IEWBU
ESDPRTY  DS    F    BINDING SEQUENCE                                    01-IEWBU
ESDNTEND DS    0F                                                       01-IEWBU
***********************************************************************
* THE TWO FOLLOWING DSECTS DESCRIBE THE CONTENT OF AN IEWBUFF MAP     *
* BUFFER:                                                             *
*    MAPHEADR DESCRIBES THE BUFFER HEADER.                            *
*    MAPENTRY DESCRIBES EACH ENTRY THAT FOLLOWS THE HEADER.           *
***********************************************************************
MAPHEADR DSECT ,    DESCRIBES THE HEADER FOR THE IEWBUFF MAP BUFFER     01-IEWBU
MAPHBUFI DS    CL8  BUFFER EYECATCHER.                                  02-00073
MAPHBUFL DS    F    TOTAL BUFFER LENGTH, INCLUDING THIS                 02-00074
MAPHVER  DS    AL1  VERSION OF BUFFER.                                  02-00077
         DS    AL3                                                      02-00078
MAPHENTL DS    F    LENGTH OF EACH BUFFER ENTRY.                        02-00079
MAPHENTC DS    F    NUMBER MAPENTRY ELEMENTS CONTAINED IN THIS BUFFER   02-00080
MAPHNAMO DS    F    OFFSET OF NAME IN NAMES LIST AREA.                  02-00081
MAPHSTRP DS    F    ADDRESS OF BINDER NAMES LIST AREA.                  02-00082
MAPHEND  DS    0F   BEGINNING OF 1ST BUFFER ENTRY.                      02-00083
*                                                                       02-00086
MAPENTRY DSECT ,    DESCRIBES MAPENTRY. OCCURS MAPHENTC TIMES           01-IEWBU
MAPNEXT  DS    F    OFFSET OF SIBLING ENTRY                             01-IEWBU
MAPTYPE  DS    C    TYPE OF MAP ENTRY: M OR C                           01-IEWBU
MAPFLAGS DS    XL1  FLAGS                                               01-IEWBU
MAPSINGL EQU   X'80'      SINGLE EXTENT ASSUMED                         01-IEWBU
MAPLDBL  EQU   X'40'      LOADABLE CLASS (FOR 'C' TYPE)                 01-IEWBU
MAPDESCR EQU   X'20'      TEXT CLASS (FOR 'C' TYPE)                     01-IEWBU
MAPNAMEL DS    H    NUMBER OF SIGNIFICANT CHARACTERS IN MAP NAME        01-IEWBU
MAPNAMEP DS    A    ADDRESS OF NAME OF MAPPED ELEMENT                   01-IEWBU
MAPOFFST DS    F    CLASS OR SECTION OFFSET                             01-IEWBU
MAPQUAN  DS    F    LENGTH(TYPE=M) OR QTY OF RECORDS(TYPE=C)            01-IEWBU
MAPNAMS  DS    XL1  NAME SPACE FOR NAME                                 01-IEWBU
         DS    XL1                                                      01-IEWBU
MAPRECFT DS    H                                                        01-IEWBU
         DS    XL8                                                      01-IEWBU
MAPEND   DS    0F                                                       01-IEWBU
***********************************************************************
* THE TWO FOLLOWING DSECTS DESCRIBE THE CONTENT OF AN IEWBUFF NAME    *
* BUFFER:                                                             *
*    BNLHEADR DESCRIBES THE BUFFER HEADER.                            *
*    BNLENTRY DESCRIBES EACH ENTRY THAT FOLLOWS THE HEADER.           *
***********************************************************************
BNLHEADR DSECT ,    DESCRIBES THE HEADER FOR THE IEWBUFF NAME BUFFER    01-IEWBU
BNLHBUFI DS    CL8  BUFFER EYECATCHER.                                  02-00073
BNLHBUFL DS    F    TOTAL BUFFER LENGTH, INCLUDING THIS                 02-00074
BNLHVER  DS    AL1  VERSION OF BUFFER.                                  02-00077
         DS    AL3                                                      02-00078
BNLHENTL DS    F    LENGTH OF EACH BUFFER ENTRY.                        02-00079
BNLHENTC DS    F    NUMBER BNLENTRY ELEMENTS CONTAINED IN THIS BUFFER   02-00080
HNAMO DS    F    OFFSET OF NAME IN NAMES LIST AREA.                     02-00081
BNLHSTRP DS    F    ADDRESS OF BINDER NAMES LIST AREA.                  02-00082
BNLHEND  DS    0F   BEGINNING OF 1ST BUFFER ENTRY.                      02-00083
*                                                                       02-00121
BNLENTRY DSECT ,    DESCRIBES NAME BUFFER ENTRY. OCCURS BNLHENTC TIMES  01-IEWBU
BNLCLSL  DS    F    CLASS LENGTH (FOR CLASS NAMES)                      01-IEWBU
BNLBINDF DS    XL1  FLAG BITS                                           01-IEWBU
BNLBFGEN EQU   X'80'  GENERATED BY BINDER                               01-IEWBU
BNLBFEMP EQU   X'40'  NO DATA PRESENT                                   01-IEWBU
BNLBFVL  EQU   X'20'  VARYING LENGTH RECORDS                            01-IEWBU
BNLBFDES EQU   X'10'  DESCRIPTIVE DATA (NON-TEXT)                       01-IEWBU
BNLBFINI EQU   X'08'  CLASS HAS INITIAL DATA                            01-IEWBU
BNLBFFIL EQU   X'04'  FILL CHARACTER SPECIFIED                          01-IEWBU
BNLBFERR EQU   X'01'  CLASS VALIDATION ERROR                            01-IEWBU
BNLPAD1  DS    XL1  1 BYTE PAD FOR BOUNDARY ALIGNMENT                   01-IEWBU
BNLNAMEL DS    H    NBR SIGNIFICANT CHARS IN CLASS/SECTION NAME         01-IEWBU
BNLNAMEP DS    AL4  POINTER TO CLASS OR SECTION NAME                    01-IEWBU
BNLELEMC DS    F    NUMBER ELEMENTS IN CLASS OR SECT                    01-IEWBU
BNLEND   DS    0F                                                       01-IEWBU
***********************************************************************
* THE TWO FOLLOWING DSECTS DESCRIBE THE CONTENT OF AN IEWBUFF         *
* RELOCATION DICTIONARY (RLD) BUFFER:                                 *
*    RLDHEADR DESCRIBES THE BUFFER HEADER.                            *
*    RLDENTRY DESCRIBES EACH RLD ENTRY THAT FOLLOWS THE HEADER.       *
***********************************************************************
RLDHEADR DSECT ,    DESCRIBE IEWBUFF RLD BUFFER HEADER                  01-IEWBU
RLDHBUFI DS    CL8  BUFFER EYECATCHER.                                  02-00073
RLDHBUFL DS    F    TOTAL BUFFER LENGTH, INCLUDING THIS                 02-00074
RLDHVER  DS    AL1  VERSION OF BUFFER.                                  02-00077
         DS    XL3                                                      02-00078
RLDHENTL DS    F    LENGTH OF EACH BUFFER ENTRY.                        02-00079
RLDHENTC DS    F    NUMBER RLDENTRY ELEMENTS CONTAINED IN THIS BUFFER   02-00080
RLDHNAMP DS    F    OFFSET OF NAME IN NAMES LIST AREA.                  02-00081
RLDHSTRP DS    F    ADDRESS OF BINDER NAMES LIST AREA.                  02-00082
RLDHEND  DS    0F   BEGINNING OF 1ST BUFFER ENTRY.                      02-00083
*
RLDENTRY DSECT ,    DESCRIBE RLD BUFFER ENTRY. OCCURS RLDHENTC TIMES    01-IEWBU
RLDTYPE  DS    XL1  ADCON TYPE.                                         01-IEWBU
RLDSTAT  DS    XL1  ADCON RELOCATION STATUS.                            01-IEWBU
RLDRESNL DS    H    LENGTH OF THE RESIDENT.                             01-IEWBU
RLDRESNP DS    A    POINTS TO NAME OF SECTION WHERE ADCON RESIDES       01-IEWBU
RLDADCNL DS    H    LENGTH OF THE ADCON.                                01-IEWBU
RLDRESCL DS    H    LENGTH OF THE RESIDENT CLASS NAME                   01-IEWBU
RLDRESCP DS    A    POINTS TO NAME OF CLASS WHERE ADCON RESIDES         01-IEWBU
RLDRESOF DS    F    OFFSET OF ADDRESS CONSTANT IN ELEMENT OR PART:      01-IEWBU
*                      RLDRESPL=0: ELEMENT; RLDRESPL>0: PART
RLDCLOF  DS    F    OFFSET OF THE ADDRESS WITHIN CLASS SEGMENT          01-IEWBU
RLDADCNB DS    XL1  ADCON BOUNDARY SPECIFICATION.                       01-IEWBU
RLDBNDAT DS    BL1  ADCON BOUNDARY STATUS                               01-IEWBU
RLDDIR   EQU   X'80'   RELOCATION SIGN: '0' = POS; '1' = NEG            01-IEWBU
RLDHOBST EQU   X'40'   SET HIGH ORDER BIT FROM AMODE OF TARGET          01-IEWBU
RLDINTXT EQU   X'20'   INTERNAL/EXTERNAL: '0' = INT; '1' = EXT          01-IEWBU
RLDHOBCH EQU   X'10'   HIGH ORDER BIT CHANGED BY BINDER                 01-IEWBU
RLDPARTR EQU   X'08'   ADCON LOCATED IN PART                            01-IEWBU
RLDXATCL DS    H    LENGTH OF EXTENDED ATTR CLASS NAME                  01-IEWBU
RLDXATCP DS    A    POINTER TO EXTENDED ATTRIBUTES CLASS NAME           01-IEWBU
RLDXATOF DS    F    OFFSET OF EXTENDED ATTRIBUTES IN THE ELEMENT        01-IEWBU
RLDNAMSP DS    XL1  NAME SPACE OF REFERENCE                             01-IEWBU
         DS    XL1                                                      01-IEWBU
RLDTGTNL DS    H    LENGTH OF THE TARGET NAME                           01-IEWBU
RLDTGTNP DS    A    POINTER TO NAME OF SYMBOL TO WHICH ADCON POINTS     01-IEWBU
         DS    XL2                                                      01-IEWBU
RLDRESPL DS    H    RESIDENT PART LENGTH                                01-IEWBU
RLDRESPP DS    A    RESIDENT PART POINTER                               01-IEWBU
RLDEND   DS    0F                                                       01-IEWBU
***********************************************************************
* THE TWO FOLLOWING DSECTS DESCRIBE THE CONTENT OF AN IEWBUFF SYM     *
* BUFFER:                                                             *
*    SYMHEADR DESCRIBES THE BUFFER HEADER.                            *
*    SYMENTRY DESCRIBES EACH ENTRY THAT FOLLOWS THE HEADER.           *
***********************************************************************
SYMHEADR DSECT ,    DESCRIBES THE IEWBUFF SYM BUFFER HEADER             01-IEWBU
SYMHBUFI DS    CL8  BUFFER EYECATCHER.                                  02-00073
SYMHBUFL DS    F    TOTAL BUFFER LENGTH, INCLUDING THIS                 02-00074
SYMHVER  DS    AL1  VERSION OF BUFFER.                                  02-00077
         DS    AL3                                                      02-00078
SYMHENTL DS    F    LENGTH OF EACH BUFFER ENTRY.                        02-00079
SYMHENTC DS    F    NUMBER SYMENTRY ELEMENTS CONTAINED IN THIS BUFFER   02-00080
SYMHNAMO DS    F    OFFSET OF NAME IN NAMES LIST AREA.                  02-00081
SYMHSTRP DS    F    ADDRESS OF BINDER NAMES LIST AREA.                  02-00082
SYMHEND  DS    0F   BEGINNING OF 1ST BUFFER ENTRY.                      02-00083
*                                                                       02-00121
SYMENTRY DSECT ,    DESCRIBE SYMENTRY. OCCURS SYMHENTC TIMES            01-IEWBU
SYMCRDAT DS    CL7  DATE THE SYM DATA WAS CREATED.                      01-IEWBU
         DS    XL1                                                      01-IEWBU
SYMDATAL DS    H    LENGTH OF DATA IN SYMDATA.                          01-IEWBU
SYMDATA  DS    CL80 SYMBOL DATA.                                        01-IEWBU
SYMRESNL DS    H    LENGTH OF THE RESIDENT.                             01-IEWBU
SYMRESNP DS    AL4  POINTS TO NAME OF SECTION CONTAINING THIS SYMBOL    01-IEWBU
SYMEND   DS    0F                                                       01-IEWBU
***********************************************************************
* THE TWO FOLLOWING DSECT DESCRIBES THE CONTENT OF AN IEWBUFF         *
* TEXT BUFFER                                                         *
***********************************************************************
TXTHEADR DSECT ,    DESCRIBE THE IEWBUFF TEXT BUFFER HEADER             01-IEWBU
TXTHBUFI DS    CL8  BUFFER EYECATCHER.                                  02-00073
TXTHBUFL DS    F    TOTAL BUFFER LENGTH, INCLUDING THIS                 02-00074
TXTHVER  DS    AL1  VERSION OF BUFFER.                                  02-00077
         DS    AL3                                                      02-00078
TXTHENTL DS    F    LENGTH OF EACH BUFFER ENTRY.                        02-00079
TXTHENTC DS    F    NUMBER TEXT BYTES CONTAINED IN THIS BUFFER          02-00080
TXTHNAMO DS    F    OFFSET OF NAME IN NAMES LIST AREA.                  02-00081
TXTHSTRP DS    F    ADDRESS OF BINDER NAMES LIST AREA.                  02-00082
TXTHEND  DS    0F   BEGINNING OF TEXT AREA                              02-00083
*
TXTENTRY DSECT ,    DESCRIBES TEXT AREA
TXTBYTE  DS    0C   TEXT BYTE. OCCURS TXTHENTC TIMES                    02-00083
***********************************************************************
* THE TWO FOLLOWING DSECTS DESCRIBE THE CONTENT OF AN IEWBUFF IDRB    *
* BUFFER:                                                             *
*    IDBHEADR DESCRIBES THE BUFFER HEADER.                            *
*    IDBENTRY DESCRIBES EACH ENTRY THAT FOLLOWS THE HEADER.           *
***********************************************************************
IDBHEADR DSECT ,    DESCRIBES THE IDRB BUFFER HEADER                    01-IEWBU
IDBHBUFI DS    CL8  BUFFER EYECATCHER.                                  02-00073
IDBHBUFL DS    F    TOTAL BUFFER LENGTH, INCLUDING THIS                 02-00074
IDBHVER  DS    AL1  VERSION OF BUFFER.                                  02-00077
         DS    AL3                                                      02-00078
IDBHENTL DS    F    LENGTH OF EACH BUFFER ENTRY.                        02-00079
IDBHENTC DS    F    NUMBER IDBENTRY ELEMENTS CONTAINED IN THIS BUFFER   02-00080
IDBHNAMO DS    F    OFFSET OF NAME IN NAMES LIST AREA.                  02-00081
IDBHSTRP DS    F    ADDRESS OF BINDER NAMES LIST AREA.                  02-00082
IDBHEND  DS    0F   BEGINNING OF 1ST BUFFER ENTRY.                      02-00083
*                                                                       02-00121
IDBENTRY DSECT ,    DESCRIBES IDBENTRY. OCCURS IDBHENTC TIMES           01-IEWBU
IDBBINDI DS    CL10 BINDER IDENTIFICATION CHARACTERS.                   01-IEWBU
IDBVER   DS    CL2  VERSION OF THE BINDER.                              01-IEWBU
IDBREL   DS    CL2  RELEASE OF THE BINDER.                              01-IEWBU
IDBDATEB DS    CL7  DATE OF BINDING (YYYYDDD).                          01-IEWBU
IDBTIMEB DS    CL6  TIME OF BINDING (HHMMSS).                           01-IEWBU
         DS    XL1                                                      01-IEWBU
IDBMODSZ DS    F    LENGTH OF PROGRAM TEXT DATA.                        01-IEWBU
IDBCALIL DS    H    NUMBER OF SIGNIFICANT CHARACTERS IN IDBCALID        01-IEWBU
IDBCALID DS    CL80 CALLER IDENTIFICATION (IGNORED ON INPUT)            01-IEWBU
IDBPAD1  DS    H    2 BYTE PAD FOR BOUNDARY ALIGNMENT.                  01-IEWBU
IDBEND   DS    0F                                                       01-IEWBU
***********************************************************************
* THE TWO FOLLOWING DSECTS DESCRIBE THE CONTENT OF AN IEWBUFF IDRL    *
* BUFFER:                                                             *
*    IDLHEADR DESCRIBES THE BUFFER HEADER.                            *
*    IDLENTRY DESCRIBES EACH ENTRY THAT FOLLOWS THE HEADER.           *
***********************************************************************
IDLHEADR DSECT ,    DESCRIBE THE IEWBUFF IDRL BUFFER HEADER             01-IEWBU
IDLHBUFI DS    CL8  BUFFER EYECATCHER.                                  02-00073
IDLHBUFL DS    F    TOTAL BUFFER LENGTH, INCLUDING THIS                 02-00074
IDLHVER  DS    AL1  VERSION OF BUFFER.                                  02-00077
         DS    AL3                                                      02-00078
IDLHENTL DS    F    LENGTH OF EACH BUFFER ENTRY.                        02-00079
IDLHENTC DS    F    NUMBER IDLENTRY ELEMENTS CONTAINED IN THIS BUFFER   02-00080
IDLHNAMO DS    F    OFFSET OF NAME IN NAMES LIST AREA.                  02-00081
IDLHSTRP DS    F    ADDRESS OF BINDER NAMES LIST AREA.                  02-00082
IDLHEND  DS    0F   BEGINNING OF 1ST BUFFER ENTRY.                      02-00083
*                                                                       02-00121
IDLENTRY DSECT ,    DESCRIBE IDRLENTRY. OCCURS IDLHENTC TIMES           01-IEWBU
IDLPIDID DS    CL10 PROCESSOR IDENTIFICATION (PID ORDER NUMBER)         01-IEWBU
IDLVER   DS    CL2  PROCESSOR VERSION  NUMBER.                          01-IEWBU
IDLMODLV DS    CL2  PROCESSOR MODIFICATION LEVEL.                       01-IEWBU
IDLDATPR DS    CL7  DATE OF COMPILATION OR ASSEMBLY (YYYYDDD)           01-IEWBU
         DS    XL1                                                      01-IEWBU
IDLRESNL DS    H    LENGTH OF THE RESIDENT.                             01-IEWBU
IDLRESNP DS    AL4  POINTS TO NAME OF SECTION TO WHICH THIS APPLIES     01-IEWBU
IDLEND   DS    0F                                                       01-IEWBU
***********************************************************************
* THE TWO FOLLOWING DSECTS DESCRIBE THE CONTENT OF AN IEWBUFF IDRU    *
* BUFFER:                                                             *
*    IDUHEADR DESCRIBES THE BUFFER HEADER.                            *
*    IDRUNTRY DESCRIBES EACH ENTRY THAT FOLLOWS THE HEADER.           *
***********************************************************************
IDUHEADR DSECT ,    DESCRIBE BUFFER HEADER                              01-IEWBU
IDUHBUFI DS    CL8  BUFFER EYECATCHER.                                  02-00073
IDUHBUFL DS    F    TOTAL BUFFER LENGTH, INCLUDING THIS                 02-00074
IDUHVER  DS    AL1  VERSION OF BUFFER.                                  02-00077
         DS    AL3                                                      02-00078
IDUHENTL DS    F    LENGTH OF EACH BUFFER ENTRY.                        02-00079
IDUHENTC DS    F    NUMBER IDRUNTRY ELEMENTS CONTAINED IN THIS BUFFER   02-00080
IDUHNAMO DS    F    OFFSET OF NAME IN NAMES LIST AREA.                  02-00081
IDUHSTRP DS    F    ADDRESS OF BINDER NAMES LIST AREA.                  02-00082
IDUHEND  DS    0F   BEGINNING OF 1ST BUFFER ENTRY.                      02-00083
*
IDRUNTRY DSECT ,    DESCRIBES IDURNTRY. OCCURS IDUHENTC TIMES           01-IEWBU
IDUCREDT DS    CL7  DATE THE IDRU DATA WAS CREATED.                     01-IEWBU
         DS    XL1                                                      01-IEWBU
IDUDATCH DS    H    NUMBER OF SIGNIFICANT CHARACTERS IN IDUDATA         01-IEWBU
IDUDATA  DS    CL80 USER IDENTIFICATION DATA.                           01-IEWBU
IDURESNL DS    H    LENGTH OF RESIDENT.                                 01-IEWBU
IDURESNP DS    AL4  POINTS TO NAME OF THE APPLICABLE SECTION            01-IEWBU
IDUEND   DS    0F                                                       01-IEWBU
***********************************************************************
* THE TWO FOLLOWING DSECTS DESCRIBE THE CONTENT OF AN IEWBUFF IDRZ    *
* BUFFER:                                                             *
*    IDZHEADR DESCRIBES THE BUFFER HEADER.                            *
*    IDZENTRY DESCRIBES EACH ENTRY THAT FOLLOWS THE HEADER.           *
***********************************************************************
IDZHEADR DSECT ,    DESCRIBE THE IDRZ BUFFER HEADER                     01-IEWBU
IDZHBUFI DS    CL8  BUFFER EYECATCHER.                                  02-00073
IDZHBUFL DS    F    TOTAL BUFFER LENGTH, INCLUDING THIS                 02-00074
IDZHVER  DS    AL1  VERSION OF BUFFER.                                  02-00077
         DS    AL3                                                      02-00078
IDZHENTL DS    F    LENGTH OF EACH BUFFER ENTRY.                        02-00079
IDZHENTC DS    F    NUMBER IDZENTRY ELEMENTS CONTAINED IN THIS BUFFER   02-00080
IDZHNAMO DS    F    OFFSET OF NAME IN NAMES LIST AREA.                  02-00081
IDZHSTRP DS    F    ADDRESS OF BINDER NAMES LIST AREA.                  02-00082
IDZHEND  DS    0F   BEGINNING OF 1ST BUFFER ENTRY.                      02-00083
*                                                                       02-00121
IDZENTRY DSECT ,    DESCRIBE IDZENTRY. OCCURS IDZHENTC TIMES            01-IEWBU
IDZDATE  DS    CL7  DATE THE ZAP WAS APPLIED (YYYYDDD).                 01-IEWBU
IDZAPDTA DS    CL8  PTF NUMBER OR OTHER ZAP IDENTIFICATION DATA         01-IEWBU
         DS    XL3                                                      01-IEWBU
IDZRESNL DS    H    LENGTH OF RESIDENT.                                 01-IEWBU
IDZRESNP DS    AL4  POINTS TO NAME OF SECTION TO WHICH ZAP APPLIES      01-IEWBU
IDZEND   DS    0F                                                       01-IEWBU
         END
