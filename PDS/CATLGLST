         TITLE '*** ILLUSTRATES USE OF IGGCSI00 CATALOG SEARCH ***'
CATLGLST CSECT
CATLGLST AMODE 31
CATLGLST RMODE 24                  USES QSAM I/O
*********************************************************************
* EXAMPLE PROGRAM TO SHOW USE OF THE CATALOG SEARCH INTERFACE       *
* ROUTINE, IGGCSI00. SEE ALSO SYS1.SAMPLIB MEMBERS IGGSILC, IGGCSIVG*
* AND IGGCSIVS. THIS PROGRAM IS BASED ON THE IGGCSILC PROGRAM AND   *
* INFORMATION CONTAINED IN APPENDIX D: CATALOG SEARCH INTERFACE     *
* USER'S GUIDE CONTAINED IN THE IBM MANUAL "MANAGING CATALOGS."     *
*                                                                   *
* DATA OUTPUT FROM THIS PROGRAM IS SIMILAR TO THAT FROM THE LISTCAT *
* LEVEL(NODCSIENAME), THOUGH FORMATTED DIFFERENTLY.                 *
*                                                                   *
* INPUT: SYSIN DD. THE 80-BYTE RECORDS CONTAIN DATASET NODES THAT   *
*        ARE TO BE LISTED, BEGINNING IN COLUMN 2. MORE THAN 1 RECORD*
*        CAN BE SUPPLIED. PROCESSING ENDS AT END OF DATA. COLUMN 1  *
*        IS NORMALLY BLANK, BUT CAN BE * FOR A COMMENT.             *
*                                                                   *
*                                                                   *
* OUTPUT: SYSPRINT DD.  LIST OF ENTRY NAMES CONTAINED FOR THE NODE  *
*        NAME IN THE INPUT CONTROL CARD.                            *
*                                                                   *
* AUTHOR R THORNTON                                                 *
* *******************************************************************
         STM   R14,R12,12(R13)     SAVE CALLER'S REGS
         LR    R3,R15              COPY ENTRY POINT ADDRESS
         USING CATLGLST,R3
         LA    R15,SAVE            POINT TO MY SAVE AREA
         ST    R13,4(R15)          SAVE HSA POINTER
         ST    R15,8(R13)          SAVE LSA POINTER
         LR    R13,R15             SET UP SAVE AREA POINTER
         B     GETPARM             GO PROCESS PARM DATA
         DC    CL8'CATLGLST'       PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'       ASSEMBLY DATE
         DC    CL8'&SYSTIME'       ASSEMBLY TIME
SAVE     DS    18F                 MY REGISTER SAVE AREA
*********************************************************************
*        PROCESS PARM FIELD                                         *
*********************************************************************
GETPARM  L     R2,0(R1)            GET PARM FIELD ADDR
         CLC   0(2,R2),H0          ANY PARM DATA?
         BE    OPENS               NO, CONTINUE
         MVI   ALLTYPES,1          GOT PARM, SHOW ALL TYPES OUT
         MVC   CSIDTYPS,BLANKS     SHOW IGGCSI00 ALL TYPES WANTED
*********************************************************************
*        OPEN FILES                                                 *
*********************************************************************
OPENS    OPEN  (SYSPRINT,OUTPUT,SYSIN) OPEN FILES
         STORAGE OBTAIN,LENGTH=65539 GET RETURN STORAGE FOR IGGCSI00
         ST    R1,CTLGDATA         SAVE ADDRESS OF STORAGE
         MVC   0(4,R1),F65535      SAVE STORAGE LENGTH
         CLI   ALLTYPES,1          GOT PARM DATA?
         BNE   MAINLINE            NO
         LA    R12,PRTGALL         POINT TO MESSAGE
         BAS   R9,PRTBOX           GO PRINT BOX CONTAINING MESSAGE
******************************************************************
* MAINLINE: READ NEXT SYSIN RECORD. AT END OF FILE, GO TO THE    *
* ENDJOB ROUTINE. IF A RECORD IS OBTAINED, PERFORM THE CONTROL   *
* CARD PROCESSING ROUTINE, THEN THE CATALOG PROCESSING ROUTINE.  *
******************************************************************
MAINLINE MVI   ERROR,0             CLEAR ERROR SWITCH
         BAS   R9,GETDSNOD         GO READ NEXT DSNAME NODE RECORD
         CLI   ERROR,1             END OF FILE?
         BE    EOJ                 YES, GO TO END OF JOB
         BAS   R9,CHKNODE          GO PROCESS THE DSNAME NODE RECORD
         CLI   ERROR,1             ANY ERROR?
         BE    MAINLINE            YES, GO GET NEXT ONE
         MVC   CSIFILTK,DSNODREC+1 GENERIC FILTER KEY
         MVC   CSICATNM,BLANKS     CLEAR CATALOG DSNAME
         MVC   CSIRESNM,BLANKS     RESUME NAME
         MVI   CSIRESUM,C' '       CLEAR RESUME INDICATOR
MLRESUME BAS   R9,CALLCSI          GO GET A LOAD OF CATALOG INFO
         CLI   ERROR,1             ANY ERROR?
         BE    MAINLINE            YES, GO GET NEXT DSNAME NODE
         BAS   R9,PROCESS          GO PROCESS THE CATALOG DATA
         CLI   CSIRESUM,C'Y'       IF MORE ENTRIES AVAILABLE
         BE    MLRESUME               GO GET NEXT LOAD
         B     MAINLINE            ELSE GO READ NEXT DSNAME NODE
******************************************************************
*        READ NEXT DSNAME NODE RECORD FROM SYSIN                 *
******************************************************************
GETDSNOD ST    R9,GD9              STORE RETURN ADDRESS
GDGET    GET   SYSIN,DSNODREC      READ NEXT DSNAME NODE RECORD
         CLI   DSNODREC,C'*'       COMMENT RECORD?
         BE    GDGET               YES, SKIP IT
         MVC   PRTCRECD,DSNODREC   CONTROL RECORD TO PRINT LINE
         LA    R12,PRTCNTL         POINT TO CONTROL CARD LINE
         BAS   R9,PRTBOX               GO PRINT BOX CONTAINING MESSAGE
GDXIT    L     R9,GD9              GET RETURN ADDRESS
         BR    R9                  EXIT
ENDATA   MVI   ERROR,1             INDICATE END OF FILE
         B     GDXIT               GO TO EXIT
GD9      DC    A(0)                RETURN ADDRESS
******************************************************************
*        CHECK THE DSNAME NODE ENTERED IN THE SYSIN RECORD       *
******************************************************************
CHKNODE  ST    R9,CN9              STORE RETURN ADDRESS
         CLI   DSNODREC+1,C' '     COLUMN 2 IS BLANK?
         BNE   CNXIT               NO
         MVC   PRTCREC2,DSNODREC   CONTROL RECORD TO PRINT LINE
         LA    R12,PRTBADC         POINT TO CONTROL CARD LINE
         BAS   R9,PRTBOX               GO PRINT BOX CONTAINING MESSAGE
         MVI   ERROR,1             YES, INDICATE ERROR
CNXIT    L     R9,CN9              GET RETURN ADDRESS
         BR    R9                  EXIT
CN9      DC    A(0)                RETURN ADDRESS
******************************************************************
* CALL THE IGGCSI00 ROUTINE TO GET THE NEXT LOAD OF CATALOG      *
* INFORMATION FOR THE NODE NAME SPECIFIED.                       *
******************************************************************
CALLCSI  ST    R9,CC9              SAVE RETURN ADDRESS
         LA    R1,PARMLIST         POINT TO PARMLIST FOR IGGCSI00
         CALL  IGGCSI00            CALL IGGCSI00 FOR CATALOG INFO
         LTR   15,15               SUCCESSFUL CALL?
         BZ    CCCHECK             YES
         CLC   MODRSNRT(4),FENTERR NO, A FIELD ERROR OCCURRED?
         BE    CCCHECK             YES, TREAT AS SUCCESSFUL
         MVC   RETDATA(4),MODRSNRT REAL ERROR, MOVE RETCODES TO WORK
         BAS   R9,ERRCNVRT         CONVERT ERROR REASON CODES
         MVI   ERROR,1             SET ERROR INDICATOR
         B     CCXIT               CONTINUE
CCCHECK  L     R5,CTLGDATA         POINT TO CATALOG DATA AREA
         USING CSIRWORK,R5
         L     R1,CSICRETN         GET RETURN CODE
         LTR   R1,R1               TEST RETURN CODE
         BZ    CCXIT               CONTINUE IF NO ERRORS
         MVC   RETDATA(4),CSICRETN MOVE CODES TO WORK AREA
         BAS   R9,ERRCNVRT         GO CONVERT ERROR REASON CODES
         MVI   ERROR,1             SET ERROR INDICATOR
         DROP  R5
CCXIT    L     R9,CC9              GET RETURN ADDRESS
         BR    R9                  EXIT
CC9      DC    A(0)                RETURN ADDRESS
******************************************************************
*        PROCESS THE CATALOG INFORMATION RETURNED BY IGGCSI00    *
******************************************************************
PROCESS  ST    R9,PS9              STORE RETURN ADDRESS
         L     R5,CTLGDATA         POINT TO CATALOG DATA AREA
         USING CSIRWORK,R5
         CLI   CSICFLG,0           DATA ENTRIES RETURNED?
         BNE   PSXIT               NO
         L     R1,CSIUSDLN         GET TOTAL LENGTH USED
         AR    R1,R5               COMPUTE END OF DATA ADDRESS
         ST    R1,CSIENDA          STORE END ADDRESS
         LA    R4,CSIENTRY         GET BEGINNING OF INFO
         USING CSIENTRY,R4
PSNEXT   BAS   R9,DOENTRY          GO PROCESS THE ENTRY
         SR    R1,R1               CLEAR FOR INSERT
         ICM   R1,3,CSITOTLN       PICK UP ENTRY LENGTH
         LA    R4,CSITOTLN-CSIENTRY(R1,R4) POINT TO NEXT ENTRY
         C     R4,CSIENDA          PAST END OF DATA?
         BL    PSNEXT              NO, GO PROCESS NEXT ENTRY
         DROP  R5
         DROP  R4
PSXIT    L     R9,PS9              GET RETURN ADDRESS
         BR    R9                  EXIT
PS9      DC    A(0)                RETURN ADDRESS
******************************************************************
*        PROCESS ONE CATALOG DATA ENTRY                          *
******************************************************************
DOENTRY  ST    R9,DE9              SAVE ENTRY ADDRESS
         USING CSIENTRY,R4
         TM    CSIEFLAG,X'40'      DID ERROR OCCUR FOR ENTRY
         BZ    DECKALL             NO
         MVC   ERRENT,CSIENAME     MOVE IN ERROR NAME
         MVC   RETDATA(4),CSIERETN MOVE CODES TO WORK AREA
         BAS   R9,ERRCNVRT         GO CONVERT ERROR REASON CODES
         B     DEXIT               NEXT ENTRY
DECKALL  CLI   ALLTYPES,0          DOING ALL TYPES?
         BE    DECKTYPE            NO
         LA    R1,TYPETABL         POINT TO ENTRY TYPE TABLE
DECKEND  CLI   0(R1),X'FF'         AT END OF TABLE?
         BE    DEMOVTYP            YES
         CLC   CSIETYPE,0(1)       FOUND THE ENTRY?
         BE    DEMOVTYP            YES
         LA    R1,L'TYPETABL(R1)   STEP TO NEXT ENTRY
         B     DECKEND             LOOP THROUGH TABLE
DEMOVTYP MVC   PRTTYPE,1(R1)       MOVE TYPE NAME
         B     DEFORMAT            CONTINUE
DECKTYPE CLI   CSIETYPE,C'A'       NON-VSAM ENTRY?
         BE    DENONVS             YES
         CLI   CSIETYPE,C'D'       VSAM DATA COMPONENT?
         BNE   DEXIT               NO, IGNORE IT
         MVC   PRTTYPE,=C'VSAM-DATA' SHOW ENTRY TYPE
         B     DEFORMAT            CONTINUE
DENONVS  MVC   PRTTYPE,=C'NON-VSAM ' SHOW ENTRY TYPE
DEFORMAT MVC   PRTNAME,CSIENAME    MOVE ENTRY NAME TO PRINT
         MVC   PRTVOL,BLANKS       CLEAR VOLSER IN PRINT LINE
         CLC   VLENG3,H6           VOLSER IS AVAILABLE?
         BNE   DEDODASD            NO, LEAVE IT BLANK
         MVC   PRTVOL,VDATA3       MOVE VOLUME SERIAL
DEDODASD MVC   PRTDEVTY,BLANKS     CLEAR DEVICE TYPE IN PRINT LINE
         MVC   PRTUCB,BLANKS       CLEAR UCB DEVICE TYPE TO BLANKS
         CLC   VLENG2,H4           UCB DEVICE TYPE IS AVAILABLE?
         BNE   DEDODATE            NO LEAVE IT BLANK
         MVC   PRTDEVTY,=CL5'DASD:' ASSUME DASD DEVICE
         CLI   VDATA2+2,X'20'      IS IT DASD?
         BE    DEUPKUCB            YES
         MVC   PRTDEVTY,=CL5'TAPE:' ASSUME TAPE DEVICE
         CLI   VDATA2+2,X'80'      IS IT TAPE?
         BE    DEUPKUCB            YES
         MVC   PRTDEVTY,=CL5'????:' UNKNOWN DEVICE TYPE
DEUPKUCB UNPK  PRTUCB(9),VDATA2(5) UNPACK TO MAKE PRINTABLE
         MVI   PRTUCB+8,C' '       CLEAR TRASH
         TR    PRTUCB,TRCHAR-C'0'  MAKE IT PRINTABLE
DEDODATE MVC   PRTCRDAT,BLANKS     CLEAR DATE IN CASE INVALID
         CLC   VLENG1,H4           CREATION DATE IS AVAILABLE?
         BNE   DEPRINT             NO, LEAVE IT BLANK
         MVI   DBLWORD,X'20'       ASSUME CENTURY=20
         CLI   VDATA1+3,1          IS CENTURY 20?
         BE    DEVALDAT            YES
         MVI   DBLWORD,X'19'       NO, USE CENTURY=19
         CLI   VDATA1+3,0          IS CENTURY 19?
         BNE   DEPRINT             NO, INVALID DATE FIELD
DEVALDAT SR    R2,R2               CLEAR FOR INSERT
         TRT   VDATA1(3),CKPACKED  CHECK DATE VALID PACKED
         BC    13,DEPRINT          BRANCH IF INVALID DATE
         CH    R2,H1               VALID SIGN BYTE?
         BNE   DEPRINT             NO, BAD DATE
DEMVREST MVC   DBLWORD+1(3),VDATA1 MOVE IN YYDDD TO FOLLOW CENTURY
         MVC   PRTCRDAT-1(9),=XL9'402121212161212121'
         ED    PRTCRDAT-1(9),DBLWORD EDIT DATE TO PRINT LINE
DEPRINT  BAS   R9,PRINT            GO PRINT THE DATA LINE
DEXIT    L     R9,DE9              GET RETURN ADDRESS
         BR    R9                  EXIT
DE9      DC    A(0)                RETURN ADDRESS
         DROP  R4
******************************************************************
*        CONVERT RETURN REASON CODES AND PRINT ROUTINE           *
******************************************************************
ERRCNVRT ST    R9,EC9              SAVE RETURN ADDRESS
         MVC   PRT,BLANKS          CLEAR PRINT LINE
         SR    R2,R2               CLEAR FOR INSERT
         IC    R2,RETDATA+3        GET RETURN CODE
         CVD   R2,DBLWORD          CONVERT IT TO DBLWORD
         UNPK  UNPKAREA(4),DBLWORD+6(2) UNPACK IT TO PRINT LINE
         OI    UNPKAREA+3,X'F0'       AND CLEAR ANY SIGN
         MVC   RTN(3),UNPKAREA+1   MOVE THE REASON CODE
         SR    R2,R2               CLEAR FOR INSERT
         IC    R2,RETDATA+2        PICK UP REASON CODE
         CVD   R2,DBLWORD          CONVERT IT TO PACKED DBLWORD
         UNPK  UNPKAREA(4),DBLWORD+6(2) CONVERT TO PRINTABLE
         OI    UNPKAREA+3,X'F0'    CLEAR SIGN
         MVC   RSN(3),UNPKAREA+1   MOVE ERROR REASON
         MVC   MODIDO(2),RETDATA   MOVE MODULE ID
         MVC   PRT(105),ERRORMSG   MOVE ERROR MESSAGE
         BAS   R9,PRINT            GO PRINT THE ERROR LINE
ECXIT    L     R9,EC9              GET RETURN ADDRESS
         BR    R9                  EXIT
EC9      DC    A(0)                RETURN ADDRESS
******************************************************************
*        PRINT ROUTINE                                           *
******************************************************************
PRINT    ST    R9,PR9              SAVE RETURN ADDRESS
         PUT   SYSPRINT,PRTLINE    WRITE PRINT LINE
         MVC   PRTLINE,BLANKS      CLEAR PRINT LINE
PRXIT    L     R9,PR9              GET RETURN ADDRESS
         BR    R9                  EXIT
PR9      DC    A(0)                RETURN ADDRESS
*********************************************************************
*        PRINT A BOX CONTAINING A MESSAGE                           *
* ON ENTRY, R12 POINTS TO A 132-BYTE AREA CONTAINING THE MIDDLE LINE*
* OF A 3-LINE BOX OUTLINED IN ASTERICES.                            *
*********************************************************************
PRTBOX   ST    R9,PB9                  SAVE RETURN ADDRESS
         MVC   PRT,STARS               PRINT BOX START
         MVI   PRTCC,C'-'              TRIPLE SPACE BEFORE
         BAS   R9,PRINT                PRINT TOP LINE OF BOX
         MVC   PRT,0(R12)              COPY MIDDLE LINE TO PRINT
         MVI   PRT+131,C'*'            SET BOX END
         BAS   R9,PRINT                PRINT IT
         MVC   PRT,STARS               PRINT BOX START
         BAS   R9,PRINT                PRINT IT
PBXIT    L     R9,PB9                  GET RETURN ADDRESS
         BR    R9                      EXIT
PB9      DC    A(0)                    RETURN ADDRESS
******************************************************************
*  END OF JOB. CLOSE FILES AND RETURN TO CALLER                  *
******************************************************************
EOJ      CLOSE (SYSPRINT,,SYSIN)   CLOSE FILES
         L     R13,SAVE+4          POINT TO CALLER'S SAVE
         L     R14,12(R13)         GET RETURN ADDRESS
         L     R15,RETCODE         SET RETURN CODE IN R15
         LM    R0,R12,20(R13)      RESTORE CALLER'S REGS 0-12
         BR    R14                 RETURN TO CALLER
******************************************************************
*        DATA, CONSTANTS, AND FILE AREAS                         *
******************************************************************
DBLWORD  DC    D'0'
CSIENDA  DC    A(0)                END OF DATA IN CSIRWORK ADDR
RETCODE  DC    F'0'                END OF JOB RETURN CODE
RETDATA  DC    F'0'                WORK AREA FOR ERRCNVRT
F65535   DC    F'65535'            IGGCSI00 DATA RETURN AREA LEN
NOTFND   DC    XL4'C5C72A08'       NOT FOUND CODE FROM CATALOG
FENTERR  DC    XL4'C6E20464'       FIELD ENTRY ERROR CODE FROM CAT
H0       DC    H'0'                CONSTANT 0
H1       DC    H'1'                CONSTANT 1
H4       DC    H'4'                CONSTANT 4
H6       DC    H'6'                CONSTANT 6
ALLTYPES DC    X'00'               ALL TYPES INDICATOR
ERROR    DC    X'00'               ERROR INDICATOR
UNPKAREA DC    CL4'0000'           WORK AREA
BLANKS   DC    CL133' '            BLANKS
TRCHAR   DC    CL16'0123456789ABCDEF' MAKE HEX PRINTABLE
*
PRTLINE  DS    0CL133              PRINT LINE
PRTCC    DC    CL1'1'                 CARRIAGE CONTROL
PRT      DS    0CL132                 PRINT DATA
PRTTYPE  DC    CL9' '              ENTRY TYPE
         DC    CL1' '
PRTNAME  DC    CL44' '             ENTRY NAME
         DC    CL1' '
PRTVOL   DC    CL6' '              ENTRY VOLUME SERIAL
         DC    CL1' '
PRTCRDAT DC    CL8' '              ENTRY CREATION DATE YYYY/DDD
         DC    CL1' '
PRTDEVTY DC    CL5' '              ENTRY DEVICE TYPE (DASD, TAPE, ????)
PRTUCB   DC    CL8' '              ENTRY UCB DEVICE TYPE
         DC    CL48' '
*
DSNODREC DS    CL80                DSNAME NODE RECORD FROM SYSIN
*                   000102030405060708090A0B0C0D0E0F
CKPACKED DC    XL16'00000000000000000000FFFFFFFFFF01'  00-0F
         DC    XL16'00000000000000000000FFFFFFFFFF01'  10-1F
         DC    XL16'00000000000000000000FFFFFFFFFF01'  20-2F
         DC    XL16'00000000000000000000FFFFFFFFFF01'  30-3F
         DC    XL16'00000000000000000000FFFFFFFFFF01'  40-4F
         DC    XL16'00000000000000000000FFFFFFFFFF01'  50-5F
         DC    XL16'00000000000000000000FFFFFFFFFF01'  60-6F
         DC    XL16'00000000000000000000FFFFFFFFFF01'  70-7F
         DC    XL16'00000000000000000000FFFFFFFFFF01'  80-8F
         DC    XL16'00000000000000000000FFFFFFFFFF01'  90-9F
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'  A0-AF
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'  B0-BF
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'  C0-CF
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'  D0-DF
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'  E0-EF
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'  F0-FF
*
TYPETABL DS    0CL10               TABLE OF ENTRY TYPES
         DC    CL10'ANON-VSAM '
         DC    CL10'BGEN-DSGRP'
         DC    CL10'CCLUSTER  '
         DC    CL10'DVSAM-DATA'
         DC    CL10'GALT-INDX '
         DC    CL10'HGEN-DSET '
         DC    CL10'IVSAM-INDX'
         DC    CL10'RPATH     '
         DC    CL10'XALIAS    '
         DC    CL10'UUSER-CTLG'
         DC    CL10'LATL-LIBRY'
         DC    CL10'WATL-VOLUM'
         DC    XL1'FF',CL9'?????????'
*
STARS    DC    133C'*'                 ASTRICES
PRTGALL  DC    CL132'*    RECEIVED PARM, PRINTING ALL ENTRIES'
PRTCNTL  DC    CL23'*    CONTROL CARD ==> '
PRTCRECD DC    CL80' '             CONTROL RECORD IMAGE
         DC    CL29' '
PRTBADC  DC    CL22'* BAD CONTROL RECORD: '
PRTCREC2 DC    CL80' '
         DC    CL30' '
*
ERRORMSG DS    0CL105              ERROR MESSAGE AREA
         DC    CL7' ENTRY '
ERRENT   DS    CL44
         DC    CL22' RECEIVED RETURN CODE '
RTN      DS    CL3
         DC    CL13' REASON CODE '
RSN      DS    CL3
         DC    CL11' MODULE ID '
MODIDO   DS    CL2
**********************************************************************
* PARAMETER LIST FOR IGGCSI00 INVOCATION                             *
**********************************************************************
PARMLIST DS    0D
         DC    A(MODRSNRT)         MODULE/REASON/RETURN
         DC    A(CSIFIELD)         PARAMETERS FOR THE SEARCH
CTLGDATA DC    A(0)                IGGCSI00 DATA RETURN AREA ADDR
**********************************************************************
* MODULE/REASON/RETURN CODES FROM IGGCSI00                           *
**********************************************************************
MODRSNRT DS    0F                  IGGCSI00 RETURN CODES
MODID    DC    XL2'0000'              MODULE ID
RSNCODE  DC    XL1'00'                REASON CODE
RTNCODE  DC    XL1'00'                RETURN CODE
**********************************************************************
* PARAMETER FIELDS FOR CATALOG SEARCH INTERFACE (CSI)                *
**********************************************************************
CSIFIELD    DS 0F
CSIFILTK    DC CL44' '             GENERIC FILTER KEY
CSICATNM    DC CL44' '             CATALOG NAME OR BLANKS
CSIRESNM    DC CL44' '             RESUME NAME OR BLANKS
CSIDTYPS    DC CL16'AC              ' NON-VSAM, VSAM-CLUSTER
CSIOPTS     DS 0CL4                CSI OPTIONS
CSICLDI     DC CL1' '              RETURN D&I IF C A MATCH Y OR BLNK
CSIRESUM    DC CL1' '              RESUME FLAG         Y OR BLANK
CSIS1CAT    DC CL1' '              SEARCH ONLY 1 CATALOG Y OR BLANK
CSIRESRV    DC XL1'00'             RESERVED
CSINUMEN    DC H'3'                NUMBER OF ENTRIES FOLLOWING
CSIENTS     DS 0CL8                VARIABLE NUMBER OF ENTRIES FOLLOW
CSIFLDNM    DC CL8'DSCRDT2 '       CREATION DATE YYDDDFCC
            DC CL8'DEVTYP  '       UCB DEVICE TYPE
            DC CL8'VOLSER  '       VOLUME SERIAL NUMBER
**********************************************************************
*        DESCRIBE IGGCSI00 RETURN DATA AREA                          *
**********************************************************************
***********************INFORMATION FOR THE WORK AREA******************
CSIRWORK DSECT
CSIUSRLN DS    F                   TOTAL WORK AREA LENGTH (USER SETS)
CSIREQLN DS    F                   MIN WORK AREA SIZE FOR 1 ENTRY
CSIUSDLN DS    F                   TOTAL LENGTH USED IN RETURNING DATA
CSINUMFD DS    H                   NUMBER OF FIELD NAMES + 1
***********************INFORMATION FOR EACH CATALOG*******************
CSICFLG  DS    CL1                 CATALOG FLAG INFORMATION
CSICTYPE DS    CL1                 CATALOG TYPE C'0'
CSICNAME DS    CL44                CATALOG NAME
CSICRETN DS    0CL1                RETURN INFORMATION FOR CATALOG
CSICRETM DS    CL2                 CATALOG RETURN MODULE ID
CSICRETR DS    CL1                 CATALOG RETURN REASON CODE
CSICRETC DS    CL1                 CATALOG RETURN CODE
***********************INFORMATION FOR EACH ENTRY*********************
CSIENTRY DS    0X
CSIEFLAG DS    XL1                 ENTRY FLAG INFORMATION
CSIETYPE DS    CL1                 ENTRY TYPE
CSIENAME DS    CL44                ENTRY NAME
CSIERETN DS    0XL4                ENTRY ERROR RETURN (CSIEFLAG X'40')
CSIERETM DS    XL2                    ENTRY ERROR RETURN MODULE ID
CSIERETR DS    XL1                    ENTRY ERROR RETURN REASON CODE
CSIERETC DS    XL1                    ENTRY ERROR RETURN CODE
         ORG   CSIERETN
CSIEDATA DS    0X                  ENTRY DATA (NOT CSIEFLAG X'40')
CSITOTLN DS    XL2                    TOTAL LENGTH INCLUDING THIS
         DS    XL2                    RESERVED
*************VARIABLE PORTION DEPENDENT ON SPECIFICATIONS*************
*************GIVEN IN CSINUMEN AND CSIFLDNM***************************
VLENG1   DS    XL2                    LENGTH OF DSCRDT2 BELOW
VLENG2   DS    XL2                    LENGTH OF DEVTYP BELOW
VLENG3   DS    XL2                    LENGTH OF VOLSER BELOW
VDATA1   DS    XL4                    CREATION DATE YYDDDFCC
VDATA2   DS    XL4                    UCB DEVICE TYPE
VDATA3   DS    CL6                    VOLUME SERIAL NUMBER
CATLGLST CSECT
*********************************************************************
*                DATA FILE DESCRIPTORS                              *
*********************************************************************
SYSPRINT DCB   MACRF=PM,DSORG=PS,DDNAME=SYSPRINT,                      X
               RECFM=FBA,LRECL=133
SYSIN    DCB   MACRF=GM,DSORG=PS,DDNAME=SYSIN,EODAD=ENDATA,            X
               RECFM=FB,LRECL=80
*********************************************************************
*                REGISTER EQUATES                                   *
*********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
