         TITLE  'SCAN ASSEMBLER SOURCE FOR EXTERNAL REFERENCES'
SCANXREF SVLNK R3
**********************************************************************
* READ AN ASSEMBLER SOURCE PROGRAM AND SCAN FOR EXTERNAL REFERENCES  *
* SUCH AS CALLS, LINKS, LOADS, AND CICS LINKS, LOADS, AND XCTLS.     *
* EACH EXTERNAL REFERENCE CAUSES AN OUTPUT RECORD CONTAINING THE     *
* SOURCE PROGRAM MEMBER NAME, TYPE OF REFERENCE, AND NAME OF THE     *
* EXTERNAL REFERENCE.                                                *
* AUTHOR R THORNTON NOV 1996                                         *
**********************************************************************
* DELETED CODE TO PROCESS SOURCE SEQUENCE NUMBERS AND CSECTS. ADDED  *
* PROCESSING FOR BKVSAM, ACB, AND DCB MACROS. FOR EXEC CICS MACROS   *
* ADDED PROCESSING FOR DATASET AND QUEUE OPERAND COLLECTION.         *
* RNT JAN 1997                                                       *
**********************************************************************
         OPEN  (PRINT1,OUTPUT,READER1) OPEN FILES
         CALL  READMEM,OPEN            OPEN PDS FOR INPUT
**********************************************************************
* EXECRTN: READ THE READER1 FILE TO GET THE NEXT MEMBER NAME TO BE   *
* PROCESSED. CALL THE READMEM ROUTINE TO FIND THE MEMBER, THEN THE   *
* MAINLINE ROUTINE TO PROCESS IT. AT END OF FILE ON READER1 GO TO    *
* END OF JOB.                                                        *
**********************************************************************
EXECRTN  GET   READER1,MEMRECD         READ NEXT MEMBER RECORD
         MVC   MEMBER,MEMNAME          COPY MEMBER NAME
         MVC   FINDNAME,MEMBER         MEMBER NAME TO PARM LIST
         CALL  READMEM,FIND            GO FIND MEMBER
         CLI   FINDNAME,0              MEMBER FOUND?
         BE    EXECRTN                 NO
         MVI   RECORD,0                CLEAR LAST MEMBER EOF INDIC
         BAL   R9,MAINLINE             YES, GO PROCESS MEMBER
         B     EXECRTN                 BACK FOR NEXT MEMBER
**********************************************************************
* MAINLINE: READ INPUT SOURCE PROGRAM TO EXHAUSTION. FOR EACH INPUT  *
* RECORD, CALL SCAN ROUTINE TO IDENTIFY ANY EXTERNAL REFERENCES. IF  *
* ANY EXTERNAL REFERENCES ARE FOUND, CALL THE PRINT ROUTINE TO WRITE *
* AN OUTPUT RECORD.                                                  *
**********************************************************************
MAINLINE ST    R9,ML9                  SAVE RETURN ADDRESS
READMEM  CLI   RECORD,X'FF'            END OF MEMBER?
         BE    MLXIT                   YES, RETURN TO CALLER
         CALL  READMEM,(READ,RECORD)   READ NEXT RECORD
         CLI   RECORD,X'FF'            END OF MEMBER?
         BE    MLXIT                   YES, RETURN TO CALLER
         CLI   RECORD,C'*'             COMMENT RECORD?
         BE    READMEM                 YES, SKIP IT
         BAL   R9,SCANEXT              GO SCAN FOR EXTERNAL REFERENCES
         CLI   EXTFND,0                ANY EXTERNAL REFERENCE FOUND?
         BE    READMEM                 NO
         BAL   R9,PRINT                YES, GO WRITE AN OUTPUT RECORD
         B     READMEM                 AND CONTINUE
MLXIT    L     R9,ML9                  GET RETURN ADDRESS
         BR    R9                      RETURN TO CALLER
**********************************************************************
* EOJ: END OF JOB ROUTINE ENTERED AT END OF FILE ON INPUT. CLOSE     *
* FILES AND RETURN TO CALLER.                                        *
**********************************************************************
EOJ      CLOSE (READER1,,PRINT1)       CLOSE FILES
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGS
         SR    R15,R15                 CLEAR RETURN CODE TO 0
         BR    R14                     RETURN TO CALLER
*********************************************************************
* SCAN INPUT RECORD EXTERNAL REFERENCES. WHEN AN EXTERNAL REFERENCE *
* IS FOUND, SET THE EXTFND SWITCH AND PUT THE MACRO AND REFERENCED  *
* EXTERNAL NAME IN THE EXTNAME FIELD OF THE OUTPUT RECORD.          *
*********************************************************************
SCANEXT  ST    R9,SE9                  SAVE RETURN ADDRESS
         MVI   EXTFND,0                CLEAR THE EXTERNAL REF FOUND SW
         MVC   UNIQUE,BLANKS           CLEAR ANY UNIQUE FIELDS
         LA    R1,RECORD               POINT TO THE INPUT RECORD
GETMACR  TRT   0(80,R1),SCANBLNK       FIND FIRST BLANK
         BZ    SCANEXIT                NONE FOUND, EXIT
         C     R1,ENDREC               FOUND PAST END OF RECORD?
         BH    SCANEXIT                YES
         TRT   1(80,R1),SCANONBK       SCAN FOR NON-BLANK
         BZ    SCANEXIT                NONE FOUND, EXIT
         C     R1,ENDREC               FOUND PAST END OF RECORD?
         BH    SCANEXIT                YES
         LA    R15,MACRTBL             POINT TO TABLE
         SR    R14,R14                 CLEAR FOR INSERT
TESTMACR IC    R14,CMLENG-CURRMACR(R15) PICK UP COMPARE LENGTH
         EX    R14,CMPRENTY            FOUND TABLE ENTRY?
         BE    GOTENTY                 YES
         LA    R15,L'CURRMACR(R15)     NO, STEP TO NEXT
         CLI   0(R15),X'FF'            END OF TABLE?
         BE    SCANEXIT                YES, EXIT
         B     TESTMACR                NO, LOOP THRU TABLE
GOTENTY  EX    R14,MOVEMACR            MOVE MACRO NAME TO OUTPUT
         AR    R1,R14                  STEP PAST MACRO NAME
         MVC   CURRMACR,0(R15)         SAVE THE MACRO TABLE ENTRY
         BAL   R9,GETOPNDS             GO GET OPERANDS
SCANEXIT L     R9,SE9                  GET RETURN ADDRESS
         BR    R9                      RETURN TO CALLER
CMPRENTY CLC   1(1,R15),0(R1)          COMPARE TABLE TO INPUT
MOVEMACR MVC   MACRO(1),0(R1)          MOVE MACRO NAME TO OUTPUT
*********************************************************************
* INPUT RECORD HAS A MACRO OF INTEREST, WHICH WAS SCANNED IN AND    *
* MOVED TO THE OUTPUT RECORD BY THE CALLER. HERE, THE MACRO TABLE   *
* ENTRY HAS BEEN MOVED TO CURRMACR, AND R1 POINTS TO THE BLANK      *
* POSITION IN THE INPUT RECORD FOLLOWING THE MACRO NAME.            *
* THE CURRMACR TABLE ENTRY DESCRIBES THE OPERAND PROCESSING: THE    *
* CMNBRPOS FIELD GIVES THE NUMBER OF POSITIONAL OPERANDS TO BE      *
* HANDLED, AND THE CMOPADR FIELD CONTAINS THE ADDRESS OF THE KEYWORD*
* OPERAND LIST OF INTEREST. POSITIONAL OPERANDS AND/OR KEYWORD      *
* OPERANDS ARE MOVED TO THE OUTPUT RECORD. WHEN DESIRED OPERANDS ARE*
* FOUND, THE EXTFND SWITCH IS SET TO PERMIT OUTPUT.                 *
*********************************************************************
GETOPNDS ST    R9,GO9                  SAVE RETURN ADDRESS
         TRT   1(80,R1),SCANONBK       FIND NEXT NON BLANK
         C     R1,ENDREC               FOUND WITHIN RECORD?
         BH    GOCKCONT                NO
PROCCONT CLI   CMNBRPOS,0              ANY POSITIONAL OPERANDS?
         BE    CKKEYWD                 NO
POS2OPND BAL   R9,GETPOSNL             GO GET POSITIONAL OPND
         CLI   EXTFND,0                FOUND ONE?
         BE    GOXIT                   NO, EXIT
         CLI   CMNBRPOS,2              2 POSITIONAL EXPECTED?
         BNE   CKKEYWD                 NO
         CLC   POSOPND(5),=CL5'CICS '  YES, GOT A CICS OPERAND?
         BNE   GOXIT                   NO, IGNORE THIS RECORD
         MVI   CMNBRPOS,1              GOT CICS, RESET NBR POSNL OPS
         MVI   EXTFND,0                RESET EXTFND SWITCH
         TRT   1(80,R1),SCANONBK       FIND NEXT NON BLANK
         C     R1,ENDREC               FOUND WITHIN RECORD?
         BH    GOXIT                   NO
         B     POS2OPND                AND GO GET SECOND (REAL) OP
CKKEYWD  ICM   R15,15,CMOPADR          POINT TO KEYWORD LIST
         BZ    GOXIT                   NO KEYWORD EXPECTED
         TRT   1(80,R1),SCANONBK       FIND NEXT NON BLANK
         C     R1,ENDREC               FOUND WITHIN RECORD?
         BH    GOCKCONT                NO
         MVI   EXTFND,0                RESET EXTFND SWITCH
         BAL   R9,GETKEYWD             GO SEARCH FOR KEYWORD OPND
         CLI   EXTFND,1                FOUND ONE?
         BE    GOXIT                   YES, FINISHED HERE
GOCKCONT CLI   CONTCOL,C' '            THIS RECORD CONTINUED?
         BE    GOXIT                   NO
         CLI   RECORD,X'FF'            END OF MEMBER?
         BE    GOXIT                   YES, RETURN TO CALLER
READCONT CALL  READMEM,(READ,RECORD)   READ NEXT RECORD
         CLI   RECORD,X'FF'            END OF MEMBER?
         BE    GOXIT                   YES, RETURN TO CALLER
         CLI   RECORD,C'*'             COMMENT RECORD?
         BE    READCONT                YES, SKIP IT
         CLC   RECORD(15),BLANKS       COLS 1-15 BLANK?
         BNE   GOXIT                   NO, IGNORE
         CLI   RECORD+15,C' '          COL 16 BLANK?
         BE    GOXIT                   YES, IGNORE
         LA    R1,RECORD+15            POINT TO CONTINUATION
         B     CKKEYWD                 GO PROCESS
GOXIT    L     R9,GO9                  GET RETURN ADDRESS
         BR    R9                      RETURN
*********************************************************************
* MACRO IN PROGRESS HAS A POSITIONAL OPERAND OF INTEREST. ON ENTRY  *
* HERE, R1 POINTS TO FIRST POSITION OF THE POSITIONAL OPERAND. MOVE *
* IT TO POSOPND, AND IF IT IS VALID, SET THE EXTFND SWITCH AND LEAVE*
* R1 ON THE COMMA OR SPACE FOLLOWING THE OPERAND.                   *
*********************************************************************
GETPOSNL ST    R9,GP9                  SAVE RETURN ADDRESS
         LA    R15,POSOPND             POINT TO OUTPUT FIELD
         LA    R14,8                   MAX FIELD SIZE
GPCKEND  MVC   0(1,R15),0(R1)          MOVE A BYTE
         LA    R15,1(R15)              STEP OVER 1
         LA    R1,1(R1)                STEP OVER 1
         CLI   0(R1),C' '              AT A BLANK?
         BE    GPSETEXT                YES
         CLI   0(R1),C','              AT A COMMA?
         BE    GPSETEXT                YES
         CLI   0(R1),C'='              FOUND AN '='?
         BE    GPXIT                   YES, BAD POSITIONAL
         CLI   0(R1),C'('              FOUND A '('?
         BE    GPXIT                   YES, BAD POSITIONAL
         BCT   R14,GPCKEND             CONTINUE MOVING
         B     GPXIT                   TOO LONG
GPSETEXT MVI   EXTFND,1                SHOW OPERAND O.K.
GPXIT    L     R9,GP9                  GET RETURN ADDRESS
         BR    R9                      RETURN
*********************************************************************
* MACRO IN PROGRESS HAS A KEYWORD OPERAND OF INTEREST. ON ENTRY     *
* HERE, R1 POINTS TO A NON-BLANK IN THE INPUT RECORD, R15 POINTS TO *
* THE KEYWORD OPERAND OF INTEREST LIST.                             *
* IF ANY KEYWORD OF INTEREST IS FOUND, IT IS MOVED TO THE EXTREF    *
* FIELD IN THE OUTPUT RECORD AND THE EXTFND SWITCH IS SET.          *
*********************************************************************
GETKEYWD ST    R9,GK9                  SAVE RETURN ADDRESS
         ST    R1,SV1                  SAVE INPUT RECORD POINTER
         ST    R15,SV15                SAVE KEYWORD LIST POINTER
         SR    R14,R14                 CLEAR FOR INSERT
GKLOADS  ICM   R15,15,SV15             PICK UP LIST POINTER
         BZ    GKXIT                   END OF LIST, EXIT
         L     R1,SV1                  POINT TO INPUT LOCATION
         LA    R14,16(R15)             POINT TO NEXT LIST ENTRY
         ST    R14,SV15                UPDATE LIST POINTER
         SR    R14,R14                 CLEAR FOR INSERT
         IC    R14,0(R15)              PICK UP LENGTH
         CH    R14,=H'128'             THIS THE LAST ENTRY?
         BL    GKCHKEND                NO
         XC    SV15,SV15               YES, CLEAR LIST POINTER
         SH    R14,=H'128'             CLEAR END OF LIST BIT
GKCHKEND C     R1,ENDREC               AT END OF RECORD?
         BE    GKLOADS                 YES, GO TO NEXT LIST ENTRY
         EX    R14,GKCHKFND            FOUND THE OPERAND?
         BE    GKGOTOP                 YES
         LA    R1,1(R1)                STEP TO NEXT BYTE
         B     GKCHKEND                LOOP TO FIND OPERAND
GKGOTOP  EX    R14,GKMVKYWD            MOVE OPERAND KEYWORD
         AR    R1,R14                  STEP PAST KEYWORD
         LA    R15,EXTREF(R14)         POINT PAST KEYWORD IN OUTPUT
         LA    R14,32                  MAXIMUM TO MOVE
GKMVLUP  C     R1,ENDREC               AT END OF INPUT?
         BH    GKSETSW                 YES
         MVC   0(1,R15),0(R1)          NO, MOVE A BYTE
         LA    R1,1(R1)                ADVANCE 1 BYTE
         LA    R15,1(R15)              ADVANCE 1 BYTE
         CLI   0(R1),C' '              AT END OF OPERAND?
         BE    GKSETSW                 YES
         CLI   0(R1),C','              AT END OF OPERAND?
         BE    GKSETSW                 YES
         BCT   R14,GKMVLUP             LOOP THROUGH OPERAND
GKSETSW  MVI   EXTFND,1                SHOW OPERAND O.K.
GKXIT    L     R9,GK9                  GET RETURN ADDRESS
         BR    R9                      RETURN
GKCHKFND CLC   0(1,R1),1(R15)          COMPARE INPUT TO KETWORD LIST
GKMVKYWD MVC   EXTREF(1),0(R1)         MOVE KEYWORD TO OUTPUT
**********************************************************************
* PRINT (WRITE) THE CURRENT OUTPUT RECORD AND CLEAR THE UNIQUE FIELDS*
* THE EXTREF FIELD IS PURIFIED FROM TRAILING GARBAGE.                *
**********************************************************************
PRINT    ST    R9,PRT9                 SAVE RETURN ADDRESS
         LA    R1,EXTREF               POINT TO EXTREF FIELD
         TR    0(8,R1),INVCHR          SCAN FOR INVALID CHARS.
         CLC   EXTREF(8),=CL8'DATASET(' THIS A DATASET REFERENCE?
         BE    GOTDS                   YES
         CLC   EXTREF(8),=CL8'PROGRAM(' THIS A PROGRAM REFERENCE?
         BE    GOTPG                   YES
         CLC   EXTREF(6),=CL6'QUEUE('  THIS A QUEUE REFERENCE?
         BNE   PRINTIT                 NO
GOTQ     LA    R1,EXTREF+6             POINT TO LEADING CHARACTER
         BAL   R9,COPYNAME             GO COPY NAME
         CLI   NAMESW,C'E'             ERROR FOUND?
         BE    PRINTIT                 YES, IGNORE IT
         CLI   NAMESW,C'Q'             QUOTED NAME?
         BE    GOTQQ                   YES
         MVC   QUEUNAME,NAMEFLD        NO, MOVE NAME TO UNQUOTED
         MVC   EXTREF,QUEU             MOVE UNQUOTED LITERAL
         B     PRINTIT                 GO PRINT
GOTQQ    MVC   QUEQNAME,NAMEFLD        NO, MOVE NAME TO QUOTED
         MVC   EXTREF,QUEQ             MOVE QUOTED LITERAL
         B     PRINTIT                 GO PRINT
GOTDS    LA    R1,EXTREF+8             POINT TO LEADING CHARACTER
         BAL   R9,COPYNAME             GO COPY NAME
         CLI   NAMESW,C'E'             ERROR FOUND?
         BE    PRINTIT                 YES, IGNORE IT
         CLI   NAMESW,C'Q'             QUOTED NAME?
         BE    GOTDQ                   YES
         MVC   DSNUNAME,NAMEFLD        NO, MOVE NAME TO UNQUOTED
         MVC   EXTREF,DSNU             MOVE UNQUOTED LITERAL
         B     PRINTIT                 GO PRINT
GOTDQ    MVC   DSNQNAME,NAMEFLD        NO, MOVE NAME TO QUOTED
         MVC   EXTREF,DSNQ             MOVE QUOTED LITERAL
         B     PRINTIT                 GO PRINT
GOTPG    LA    R1,EXTREF+8             POINT TO LEADING CHARACTER
         BAL   R9,COPYNAME             GO COPY NAME
         CLI   NAMESW,C'E'             ERROR FOUND?
         BE    PRINTIT                 YES, IGNORE IT
         CLI   NAMESW,C'Q'             QUOTED NAME?
         BE    GOTPQ                   YES
         MVC   PRGUNAME,NAMEFLD        NO, MOVE NAME TO UNQUOTED
         MVC   EXTREF,PRGU             MOVE UNQUOTED LITERAL
         B     PRINTIT                 GO PRINT
GOTPQ    MVC   PRGQNAME,NAMEFLD        NO, MOVE NAME TO QUOTED
         MVC   EXTREF,PRGQ             MOVE QUOTED LITERAL
         B     PRINTIT                 GO PRINT
PRINTIT  PUT   PRINT1,PRINTREC         WRITE THE OUTPUT RECORD
         MVC   UNIQUE,BLANKS           CLEAR UNIQUE FIELDS
         L     R9,PRT9                 GET RETURN ADDRESS
         BR    R9                      RETURN TO CALLER
**********************************************************************
* COPYNAME MOVES THE EXTREF NAME TO THE NAMEFLD AND SETS THE NAMESW  *
* SWITCH TO SHOW IF THE NAME IS IN ERROR, IS QUOTED, OR IS UNQUOTED. *
* R1 POINTS TO THE FIRST BYTE PAST THE LEFT PARENTHESIS ON ENTRY.    *
**********************************************************************
COPYNAME MVI   NAMESW,C'U'             ASSUME UNQUOTED NAME
         CLI   0(R1),C''''             FIRST BYTE IS A QUOTE?
         BNE   TSTFIRST                NO
         LA    R1,1(R1)                YES, STEP PAST LEADING QUOTE
         MVI   NAMESW,C'Q'             SHOW QUOTED NAME
TSTFIRST LR    R15,R1                  SAVE FIRST BYTE ADDRESS
         TRT   0(1,R1),VALFRST         FIRST BYTE VALID?
         BZ    CHKREST                 YES
NAMERRS  MVI   NAMESW,C'E'             NO, SHOW NAME IN ERROR
         BR    R9                      RETURN
CHKREST  TRT   1(8,R1),VALREST         REST OF CHARACTERS VALID?
         BZ    NAMERRS                 ERROR: NO ENDING PAREN/QUOTE
         CLI   NAMESW,C'Q'             QUOTED NAME?
         BE    ISQUOT                  YES
         CLI   0(R1),C')'              NO, UNQUOTED, ENDS W/ RT PAREN?
         BE    CHKLENG                 YES
ISQUOT   CLI   0(R1),C''''             QUOTED NAME ENDS IN QUOTE?
         BNE   NAMERRS                 NO, ERROR NAME
CHKLENG  SR    R1,R15                  COMPUTE NAME LENGTH
         CH    R1,=H'8'                VALID NAME LENGTH?
         BH    NAMERRS                 NO
         LTR   R1,R1                   VALID NAME LENGTH?
         BM    NAMERRS                 NO
         MVC   NAMEFLD,BLANKS          CLEAR THE NAMEFLD FIELD
         BCTR  R1,0                    COMPUTE LENGTH CODE
         EX    R1,MOVENAME             MOVE THE NAME
         BR    R9                      AND RETURN
MOVENAME MVC   NAMEFLD(1),0(R15)       MOVE THE NAME
**********************************************************************
* WORKING STORAGE AND FILES                                          *
**********************************************************************
BLANKS   DC    CL80' '                 BLANKS
*
MEMRECD  DS    0CL80                   MEMBER RECORD
MEMNAME  DS    CL8                     MEMBER NAME
         DS    CL72
*
OPEN     DC    CL9'OINPUT1'            OPEN PARAMETER
READ     DC    C'R'                    READ PARAMETER
CLOSE    DC    C'C'                    CLOSE PARAMETER
*
FIND     DS    0CL8                    FIND PARAMETER
         DC    C'FN'                   FIND BY NAME
FINDNAME DS    CL8                     MEMBER NAME TO FIND
*
PRINTREC DS    0CL80                   OUTPUT RECORD
MEMBER   DC    CL8' '                  MEMBER NAME
         DC    CL1' '
UNIQUE   DS    0CL71                   UNIQUE FIELDS
         DC    CL1' '
MACRO    DC    CL6' '                  MACRO NAME
         DC    CL1' '
POSOPND  DC    CL8' '                  POSITIONAL OPERAND
         DC    CL1' '
EXTREF   DC    CL46' '                 EXTERNAL REFERENCE NAME
         DC    CL8' '
*
DSNQ     DS    0CL46                   DATASET('NAME')
         DC    CL7'DDNAME='
DSNQNAME DS    CL8
         DC    CL31' '
*
DSNU     DS    0CL46                   DATASET(NAME)
         DC    CL25'DDNAME IS IN FIELD NAMED '
DSNUNAME DS    CL8
         DC    CL13' '
*
PRGQ     DS    0CL46                   PROGRAM('NAME')
         DC    CL8'PROGRAM='
PRGQNAME DS    CL8
         DC    CL30' '
*
PRGU     DS    0CL46                   PROGRAM(NAME)
         DC    CL26'PROGRAM IS IN FIELD NAMED '
PRGUNAME DS    CL8
         DC    CL12' '
*
QUEQ     DS    0CL46                   QUEUE('NAME')
         DC    CL6'QUEUE='
QUEQNAME DS    CL8
         DC    CL32' '
*
QUEU     DS    0CL46                   QUEUE(NAME)
         DC    CL24'QUEUE IS IN FIELD NAMED '
QUEUNAME DS    CL8
         DC    CL14' '
*
RECORD   DS    0CL80                   INPUT RECORD
         DS    CL71                    BODY OF RECORD (COL 1-71)
CONTCOL  DS    CL1                     CONTINUATION COLUMN
SEQNCE   DS    CL8                     SEQUENCE NUMBER
*
EXTFND   DC    XL1'00'                 EXTERNAL REFERENCE FOUND SWITCH
CONTSW   DC    XL1'00'                 CONTINUED INPUT SWITCH
NAMESW   DC    CL1'00'                 NAME SWITCH: E=ERROR, Q=QUOTED
NAMEFLD  DC    CL8'00'                 NAME IN EXTREF FIELD
PRT9     DS    F                       PRINT RETURN ADDRESS
SE9      DS    A                       RETURN ADDRESS FOR SCANEXT
ML9      DS    A                       RETURN ADDRESS FOR MAINLINE
ENDREC   DC    A(RECORD+79)            END OF INPUT RECORD ADDRESS
EXRFND   DC    A(EXTREF+7)             END OF EXTREF FIELD
GO9      DS    A                       GETOPND RETURN ADDRESS
GP9      DS    A                       GETPOSOP RETURN ADDRESS
GK9      DS    A                       GETKEYWD RETURN ADDRESS
SV1      DS    A                       SAVE AREA FOR R1
SV15     DS    A                       SAVE AREA FOR R15
*
CURRMACR DS    0CL15                   MACRO TABLE ENTRY
CMLENG   DS    XL1                     MACRO NAME LENGTH
CMMACRO  DS    CL9                     MACRO NAME
CMNBRPOS DS    XL1                     NUMBER POSITIONAL OPERANDS
CMOPADR  DS    AL4                     ADDRESS OF OPERAND LIST
*
MACRTBL  DC    X'04',CL9'EXEC     ',X'02',AL4(EXECOPS)
         DC    X'04',CL9'LINK     ',X'00',AL4(EPOP)
         DC    X'04',CL9'LOAD     ',X'00',AL4(EPOP)
         DC    X'04',CL9'XCTL     ',X'00',AL4(EPOP)
         DC    X'06',CL9'ATTACH   ',X'00',AL4(EPOP)
         DC    X'06',CL9'BKVSAM   ',X'01',AL4(DSETOP)
         DC    X'03',CL9'ACB      ',X'00',AL4(DDNOP)
         DC    X'03',CL9'DCB      ',X'00',AL4(DDNOP)
         DC    X'04',CL9'CALL     ',X'01',AL4(0)
         DC    X'FF'                   END OF TABLE
*
EXECOPS  DC    X'07',CL15'DATASET('
         DC    X'05',CL15'QUEUE('
         DC    X'87',CL15'PROGRAM('
EPOP     DC    X'82',CL15'EP='
DSETOP   DC    X'87',CL15'DATASET='
DDNOP    DC    X'86',CL15'DDNAME='
*
SCANBLNK DC    256X'00'                TRT TABLE TO SCAN FOR BLANKS
         ORG   SCANBLNK+C' '
         DC    X'FF'
         ORG
SCANONBK DC    256X'FF'                TRT TABLE TO SCAN FOR NON-BLANKS
         ORG   SCANONBK+C' '
         DC    X'00'
         ORG
INVCHR   DC    256C' '            TRANSLATE TBL FOR INVALID LABEL CHARS
         ORG   INVCHR+C'.'
         DC    6C'.<(+|'
         DC    X'50'               AMPERSAND
         ORG   INVCHR+C'!'
         DC    C'!$*);^-/'
         ORG   INVCHR+C','
         DC    C',%_>?'
         ORG   INVCHR+C':'
         DC    C':#@''="'
         ORG   INVCHR+C'A'
         DC    C'ABCDEFGHI'
         ORG   INVCHR+C'J'
         DC    C'JKLMNOPQR'
         ORG   INVCHR+C'S'
         DC    C'STUVWXYZ'
         ORG   INVCHR+C'0'
         DC    C'0123456789'
         ORG
VALFRST  DC    256X'FF'                TEST TABLE FOR FIRST BYTE
         ORG   VALFRST+C'A'
         DC    9X'00'                  A-I VALID
         ORG   VALFRST+C'J'
         DC    9X'00'                  J-R VALID
         ORG   VALFRST+C'S'
         DC    8X'00'                  S-Z VALID
         ORG   VALFRST+C'$'
         DC    X'00'                   $ VALID
         ORG   VALFRST+C'@'
         DC    X'00'                   @ VALID
         ORG   VALFRST+C'#'
         DC    X'00'                   # VALID
         ORG
VALREST  DC    256X'FF'                TEST TABLE FOR FIRST BYTE
         ORG   VALREST+C'A'
         DC    9X'00'                  A-I VALID
         ORG   VALREST+C'J'
         DC    9X'00'                  J-R VALID
         ORG   VALREST+C'S'
         DC    8X'00'                  S-Z VALID
         ORG   VALREST+C'$'
         DC    X'00'                   $ VALID
         ORG   VALREST+C'@'
         DC    X'00'                   @ VALID
         ORG   VALREST+C'#'
         DC    X'00'                   # VALID
         ORG   VALREST+C'0'
         DC    10X'00'                 0-9 VALID
         ORG
READER1  DCB   DSORG=PS,MACRF=GM,DDNAME=READER1,EODAD=EOJ,             X
               RECFM=FB,LRECL=80
PRINT1   DCB   DSORG=PS,MACRF=PM,DDNAME=PRINT1,                        X
               RECFM=FB,LRECL=80
         END
