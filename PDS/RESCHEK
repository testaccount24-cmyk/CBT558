         TITLE '*** RESCHECK: CHECK RESOURCE/REBUILD OUTPUT ***'
RESCHECK CSECT
*********************************************************************
* CHECKS THE ASSEMBLED OUTPUT FROM A RESOURCE/REBUILD DISASSEMBLY   *
* TO SEE WHETHER THE DISASSEMBLY OUT REASSEMBLES AS THE ORIGINAL    *
* INPUT DID.                                                        *
*                                                                   *
* FIRST, THE SOURCE PROGRAM CREATED BY THE RESOURCE/REBUILD PROGRAM *
* SET IS ASSEMBLED. NEXT, THE SYSPRINT OUTPUT FROM THE ASSEMBLY IS  *
* WRITTEN TO A DSORG=PS,RECFM=FB,LRECL=121 DATASET THAT IS INPUT TO *
* THIS PROGRAM.                                                     *
*                                                                   *
* THIS PROGRAM READS UNTIL THE FIRST ASSEMBLED STATEMENT IS FOUND:  *
* LOCATION 000000 IN POSITIONS 2-7 WITH NON-BLANK DATA IN 9-12.     *
*                                                                   *
* FROM THE FIRST STATEMENT FOUND UNTIL THE END STATEMENT IS FOUND   *
* WHERE " END " IS FOUND IN POSITIONS 50-54 FOR EACH LINE READ:     *
*  1. CHECKS FOR A VALID STATEMENT, WHERE A VALID 6-DIGIT HEX       *
*     LOCATION IS FOUND IN 1-6 WITH NON-BLANK DATA IN 9-12.         *
*  2. FOR EACH VALID STATEMENT FOUND, COMPARE 2-7 TO 94-99 (LOC)    *
*     9-12 TO 101-104 (DATA BYTES 1-2), 14-17 TO 105-108 (DATA BYTES*
*     3-4), AND 19-22 TO 109-112 (DATA BYTES 5-6).                  *
*  3. IF ANY FIELD DIFFERS, THE LINE IS PRINTED.                    *
*                                                                   *
* AUTHOR R THORNTON MAR 2002                                        *
*********************************************************************
*
*********************************************************************
*        SAVE REGISTERS, SET UP BASE REGS, CHAIN SAVE AREAS         *
*********************************************************************
         USING RESCHECK,R3,R4
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)             SET UP SECOND
         LA    R4,1(R4)                    BASE REGISTER
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     START                   BRANCH AROUND CONSTANTS
         DC    CL8'RESCHECK'           PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
*********************************************************************
*        OPEN FILES, LOCATE FIRST STATEMENT                         *
*********************************************************************
START    OPEN  (SYSPRINT,OUTPUT,SYSIN) OPEN FILES
FIND1ST  BAS   R9,GETIN                READ INPUT RECORD
         CLC   INASMLOC,=CL6'000000'   FOUND LOCATION ZERO?
         BNE   FIND1ST                 NO, CONTINUE SEARCH
         MVI   GOTSTRT,1               SHOW START RECORD FOUND
*********************************************************************
*             MAINLINE ROUTINE                                      *
*********************************************************************
MAINLINE BAS   R9,GETIN                READ INPUT RECORD
         TRT   INASMLOC,HEXDIG         LOCATION IS ALL HEX DIGITS?
         BNZ   MAINLINE                NO, NOT VALID STATEMENT
         CLC   INASMLOC,INRESLOC       ASM LOC = RESOURCE LOC?
         MVC   PASMLOC,INASMLOC        MOVE LOCATION
         MVC   PASM12,INASM12          MOVE ASM BYTES 1-2
         MVC   PASM34,INASM34          MOVE ASM BYTES 3-4
         MVC   PASM56,INASM56          MOVE ASM BYTES 5-6
         MVC   PRESLOC,INRESLOC        MOVE LOCATION
         MVC   PRESDATA,INRES12        MOVE DATA BYTES
         CLC   PRESDATA,PASM12         DATA BYTES IDENTICAL?
         BE    MAINLINE                YES
         MVC   PSTMNBR,INASMLIN        ASM'S LINE NUMBER
         MVC   PLABEL,INLABEL          STATEMENT LABEL
         MVC   PMNEM,INMNEM            STATEMENT MNEMONIC, OPERANDS
         BAS   R9,PRINT                PRINT DIFFERENCE LINE
         MVI   RETCODE+3,4             INDICATE ERROR PRINTED
         B     MAINLINE                LOOP THROUGH INPUT FILE
*********************************************************************
*             READ INPUT FILE SUBROUTINE                            *
*********************************************************************
GETIN    GET   SYSIN,INREC             READ NEXT RECORD
         CLI   INASMBK1,C' '           1ST BLANK FIELD IS BLANK?
         BNE   GETIN                   NO
         CLI   INASMBK2,C' '           2ND BLANK FIELD IS BLANK?
         BNE   GETIN                   NO
         CLI   INASMBK3,C' '           3RD BLANK FIELD IS BLANK?
         BNE   GETIN                   NO
         CLI   INASMBK4,C' '           4TH BLANK FIELD IS BLANK?
         BNE   GETIN                   NO
         CLI   INASMBK5,C' '           5TH BLANK FIELD IS BLANK?
         BNE   GETIN                   NO
         CLI   INASMBK6,C' '           6TH BLANK FIELD IS BLANK?
         BNE   GETIN                   NO
         CLC   INMNEM,=CL5'END '       THIS THE END STATEMENT?
         BE    EOJ                     YES, ALL THROUGH
         BR    R9                      RETURN TO CALLER
*********************************************************************
*             PRINT SUBROUTINE                                      *
*********************************************************************
PRINT    PUT   SYSPRINT,PRTLINE        WRITE PRINT LINE
         MVC   PRTLINE,BLANKS          CLEAR PRINT LINE
         BR    R9                      NO, RETURN
*********************************************************************
*             ERROR END OF SYSIN                                    *
*********************************************************************
ERROREND CLI   GOTSTRT,1               GOT THE START RECORD?
         BE    BADEND                  YES
         WTO   'MISSING START, ABENDING',ROUTCDE=11
         ABEND  777,DUMP               TERMINATE IN ERROR
BADEND   WTO   'MISSING END, ABENDING',ROUTCDE=11
         ABEND  888,DUMP               TERMINATE IN ERROR
         BR    R9                      NO, RETURN
*********************************************************************
*             END OF JOB                                            *
*********************************************************************
EOJ      CLC   RETCODE,XZROS           RETURN CODE IS ZERO?
         BNE   CLOSES                  NO, BRANCH
         MVC   PRT(38),=CL38'***COMPARISON FOUND NO DIFFERENCES ***'
         BAS   R9,PRINT                GO PRINT
CLOSES   CLOSE (SYSPRINT,,SYSIN) CLOSE FILES
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         L     R14,12(R13)             RESTORE RETURN REG: R14
         L     R15,RETCODE             SET RETURN CODE
         LM    R0,R12,20(R13)          RESTORE CALLER'S REGS 0-12
         BR    R14                     RETURN
*********************************************************************
*        STORAGE AND FILE AREAS                                     *
*********************************************************************
*
DBLWD    DS    D                       DOUBLEWORD WORK AREA
XZROS    DC    F'0'                    CONSTANT ZEROS
RETCODE  DC    F'0'                    RETURN CODE
BLANKS   DC    CL133' '                BLANKS
GOTSTRT  DC    X'00'                   1=GOT START LOCATION
HEXDIG   DC    256X'FF'                TABLE TO TEST FOR HEX DIGITS
         ORG   HEXDIG+C'0'
         DC    16X'00'
         ORG
*
PRTLINE  DS    0CL133                  PRINT LINE
PCC      DS    CL1                     CARRIAGE CONTROL
PRT      DS    0CL132                  PRINT DATA
PASMLOC  DC    CL6' '                  ASM'S LOCATION
         DC    CL1' '
PASM12   DC    CL4' '                  ASM'S DATA BYTES 1-2
PASM34   DC    CL4' '                  ASM'S DATA BYTES 3-4
PASM56   DC    CL4' '                  ASM'S DATA BYTES 5-6
         DC    CL3' '
PRESLOC  DC    CL6' '                  RESOURCE'S LOCATION
         DC    CL1' '
PRESDATA DC    CL12' '                 RESOURCE'S DATA BYTES 1-6
         DC    CL3' '
PSTMNBR  DC    CL5' '                  STATEMENT NUMBER
         DC    CL1' '
PLABEL   DC    CL8' '                  LABEL
         DC    CL1' '
PMNEM    DC    CL43' '                 MNEMONIC, OPERANDS
         DC    CL30' '
*
INREC    DS    0CL156                   INPUT RECORD
INCC     DS    CL1           1            CARRIAGE CONTROL
INASMLOC DS    CL6           2            ASM'S LOCATION
INASMBK1 DS    CL1           8            BLANK
INASM12  DS    CL4           9            ASM'S DATA BYTES 1-2
INASMBK2 DS    CL1          13            BLANK
INASM34  DS    CL4          14            ASM'S DATA BYTES 3-4
INASMBK3 DS    CL1          18            BLANK
INASM56  DS    CL4          19            ASM'S DATA BYTES 5-6
INASMBK4 DS    CL1          23            BLANK
         DS    CL12         24
INASMLIN DS    CL5          36            ASM'S LINE NUMBER
INASMBK5 DS    CL1          41            BLANK
INLABEL  DS    CL8          42            STATEMENT LABEL
INASMBK6 DS    CL1          50            BLANK
INMNEM   DS    CL5          51            STATEMENT MNEMONIC
         DS    CL38         56            OPERANDS, COMMENTS
INRESLOC DS    CL6          94            RESOURCE'S LOCATION
INRESBK1 DS    CL1         100            BLANK
INRES12  DS    CL4         101            RESOURCE'S BYTES 1-2
INRES34  DS    CL4         105            RESOURCE'S BYTES 3-4
INRES56  DS    CL4         109            RESOURCE'S BYTES 5-6
         DS    CL43        113
*********************************************************************
*             DCB'S                                                 *
*********************************************************************
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FBA,LRECL=133
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=ERROREND,          X
               RECFM=FB
         LTORG
RESCHECK CSECT
*********************************************************************
*             REGISTER EQUATES                                      *
*********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
