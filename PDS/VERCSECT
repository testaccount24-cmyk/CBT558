         TITLE '***** LOAD MODULE CROSS-REFERENCE *****'
VERCSECT SVLNK R3,R4
         PRINT NOGEN
*
**********************************************************************
*              LOAD MODULE CSECT VERIFICATION PROGRAM                *
*                                                                    *
*  THIS PROGRAM COMPARES TWO LOAD MODULES, PRINTING THE DIFFERENCES  *
*  FOUND. DIFFERENCES DETECTED INCLUDE:                              *
*                                                                    *
*     ADDED CSECT: A CSECT FOUND IN THE "NEW" MODULE THAT IS NOT     *
*                  INCLUDED IN THE "OLD" MODULE.                     *
*     DELETED CSECT: A CSECT FOUND IN THE "NEW" MODULE THAT IS NOT   *
*                  INCLUDED IN THE "OLD" MODULE.                     *
*     LENGTH CHANGE: A CSECT LENGTH DIFFERS BETWEEN "OLD" AND "NEW"  *
*                  MODULES.                                          *
*     COMPILER/ASSEMBLER CHANGE: A DIFFERENT COMPILER/ASSEMBLER WAS  *
*                  USED FOR "OLD" THAN WAS USED FOR "NEW"            *
*     COMPILE/ASSEMBLY DATE CHANGE: THE "OLD" AND "NEW" MODULES      *
*                  WERE COMPILED ON DIFFERENT DATES.                 *
*     LINK EDITOR CHANGE: A DIFFERENT LINK EDITOR WAS USED FOR THE   *
*                  "OLD" AND "NEW" MODULES.                          *
*     LINK EDIT DATE CHANGE: THE "OLD" AND "NEW" MODULES WERE LINK   *
*                  EDITED ON DIFFERENT DATES.                        *
*                                                                    *
*  IF PARM=ALL IS SPECIFIED ON THE EXEC STATEMENT, ALL CSECT DATA    *
*  IS PRINTED FOR BOTH MODULES. IF NO PARM IS SPECIFIED, ONLY THE    *
*  DIFFERENCES ARE PRINTED.                                          *
*                                                                    *
*  DD CARDS USED:  OLDMOD   - POINTS TO A PDS MEMBER CONTAINING THE  *
*                             "OLD" MODULE. THIS MUST BE A PDS WHOSE *
*                             MEMBERS ARE CREATED BY THE LINKAGE     *
*                             EDITOR. RECFM=U IS HARD-CODED.         *
*                  NEWMOD   - POINTS TO A PDS MEMBER CONTAINING THE  *
*                             "NEW" MODULE. THIS MUST BE A PDS WHOSE *
*                             MEMBERS ARE CREATED BY THE LINKAGE     *
*                             EDITOR. RECFM=U IS HARD-CODED.         *
*                  SYSPRINT - PRINTED OUTPUT. RECFM=FBA,LRECL=133 IS *
*                             HARD-CODED.                            *
*                                                                    *
* AUTHOR R THORNTON - MAR 1990                                       *
**********************************************************************
*
****************************************************************
* PROCESS PARM FIELD AND OPEN FILES                            *
****************************************************************
*
         L     R2,0(R1)                GET PARM ADDRESS
         OPEN  (SYSPRINT,OUTPUT)       OPEN PRINT FILE
         CLC   0(2,R2),=H'0'           ANY PARM?
         BE    OPENS                   NO
         MVI   PARMSW,1                ASSUME PARM=ALL
         CLC   0(2,R2),=H'3'           THREE BYTE PARM?
         BNE   BADPARM                 NO
         CLC   2(3,R2),=C'ALL'         PARM IS "ALL"?
         BE    OPENS                   YES
BADPARM  MVC   PRT,=CL79'VERCSECT: INVALID PARM, USING PARM=ALL'
         BAL   R9,PRINT                PRINT ERROR MESSAGE
OPENS    BAL   R9,NEWPAGE              RESET TO SKIP TO HEAD
         OPEN  OLDMOD                  OPEN "OLD" MEMBER FILE
         MVC   SYMTBLST(2),=X'FFFF'    SET TABLE END
*
****************************************************************
* MAINLINE PROCESSING: BUILD SYMBOL TABLES.                    *
****************************************************************
*
MAINLINE BAL   R9,GETLMOD              GET LOAD MODULE RECORD
TESTCESD CLI   0(R6),X'20'             CESD RECORD
         BNE   TESTCTL1                NO
         BAL   R9,CESDREC              PROCESS CESD RECORDS
         B     MAINLINE                GO READ AGAIN
TESTCTL1 CLI   0(R6),1                 IS IT CONTROL
         BE    PRFMCNTL                YES
TESTCTL5 CLI   0(R6),5                 IS IT CONTROL
         BE    PRFMCNTL                YES
TESTCTLD CLI   0(R6),13                IS IT CONTROL
         BNE   TESTEND                 YES
PRFMCNTL BAL   R9,CNTLRECS             PROCESS CONTROL RECORD
         B     TESTEND                 GO CHECK FOR END
TESTRLD2 CLI   0(R6),2                 IS IT RLD
         BE    MAINLINE                YES
TESTRLD6 CLI   0(R6),6                 IS IT RLD
         BE    MAINLINE                YES
TESTRLDE CLI   0(R6),14                IS IT RLD
         BE    MAINLINE                YES
TESTCR3  CLI   0(R6),3                 IS IT CTL AND RLD
         BE    PFRMCTRL                YES
TESTCR7  CLI   0(R6),7                 IS IT CTL AND RLD
         BE    PFRMCTRL                YES
TESTCRF  CLI   0(R6),15                IS IT CTL AND RLD
         BNE   TESTIDR                 YES
PRFMCTRL BAL   R9,CNTLRECS             PROCESS CONTROL RECORDS
         B     TESTEND                 GO CHECK END
TESTIDR  CLI   0(R6),X'80'             IS IT IDR
         BNE   MAINLINE                YES
PRFMIDR  BAL   R9,IDRRECS              PROCESS IDR RECORD
TESTEND  TM    PROCESS,X'40'           MODULE PROCESSING DONE
         BZ    MAINLINE                NO, GO READ AGAIN
*
****************************************************************
* END OF PASS ALL THRU IF "NEW", ELSE SET UP FOR "NEW" PASS    *
****************************************************************
*
EOF      CLI   PASS,C'O'               JUST FINISHED "OLD" PASS?
         BE    STRTNEW                 YES, GO SET UP FOR "NEW" PASS
         L     R1,CURRSYM              GET CURRENT "NEW" TBL ADDR
         LA    R1,CSECTBND-CSECTBST(R1) ADVANCE 1 ENTRY
         MVC   0(2,R1),=X'FFFF'        SET TABLE END
         ST    R1,ENDSYM               SAVE END ADDRESS
         MVC   CURRSYM,SYMTBAD         RESET CURRENT TBL ADDR
         B     BEGNPRNT                GO BEGIN PRINT
STRTNEW  MVI   PASS,C'N'               SHOW IN "NEW" PASS
         CLOSE OLDMOD                  CLOSE "OLD" LIBRARY
         OPEN  NEWMOD                  OPEN "NEW" LIBRARY
         L     R1,CURRSYM              GET CURRENT TABLE POINTER
         LA    R1,CSECTBND-CSECTBST(R1) ADVANCE 1 ENTRY
         MVC   0(2,R1),=X'FFFF'        SET TABLE END
         ST    R1,OLDEND               SET UP "OLD" TABLE END ADDR
         LA    R1,CSECTBND-CSECTBST(R1) ADVANCE 1 ENTRY
         MVC   0(2,R1),=X'FFFF'        SET TABLE END
         ST    R1,SYMTBAD              SET UP "NEW" TABLE START
         ST    R1,CURRSYM              SET UP "NEW" CURRENT ADDRESS
         B     MAINLINE                GO DO SECOND PASS
*
****************************************************************
* READ NEXT RECORD IN LOAD MODULE                              *
****************************************************************
*
GETLMOD  CLI   PASS,C'N'               PROCESSING "NEW" MODULE?
         BE    GETNEW                  YES
         GET   OLDMOD                  NO, READ "OLD" MODULE
         LR    R6,R1                   COPY RECORD ADDRESS
         BR    R9                      AND EXIT
GETNEW   GET   NEWMOD                  NO, READ "NEW" MODULE
         LR    R6,R1                   COPY RECORD ADDRESS
         BR    R9                      AND EXIT
*
****************************************************************
* PRINT THE MODULE CSECT COMPARISON LISTING                    *
****************************************************************
*
BEGNPRNT


         BAL   R9,PRINT                PRINT IT
*
****************************************************************
* PROCESS LOAD MODULE CONTROL RECORDS. THESE RECORDS PRECEDE   *
* TEXT RECORDS, WHICH ARE READ AND BYPASSED.                   *
****************************************************************
*
CNTLRECS ST    R9,CT9                  SAVE RETURN ADDR
         TM    0(R6),X'08'             THIS PRECEDES LAST REC OF MOD
         BO    EOJ                     NO
         BAL   R9,GETLMOD              READ FOLLOWING TEXT RECORD
CTXIT    L     R9,CT9                  GET RETURN ADDR
         BR    R9                      EXIT
*
****************************************************************
* PROCESS IDR RECORDS. SAVE THE COMPILER ID AND DATE IN THE    *
* APPROPRIATE SYMBOL TABLE ENTRY. LINK EDITOR ID AND DATE ARE  *
* PUT IN THE DIRECTORY INFO. LINE                              *
****************************************************************
*
IDRRECS  NI    2(R6),X'0F'             CLEAR HIGH NIBBLE
         CLI   2(R6),4                 TRANSLATOR DATA?
         BNE   IDRXIT                  NO, IGNORE IT
GOTTSLT  LA    R1,3(R6)                POINT TO FIRST ESDID
CHLSTID  TM    0(R1),X'80'             LAST ESDID?
         BO    GETCPLN                 YES
         LA    R1,2(R1)                NO, ADVANCE TO NEXT
         B     CHLSTID                 CONTINUE SEARCH
GETCPLN  LR    R2,R1                   SAVE LAST POINTER ADDRESS
         LA    R1,3(R6)                POINT TO FIRST ESDID
IDRSTRT  NI    0(R1),X'7F'             CLEAR HI BIT
         L     R11,SYMTBAD             POINT TO FIRST ESDID
         USING CSECTBST,R11
IDRSCH   CLC   CSECESD,=X'FFFF'        END OF TABLE?
         BE    IDRNXT                  YES
         CLC   CSECESD,0(R1)           FOUND ENTRY FOR THIS ESDID?
         BNE   IDRNXT                  NO, CONTINUE SEARCH
         MVC   CSECCMNM(15),3(R2)      MOVE COMPILER NAME, V.M, DATE
IDRNXT   LA    R1,2(R1)                ADVANCE TO NEXT ESDID
         CR    R1,R2                   END OF ESD LIST?
         BNH   IDRSTRT                 NO
IDRXIT   BR    R9                      AND EXIT
*
****************************************************************
* PROCESS COMPOSITE ESD RECORDS. DATA FROM THESE RECORDS IS    *
* PLACED IN THE SYMBOL TABLE.
****************************************************************
*
CESDREC  ST    R9,CES9                 SAVE RETURN
         L     R7,CURRSYM              GET SYMBOL TBL ADDR
         USING CSECTBST,R7
         LH    R10,4(R6)               GET ESD ID OF 1ST ITEM
         LH    R8,6(R6)                NBR BYTES OF ESD DATA
         SRL   R8,4                    COMPUTE NBR ENTRIES
         LA    R6,8(R6)                STEP TO 1ST RECORD ESD ITEM
CESDNXT  C     R7,ENDSYM               END OF TABLE
         BNL   SYMFULL                 YES, ERROR
         MVC   CSECNAME,0(R6)          SYMBOL NAME
         CLI   8(R6),0                 TYPE=00 (CSECT)?
         BE    TYPSYM,X'0F'            CLEAR BITS 0-3
         MVI   SYMIND,0                CLEAR INDICATOR
         TM    8(R6),X'14'             POSSIBLE ENTAB/SEGTAB
         BNO   CEMVAD                  NO
         TM    8(R6),X'03'             IS IT ENTAB/SEGTAB
         BNZ   CEMVAD                  NO
         MVC   TYPSYM(2),=X'0F00'      SHOW ENTAB/SEGTAB
CEMVAD   MVC   SYMADDR,9(R6)           ADDRESS OF SYMBOL
         MVC   SYMLENG,13(R6)          LENGTH OR LR ESD ID
         STCM  R10,3,SYMESDID          ESD ID
         LA    R10,1(R10)              ADD 1 TO ESD COUNTER
         LA    R6,16(R6)               TO NEXT ESD ITEM IN INPUT
         LA    R7,L'SYMENT(R7)         STEP TO NEXT ENTRY
         ST    R7,CURRSYM              SAVE NEXT TABLE ADDR
CESNXT   BCT   R8,CESDNXT              LOOP THRU INPUT RECORD
         L     R9,CES9                 GET RETURN ADDR
         BR    R9                      EXIT
*
****************************************************************
* CREATE PRINTABLE HEX FROM HEX. ON ENTRY, REG 12 CONTAINS THE *
* ADDRESS OF THE DATA TO BE REFORMATTED. ENTRY POINT USED      *
* DETERMINES THE SIZE OF THE FIELD. OUTPUT DATA IS PLACED IN   *
* THE PRTABL FIELD, 2 CHARACTERS PER BYTE.                     *
****************************************************************
*
HEXPRT1  UNPK  PRTABL(3),0(2,R12)      UNPACK HEX
         B     HEXCLTR                 CONTINUE
HEXPRT2  UNPK  PRTABL(5),0(3,R12)      UNPACK HEX
         B     HEXCLTR                 CONTINUE
HEXPRT3  UNPK  PRTABL(7),0(4,R12)      UNPACK HEX
         B     HEXCLTR                 CONTINUE
HEXPRT4  UNPK  PRTABL(9),0(5,R12)      UNPACK HEX
HEXCLTR  MVZ   PRTABL(8),XZROS         CLEAR FOR TRANSLATE
         TR    PRTABL(8),TRTBL         MAKE PRINTABLE
         BR    R9                      EXIT
*
****************************************************************
* PRINT USING SYSPRINT.                                        *
****************************************************************
*
PRINT    TM    SYSPRINT+48,X'10'       IS SYSPRINT OPEN
         BNO   CLRPRT                  NO
         PUT   SYSPRINT,PRTLINE        WRITE PRINT LINE
CLRPRT   MVC   PRT,BLANX               CLEAR PRINT LINE
         AP    LINECT,P1               INCR LINE COUNTER
         CLI   PCC,C' '                SINGLE SPACED
         BE    SETSGL                  YES
         AP    LINECT,P1               INCR LINE COUNTER
         CLI   PCC,C'0'                DOUBLE SPACED
         BE    SETSGL                  YES
         AP    LINECT,P1               INCR LINE COUNTER
         CLI   PCC,C'-'                TRIPLE SPACED
         BE    SETSGL                  YES
         ZAP   LINECT,P0               NO, MUST BE NEW PAGE
SETSGL   MVI   PCC,C' '                SET SINGLE SPACING
         CP    LINECT,P58              PAST END OF PAGE
         BH    NEWPAGE                 YES
         BR    R9                      EXIT
NEWPAGE  MVI   PCC,C'1'                SET SKIP TO HOF
         ZAP   LINECT,P0               RESET LINE COUNTER
         BR    R9                      EXIT
*
****************************************************************
* END OF JOB.
****************************************************************
*
EOJ      CLOSE (OLDMOD,,SYSPRINT,,SYSIN) CLOSE FILES
         L     R13,4(R13)              GET POINTER TO CALLER'S SAVE ARE
         L     R14,12(R13)             GET RETURN ADDRESS
         L     R15,RETCODE             GET RETURN CODE
         LM    R10,R12,20(R13)         RESTORE CALLER'S REGS
         BR    R14                     RETURN TO CALLER
*
****************************************************************
*                 *** DATA AND WORK AREAS ***
****************************************************************
*
RETCODE  DC    F'0'                    RETURN CODE
IDR9     DS    F
DF9      DS    F
BUFAD    DS    F                       OLDMOD BUFFER ADDR
SYMTBAD  DC    A(SYMTBLST)             SYMBOL TABLE ADDRESS
CURRSYM  DC    A(SYMTBLST)             CURRENT SYM TBL ADDR
ENDSYM   DC    A(SYMTBLND)             SYM TBL END ADDR
OLDTBAD  DC    A(SYMTBLST)             SYMBOL TABLE ADDRESS
OLDCURR  DC    A(SYMTBLST)             CURRENT SYM TBL ADDR
OLDEND   DC    A(SYMTBLND)             SYM TBL END ADDR
NEWTBAD  DC    A(SYMTBLST)             SYMBOL TABLE ADDRESS
NEWCURR  DC    A(SYMTBLST)             CURRENT SYM TBL ADDR
NEWEND   DC    A(SYMTBLND)             SYM TBL END ADDR
CES9     DS    F                       CESDREC RETURN ADDR
CR9      DS    F                       CNTLRECS RETURN ADDR
CT9      DS    F                       CNTLRECS RETURN ADDR
PARMSW   DC    X'00'                   1 = PARM=ALL
PROCESS  DC    X'00'                   1 = END OF MODULE PROCESSING
PASS     DC    C'0'                    O=OLD, N=NEW
LINECT   DC    PL2'0'                  PRINT LINE COUNTER
P0       DC    P'0'                    CONSTANT 0
P1       DC    P'1'                    CONSTANT 1
P58      DC    P'58'                   CONSTANT 58
BLANX    DC    CL133' '                CONSTANT BLANKS
XZROS    DC    8X'00'                  CONSTANT ZEROS
TRTBL    DC    C'0123456789ABCDEF'     TRANSLATE TBL
PRTABL   DS    CL9                     HEX-PRINTABLE CONVERSION AREA
*
CNTLCARD DS    0CL80                   CONTROL CARD
OLDLIT   DS    CL4'OLD='               LITERAL
OLDNAME  DS    CL8                     "OLD" MEMBER NAME
SPC1     DS    CL1                     BLANK
NEWLIT   DS    CL4'NEW='               LITERAL
NEWNAME  DS    CL8                     "NEW MEMBER NAME
SPC2     DS    CL47                    BLANKS
         DS    CL8                     USER FIELD
*
GREGDATE DS    0CL8                    GREGORIAN DATE
GREGYEAR DS    CL2                       YEAR
         DC    C'/'
GREGMNTH DS    CL2                      MONTH
         DC    C'/'
GREGDAY  DS    CL2                       DAY
*
PRTLINE  DS    0CL133                  PRINT LINE
PCC      DC    C'1'                    CARRIAGE CONTROL
PRT      DC    CL132' '                PRINT DATA
*
DIRHEAD  DS    0CL133                  DIRECTORY INFO HEADER
         DC    CL1'1'                    SKIP TO HEAD OF FORM
         DC    CL19'DIRECTORY INFO FOR '
         DC    CL9'ALIAS OF '
         DC    CL9'SSI      '
         DC    CL7'LENGTH '
         DC    CL9'ENTRY PT '
         DC    CL3'AC '
         DC    CL15'LINKEDITOR V.M '
         DC    CL9'LINKDATE '
         DC    CL52'ATTRIBUTES'
*
PDIRCTY  DS    0CL132                  DIRECTORY INFO LINE (NEW)
PDMEMBR  DS    CL8                       MEMBER NAME
         DS    CL1
PDLIT    DS    CL5                       "(OLD)" OR "(NEW)"
         DS    CL5
PDALIAS  DS    CL8                       ALIAS NAME
         DS    CL1
PDSSI    DS    CL8                       SSI DATA
         DS    CL1
PDLENG   DS    CL6                       TOTAL MODULE LENGTH
         DS    CL2
PDENTPT  DS    CL6                       ENTRY POINT OFFSET
         DS    CL2
PDAUTH   DS    CL2                       AUTH CODE
         DS    CL1
PDLKEDTR DS    CL10                      LINKAGE EDITOR NAME
         DS    CL1
PDLKVM   DS    CL3                       LINK EDITOR VER.MOD
         DS    CL1
PDLKDAT  DS    CL8                       LINK DATE
         DS    CL1
PDATTR   DS    CL52                      MODULE ATTRIBUTES
*
PXIRCTY  DS    0CL132                  DIRECTORY INFO LINE (OLD)
PXMEMBR  DS    CL8                       MEMBER NAME
         DS    CL1
PXLIT    DS    CL5                       "(OLD)" OR "(NEW)"
         DS    CL5
PXALIAS  DS    CL8                       ALIAS NAME
         DS    CL1
PXSSI    DS    CL8                       SSI DATA
         DS    CL1
PXLENG   DS    CL6                       TOTAL MODULE LENGTH
         DS    CL2
PXENTPT  DS    CL6                       ENTRY POINT OFFSET
         DS    CL2
PXAUTH   DS    CL2                       AUTH CODE
         DS    CL1
PXLKEDTR DS    CL10                      LINKAGE EDITOR NAME
         DS    CL1
PXLKVM   DS    CL3                       LINK EDITOR VER.MOD
         DS    CL1
PXLKDAT  DS    CL8                       LINK DATE
         DS    CL1
PXATTR   DS    CL52                      MODULE ATTRIBUTES
*
JULDAY   DS    PL2                     JULIAN DAY
JULDATE  DS    CL5                     JULIAN DATE
JULMOTBL DS    0CL5                    JULIAN MONTH TABLE
         DC    PL2'0',C'JAN'
         DC    PL2'31',C'FEB'
         DC    PL2'59',C'MAR'
         DC    PL2'90',C'APR'
         DC    PL2'120',C'MAY'
         DC    PL2'151',C'JUN'
         DC    PL2'181',C'JUL'
         DC    PL2'212',C'AUG'
         DC    PL2'243',C'SEP'
         DC    PL2'273',C'OCT'
         DC    PL2'305',C'NOV'
         DC    PL2'334',C'DEC'
         DC    PL2'999',C'???'
JULWK    DS    PL3
*
*
         DS    0F
BLDLIST  DS    0XL64                 BLDL ENTRY
         DC    H'1'                    ONE ENTRY
         DC    H'58'                   LENGTH OF ENTRY
MEMBER   DC    CL8' '                  MEMBER NAME
TTRMOD   DC    XL3'000000'             TTR OF MODULE
CCAT     DC    XL1'00'                 CONCATENATION NUMBER
         DC    XL1'00'
ALIASIND DC    XL1'00'                 ALIAS AND MISC INDICATOR
*                           80=ALIAS
TTR1TXT  DC    XL3'000000'             TTR OF 1ST TXT RECORD
         DC    XL1'00'
TTRNS    DC    XL3'000000'             TTR OF NOTE OR SCATTER LIST
NNOTE    DC    XL1'00'                 NBR ENTRIES IN NOTE LIST
ATTR1A   DC    XL1'00'                 MODULE ATTRIBUTES 1, BYTE 1
*                           80=RENT
*                           40=REUS
*                           20=OVERLAY
*                           10=UNDER TEST
*                           08=ONLY LOADABLE
*                           04=SCATTER FORMAT
*                           02=EXECUTABLE
*                           01=ONE TXT, NO RLD RECORDS
ATTR1B   DC    XL1'00'                 ATTRIBUTES 1, BYTE 2
*                           80=CANNOT BE REPROCESSED BY LKED E
*                           40=ORIGIN OF 1ST TXT RECORD IS ZERO
*                           20=ASSIGNED ENTRY POINT ADDR IS ZERO
*                           10=CONTAINS NO RLD RECORD
*                           08=CANNOT BE REPROCESSED BY LKED
*                           04=CONTAINS TESTRAN SYMBOLS
*                           02=CREATED BY LKED
*                           01=REFR
TOTVIRT  DC    XL3'000000'             TOTAL VIRTUAL STRG REQRD FOR MOD
LENG1    DC    XL2'0000'               LENGTH OF 1ST TEXT RECORD
LKEPA    DC    XL3'000000'             ASSIGNED ENTRY POINT ADDR
ATTR2    DC    XL1'00'                 ATTRIBUTES 2
*                           80=PROCESSED BY OS/VS LKED
*                           20=PAGE ALIGNMENT REQUIRED FOR MODULE
*                           10=SSI PRESENT
         DC    XL2'0000'
SCTRLEN  DC    XL2'0000'               SCATTER LIST LENGTH
TTLEN    DC    XL2'0000'               TRANSLATION TABLE LENGTH
SCESDID  DC    XL2'0000'               CESD NBR FOR 1ST TXT RECD
SCEPESD  DC    XL2'0000'               CESD NBR FOR ENTRY POINT
ALEPA    DC    XL3'000000'             ENTRY POINT OF THE MEMBER NAME
ALMEM    DC    CL8' '                  REAL MEMBER NAME FOR ALIAS
SSI      DS    XL4'00000000'           SSI BYTES
AUTHLEN  DC    XL1'00'                 AUTH CODE LENGTH
AUTHCOD  DC    XL1'00'                 AUTH CODE
*
*
*
SYMTBL   DSECT ,                       EXTERNAL SYMBOL TABLE ENTRY
SYMENT   DS    0CL18                   19 BYTE ENTRIES
EXTSYM   DS    CL8                     EXTERNAL SYMBOL NAME
TYPSYM   DS    XL1                     SYMBOL TYPE
*                                      00=SD (NAMED CSECT)
*                                      02=ER (EXTRN)
*                                      03=LR (ENTRY)
*                                      04=PC (UNNAMED CSECT)
*                                      05=CM (COM)
*                                      06=PR (PSEUDO REGISTER)
*                                      07=NULL
*                                      0A=WX (WXTRN)
*                                      0F=ENTAB OR SEGTAB
SYMIND   DS    XL1                     INDICATOR:
*                                      X'80'=REFERENCED
*                                      X'01'=UNRESOLVED
SYMADDR  DS    XL3                     SYMBOL ADDRESS (0 FOR ER, WX, NU
SYMLENG  DS    XL3                     LENGTH FOR SD, PC, CM, PR
SYMESDID DS    XL2                     ESD ID OF THIS ITEM
VERCSECT CSECT
*
HOLDSYM  DS    CL(L'SYMENT)            HOLD AREA FOR SYM ENTRY
*
PRTCHAR  DC    256C'.'                 CHARACTER TRANSLATE TABLE
         ORG   PRTCHAR+C' '
         DC    C' '
         ORG   PRTCHAR+C'A'
         DC    C'ABCDEFGHI'
         ORG   PRTCHAR+C'J'
         DC    C'JKLMNOPQR'
         ORG   PRTCHAR+C'S'
         DC    C'STUVWXYZ'
         ORG   PRTCHAR+C'0'
         DC    C'0123456789'
         ORG
*
SYSIN    DCB   DSORG=PS,MACRF=GL,DDNAME=SYSIN,                         X
               RECFM=FB,LRECL=80,EODAD=EOJ
OLDMOD   DCB   DSORG=PO,MACRF=R,DDNAME=OLDMOD,                         X
               RECFM=U,NCP=1
NEWMOD   DCB   DSORG=PO,MACRF=R,DDNAME=NEWMOD,                         X
               RECFM=U,NCP=1
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FBA,LRECL=133
*
CSECTBST DSECT ,                   CSECT SYMBOL TABLE ENTRY
CSECESD  DS    XL2                   CSECT ESDID
CSECNAME DS    CL8                   CSECT NAME
CSECLENG DS    XL3                   CSECT LENGTH
CSECLOCN DS    XL3                   CSECT LOCATION
CSECCMNM DS    CL12                  COMPILER NAME, V.M
CSECCMDT DS    PL3                   COMPILE DATE
CSECTBND DS    0C END OF TABLE ENTRY
*
VERCSECT CSECT
         LTORG
SYMTBLST DS    0C                  SYMBOL TABLE
         DS    1000CL(CSECTBND-CSECTBST)
         DS    1000CL(CSECTBND-CSECTBST)
SYMTBLND DS    0C
         END
