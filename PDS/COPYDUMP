   TITLE '*****COPYDUMP: COPY INPUT FILES TO RECFM=FBA,LRECL=133 *****'
COPYDUMP SVLNK R3
*
***********************************************************************
* COPY INPUT DSORG=PS FILES TO AN OUTPUT DATASET DEFINED AS RECFM=FBA,*
* LRECL=133. INPUT FILE DDNAME IS INPUTX, WHERE X IS A DIGIT 1-9. THE *
* INPUT DATASETS MUST BE DSORG=PS FILES (INCLUDING PDS MEMBERS), WITH *
* RECFM=F OR V WITH OR WITHOUT PRINT CONTROL CHARACTERS. BOTH ASA AND *
* MACHINE CONTROL CHARACTERS ARE HANDLED. THE OUTPUT FILE IS          *
* RECFM=FBA,LRECL=133. INPUT RECORDS SHORTER THAN 133 ARE EXTENDED    *
* BLANKS. INPUT RECORDS LONGER THAN 133 CHARACTERS ARE TRUNCATED TO   *
* 133 CHARACTERS.                                                     *
* INPUT FILES ARE READ IN THE ORDER THEY APPEAR IN THE JCL, NOT IN    *
* ASCENDING ORDER BY DDNAME.                                          *
* AUTHOR R THORNTON NOV 1999                                          *
***********************************************************************
***********************************************************************
* INITIALIZATION: OPEN OUTPUT FILE. LOCATE THE TIOT AND SAVE THE      *
* ADDRESS OF THE FIRST TIOT DD ENTRY.                                 *
***********************************************************************
         OPEN  (OUTPUT1,OUTPUT)        OPEN OUTPUT FILE
         L     R1,16                   POINT TO THE CVT
         L     R1,0(R1)                POINT TO THE NEW-OLD TCB WORDS
         L     R1,0(R1)                POINT TO MY TCB
         L     R1,12(R1)               POINT TO MY TIOT
         LA    R1,24(R1)               POINT TO 1ST TIOT DD ENTRY
         ST    R1,TIOTDD               SAVE DD ENTRY POINTER
***********************************************************************
* SEARCH THE TIOT FOR THE NEXT INPUTX DD STATEMENT. IF NONE FOUND,    *
* TEMINATE PROCESSING. IF FOUND, UPDATE THE TIOTDD POINTER, OPEN THE  *
* FILE FOUND, AND SAVE ITS RECFM, CARRIAGE CONTROL, AND LRECL DATA.   *
***********************************************************************
NEXINPUT L     R1,TIOTDD               POINT TO NEXT TIOT DD ENTRY
         SR    R2,R2                   CLEAR WORK REG
CKLSTDD  CLI   0(R1),0                 LAST TIOT DD ENTRY
         BE    EOJ                     YES
         CLC   4(5,R1),=C'INPUT'       DDNAME BEGINS WITH "INPUT"?
         BNE   STEPDD                  NO, GO TO NEXT DD ENTRY
         TM    9(R1),C'0'              DIGIT FOLLOWS "INPUT"?
         BNO   STEPDD                  NO, GO TO NEXT DD ENTRY
         CLI   10(R1),C' '             BLANK FOLLOWS DIGIT?
         BE    USEDD                   YES, USE THE DD STATEMENT
STEPDD   IC    R2,0(R1)                GET DD ENTRY LENGTH
         AR    R1,R2                   STEP TO NEXT DD ENTRY
         B     CKLSTDD                 GO CK NEXT DD
USEDD    MVC   INPUT+40(8),4(R1)       MOVE DNAME IN TIOT TO DCB
         IC    R2,0(R1)                GET DD ENTRY LENGTH
         AR    R1,R2                   STEP TO NEXT DD ENTRY
         ST    R1,TIOTDD               SAVE IT'S ADDRESS
         OPEN  INPUT                   OPEN THE FILE
         TM    INPUT+48,X'10'          DID IT OPEN SUCCESSFULLY?
         BO    CKDSORG                 YES
         LA    R1,WTO111               POINT TO WTO MESSAGE
         MVC   DDN111,INPUT+40         MOVE IN DDNAME
         SVC   35
         ABEND 111,DUMP                TERMINATE IN ERROR
CKDSORG  CLI   INPUT+26,X'40'          DSORG=PS?
         BE    DSORGOK                 YES
         LA    R1,WTO222               POINT TO WTO MESSAGE
         MVC   DDN222,INPUT+40         MOVE IN DDNAME
         SVC   35
         ABEND 222,DUMP                TERMINATE IN ERROR
DSORGOK  TM    INPUT+36,X'C0'          TEST RECFM
         BM    TSTFORF                 VALID RECFM
         LA    R1,WTO333               POINT TO WTO MESSAGE
         MVC   DDN333,INPUT+40         MOVE IN DDNAME
         SVC   35
         ABEND 333,DUMP                TERMINATE IN ERROR
TSTFORF  TM    INPUT+36,X'80'          RECFM=F?
         BO    GOTRECF                 YES
GOTRECV  MVI   RECFM,C'V'              NO, RECFM=V
         B     TSTPCC                  CONTINUE
GOTRECF  MVI   RECFM,C'F'              RECFM=F
TSTPCC   TM    INPUT+36,X'04'          ASA CONTROL CHARACTERS?
         BO    GOTCCA                  YES
         TM    INPUT+36,X'02'          MACHINE CONTROL CHARS?
         BO    GOTCCM                  YES
GOTNOCC  MVI   PRTRCC,C' '             NO, NOT USING CONTROL CHARS
         B     GETLENG                 CONTINUE
GOTCCM   MVI   PRTRCC,C'M'             ASSUME MACHINE CONTROL CHARS
         B     GETLENG                 CONTINUE
GOTCCA   MVI   PRTRCC,C'A'             ASSUME ASA PRINT CONTROL CHARS
GETLENG  CLI   RECFM,C'V'              IS IT RECFM=V?
         BE    MAINLINE                YES
SETLENGF MVC   LRECL,INPUT+82          GET DCBLRECL
***********************************************************************
* MAINLINE PROCESSING: READ INPUT RECORD, MODIFY AS NEEDED FOR THE    *
* OUTPUT FILE REQUIREMENTS OF RECFM=FBA,LRECL=133                     *
***********************************************************************
MAINLINE GET   INPUT                   READ NEXT INPUT RECORD
         MVC   OUTREC,BLANKS           CLEAR OUTPUT RECORD AREA
         LR    R12,R1                  R12 = @ INPUT RECORD
         CLI   RECFM,C'F'              RECFM = F?
         BE    CHKLENG                 YES
SETLENGV LH    R11,0(R12)              NO, USE RDW FOR RECFM=V
         SH    R11,H4                  DEDUCT 4 FOR RDW ITSELF
         STH   R11,LRECL               AND USE FOR LRECL
         LA    R12,4(R12)              STEP PAST RDW TO DATA
CHKLENG  CLI   PRTRCC,C' '             ANY CONTROL CHARACTERS?
         BNE   GOTCCS                  YES
NOCCLENG MVI   OUTCC,C' '              SET SINGLE SPACING
         LA    R11,OUTDATA             POINT TO OUTPUT RECORD DATA
         CLC   LRECL,H132              OVER 132 BYTES IN RECORD?
         BNH   EXMVC                   NO, GO MOVE IT
         MVC   LRECL,H132              YES, REDUCE TO MAX ALLOWED LENG
         B     EXMVC                   AND GO MOVE IT
GOTCCS   CLI   PRTRCC,C'M'             GOT MACHINE CONTROL CHARS?
         BE    MCHLENG                 YES
ASALENG  LA    R11,OUTREC              POINT TO OUTPUT RECORD CC
         CLC   LRECL,H133              OVER 132 BYTES IN RECORD?
         BNH   EXMVC                   NO, GO MOVE IT
         MVC   LRECL,H133              YES, REDUCE TO MAX ALLOWED LENG
         B     EXMVC                   AND GO MOVE IT
MCHLENG  MVC   OUTCC,NEXCC             SET SPACING FROM LAST RECORD
         MVC   NEXCC,0(R12)            MOVE FOR NEXT LINE SPACING
         TR    NEXCC,MCHSPAC           TRANSLATE SPACING
         TRT   0(1,R12),MCHPRTBL       THIS AN IMMEDIATE SKIP/SPACE?
         BZ    MAINLINE                YES
         LA    R11,OUTDATA             POINT TO OUTPUT DATA
         LA    R12,1(R12)              POINT PAST MCH CTL CHAR
         CLC   LRECL,H132              OVER 132 BYTES IN RECORD?
         BNH   EXMVC                   NO, GO MOVE IT
         MVC   LRECL,H132              YES, REDUCE TO MAX ALLOWED LENG
EXMVC    LH    R1,LRECL                PICK UP MOVE LENGTH
         BCTR  R1,0                    SUBTRACT 1 FOR LENGTH CODE
         EX    R1,MOVERECD             MOVE RECORD TO OUTPUT
WRITE    PUT   OUTPUT1,OUTREC          WRITE RECORD TO OUTPUT
         CLI   PRTRCC,C'M'             MACHINE CONTROL CHARS?
         BE    MAINLINE                YES
         MVI   NEXCC,C'1'              NO, SET UP IN CASE OF MCH
         B     MAINLINE                GO READ NEXT RECORD
MOVERECD MVC   0(1,R11),0(R12)         MOVE DATA TO PRINT LINE
***********************************************************************
*        END OF LAST INPUTX FILE: CLOSE AND GO LOOK FOR MORE          *
***********************************************************************
EOFINPUT CLOSE INPUT                   CLOSE THE INPUT FILE
         FREEPOOL INPUT                FREE THE INPUT BUFFER POOL
         B     NEXINPUT                GO LOOK FOR ANOTHER INPUT FILE
***********************************************************************
*        NO MORE INPUTX FILES: TERMINATE PROCESSING                   *
***********************************************************************
EOJ      CLOSE OUTPUT1                 CLOSE OUTPUT FILE
         L     R13,4(R13)              GET CALLER'S SAVE ADDRESS
         LM    R14,R12,12(R13)         GET CALLER'S REGISTERS
         SR    R15,R15                 ZERO RETURN CODE
         BR    R14                     RETURN TO CALLER
***********************************************************************
*        STORAGE AND FILE AREAS                                       *
***********************************************************************
DBLWD    DS    D                       WORK AREA
TIOTDD   DC    A(0)                    ADDRESS OF NEXT TIOT DD ENTRY
H132     DC    H'132'                  CONSTANT 132
H133     DC    H'133'                  CONSTANT 133
H4       DC    H'4'                    CONSTANT 4
LRECL    DC    H'0'                    CURRENT LRECL
RECFM    DC    C' '                    CURRENT RECFM (F, V)
PRTRCC   DC    C' '                    CURRENT CARR CTL (BLANK, M, A)
BLANKS   DC    CL133' '                BLANKS
NEXCC    DC    CL1'+'                  NEXT SPACING FOR MCH CTL CHAR
MCHPRTBL DC    256X'00'                IDENTIFY MCH PRINT COMMANDS
         ORG   MCHPRTBL+X'09'          PRINT, SPACE 1
         DC    X'FF'
         ORG   MCHPRTBL+X'11'          PRINT, SPACE 2
         DC    X'FF'
         ORG   MCHPRTBL+X'19'          PRINT, SPACE 3
         DC    X'FF'
         ORG   MCHPRTBL+X'01'          PRINT, SPACE 0
         DC    X'FF'
         ORG   MCHPRTBL+X'89'          PRINT, SKIP TO CH1
         DC    X'FF'
         ORG
MCHSPAC  DC    256C' '                 ASA SPACING FOR MCH CTL CHARS
         ORG   MCHSPAC+X'8B'           IMMED SKIP TO CHNL 1
         DC    C'1'
         ORG   MCHSPAC+X'19'           PRINT, SPACE 3 AFTER
         DC    C'-'
         ORG   MCHSPAC+X'11'           PRINT, SPACE 2 AFTER
         DC    C'0'
         ORG   MCHSPAC+X'09'           PRINT, SPACE 1 AFTER
         DC    C' '
         ORG   MCHSPAC+X'0B'           IMMEDIATE SPACE 1
         DC    C' '
         ORG   MCHSPAC+X'13'           IMMEDIATE SPACE 2
         DC    C'0'
         ORG   MCHSPAC+X'1B'           IMMEDIATE SPACE 3
         DC    C'-'
         ORG   MCHSPAC+X'89'           PRINT, THEN SKIP TO CHNL 1
         DC    C'1'
         ORG   MCHSPAC+X'01'           PRINT, NO SPACE AFTER
         DC    C'+'
         ORG
*
OUTREC   DS    0CL133                  OUTPUT RECORD
OUTCC    DS    CL1                       ASA CARRIAGE CONTROL BYTE
OUTDATA  DS    CL133                     PRINT DATA RECORD
*
WTO111   DS    0F                      WTO ERROR MESSAGE
         DC    AL2(END111-WTO111),XL2'8000'
MSG111   DC    C'ERROR OPENING '
DDN111   DC    CL6' '
         DC    C' FILE.'
END111   DC    X'00000020'
WTO222   DS    0F                      WTO ERROR MESSAGE
         DC    AL2(END222-WTO222),XL2'8000'
MSG222   DC    C'INVALID DSORG FOUND FOR '
DDN222   DC    CL6' '
         DC    C' FILE.'
END222   DC    X'00000020'
WTO333   DS    0F                      WTO ERROR MESSAGE
         DC    AL2(END333-WTO333),XL2'8000'
MSG333   DC    C'INVALID RECFM FOUND FOR '
DDN333   DC    CL6' '
         DC    C' FILE.'
END333   DC    X'00000020'
*
OUTPUT1  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT1
INPUT    DCB   DSORG=PS,MACRF=GL,DDNAME=INPUT,EODAD=EOFINPUT
         END
