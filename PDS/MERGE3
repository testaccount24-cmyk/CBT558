         TITLE '*** MERGE3: MERGE DATA FROM ONE FILE INTO ANOTHER ***'
***********************************************************************
* MERGE DATA FROM TWO INPUT FILES BOTH SORTED ON THE SAME FIELD       *
* PROGRAM MUST BE REBUILT FOR EACH RUN. PRESENT SPECS ARE:            *
*  1) INPUT SORT KEYS IN COL 1-8, BOTH FILES.                         *
*  2) WHEN A RECORD FROM INPUT1 HAS AN * OR A + IN COLUMN 1 IT IS     *
*     COPIED TO THE OUTPUT FILE IMMEDIATELY.                          *
*  3) RECORDS FROM INPUT2 ARE COPIED TO OUTPUT FOLLOWING A RECORD WITH*
*     MATCHING COL 1-8, BUT AFTER ANY FOLLOWING * OR + RECORDS IN THE *
*     INPUT1 FILE HAVE BEEN COPIED TO THE OUTPUT FILE.                *
* AUTHOR R THORNTON APR 2002                                          *
***********************************************************************
*
MERGE3   CSECT
         USING MERGE3,R3
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     GETPARM                 BRANCH AROUND CONSTANTS
         DC    CL8'MERGE3'             PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
*********************************************************************
*        PROCESS PARM FIELD                                         *
*********************************************************************
GETPARM  L     R2,0(R1)                GET PARM FIELD ADDR
         MVC   PARMDATA,2(R2)          SAVE PARM DATA
***********************************************************************
*        OPEN FILES, PRINT HEADING                                    *
***********************************************************************
OPENS    OPEN  (OUTPUT1,OUTPUT,INPUT1,,INPUT2) OPEN FILES
         BAS   R9,GETIN1               READ FIRST INPUT1 RECORD
         BAS   R9,GETIN2               READ FIRST INPUT2 RECORD
***********************************************************************
*             MAINLINE ROUTINE                                        *
***********************************************************************
MAINLINE MVC   HOLDMEM,REC1            SAVE MEMBER NAME
         PUT   OUTPUT1,REC1            WRITE THE MEMBER NAME RECORD
         BAS   R9,GETIN1               COPY TO NEXT MEMBER NAME RECORD
CMPRMEM  CLC   HOLDMEM,REC2            INPUT1 MEMBER : INPUT2 MEMBER
         BL    MAINLINE                INPUT1 RECORD LOW
         BH    REC2LOW                 NO, INPUT2 RECORD LOW
         MVC   REC2(8),PARMDATA        OVERLAY COL 1-8
         PUT   OUTPUT1,REC2            WRITE INPUT2 RECORD
REC2LOW  BAS   R9,GETIN2               READ NEXT INPUT2 RECORD
         B     CMPRMEM                 CONTINUE
***********************************************************************
*        READ INPUT1 RECORD                                           *
***********************************************************************
GETIN1   GET   INPUT1,REC1             READ INPUT1 RECORD
         CLI   REC1,C'A'               MEMBER NAME RECORD?
         BNLR  R9                      YES
         PUT   OUTPUT1,REC1            NO, COPY TO OUTPUT
         B     GETIN1                  GO READ NEXT RECORD
EOF1     MVC   REC1(7),HIVAL           SET RECORD TO HEX FF'S
         CLC   REC1(7),REC2            BOTH AT END?
         BE    EOJ                     YES, END OF JOB
         BR    R9                      NO, RETURN
***********************************************************************
*        READ INPUT2 RECORD                                           *
***********************************************************************
GETIN2   GET   INPUT2,REC2             READ INPUT2 RECORD
         CLI   REC2,C'*'               COMMENT?
         BE    GETIN2                  YES, SKIP IT
         BR    R9                      RETURN TO CALLER
EOF2     MVC   REC2(8),=8X'FF'         SET RECORD TO HEX FF'S
         BR    R9                      NO, RETURN
***********************************************************************
*             END OF JOB                                              *
***********************************************************************
EOJ      CLOSE (OUTPUT1,,INPUT1,,INPUT2) CLOSE FILES
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGS
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN
***********************************************************************
*        STORAGE AND FILE AREAS                                       *
***********************************************************************
PARMDATA DC    CL8' '                  PARM DATA FROM EXEC STATEMENT
HOLDMEM  DC    CL8' '                  HOLD MEMBER NAME
HIVAL    DC    8X'FF'                  HEX FF'S
*
REC1     DS    CL80                    INPUT1 RECORD
*
REC2     DS    CL80                    INPUT2 RECORD
*
***********************************************************************
*             DCB'S                                                   *
***********************************************************************
OUTPUT1  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT1,                       X
               RECFM=FB,LRECL=80
INPUT1   DCB   DSORG=PS,MACRF=GM,DDNAME=INPUT1,EODAD=EOJ,              X
               RECFM=FB,LRECL=80
INPUT2   DCB   DSORG=PS,MACRF=GM,DDNAME=INPUT2,EODAD=EOF2,             X
               RECFM=FB,LRECL=80
         LTORG
MERGE3   CSECT
*********************************************************************
*             REGISTER EQUATES                                      *
*********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
