         TITLE '*** MSMCHRPT: PRINT MISMATCHED CSECT REPORT ***'
MSMCHRPT CSECT
*********************************************************************
* READS THE OUTPUT FILE FROM MSMCHMOD AFTER IT IS SORTED IN CSECT,  *
* MEMBER, AND LIBRARY ORDER. PRINTS A REPORT THAT SHOWS EACH        *
* CSECT THAT IS FOUND THAT HAS DIFFERING CHARACTERSITICS IN ONE     *
* MEMBER THAN IN ANOTHER. (MSMCHMOD IS A C LANGUAGE PROGRAM).       *
*                                                                   *
* WHEN A CSECT ALWAYS HAS THE SAME CHARACTERISTICS (COMPILER TYPE,  *
* AMODE, RMODE, SIZE, AND COMPILE DATE) IN EVERY MEMBER WHERE IT IS *
* PRESENT, NOTHING IS PRINTED.                                      *
*                                                                   *
* WHEN A CSECT IF FOUND TO HAVE A DIFFERENT SET OF CHARACTERISTICS  *
* IN ANY MEMBER THAN IN ANOTHER, ALL ENTRIES FOR THAT CSECT ARE     *
* PRINTED, SHOWING THE CSECT NAME, CHARACTERISTICS, MEMBER NAME,    *
* AND LOAD LIBRARY CONTAINING THE CSECT.                            *
*                                                                   *
* PURPOSE IS TO AID IN IDENTIFICATION OF PRODUCTION PROGRAMS THAT   *
* DO NOT CONTAIN CURRENT PRODUCTION VERSIONS OF INCLUDED PROGRAMS.  *
*                                                                   *
* AUTHOR R THORNTON JULY 2001                                       *
*********************************************************************
*
*********************************************************************
*        SAVE REGISTERS, SET UP BASE REGS, CHAIN SAVE AREAS         *
*********************************************************************
         USING MSMCHRPT,R3,R4
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)             SET UP SECOND
         LA    R4,1(R4)                    BASE REGISTER
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     OPENS                   BRANCH AROUND CONSTANTS
         DC    CL8'MSMCHRPT'           PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
*********************************************************************
*        OPEN FILES, PRINT HEADING GET TABLE STORAGE                *
*********************************************************************
OPENS    OPEN  (REPORT,OUTPUT,SUMMARY,OUTPUT,ALLCSECT,,ELEMENTS) OPENS
         BAS   R9,HEADING              PRINT FIRST DETAIL HEADING
         PUT   SUMMARY,SUMMHEAD        PRINT FIRST SUMMARY HEADING
         STORAGE OBTAIN,LENGTH=186000  ROOM FOR 6000 ENTRIES
         ST    R1,TABLEA               SAVE TABLE START ADDRESS
         ST    R1,CURRNTRY             SAVE START AS CURRENT
         MVI   0(R1),X'FF'             SHOW END OF TABLE DATA
         LR    R6,R1                   SET UP FIRST ENTRY POINTER
         LR    R7,R1                   SET UP CURRENT ENTRY POINTER
         USING TBLNTRY,R7
         A     R1,=F'185970'           COMPUTE TABLE END ADDRESS
         ST    R1,TBLENDA              SAVE TABLE END ADDRESS
         GET   ELEMENTS,ELEMRECD       READ FIRST ELEMENT RECORD
*********************************************************************
*             MAINLINE ROUTINE                                      *
*********************************************************************
MAINLINE GET   ALLCSECT,INREC          READ NEXT RECORD
         CLC   INCSECT,0(R6)           SAME CSECT NAME?
         BE    MLSTORE                 YES
         CR    R6,R7                   NO, ANY CSECT IN PROGRESS?
         BE    MLSTORE                 NO
         CLI   DIFF,1                  ANY CSECT DIFFERENCES FOUND?
         BNE   MLNEW                   NO
         BAL   R9,PROCESS              YES, GO PROCESS THE CSECT
MLNEW    MVI   0(R6),X'FF'             RESET TABLE
         LR    R7,R6                   RESET CURRENT ENTRY POINTER
         MVI   DIFF,0                  RESET DIFFERENCE FLAG
         ZAP   NUMCPYS,P0              RESET NUMBER COPIES COUNTER
         ZAP   NUMVERS,P0              RESET NUMBER VERSIONS COUNTER
         L     R1,VRSNTBLA             SET VERSION
         MVI   0(R1),X'FF'                TABLE STOPPER
MLSTORE  AP    NUMCPYS,P1              ADD 1 TO NUMBER COPIES COUNTER
         MVC   TBLCSECT,INCSECT        BUILD
         MVC   TBLCOMP,INCOMP           NEW
         MVC   TBLAMODE,INAMODE          TABLE
         MVC   TBLRMODE,INRMODE           ENTRY
         PACK  DBLWD,INSIZE                .
         OI    DBLWD+7,X'0F'               .
         CVB   R1,DBLWD                    .
         ST    R1,TBLSIZE                  .
         MVZ   NUMTST,INCMPDT              .
         CLC   NUMTST,NUMZRO               .
         BE    MLPKIT                      .
         MVC   INCMPDT,NUMZRO              .
MLPKIT   PACK  TBLCMPDT,INCMPDT            .
         MVC   TBLMEM,INMEM                .
         MVC   TBLOADLB,INLOADLB           .
         CR    R6,R7                   THIS THE FIRST CSECT ENTRY?
         BE    MLSTEP                  YES
         CLC   TBLNTRY(19),0(R6)       SAME AS 1ST ENTRY?
         BE    MLSTEP                  YES
         MVI   DIFF,1                  NO, SHOW IT DIFFERS
MLSTEP   LA    R7,TBLNTEND-TBLNTST(R7) STEP TO NEXT ENTRY
         ST    R7,CURRNTRY             UPDATE CURRENT POINTER
         C     R7,TBLENDA              STILL WITHIN TABLE?
         BL    MAINLINE                YES
         WTO   'MSMCHRPT: TABLE TOO SMALL, ABENDING',ROUTCDE=11
         ABEND 111,DUMP
*********************************************************************
* PROCESS CSECT WHEN DIFFERENT VERSIONS WERE FOUND.                 *
*********************************************************************
PROCESS  ST    R9,PR9                  SAVE RETURN ADDRESS
         MVI   CSPRTD,0                RESET CSECT PRINTED FLAG
         LR    R7,R6                   POINT TO FIRST ENTRY
PRCKND1  C     R7,CURRNTRY             AT END OF TABLE?
         BE    PRPASS2                 YES
         CLC   TBLMEM,TBLCSECT         POSSIBLE PRODUCTION MEMBER?
         BNE   PRSTEP1                 NO
         BAL   R9,PRINT                YES, GO PRINT THE ENTRY
PRSTEP1  LA    R7,TBLNTEND-TBLNTST(R7) STEP TO NEXT ENTRY
         B     PRCKND1                 LOOP THRU TABLE
PRPASS2  LR    R7,R6                   POINT TO FIRST ENTRY
PRCKND2  C     R7,CURRNTRY             AT END OF TABLE?
         BE    PRXIT                   YES, ALL THRU
         CLC   TBLMEM,TBLCSECT         POSSIBLE PRODUCTION MEMBER?
         BE    PRSTEP2                 YES
         BAL   R9,PRINT                NO, GO PRINT THE ENTRY
PRSTEP2  LA    R7,TBLNTEND-TBLNTST(R7) STEP TO NEXT ENTRY
         B     PRCKND2                 LOOP THRU TABLE
PRXIT    BAL   R9,WRTSUMM              GO WRITE THE SUMMARY FILE RECORD
         L     R9,PR9                  GET RETURN ADDRESS
         BR    R9                      RETURN TO CALLER
*********************************************************************
*             WRITE THE SUMMARY RECORD                              *
*********************************************************************
WRTSUMM  ST    R9,WS9                  SAVE RETURN ADDRESS
         MVC   SUMMREC,BLANKS          CLEAR SUMMARY RECORD
         MVC   SMCSECT,0(R6)           MOVE IN CSECT NAME
         MVC   SMCOPIES,=X'40202020'   EDIT NUMBER
         ED    SMCOPIES,NUMCPYS          OF COPIES TO RECORD
         LR    R7,R6                   POINT TO FIRST ENTRY
WSCKND1  C     R7,CURRNTRY             AT END OF TABLE?
         BE    WSEDVER                 YES
         L     R1,VRSNTBLA             NO, POINT TO VERSION TABLE
WSCKND2  CLI   0(R1),X'FF'             END OF TABLE?
         BE    WSADD1                  YES, GO ADD ANOTHER ENTRY
         CLC   TBLCOMP(11),0(R1)       SAME VERSION?
         BE    WSSTEP1                 YES, GO TO NEXT
         LA    R1,11(R1)               NO, TO NEXT VERSION ENTRY
         B     WSCKND2                 CONTINUE VERSION SEARCH
WSADD1   C     R1,VRSNTBND             PAST END OF VERSION TABLE?
         BNL   WSSTEP1                 YES
         MVC   0(11,R1),TBLCOMP        MOVE VERSION DATA TO TABLE
         MVI   11(R1),X'FF'            SET NEW TABLE STOPPER
         AP    NUMVERS,P1              INCREMENT VERSION COUNT
WSSTEP1  LA    R7,TBLNTEND-TBLNTST(R7) STEP TO NEXT ENTRY
         B     WSCKND1                 LOOP THRU TABLE
WSEDVER  MVC   SMVERSNS,=X'40202020'   EDIT NUMBER
         ED    SMVERSNS,NUMVERS          OF VERSIONS TO RECORD
         MVI   WSPRT,0                 RESET PRINTED INDICATOR
WSCKND3  CLI   EOFELEM,X'FF'           END OF ENDEVOR ELEMENT FILE?
         BNE   WSCKFND                 NO
WSCKQU   CLI   WSPRT,1                 ALREADY PRINTED FOR THIS CSECT?
         BNE   WSPUTIT                 NO, GO PRINT
         B     WSXIT                   YES, EXIT
WSCKFND  CLC   EMELEM,0(R6)            FOUND ENDEVOR RECORD?
         BE    WSGOTEND                YES
         BH    WSCKQU                  NO, PAST IT
WSREAD1  BAL   R9,GETENDV              NO, GO READ NEXT ENDEVOR MASTER
         B     WSCKND3                 GO CHECK EOF
WSGOTEND MVC   SMENV,EMENV             MOVE ENVIRONMENT
         MVC   SMSYS,EMSYS                  SYSTEM
         MVC   SMSUB,EMSUB                  SUBSYSTEM
         MVC   SMTYPE,EMTYPE                TYPE
WSPUTIT  PUT   SUMMARY,SUMMREC         WRITE SUMMARY FILE RECORD
         MVI   WSPRT,1                 SET PRINTED INDICATOR
         MVC   SUMMREC,BLANKS          CLEAR SUMMARY RECORD
         CLC   EMELEM,0(R6)            ENDEVOR MASTER PAST THIS?
         BNH   WSREAD1                 YES
WSXIT    L     R9,WS9                  GET RETURN ADDRESS
         BR    R9                      EXIT
*********************************************************************
*             PRINT THE CURRENT TABLE ENTRY                         *
*********************************************************************
PRINT    CLI   CSPRTD,1                HAS CSECT NAME BEEN PRINTED?
         BE    PRMVCMP                 YES
         MVI   CSPRTD,1                NO, SET CSECT PRINTED FLAG
         MVC   PRCSECT,TBLCSECT        BUILD
PRMVCMP  MVC   PRCOMP,TBLCOMP           CSECT
         MVC   PRAMODE,TBLAMODE          PRINT
         MVC   PRRMODE,TBLRMODE           LINE
         UNPK  PRSIZE(9),TBLSIZE(5)        .
         MVI   PRSIZE+8,C' '               .
         TR    PRSIZE,TRALFA-C'0'          .
         MVC   PRCMPDT,=10C'?'             .
         MVI   DATYP,C'J'                  .
         ZAP   JULDATE,TBLCMPDT            .
         MVI   JULDATE,X'20'               .
         CLI   TBLCMPDT,X'50'              .
         BL    PRSETSN                     .
         MVI   JULDATE,X'19'               .
PRSETSN  OI    JULDATE+3,X'0F'             .
         CALL  GENLDAT2,(DATEFLD)          .
         CLI   DATERR,C'E'                 .
         BE    PRMVMEM                     .
         MVC   PRCMPDT,GRGSLASH            .
PRMVMEM  MVC   PRMEM,TBLMEM                .
         LA    R1,LIBRTABL                 .
PRCKEND  CLI   0(R1),X'FF'                 .
         BE    ATLIBRY                     .
         CLC   TBLOADLB,0(R1)              .
         BE    ATLIBRY                     .
         LA    R1,L'LIBRTABL(R1)           .
         B     PRCKEND                     .
ATLIBRY  MVC   PRLIBRY,4(R1)               .
         CLC   TBLCSECT,TBLMEM             .
         BNE   PRINTIT                     .
         MVC   PRNOTE(26),=CL26'POSSIBLE PRODUCTION MEMBER'
PRINTIT  PUT   REPORT,PRTLINE          WRITE PRINT LINE
         AP    LINECT,P1               INCREMENT LINE COUNTER
         MVC   PRTLINE,BLANKS          CLEAR PRINT LINE
         CP    LINECT,ENDPAGE          PAST END OF PAGE?
         BNHR  R9                      NO, RETURN
*********************************************************************
*             HEADING SUBROUTINE                                    *
*********************************************************************
HEADING  ST    R9,H9                   SAVE RETURN ADDRESS
         ZAP   LINECT,P0               RESET LINE COUNTER
         AP    PAGECT,P1               INCREMENT PAGE COUNTER
         MVC   PAGENBR,PAGEDIT         PAGE NUMBER
         ED    PAGENBR,PAGECT              TO HEADER LINE
         PUT   REPORT,HEADER1          WRITE HEADER LINE 1
         PUT   REPORT,HEADER2          WRITE HEADER LINE 2
         MVI   PCC,C'0'                DOUBLE SPACE NEXT DATA LINE
         L     R9,H9                   GET RETURN ADDRESS
         BR    R9                      RETURN
*********************************************************************
*        READ THE ENDEVOR MASTER FILE                               *
*********************************************************************
GETENDV  GET   ELEMENTS,ELEMRECD       READ ENDEVOR MASTER RECORD
         CLC   ELEMRECD(6),=CL6'1 (C) ' HEADER RECORD?
         BE    GETENDV                 YES, SKIP IT
         CLC   ELEMRECD(9),BLANKS      BLANK RECORD?
         BE    GETENDV                 YES, SKIP IT
         CLC   ELEMRECD(9),=CL9' ELEMENT ' HEADER RECORD?
         BE    GETENDV                 YES, SKIP IT
         BR    R9                      RETURN
ENDELEM  MVI   EOFELEM,X'FF'           SET END OF FILE FLAG
         BR    R9                      RETURN TO CALLER
*********************************************************************
*             END OF JOB                                            *
*********************************************************************
EOJ      CLOSE (REPORT,,SUMMARY,,ALLCSECT,,ELEMENTS) CLOSE FILES
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         L     R14,12(R13)             RESTORE RETURN REG: R14
         L     R15,RETCODE             SET RETURN CODE
         LM    R0,R12,20(R13)          RESTORE CALLER'S REGS 0-12
         BR    R14                     RETURN
*********************************************************************
*        STORAGE AND FILE AREAS                                     *
*********************************************************************
DBLWD    DS    D                       DOUBLEWORD WORK AREA
WS9      DC    A(0)                    RETURN ADDRESS FOR WRTSUMM
PR9      DC    A(0)                    RETURN ADDRESS FOR PROCESS
H9       DC    A(0)                    HEADING RETURN ADDRESS
TABLEA   DC    A(0)                    TABLE START ADDRESS
CURRNTRY DC    A(0)                    CURRENT TABLE ENTRY ADDRESS
TBLENDA  DC    A(0)                    TABLE END ADDRESS
RETCODE  DS    F'0'                    RETURN CODE
VRSNTBLA DC    A(VRSNTABL)             DIFFERENCE TABLE POINTER
VRSNTBND DC    A(VRSNEND)              END OF DIFFERENCE TABLE
P0       DC    P'0'                    PACKED 0
P1       DC    P'1'                    PACKED 1
LINECT   DC    PL2'0'                  LINE COUNTER
PAGECT   DC    PL3'0'                  PAGE COUNTER
ENDPAGE  DC    P'54'                   MAX LINES PER PAGE
NUMCPYS  DC    PL2'0'                  NUMBER COPIES OF CSECT FOUND
NUMVERS  DC    PL2'0'                  NUMBER DIFFERENT VERSIONS
PAGEDIT  DC    XL7'4020206B202020'     EDIT MASK FOR PAGE NBR
BLANKS   DC    CL133' '                BLANKS
DIFF     DC    X'00'                   DIFFERENCE FOUND FLAG
CSPRTD   DC    X'00'                   CSECT NAME PRINTED FLAG
WSPRT    DC    X'00'                   SUMMARY RECORD PRINTED FLAG
EOFELEM DC     X'00'                   EOF FLAG FOR ELEMENTS FILE
TRALFA   DC    CL16'0123456789ABCDEF'  TRANSLATION TO ALPHANUMERIC
NUMTST   DC    CL5'00000'                  NUMERIC TEST AREA
NUMZRO   DC    CL5'00000'                  CONSTANT ZONED ZEROS
*
LIBRTABL DS    0CL24                   LIBRARY TABLE
         DC    CL4'EOLL',CL20'EMVSP.OUTPUT.LOADLIB'
         DC    CL4'IMS1',CL20'EMVSP.IMSVS.PGMLIB  '
         DC    CL4'KX01',CL20'EMVSP.CICS.LOADLIB  '
         DC    4X'FF',CL20' '
*
DATEFLD  DS    0CL79        ***** GENLDAT2 PARAMETER AREA *****
DATYP    DS    CL1           .DATE TYPE SUPPLIED: J=JULIAN,
DATERR   DS    CL1           .E=GENLDAT2 ERROR
DAYWK    DS    CL1           .1=MONDAY THRU 7=SUNDAY
HOLIDAY  DS    CL1           .HOLIDAY INDICATOR: BLANK=NOT HOLIDAY
YEARTYP  DS    CL1           .0=NOT LEAP YEAR, 1=LEAP YEAR
JULDATE  DS    PL4           .JULIAN DATE YYYYDDF
GREGMDY  DS    CL8           .GREGORIAN DATE MMDDYYYY
GREGYMD  DS    CL8           .GREGORIAN DATE YYYYMMDD
LITDATE  DS    CL18          .A LITERAL DATE
JULSLASH DS    CL8           .JULIAN DATE WITH SLASH: YYYY/DDD
GRGSLASH DS    CL10          .GREGORIAN WITH SLASHES: MM/DD/YYYY
DAYLIT   DS    CL9           .LITERAL DAY OF WEEK
MONTHLIT DS    CL9           .LITERAL MONTH
*
HEADER1  DS    0CL133                  HEADER LINE 1
         DC    CL1'1'                  CARRIAGE CONTROL
         DC    CL47' '
         DC    CL37'   PRODUCTION CSECT MISMATCH REPORT  '
         DC    CL37' '
         DC    CL4'PAGE'
PAGENBR  DS    CL7                     PAGE NUMBER
*
HEADER2  DS    0CL133                  HEADER LINE 2
         DC    CL1'0'                  CARRIAGE CONTROL
         DC    CL8'*CSECT**'
         DC    CL5' COMP'
         DC    CL6' AMODE'
         DC    CL6' RMODE'
         DC    CL9' **SIZE**'
         DC    CL11' *COMPILED*'
         DC    CL9' *MEMBER*'
         DC    CL20' *LOAD LIBRARY*'
         DC    CL58' *COMMENTS...'
*
PRTLINE  DS    0CL133                  PRINT LINE
PCC      DS    CL1                     CARRIAGE CONTROL
PRT      DS    0CL132                  PRINT DATA
PRCSECT  DC    CL8' '                    CSECT NAME
         DC    CL2' '
PRCOMP   DC    CL2'  '                   COMPILER TYPE
         DC    CL4' '
PRAMODE  DC    CL1' '                    AMODE
         DC    CL5' '
PRRMODE  DC    CL1' '                    RMODE
         DC    CL3' '
PRSIZE   DC    CL8' '                    CSECT SIZE
         DC    CL1' '
PRCMPDT  DC    CL10' '                   COMPILE DATE: YYDDD
         DC    CL1' '
PRMEM    DC    CL8' '                    MEMBER NAME
         DC    CL1' '
PRLIBRY  DC    CL20' '                   LOAD LIBRARY
         DC    CL1' '
PRNOTE   DC    CL56' '
*
INREC    DS    0CL80                    INPUT RECORD
INCSECT  DS    CL8                       CSECT NAME
         DS    CL1
INCOMP   DS    CL2                       COMPILER TYPE
         DS    CL1
INAMODE  DS    CL1                       AMODE
         DS    CL1
INRMODE  DS    CL1                       RMODE
         DS    CL1
INSIZE   DS    CL8                       CSECT SIZE
         DS    CL1
INCMPDT  DS    CL5                       COMPILE DATE: YYDDD
         DS    CL1
INMEM    DS    CL8                       MEMBER NAME
         DS    CL1
INLOADLB DS    CL4                       LOAD LIBRARY
         DS    CL36
*
SUMMREC  DS    0CL80                   SUMMARY FILE RECORD
SMCSECT  DS    CL8                       CSECT NAME
         DS    CL3
SMCOPIES DS    CL4                       NUMBER COPIES BZZZ
         DS    CL5
SMVERSNS DS    CL4                       NUMBER VERSIONS BZZZ
         DS    CL2
SMENV    DS    CL8                       ENDEVOR ENVIRONMENT
         DS    CL5
SMSYS    DS    CL8                       ENDEVOR SYSTEM
         DS    CL1
SMSUB    DS    CL8                       ENDEVOR SUBSYSTEM
         DS    CL3
SMTYPE   DS    CL8                       ENDEVOR TYPE
         DS    CL16
*
SUMMHEAD DS    0CL80                   SUMMARY FILE RECORD
         DC    CL8'CSECT   '             CSECT NAME
         DC    CL7' COPIES'              NUMBER COPIES BZZZ
         DC    CL9' VERSIONS'            NUMBER VERSIONS BZZZ
         DC    CL13'  ENVIRONMENT'       ENDEVOR ENVIRONMENT
         DC    CL10'  SYSTEM  '          ENDEVOR SYSTEM
         DC    CL10' SUBSYSTEM'          ENDEVOR SUBSYSTEM
         DC    CL10'  TYPE    '          ENDEVOR TYPE
         DC    CL13' '
*
ELEMRECD DS    0CL80                   ENDEVOR ELEMENT RECORD
EMELEM   DS    CL8                       ENDEVOR ELEMENT NAME
         DS    CL4
EMENV    DS    CL8                       ENDEVOR ENVIRONMENT
         DS    CL2
EMSYS    DS    CL8                       ENDEVOR SYSTEM
         DS    CL2
EMSUB    DS    CL8                       ENDEVOR SUBSYSTEM
         DS    CL1
EMTYPE   DS    CL8                       ENDEVOR TYPE
         DS    CL1
EMSTAGE  DS    CL1                       ENDEVOR STAGE
         DS    CL29
*
*********************************************************************
*             DCB'S                                                 *
*********************************************************************
REPORT   DCB   DSORG=PS,MACRF=PM,DDNAME=REPORT,                        X
               RECFM=FBA,LRECL=133
ALLCSECT DCB   DSORG=PS,MACRF=GM,DDNAME=ALLCSECT,EODAD=EOJ,            X
               RECFM=FBA,LRECL=80
ELEMENTS DCB   DSORG=PS,MACRF=GM,DDNAME=ELEMENTS,EODAD=ENDELEM,        X
               RECFM=FB,LRECL=80
SUMMARY  DCB   DSORG=PS,MACRF=PM,DDNAME=SUMMARY,                       X
               RECFM=FB,LRECL=80
         LTORG
*********************************************************************
*             DIFFERENCE TABLE                                      *
*********************************************************************
VRSNTABL DS    0CL11                   DIFFERENCE TABLE
VTCOMP   DS    CL2                       COMPILER TYPE
VTAMODE  DS    CL1                       AMODE
VTRMODE  DS    CL1                       RMODE
VTSIZE   DS    XL4                       CSECT SIZE
VTCMPDT  DS    PL3                       COMPILE DATE
         DS    25CL11                    *ROOM FOR 25 ENTRIES
VRSNEND DS     CL11                      *END OF DIFFERENCE TABLE
*********************************************************************
*             DSECTS                                                *
*********************************************************************
TBLNTRY  DSECT ,                       TABLE ENTRY DESCRIPTION
TBLNTST  DS    0C                        ENTRY START
TBLCSECT DS    CL8                       CSECT NAME
TBLCOMP  DS    CL2                       COMPILER TYPE
TBLAMODE DS    CL1                       AMODE
TBLRMODE DS    CL1                       RMODE
TBLSIZE  DS    XL4                       CSECT SIZE
TBLCMPDT DS    PL3                       COMPILE DATE: YYDDD
TBLMEM   DS    CL8                       MEMBER NAME
TBLOADLB DS    CL4                       LOAD LIBRARY
TBLNTEND EQU   *                         ENTRY END
MSMCHRPT CSECT
*********************************************************************
*             REGISTER EQUATES                                      *
*********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
