         TITLE '***** SUBROUTINE TO ALLOCATE FILES DYNAMICALLY *****'
ALLOCDYN CSECT
ALLOCDYN AMODE 31
ALLOCDYN RMODE ANY
***********************************************************************
*  THIS SUBROUTINE IS CALLED TO PERFORM DYNAMIC ALLOCATION BY DSNAME. *
*  THE CALLER PROVIDES TWO PARAMETER FIELDS, THE FIRST CONTAINS THE   *
*  INFORMATION USED TO ALLOCATE THE FILE, WHILE THE SECOND CONTAINS   *
*  INFORMATION CONCERNING THE SUCCESS OF THE ALLOCATION.              *
*  SEE USER02.PDS.INSTRUCT MEMBERS ALOCDYN1 (ASSEMBLER) AND ALOCDYN2  *
*  (COBOL) FOR INSTRUCTIONS ON USE.                                   *
*  AUTHOR R THORNTON  REWRITTEN FROM DYNALLOC FEB 1992                *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         USING ALLOCDYN,R3,R4
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)             SET UP SECOND
         LA    R4,1(R4)                    BASE REGISTER
         GETMAIN R,LV=ENDGOTTN-GOTNAREA
         ST    R1,8(R13)               SET LSA IN CALLER'S SAVE
         ST    R13,4(R1)               SET HSA IN MY SAVE AREA
         LR    R13,R1                  SET UP SAVE AREA POINTER
         USING GOTNAREA,R13
         MVC   S99RBPTR(S99ENDCL-S99CLEAR),S99CLEAR CLEAR PARAM BLK
         LA    R1,S99RB                SET UP
         ST    R1,S99RBPTR                S99RBPTR
         LA    R1,S99TUPL              SET UP
         ST    R1,S99TUPTR                S99TUPTR
         LA    R1,PTREND               SET UP
         ST    R1,PTREND                  PTREND
         L     R1,4(R13)               POINT BACK TO CALLER'S SAVE
         L     R1,24(R1)               RESTORE PARAMETER REG
         B     START                   BRANCH AROUND CONSTANTS
         DC    CL8'ALLOCDYN'           PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
START    L     R5,0(R1)                @ 1ST PARAMETER
         USING PARM1,R5
         L     R6,4(R1)                @ 2ND PARAMETER
         USING PARM2,R6
         OI    S99RBPTR,X'80'          SET END OF LIST BIT
         MVC   RETCODE,CHARZERO        CLEAR RETURN CODE
         MVC   ERRRET,CHARZERO         CLEAR ERROR CODE
         MVC   ERRMSG,BLANX            CLEAR ERROR MESSAGE
         MVC   INFORET,CHARZERO        CLEAR INFO REASON CODE
         MVC   INFOMSG,BLANX           CLEAR INFO MESSAGE
         CLI   REQCODE,C'V'            VOLSER FEEDBACK REQUEST?
         BE    VOLFEED                 YES
         LA    R7,S99TUPL              POINT TO 1ST POINTER
         CLI   PRMDDNAM,LOWVAL         DDNAME ENTERED?
         BE    CHKDSNAM                NO
         MVC   DDNAME,PRMDDNAM         YES, MOVE IT
         LA    R12,L'DDNAME            GET FIELD LENGTH
         MVC   DALDDNAM(6),CALDDNAM    INITIALIZE TEXT UNIT
         LA    R11,DALDDNAM            GET @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
         MVI   S99VERB,2               UNALLOCATION REQUEST
         OI    S99TUPL,X'80'           SHOW DDNAME IS ONLY POINTER
         XC    S99ERROR,S99ERROR       CLEAR ERROR RETURN CODE
         XC    S99INFO,S99INFO         CLEAR INFO RETURN CODE
         LA    R1,S99RBPTR             POINT TO PARM LIST
         DYNALLOC ,                    FREE DDNAME
         NI    S99TUPL,X'7F'           CLEAR LAST POINTER INDIC
CHKDSNAM CLI   PRMDSNAM,LOWVAL         DSNAME ENTERED?
         BE    CHKMEMBR                NO
         CLC   PRMDSNAM(6),DUMMLIT     IS IT DUMMY?
         BE    DUMMY                   YES
         CLC   PRMDSNAM(7),SYSOULIT    IS IT SYSOUT?
         BE    SYSOUTD                 YES
         MVC   DSNAME,PRMDSNAM         NO, MOVE DSNAME
         LA    R12,L'PRMDSNAM          LENGTH OF FIELD
         MVC   DALDSNAM(6),CALDSNAM    INITIALIZE TEXT UNIT
         LA    R11,DALDSNAM            @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
         B     CHKMEMBR                CONTINUE
DUMMY    MVC   DALDUMMY(4),CALDUMMY    INITIALIZE TEXT UNIT
         LA    R12,DALDUMMY            @ TEXT UNIT
CHAIN1   ST    R12,0(R7)               CHAIN TEXT UNIT
         LA    R7,4(R7)                TO NEXT POINTER
         B     CHKMEMBR                CONTINUE
SYSOUTD  MVC   DALSYSOU(6),CALSYSOU    INITIALIZE TEXT UNIT
         CLC   PRMDSNAM+7(3),MPTPRN    IS IT DEFAULT SYSOUT CLASS?
         BNE   MVSYSCLS                NO
         MVI   DALSYSOU+3,0            YES, SET TEXT LENG = 0
         B     CHNSYSOT                GO CHAIN
MVSYSCLS MVC   SYSOUT,PRMDSNAM+7       MOVE SYSOUT CLASS
         MVI   DALSYSOU+3,1            YES, SET TEXT LENG = 1
CHNSYSOT LA    R12,DALSYSOU            @ TEXT UNIT
         B     CHAIN1                  GO CHAIN UNIT
CHKMEMBR CLI   PRMMEMBR,LOWVAL         MEMBER NAME ENTERED?
         BE    CHKSTATS                NO
         MVC   MEMBER,PRMMEMBR         YES, MOVE MEMBER NAME
         LA    R12,L'MEMBER            LENGTH OF FIELD
         MVC   DALMEMBR(6),CALMEMBR    INITIALIZE TEXT UNIT
         LA    R11,DALMEMBR            @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
CHKSTATS CLC   PRMSTATS,HEXZERO        STATUS ENTERED?
         BE    CHKNDISP                NO
         MVC   STATUS,PRMSTATS+1       YES, MOVE VALUE
         MVC   DALSTATS(6),CALSTATS    INITIALIZE TEXT UNIT
         LA    R11,DALSTATS            @ TEXT UNIT
         ST    R11,0(R7)               CHAIN THE TEXT UNIT
         LA    R7,4(R7)                STEP TO NEXT POINTER
CHKNDISP CLC   PRMNDISP,HEXZERO        NORMAL DISPOSITION ENTERED?
         BE    CHKCDISP                NO
         MVC   NORMDISP,PRMNDISP+1     YES, MOVE VALUE
         MVC   DALNDISP(6),CALNDISP    INITIALIZE TEXT UNIT
         LA    R11,DALNDISP            @ TEXT UNIT
         ST    R11,0(R7)               CHAIN THE TEXT UNIT
         LA    R7,4(R7)                STEP TO NEXT POINTER
CHKCDISP CLC   PRMCDISP,HEXZERO        CONDITIONAL DISP ENTERED?
         BE    CHKUNIT                 NO
         MVC   CONDDISP,PRMCDISP+1     YES, MOVE VALUE
         MVC   DALCDISP(6),CALCDISP    INITIALIZE TEXT UNIT
         LA    R11,DALCDISP            @ TEXT UNIT
         ST    R11,0(R7)               CHAIN THE TEXT UNIT
         LA    R7,4(R7)                STEP TO NEXT POINTER
CHKUNIT  CLI   PRMUNIT,LOWVAL          UNIT NAME ENTERED?
         BE    CHKUNCNT                NO
         MVC   UNITNAME,PRMUNIT        YES, MOVE UNIT NAME
         LA    R12,L'UNITNAME          MAX FIELD LENGTH
         MVC   DALUNIT(6),CALUNIT      INITIALIZE TEXT UNIT
         LA    R11,DALUNIT             @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
CHKUNCNT CLC   PRMUNCNT,HEXZERO        UNIT COUNT ENTERED?
         BE    CHKVLSER                NO
         MVC   UNITCNT,PRMUNCNT+1      YES, MOVE UNIT COUNT
         MVC   DALUNCNT(6),CALUNCNT    INITIALIZE TEXT UNIT
         LA    R11,DALUNCNT            @ TEXT UNIT
         ST    R11,0(R7)               CHAIN TEXT UNIT
         LA    R7,4(R7)                TO NEXT POINTER
CHKVLSER CLI   PRMVLSER,LOWVAL         VOL SER ENTERED?
         BE    CHKLABEL                NO
         LA    R12,PRMVLSER            POINT TO 1ST INPUT VOLSER
         MVC   DALVLSER(4),CALVLSER    INITIALIZE TEXT UNIT
         LA    R11,6                   MAX NUMBER VOLSERS
         LA    R10,DALVLSER            POINT TO VOL SER TEXT UNTI
         LA    R8,6                    MAX LENGTH, EACH TEXT UNIT
         BAS   R9,GRPVRBL              GROUP VARIABLE NUMBER FIELDS
CHKLABEL CLC   PRMLABEL,HEXZERO        LABEL TYPE ENTERED?
         BE    CHKDSSEQ                NO
         MVC   LBLTYP,PRMLABEL+1       YES, ASSUME NL
         MVC   DALLABEL(6),CALLABEL    INITIALIZE TEXT UNIT
         LA    R11,DALLABEL            @ TEXT UNIT
         ST    R11,0(R7)               CHAIN TEXT UNIT
         LA    R7,4(R7)                TO NEXT POINTER
CHKDSSEQ CLC   PRMDSSEQ,HEXZERO        DATASET SEQUENCE ENTERED?
         BE    CHKCLOSE                NO
         MVC   DSETSEQ,PRMDSSEQ        YES, MOVE DATASET SEQ
         MVC   DALDSSEQ(6),CALDSSEQ    INITIALIZE TEXT UNIT
         LA    R11,DALDSSEQ            @ TEXT UNIT
         ST    R11,0(R7)               CHAIN TEXT UNIT
         LA    R7,4(R7)                TO NEXT POINTER
CHKCLOSE CLI   PRMCLOSE,LOWVAL         FREE=CLOSE REQUESTED?
         BE    CHKRETPD                NO
         MVC   DALCLOSE(4),CALCLOSE    INITIALIZE TEXT UNIT
         LA    R11,DALCLOSE            @ TEXT UNIT
         ST    R11,0(R7)               CHAIN TEXT UNIT
         LA    R7,4(R7)                TO NEXT POINTER
CHKRETPD CLC   PRMRETPD,HEXZERO        RETENTION PERIOD ENTERED?
         BE    CHKRECFM                NO
         MVC   RETPRD,PRMRETPD         YES, MOVE TO TEXT UNIT
         MVC   DALRETPD(6),CALRETPD    INITIALIZE TEXT UNIT
         LA    R11,DALRETPD            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                STEP TO NEXT POINTER
CHKRECFM CLC   PRMRECFM,HEXZERO        RECFM ENTERED?
         BE    CHKLRECL                NO
         MVC   RECFM,PRMRECFM+1        YES, MOVE VALUE
         MVC   DALRECFM(6),CALRECFM    INITIALIZE TEXT UNIT
         LA    R11,DALRECFM            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                STEP TO NEXT POINTER
CHKLRECL CLC   PRMLRECL,HEXZERO        LRECL ENTERED?
         BE    CHKBLKSZ                NO
         MVC   LRECL,PRMLRECL          YES, MOVE TO TEXT UNIT
         MVC   DALLRECL(6),CALLRECL    INITIALIZE TEXT UNIT
         LA    R11,DALLRECL            @ TEXT UNIT
         ST    R11,0(R7)               ADDRESS TO POINTER LIST
         LA    R7,4(R7)                STEP TO NEXT POINTER
CHKBLKSZ CLC   PRMBLKSZ,HEXZERO        BLKSIZE ENTERED?
         BE    CHKDEN                  NO
         MVC   BLKSIZE,PRMBLKSZ        YES, MOVE TO TEXT UNIT
         MVC   DALBLKSZ(6),CALBLKSZ    INITIALIZE TEXT UNIT
         LA    R11,DALBLKSZ            @ TEXT UNIT
         ST    R11,0(R7)               STORE IN POINTER LIST
         LA    R7,4(R7)                STEP TO NEXT POINTER
CHKDEN   CLI   PRMDEN,0                DENSITY ENTERED?
         BE    CHKBUFNO                NO
         MVC   DEN,PRMDEN+1            YES, MOVE VALUE
         MVC   DALDEN(6),CALDEN        INITIALIZE TEXT UNIT
         LA    R11,DALDEN              @ TEXT UNIT
         ST    R11,0(R7)               SET IT IN POINTER LIST
         LA    R7,4(R7)                STEP TO NEXT POINTER
CHKBUFNO CLC   PRMBUFNO,HEXZERO        BUFNO ENTERED?
         BE    CHKKYLEN                NO
         MVC   BUFNO,PRMBUFNO+1        YES, MOVE IT TO TEXT UNIT
         MVC   DALBUFNO(6),CALBUFNO    INITIALIZE TEXT UNIT
         LA    R11,DALBUFNO            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                STEP TO NEXT POINTER
CHKKYLEN CLC   PRMKYLEN,HEXZERO        KEYLEN ENTERED?
         BE    CHKDSORG                NO
         MVC   KEYLEN,PRMKYLEN+1       YES, MOVE TO TEXT UNIT
         MVC   DALKYLEN(6),CALKYLEN    INITIALIZE TEXT UNIT
         LA    R11,DALKYLEN            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                STEP TO NEXT POINTER
CHKDSORG CLC   PRMDSORG,HEXZERO        DSORG ENTERED?
         BE    CHKSPACE                NO
         MVC   DSORG,PRMDSORG          YES, MOVE VALUE
         MVC   DALDSORG(6),CALDSORG    INITIALIZE TEXT UNIT
         LA    R11,DALDSORG            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                STEP TO NEXT POINTER
CHKSPACE CLI   PRMSPACE,C'T'           IS IT TRACKS?
         BE    CHNSPTRK                YES
         CLI   PRMSPACE,C'C'           IS IT CYLINDERS?
         BNE   CHKPRIME                NO, ERROR OR OMITTED
         MVC   DALCYL(4),CALCYL        INITIALIZE TEXT UNIT
         LA    R11,DALCYL              @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                STEP TO NEXT POINTER
         B     CHKPRIME
CHNSPTRK MVC   DALTRK(4),CALTRK        INITIALIZE TEXT UNIT
         LA    R11,DALTRK              @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                STEP TO NEXT POINTER
CHKPRIME CLC   PRMPRIME,HEXZERO        PRIMARY SPACE ENTERED?
         BE    CHKSECND                NO
         MVC   PRIMSPAC,PRMPRIME+1     MOVE TO TEXT UNIT
         MVI   PRIMSPAC,0              CLEAR HIGH ORDER BYTE
         MVC   DALPRIME(6),CALPRIME    INITIALIZE TEXT UNIT
         LA    R11,DALPRIME            @ TEXT UNIT
         ST    R11,0(R7)               STORE IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKSECND CLC   PRMSECND,HEXZERO        SECONDARY SPACE ENTERED?
         BE    CHKRLSE                 NO
         MVC   SCNDSPAC,PRMSECND+1     MOVE TO TEXT UNIT
         MVI   SCNDSPAC,0              CLEAR HI-ORDER
         MVC   DALSECND(6),CALSECND    INITIALIZE TEXT UNIT
         LA    R11,DALSECND            @ TEXT UNIT
         ST    R11,0(R7)               STORE IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKRLSE  CLI   PRMRLSE,LOWVAL          RLSE SPECIFIED?
         BE    CHKDIR                  NO
         MVC   DALRLSE(4),CALRLSE      INITIALIZE TEXT UNIT
         LA    R11,DALRLSE             YES, GET @ TEXT UNIT
         ST    R11,0(R7)               SET POINTER IN LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKDIR   CLC   PRMDIR,HEXZERO          DIRECTORY BLOCKS ENTERED?
         BE    CHKEXPDT                NO
         MVC   DIRBLK,PRMDIR+1         YES, MOVE TO TEXT UNIT
         MVI   DIRBLK,0                CLEAR HI-ORDER BYTE
         MVC   DALDIR(6),CALDIR        INITIALIZE TEXT UNIT
         LA    R11,DALDIR              @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKEXPDT CLI   PRMEXPDT,LOWVAL         EXPIRATION DATE ENTERED?
         BE    CHKBLKLN                NO
         CLI   PRMEX100,LOWVAL         EXPIRATION CENTURY ENTERED?
         BE    SHORTEXP                NO
         MVC   XYYYYDDD,PRMEX100       YES, MOVE YYYYDDD
         MVC   DALEXPDL(6),CALEXPDL    INITIALIZE TEXT UNIT
         LA    R11,DALEXPDL            @ TEXT UNIT
         B     CHAINXD                 CONTINUE
SHORTEXP MVC   EXPYYDDD,PRMEXPDT       MOVE YYDDD
         MVC   DALEXPDT(6),CALEXPDT    INITIALIZE TEXT UNIT
         LA    R11,DALEXPDT            @ TEXT UNIT
CHAINXD  ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKBLKLN CLC   PRMBLKLN,HEXZERO        WAS AVG BLOCKSIZE ENTERED?
         BE    CHKSPFRM                NO
         MVC   AVGBLKLN,PRMBLKLN+1     YES, MOVE VALUE
         MVC   DALBLKLN(6),CALBLKLN    INITIALIZE TEXT UNIT
         LA    R11,DALBLKLN            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKSPFRM CLC   PRMSPFRM,HEXZERO        WAS SPACE FORM SPECIFIED?
         BE    CHKROUND                NO
         MVC   SPFRMTYP,PRMSPFRM+1     YES, MOVE VALUE
         MVC   DALSPFRM(6),CALSPFRM    INITIALIZE TEXT UNIT
         LA    R11,DALSPFRM            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKROUND CLI   PRMROUND,LOWVAL         WAS SPACE ROUNDING SPECIFIED?
         BE    CHKPRIVT                NO
         MVC   DALROUND(4),CALROUND    INITIALIZE TEXT UNIT
         LA    R11,DALROUND            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKPRIVT CLI   PRMPRIVT,LOWVAL         WAS SPACE ROUNDING SPECIFIED?
         BE    CHKVLSEQ                NO
         MVC   DALPRIVT(4),CALPRIVT    INITIALIZE TEXT UNIT
         LA    R11,DALPRIVT            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKVLSEQ CLC   PRMVLSEQ,HEXZERO        WAS VOLUME SEQUENCE ENTERED?
         BE    CHKVLCNT                NO
         MVC   VOLSEQNO,PRMVLSEQ       YES, MOVE VALUE
         MVC   DALVLSEQ(6),CALVLSEQ    INITIALIZE TEXT UNIT
         LA    R11,DALVLSEQ            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKVLCNT CLC   PRMVLCNT,HEXZERO        WAS VOLUME COUNT ENTERED?
         BE    CHKVLRDS                NO
         MVC   VOLCNT,PRMVLCNT+1       YES, MOVE VALUE
         MVC   DALVLCNT(6),CALVLCNT    INITIALIZE TEXT UNIT
         LA    R11,DALVLCNT            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKVLRDS CLI   PRMVLCNT,LOWVAL         WAS VOL=REF=DSNAME ENTERED?
         BE    CHKPARAL                NO
         MVC   VRDSNAME,PRMVLRDS       YES, MOVE VALUE
         LA    R12,L'VRDSNAME          MAX FIELD LENGTH
         MVC   DALVLRDS(6),CALVLRDS    INITIALIZE TEXT UNIT
         LA    R11,DALVLRDS            @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
CHKPARAL CLI   PRMPARAL,LOWVAL         WAS PARALLEL MOUNT REQUESTED?
         BE    CHKSPGNM                NO
         MVC   DALPARAL(4),CALPARAL    INITIALIZE TEXT UNIT
         LA    R11,DALPARAL            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKSPGNM CLI   PRMSPGNM,LOWVAL         WAS SYSOUT PROGRAM ENTERED?
         BE    CHKSFMNO                NO
         MVC   SPGMNAME,PRMSPGNM       YES, MOVE VALUE
         LA    R12,L'SPGMNAME          MAX FIELD LENGTH
         MVC   DALSPGNM(6),CALSPGNM    INITIALIZE TEXT UNIT
         LA    R11,DALSPGNM            @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
CHKSFMNO CLI   PRMSFMNO,LOWVAL         WAS SYSOUT FORM NUMBER ENTERED?
         BE    CHKOUTLM                NO
         MVC   SYSFRMNO,PRMSFMNO       YES, MOVE VALUE
         LA    R12,L'SYSFRMNO          MAX FIELD LENGTH
         MVC   DALSFMNO(6),CALSFMNO    INITIALIZE TEXT UNIT
         LA    R11,DALSFMNO            @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
CHKOUTLM CLC   PRMOUTLM,HEXZERO        WAS OUTLIM ENTERED?
         BE    CHKCOPYS                NO
         MVC   OUTLIMNO,PRMOUTLM+1     YES, MOVE VALUE
         MVC   DALOUTLM(6),CALOUTLM    INITIALIZE TEXT UNIT
         LA    R11,DALOUTLM            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKCOPYS CLC   PRMCOPYS,HEXZERO        WAS SYSOUT COPIES ENTERED?
         BE    CHKPASPR                NO
         MVC   SYSOCPYS,PRMCOPYS+1     YES, MOVE VALUE
         MVC   DALCOPYS(6),CALCOPYS    INITIALIZE TEXT UNIT
         LA    R11,DALCOPYS            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKPASPR CLC   PRMPASPR,HEXZERO        WAS PASSWORD PROTECTION ENTERED?
         BE    CHKINOUT                NO
         MVC   PSWDPROT,PRMPASPR+1     YES, MOVE VALUE
         MVC   DALPASPR(6),CALPASPR    INITIALIZE TEXT UNIT
         LA    R11,DALPASPR            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKINOUT CLC   PRMINOUT,HEXZERO        WAS INPUT/OUTPUT ONLY ENTERED?
         BE    CHKFCBIM                NO
         MVC   INOTONLY,PRMINOUT+1     YES, MOVE VALUE
         MVC   DALINOUT(6),CALINOUT    INITIALIZE TEXT UNIT
         LA    R11,DALINOUT            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKFCBIM CLI   PRMFCBIM,LOWVAL         WAS FCB IMAGE NAME ENTERED?
         BE    CHKFCBAV                NO
         MVC   FCBNAME,PRMFCBIM        YES, MOVE VALUE
         LA    R12,L'FCBNAME           MAX FIELD LENGTH
         MVC   DALFCBIM(6),CALFCBIM    INITIALIZE TEXT UNIT
         LA    R11,DALFCBIM            @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
CHKFCBAV CLC   PRMFCBAV,HEXZERO        WAS INPUT/OUTPUT ONLY ENTERED?
         BE    CHKTERM                 NO
         MVC   ALGNVERF,PRMFCBAV+1     YES, MOVE VALUE
         MVC   DALFCBAV(6),CALFCBAV    INITIALIZE TEXT UNIT
         LA    R11,DALFCBAV            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKTERM  CLI   PRMTERM,LOWVAL          WAS TERM=TS REQUESTED?
         BE    CHKUCS                  NO
         MVC   DALTERM(4),CALTERM      INITIALIZE TEXT UNIT
         LA    R11,DALTERM             @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKUCS   CLI   PRMUCS,LOWVAL           WAS UCS IMAGE ENTERED?
         BE    CHKUFOLD                NO
         MVC   UCSNAME,PRMUCS          YES, MOVE VALUE
         LA    R12,L'UCSNAME           MAX FIELD LENGTH
         MVC   DALUCS(6),CALUCS        INITIALIZE TEXT UNIT
         LA    R11,DALUCS              @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
CHKUFOLD CLI   PRMUFOLD,LOWVAL         WAS FOLD REQUESTED?
         BE    CHKUVRFY                NO
         MVC   DALUFOLD(4),CALUFOLD    INITIALIZE TEXT UNIT
         LA    R11,DALUFOLD            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKUVRFY CLI   PRMUVRFY,LOWVAL         WAS VERIFY CHAIN REQUESTED?
         BE    CHKDCBDS                NO
         MVC   DALUVRFY(4),CALUVRFY    INITIALIZE TEXT UNIT
         LA    R11,DALUVRFY            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKDCBDS CLI   PRMDCBDS,LOWVAL         WAS DCB MODEL DSNAME ENTERED?
         BE    CHKDCBDD                NO
         MVC   DCBDSNAM,PRMDCBDS       YES, MOVE VALUE
         LA    R12,L'DCBDSNAM          MAX FIELD LENGTH
         MVC   DALDCBDS(6),CALDCBDS    INITIALIZE TEXT UNIT
         LA    R11,DALDCBDS            @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
CHKDCBDD CLI   PRMDCBDD,LOWVAL         WAS DCB DDNAME REF ENTERED?
         BE    CHKEROPT                NO
         MVC   DCBDDNAM,PRMDCBDD       YES, MOVE VALUE
         LA    R12,L'DCBDDNAM          MAX FIELD LENGTH
         MVC   DALDCBDD(6),CALDCBDD    INITIALIZE TEXT UNIT
         LA    R11,DALDCBDD            @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
CHKEROPT CLC   PRMEROPT,HEXZERO        WAS EROPT  ENTERED?
         BE    CHKNCP                  NO
         MVC   ERROPTN,PRMEROPT+1      YES, MOVE VALUE
         MVC   DALEROPT(6),CALEROPT    INITIALIZE TEXT UNITTI
         LA    R11,DALEROPT            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKNCP   CLC   PRMNCP,HEXZERO          WAS NCP ENTERED?
         BE    CHKOPTCD                NO
         MVC   NBRDWRT,PRMNCP+1        YES, MOVE VALUE
         MVC   DALNCP(6),CALNCP        INITIALIZE TEXT UNIT
         LA    R11,DALNCP              @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKOPTCD CLC   PRMOPTCD,HEXZERO        WAS OPTION CODE  ENTERED?
         BE    CHKPRTSP                NO
         MVC   OPTNCODE,PRMOPTCD+1     YES, MOVE VALUE
         MVC   DALOPTCD(6),CALOPTCD    INITIALIZE TEXT UNIT
         LA    R11,DALOPTCD            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKPRTSP CLC   PRMPRTSP,HEXZERO        WAS PRINTER SPACING SPECIFIED?
         BE    CHKTRTCH                NO
         MVC   PRTLNSPC,PRMPRTSP+1     YES, MOVE VALUE
         MVC   DALPRTSP(6),CALPRTSP    INITIALIZE TEXT UNIT
         LA    R11,DALPRTSP            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKTRTCH CLC   PRMTRTCH,HEXZERO        WAS TRTCH SPECIFIED?
         BE    CHKPASSW                NO
         MVC   TRTCH7,PRMTRTCH+1       YES, MOVE VALUE
         MVC   DALTRTCH(6),CALTRTCH    INITIALIZE TEXT UNIT
         LA    R11,DALTRTCH            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKPASSW CLI   PRMPASSW,LOWVAL         WAS PASSWORD VALUE ENTERED?
         BE    CHKDIAGN                NO
         MVC   PASSWORD,PRMPASSW       YES, MOVE VALUE
         LA    R12,L'PASSWORD          MAX FIELD LENGTH
         MVC   DALPASSW(6),CALPASSW    INITIALIZE TEXT UNIT
         LA    R11,DALPASSW            @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
CHKDIAGN CLI   PRMDIAGN,LOWVAL         WAS DIAGNS=TRACE ENTERED?
         BE    CHKSUSER                NO
         MVC   DALDIAGN(4),CALDIAGN    INITIALIZE TEXT UNIT
         LA    R11,DALDIAGN            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKSUSER CLI   PRMSUSER,LOWVAL         WAS SYSOUT REMOTE DEST ENTERED?
         BE    CHKSHOLD                NO
         MVC   SYSWSNAM,PRMSUSER       YES, MOVE VALUE
         LA    R12,L'SYSWSNAM          MAX FIELD LENGTH
         MVC   DALSUSER(6),CALSUSER    INITIALIZE TEXT UNIT
         LA    R11,DALSUSER            @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
CHKSHOLD CLI   PRMSHOLD,LOWVAL         WAS SYSOUT HOLD=YES ENTERED?
         BE    CHKUSRID                NO
         MVC   DALSHOLD(4),CALSHOLD    INITIALIZE TEXT UNIT
         LA    R11,DALSHOLD            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKUSRID CLI   PRMUSRID,LOWVAL         WAS SYSOUT USERID ENTERED?
         BE    CHKBURST                NO
         MVC   USERID,PRMUSRID         YES, MOVE VALUE
         LA    R12,L'USERID            MAX FIELD LENGTH
         MVC   DALUSRID(6),CALUSRID    INITIALIZE TEXT UNIT
         LA    R11,DALUSRID            @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
CHKBURST CLC   PRMBURST,HEXZERO        WAS BURST PARAMETER ENTERED?
         BE    CHKCHARS                NO
         MVC   BURSTSTK,PRMBURST+1     YES, MOVE VALUE
         MVC   DALBURST(6),CALBURST    INITIALIZE TEXT UNIT
         LA    R11,DALBURST            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKCHARS CLI   PRMCHARS,LOWVAL         WAS CHARS SPECIFIED?
         BE    CHKCOPYG                NO
         LA    R12,PRMCHARS            POINT TO 1ST INPUT FIELD
         LA    R11,4                   MAX NUMBER FIELDS
         MVC   DALCHARS(4),CALCHARS    INITIALIZE TEXT UNIT
         LA    R10,DALCHARS            POINT TO VOL SER TEXT UNIT
         LA    R8,4                    MAX LENGTH, EACH TEXT UNIT
         BAS   R9,GRPVRBL              GROUP VARIABLE NUMBER FIELDS
CHKCOPYG CLC   PRMCOPYG,HEXZERO        WAS COPYGROUP ENTERED?
         BE    CHKFFORM                NO
         LA    R12,PRMCOPYG            POINT TO 1ST INPUT FIELD
         LA    R11,8                   MAX NUMBER FIELDS
         LA    R10,GRPCOPYS            POINT TO 1ST OUT TEXT UNIT
         XC    DALCOPYN,DALCOPYN       INITIALIZE FIELD COUNTER
CKANYGP  CLC   0(2,R12),HEXZERO        ANY MORE COPY GROUPS?
         BE    CHAINGC                 NO
         ICM   R1,3,DALCOPYN           ADD 1
         LA    R1,1(R1)                   TO NUMBER
         STCM  R1,3,DALCOPYN                  COPY GROUP FIELDS
         MVC   0(2,R10),HEXONE         SET COPY GROUP FIELD LENGTH
         MVC   2(1,R10),1(R12)         MOVE USER NBR COPIES
         LA    R12,2(R12)              TO NEXT INPUT FIELD
         LA    R10,3(R10)              TO NEXT OUTPUT FIELD
         BCT   R11,CKANYGP             LOOP THRU FIELD
CHAINGC  MVC   DALCOPYG(2),CALCOPYG    INITIALIZE TEXT UNIT
         LA    R11,DALCOPYG            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKFFORM CLI   PRMFFORM,LOWVAL         WAS FLASH FORM NAME ENTERED?
         BE    CHKFCNT                 NO
         MVC   FORMNAME,PRMFFORM       YES, MOVE VALUE
         LA    R12,L'FORMNAME          MAX FIELD LENGTH
         MVC   DALFFORM(6),CALFFORM    INITIALIZE TEXT UNIT
         LA    R11,DALFFORM            @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
CHKFCNT  CLC   PRMFCNT,HEXZERO         WAS FLASH OVERLAY COUNT GIVEN?
         BE    CHKMMOD                 NO
         MVC   FORMCNT,PRMFCNT+1       YES, MOVE VALUE
         MVC   DALFCNT(6),CALFCNT      INITIALIZE TEXT UNIT
         LA    R11,DALFCNT             @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKMMOD  CLI   PRMMMOD,LOWVAL          WAS MODIFY MODULE NAME GIVEN?
         BE    CHKMTRC                 NO
         MVC   MODULNAM,PRMMMOD        YES, MOVE VALUE
         LA    R12,L'MODULNAM          MAX FIELD LENGTH
         MVC   DALMMOD(6),CALMMOD      INITIALIZE TEXT UNIT
         LA    R11,DALMMOD             @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
CHKMTRC  CLC   PRMMTRC,HEXZERO         WAS MODIFY TABLE REF ENTERED?
         BE    CHKDEFER                NO
         MVC   MODTBLRF,PRMMTRC+1      YES, MOVE VALUE
         MVC   DALMTRC(6),CALMTRC      INITIALIZE TEXT UNIT
         LA    R11,DALMTRC             @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKDEFER CLI   PRMDEFER,LOWVAL         WAS DEFER MOUNT REQUESTED?
         BE    CHKOUTPT                NO
         MVC   DALDEFER(4),CALDEFER    INITIALIZE TEXT UNIT
         LA    R11,DALDEFER            @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKOUTPT CLI   PRMOUTPT,LOWVAL         WAS OUTPUT STATEMENT REFERENCED?
         BE    CHKCNTL                 NO
         LA    R12,PRMOUTPT            POINT TO 1ST INPUT FIELD
         LA    R11,8                   MAX NUMBER FIELDS
         MVC   DALOUTPT(3),CALOUTPT    INITIALIZE TEXT UNIT
         LA    R10,DALOUTPT            POINT TO VOL SER TEXT UNIT
         LA    R8,26                   MAX LENGTH, EACH TEXT UNIT
         BAS   R9,GRPVRBL              GROUP VARIABLE NUMBER FIELDS
CHKCNTL  CLI   PRMCNTL,LOWVAL          WAS CNTL STATEMENT REFERENCED?
         BE    CHKSTCL                 NO
         MVC   CNTLRFNC,PRMCNTL        YES, MOVE VALUE
         LA    R12,L'CNTLRFNC          MAX FIELD LENGTH
         MVC   DALCNTL(6),CALCNTL      INITIALIZE TEXT UNIT
         LA    R11,DALCNTL             @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
CHKSTCL  CLI   PRMSTCL,LOWVAL          WAS STORAGE CLASS ENTERED?
         BE    CHKMGCL                 NO
         MVC   STORCLAS,PRMSTCL        YES, MOVE VALUE
         LA    R12,L'STORCLAS          MAX FIELD LENGTH
         MVC   DALSTCL(6),CALSTCL      INITIALIZE TEXT UNIT
         LA    R11,DALSTCL             @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
CHKMGCL  CLI   PRMMGCL,LOWVAL          WAS MANAGEMENT CLASS ENTERED?
         BE    CHKDACL                 NO
         MVC   MGMTCLAS,PRMMGCL        YES, MOVE VALUE
         LA    R12,L'MGMTCLAS          MAX FIELD LENGTH
         MVC   DALMGCL(6),CALMGCL      INITIALIZE TEXT UNIT
         LA    R11,DALMGCL             @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
CHKDACL  CLI   PRMDACL,LOWVAL          WAS DATA CLASS SPECIFIED?
         BE    CHKRECO                 NO
         MVC   DATACLAS,PRMDACL        YES, MOVE VALUE
         LA    R12,L'DATACLAS          MAX FIELD LENGTH
         MVC   DALDACL(6),CALDACL      INITIALIZE TEXT UNIT
         LA    R11,DALDACL             @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
CHKRECO  CLC   PRMRECO,HEXZERO         WAS RECORD ORGANIZATION GIVEN?
         BE    CHKKEYO                 NO
         MVC   RECDORGN,PRMRECO+1      YES, MOVE VALUE
         MVC   DALRECO(6),CALRECO      INITIALIZE TEXT UNIT
         LA    R11,DALRECO             @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKKEYO  CLC   PRMKEYO,HEXZERO         WAS KEY OFFSET ENTERED?
         BE    CHKREFD                 NO
         MVC   KEYOFST,PRMKEYO+1       YES, MOVE VALUE
         MVC   DALKEYO(6),CALKEYO      INITIALIZE TEXT UNIT
         LA    R11,DALKEYO             @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKREFD  CLI   PRMREFD,LOWVAL          WAS REFDD SPECIFIED?
         BE    CHKLIKE                 NO
         MVC   DDREF,PRMREFD           YES, MOVE VALUE
         LA    R12,L'DDREF             MAX FIELD LENGTH
         MVC   DALREFD(6),CALREFD      INITIALIZE TEXT UNIT
         LA    R11,DALREFD             @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
CHKLIKE  CLI   PRMLIKE,LOWVAL          WAS LIKE DSNAME ENTERED?
         BE    CHKAVGR                 NO
         MVC   LIKEDSNM,PRMLIKE        YES, MOVE VALUE
         LA    R12,L'LIKEDSNM          MAX FIELD LENGTH
         MVC   DALLIKE(6),CALLIKE      INITIALIZE TEXT UNIT
         LA    R11,DALLIKE             @ TEXT UNIT
         BAS   R9,UNITADD              FINISH CONNECTION
CHKAVGR  CLC   PRMAVGR,HEXZERO         WAS AVG RECORD UNITS ENTERED?
         BE    CHKDSNT                 NO
         MVC   ALOCUNIT,PRMAVGR+1      YES, MOVE VALUE
         MVC   DALAVGR(6),CALAVGR      INITIALIZE TEXT UNIT
         LA    R11,DALAVGR             @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
CHKDSNT  CLC   PRMDSNT,HEXZERO         WAS DSNTYPE SPECIFIED?
         BE    SETPTND                 NO
         MVC   DSTYPE,PRMDSNT+1        YES, MOVE VALUE
         MVC   DALDSNT(6),CALDSNT      INITIALIZE TEXT UNIT
         LA    R11,DALDSNT             @ TEXT UNIT
         ST    R11,0(R7)               SET IN POINTER LIST
         LA    R7,4(R7)                TO NEXT POINTER
SETPTND  SH    R7,H4                   BACK UP TO LAST POINTER SET
         OI    0(R7),X'80'             SET LAST POINTER INDIC
         XC    S99ERROR,S99ERROR       CLEAR ERROR RETURN FIELD
         XC    S99INFO,S99INFO         CLEAR INFO RETURN CODE
         MVI   S99VERB,1               ALLOCATE BY DSNAME
         LA    R1,S99RBPTR             POINT TO PARM POINTER
         DYNALLOC ,                    ALLOCATE DYNAMICALLY
         MVI   RETCODE,C'0'            CLEAR HI-ORDER BYTE
         STC   R15,RETCODE+1           STORE RETURN CODE
         OI    RETCODE+1,C'0'          MAKE IT NUMERIC
         CLI   RETCODE+1,X'FC'         WAS IT 12?
         BNE   CKERRCOD                NO
         MVC   RETCODE,CHAR12          YES
CKERRCOD UNPK  WORK5,S99ERROR(3)       UNPACK TO CONVERT
         TR    WORK5,TRCHAR-C'0'       TRANSLATE TO PRINTABLE
         MVC   ERRRET,WORK5            MOVE TO RETURN PARM
CKINFO   UNPK  WORK5,S99INFO(3)        UNPACK TO CONVERT
         TR    WORK5,TRCHAR-C'0'       TRANSLATE TO PRINTABLE
         MVC   INFORET,WORK5           MOVE TO RETURN PARM
RETURN   CLC   RETCODE,CHAR00          SUCCESSFUL?
         BNE   ERRORDYN                NO
         CLC   INFORET,CHARZERO        ANY INFO RETURN CODE?
         BE    CHKERRET                NO
         LA    R12,INFOMSGS            YES, POINT TO INFO TABLE
CKINFND  CLI   0(R12),X'FF'            END OF TABLE?
         BE    GOTINFO                 YES
         CLC   INFORET,0(R12)          FOUND INFO CODE IN TABLE?
         BE    GOTINFO                 YES
         LA    R12,71(R12)             NO, STEP TO NEXT ENTRY
         B     CKINFND                 LOOP TO FIND ENTRY
GOTINFO  MVC   INFOMSG(67),4(R12)      SEND BACK INFO MESSAGE
CHKERRET CLC   ERRRET,CHARZERO         ANY ERROR RETURN CODE?
         BE    GOBACK                  NO, EXIT TO CALLER
ERRORDYN LA    R12,ERRMSGS             POINT TO ERROR TABLE
ERRCKND  CLI   0(R12),X'FF'            AT END OF TABLE?
         BE    GOTERR                  YES
         CLC   ERRRET,0(R12)           NO, FOUND ERROR REASON CODE?
         BE    GOTERR                  YES
         LA    R12,71(R12)             NO, ADVANCE TO NEXT ENTRY
         B     ERRCKND                 CONTINUE TABLE SEARCH
GOTERR   MVC   ERRMSG(67),4(R12)       MOVE ERROR MESSAGE
         LA    R12,TUERRTBL            POINT TO TEXT UNIT ERROR TABLE
TUCKND   CLI   0(R12),X'FF'            END OF TABLE?
         BE    GOBACK                  YES, NOT A TEXTUNIT ERROR
         CLC   ERRRET,0(R12)           THIS A TEXT UNIT ERROR CODE?
         BE    TUSRCH                  YES
         LA    R12,4(R12)              NO, ADVANCE TO NEXT ENTRY
         B     TUCKND                  CONTINUE SEARCH
TUSRCH   L     R12,TEXTUNTA            POINT TO TEXTUNIT TABLE
TXUNEND  CLI   0(R12),X'FF'            END OF TABLE?
         BE    GOTTU                   YES
         CLC   INFORET,0(R12)          NO, FOUND THE TEXT UNIT?
         BE    GOTTU                   YES
         LA    R12,71(R12)             STEP TO NEXT ENTRY
         B     TXUNEND                 CONTINUE SEARCH
GOTTU    MVC   INFOMSG,0(R12)          SEND BACK TEXT UNIT DESCRIPTION
GOBACK   LR    R1,R13                  MY GOTTEN AREA ADDR TO BE FREED
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         FREEMAIN R,A=(1),LV=ENDGOTTN-GOTNAREA FREE GOTTEN STORAGE
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGS
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN TO CALLER
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* VOLUME SERIAL NUMBER FEEDBACK. FIRST, LOCATE THE TIOT VIA THE CVT,
* CVTTCBP, AND TCB. HUNT THRU THE TIOT DD ENTRIES FOR THE DESIRED
* DDNAME. WHEN FOUND, GET UCB ADDRESS FROM THE TIOT DD ENTRY, AND MOVE
* VOLUME SERIAL NUMBER FROM THE UCB TO THE PARM FIELD FOR THE CALLER.
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
VOLFEED  MVC   PRMVLSER,BLANX          CLEAR IN CASE NOT FOUND
         L     R1,16                   @ CVT
         L     R1,0(R1)                PICK UP CVTTCBP
         L     R1,0(R1)                @ TCB
         L     R1,12(R1)               @ TIOT
         LA    R1,24(R1)               @ 1SDT TIOT DD ENTRY
VTCKEND  CLI   0(R1),0                 END OF TIOT?
         BE    RETURN                  YES, DNAME NOT FOUND
         CLC   4(8,R1),PRMDDNAM        FOUND THE DD ENTRY?
         BE    VTGOTDD                 YES
         SR    R2,R2                   CLEAR FOR INSERT
         IC    R2,0(R1)                THIS ENTRY LENGTH
         AR    R1,R2                   STEP TO NEXT DD ENTRY
         B     VTCKEND                 AND CONTINUE SEARCH
VTGOTDD  SR    R2,R2                   CLEAR FOR INSERT
         ICM   R2,7,17(R1)             @ UCB
         MVC   PRMVLSER,28(R2)         UCB VOLSER TO USER PARM
         B     GOBACK                  BACK TO CALLER
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* CHAIN TEXT UNIT TO DDDYNAM PARAMETER LIST BY PLACING ITS' ADDRESS IN
* THE POINTER LIST. COMPUTE ACTUAL FIELD LENGTH BY SCANNING FROM RIGHT
* TO LEFT FOR THE FIRST NON-BLANK CHARACTER, AND PLACE ACTUAL LENGTH
* IN THE TEXT UNIT LENGTH FIELD. ON ENTRY, R11=ADDRESS OF THE TEXT
* R12=MAXIMUM FIELD LENGTH, AND R7=ADDRESS OF THE NEXT POINTER FIELD.
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
UNITADD  ST    R11,0(R7)               CHAIN TEXT UNIT
         LA    R7,4(R7)                STEP TO NEXT POINTER
         LA    R15,5(R12,R11)          @ END OF FIELD
CKRHE    CLI   0(R15),C' '             FOUND SOLID CHARACTER?
         BNE   SETLENG                 YES
         BCTR  R12,R0                  DEDUCT 1 FROM LENGTH
         BCTR  R15,R0                  BACK UP 1 BYTE IN FIELD
         CR    R15,R11                 AT BEGINNING OF FIELD?
         BNL   CKRHE                   NO, CONTINUE
SETLENG  STCM  R12,3,4(R11)            SET FIELD LENGTH
         BR    R9                      EXIT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* BUILD A STRING OF VARIABLE-SIZED CHARACTER TEXT UNITS. ON ENTRY, R12*
* POINTS TO THE FIRST INCOMING FIELD, R11 CONTAINS THA MAXIMUM NUMBER *
* OF FIELDS, R8 CONTAINS THE LENGTH OF EACH INCOMING FIELD, AND R10   *
* POINTS TO THE BEGINNING OF THE OUTPUT TEXT UNIT. THE NUMBER OF TEXT *
* UNITS IS SET TO ZERO AND INCREMENTED BY ONE FOR EACH INCOMING FIELD *
* FOUND. EACH FIELD IS MOVED TO FOLLOW THE LAST FIELD, ITS LENGTH IS  *
* CALCULATED AND SET.                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
GRPVRBL  STM   R8,R12,GVREGS           SAVE INCOMING REGS
         SR    R1,R1                   CLEAR COUNTER
CKMPTY   CLI   0(R12),LOWVAL           THIS FIELD EMPTY?
         BE    CKFULL                  YES
         LA    R1,1(R1)                NO, INCREMENT COUNTER
         AR    R12,R8                  STEP TO NEXT FIELD
         BCT   R11,CKMPTY              LOOP TO COUNT
CKFULL   LTR   R1,R1                   ANY ENTRIES FILLED?
         BZ    GVXIT                   NO, JUST RETURN
         STCM  R1,3,2(R10)             SET NBR UNITS (S99TUNUM)
         LM    R8,R12,GVREGS           RESTORE REG VALUES ON ENTRY
         LA    R10,4(R10)              POINT TO 1ST S99TULEN-S99TUPRM
GVMOVE   CLI   0(R12),LOWVAL           ANY MORE INPUT DATA?
         BE    GVCHAIN                 NO
         LR    R2,R8                   COMPUTE INCOMING
         BCTR  R2,0                       LENGTH CODE
         EX    R2,MVTUPRM              MOVE INCOMING TO S99TUPRM
         LA    R1,1(R8,R10)            POINT TO END OF S99TUPRM
         LR    R2,R8                   GET INCOMING FIELD LENGTH
GVGETRHE CLI   0(R1),C' '              AT A SOLID CHARACTER?
         BH    GVSOLID                 YES
         BCTR  R1,0                    NO, BACK UP 1 IN S99TUPRM
         BCT   R2,GVGETRHE             LOOP TO FIND LAST SOLID
GVSOLID  STCM  R2,3,0(R10)             SET S99TULEN, THIS FIELD
         LA    R10,1(R1)               POINT TO NEXT S99TULEN
         AR    R12,R8                  POINT TO NEXT INCOMING FIELD
         BCT   R11,GVMOVE              GO PROCESS NEXT FIELD
GVCHAIN  L     R11,GVR10               POINT TO TEXT UNIT
         ST    R11,0(R7)               CHAIN THE TEXT UNIT
         LA    R7,4(R7)                STEP TO NEXT POINTER
GVXIT    LM    R8,R12,GVREGS           RESTORE REGS ON ENTRY
         BR    R9                      RETURN
MVTUPRM  MVC   2(1,R10),0(R12)         EXECUTED MOVE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*       CONSTANTS
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
LOWVAL   EQU   0                       EQUATE TO BINARY ZERO
CHARZERO DC    CL4'0000'               CONSTANT ZONED ZEROS
HEXZERO  DC    F'0'                    HEX ZEROS
TEXTUNTA DC    A(TEXTUNIT)
BLANX    DC    CL132' '                CONSTANT BLANKS
DUMMLIT  DC    CL6'DUMMY '
HEXONE   DC    X'0001'
H4       DC    H'4'
CHAR12   DC    C'12'
CHAR00   DC    C'00'
SYSOULIT DC    CL7'SYSOUT='
MPTPRN   DC    C'(,)'
TRCHAR   DC    C'0123456789ABCDEF'     TRANSLATE TABLE
TUERRTBL DS    0CL4                    TABLE OF TEXT UNIT ERROR CODES
         DC    CL4'035C'
         DC    CL4'0360'
         DC    CL4'0374'
         DC    CL4'0378'
         DC    CL4'037C'
         DC    CL4'0380'
         DC    CL4'0384'
         DC    XL4'FFFFFFFF'
*
S99CLEAR DC    A(0)                    POINTER TO PARAMETER BLOCK
         DS    0XL20                   DDDYNAM PARAMETER BLOCK
         DC    AL1(20)                 LENGTH OF BLOCK
         DC    AL1(1)                  REQUEST CODE = 01
         DC    XL2'4000'               DO NOT USE EXISTING ALLOCATION
         DC    AL2(0)                  ERROR RETURN CODE
         DC    AL2(0)                  INFORMATION REASON CODE
         DC    A(0)                    POINTER TO POINTER LIST
         DC    A(0)                    RESERVED
         DC    A(0)                    FLAGS2
S99ENDCL EQU   *
*
CALDDNAM DC   XL2'0001',AL2(1),AL2(8) DDNAME SPECIFICATION
CALDSNAM DC    XL2'0002',AL2(1),AL2(44) DSNAME SPECIFICATION
CALMEMBR DC    XL2'0003',AL2(1),AL2(8) MEMBER/G000V00 SPECIFICATION
CALSTATS DC    XL2'0004',AL2(1),AL2(1) STATUS SPECIFICATION
CALNDISP DC    XL2'0005',AL2(1),AL2(1) NORMAL DISPOSITION SPECIFICATION
CALCDISP DC    XL2'0006',AL2(1),AL2(1) CONDITIONAL DISP SPECIFICATION
CALTRK   DC    XL2'0007',AL2(0)        SPACE TYPE: TRACK = 07
CALCYL   DC    XL2'0008',AL2(0)        SPACE TYPE: CYLINDER = 08
CALBLKLN DC    XL2'0009',AL2(1),AL2(3) SPACE TYPE: AVERAGE BLOCKS
CALPRIME DC    XL2'000A',AL2(1),AL2(3) PRIMARY SPACE SPECIFICATION
CALSECND DC    XL2'000B',AL2(1),AL2(3) SECONDARY SPACE AMOUNT SPEC
CALDIR   DC    XL2'000C',AL2(1),AL2(3) DIRECTORY BLOCKS SPECIFICATION
CALRLSE  DC    XL2'000D',AL2(0)        RLSE UNUSED SPACE SPECIFICATION
CALSPFRM DC    XL2'000E',AL2(1),AL2(1) SPACE FORM: ALX, MXIG, CONTIG
CALROUND DC    XL2'000F',AL2(0)        ROUND TO WHOLE CYLINDERS
CALVLSER DC    XL2'0010',AL2(6)        VOLUME SERIAL NUMBER SPEC
CALPRIVT DC    XL2'0011',AL2(0)        PRIVATE VOLUME SPECIFICATION
CALVLSEQ DC    XL2'0012',AL2(1),AL2(2) VOLUME SEQUENCE SPECIFICATION
CALVLCNT DC    XL2'0013',AL2(1),AL2(1) VOLUME COUNT SPECIFICATION
CALVLRDS DC    XL2'0014',AL2(1),AL2(44) VOLUME REFERENCE TO A DATASET
CALUNIT  DC    XL2'0015',AL2(1),AL2(8) UNIT SPECIFICATION
CALUNCNT DC    XL2'0016',AL2(1),AL2(1) UNIT COUNT SPECIFICATION
CALPARAL DC    XL2'0017',AL2(0)        PARALLEL MOUNT REQUEST
CALSYSOU DC    XL2'0018',AL2(1),AL2(1) SYSOUT CLASS SPECIFICATION
CALSPGNM DC    XL2'0019',AL2(1),AL2(8) SYSOUT PROGRAM NAME SPEC
CALSFMNO DC    XL2'001A',AL2(1),AL2(4) SYSOUT FORM NUMBER SPEC
CALOUTLM DC    XL2'001B',AL2(1),AL2(3) OUTPUT LIMIT SPECIFICATION
CALCLOSE DC    XL2'001C',AL2(0)        FREE=CLOSE SPECIFICATION
CALCOPYS DC    XL2'001D',AL2(1),AL2(1) SYSOUT DATASET COPIES SPEC
CALLABEL DC    XL2'001E',AL2(1),AL2(1) LABEL TYPE SPECIFICATION
CALDSSEQ DC    XL2'001F',AL2(1),AL2(2) DATASET SEQUENCE NBR SPEC
CALPASPR DC    XL2'0020',AL2(1),AL2(1) PASSWORD PROTECTION SPEC
CALINOUT DC    XL2'0021',AL2(1),AL2(1) INPUT/OUTPUT ONLY SPEC
CALEXPDT DC    XL2'0022',AL2(1),AL2(5) YYDDD EXPIRATION DATE SPEC
CALRETPD DC    XL2'0023',AL2(1),AL2(2) RETENTION PERIOD SPECIFICATION
CALDUMMY DC    XL2'0024',AL2(0)        DUMMY DATASET SPECIFICATION
CALFCBIM DC    XL2'0025',AL2(1),AL2(4) FCB IMAGE SPECIFICATION
CALFCBAV DC    XL2'0026',AL2(1),AL2(1) FCB ALIGN/VERIFY SPECIFICATION
CALTERM  DC    XL2'0028',AL2(0)        USE TSO TERMINAL AS I/O DEVICE
CALUCS   DC    XL2'0029',AL2(1),AL2(4) UCS SPECIFICATION
CALUFOLD DC    XL2'002A',AL2(0)        FOLD MODE SPECIFICATION
CALUVRFY DC    XL2'002B',AL2(0)        TRAIN/CHAIN MOUNT VERIFY SPEC
CALDCBDS DC    XL2'002C',AL2(1),AL2(44) DCB REF TO A DSNAME SPEC
CALDCBDD DC    XL2'002D',AL2(1),AL2(26) DCB REFERENCE TO A DDNAME
CALBLKSZ DC    XL2'0030',AL2(1),AL2(2) BLOCK SIZE SPECIFICATION
CALBUFNO DC    XL2'0034',AL2(1),AL2(1) NUMBER BUFFERS SPECIFICATION
CALDEN   DC    XL2'003B',AL2(1),AL2(1) TAPE DENSITY SPECIFICATION
CALDSORG DC    XL2'003C',AL2(1),AL2(2) DSORG SPECIFICATION
CALEROPT DC    XL2'003D',AL2(1),AL2(1) ERROR OPTION SPECIFICATION
CALKYLEN DC    XL2'0040',AL2(1),AL2(1) KEY LENGTH SPECIFICATION
CALLRECL DC    XL2'0042',AL2(1),AL2(2) LRECL SPECIFICATION
CALNCP   DC    XL2'0044',AL2(1),AL2(1) NCP SPECIFICATION
CALOPTCD DC    XL2'0045',AL2(1),AL2(1) OPTCD SPECIFICATION
CALPRTSP DC    XL2'0048',AL2(1),AL2(1) PRTSP SPECIFICATION
CALRECFM DC    XL2'0049',AL2(1),AL2(1) RECORDING FORMAT SPEC
CALTRTCH DC    XL2'004F',AL2(1),AL2(1) 7-TRACK TAPE MODE SPEC
CALPASSW DC    XL2'0050',AL2(1),AL2(32) PASSWORD VALUE SPECIFICATION
CALDIAGN DC    XL2'0054',AL2(0)        DIAGNS=TRACE SPECIFICATION
CALSUSER DC    XL2'0058',AL2(1),AL2(8) SYSOUT REMOTE WORKSTATION SPEC
CALSHOLD DC    XL2'0059',AL2(0)        SYSOUT HOLD QUEUE SPECIFICATION
CALUSRID DC    XL2'0063',AL2(1),AL2(8) SYSOUT USERID SPECIFICATION
CALBURST DC    XL2'0064',AL2(1),AL2(1) BURST SPECIFICATION
CALCHARS DC    XL2'0065',AL2(4)        CHARACTER ARRANGEMENT SPEC
CALCOPYG DC    XL2'0066'               CHARACTER ARRANGEMENT SPEC
CALFFORM DC    XL2'0067',AL2(1),AL2(4) FLASH FORMS OVERLAY SPEC
CALFCNT  DC    XL2'0068',AL2(1),AL2(1) FLASH FORMS OVERLAY COUNT SPEC
CALMMOD  DC    XL2'0069',AL2(1),AL2(4) COPY MODIFICATION MODULE SPEC
CALMTRC  DC    XL2'006A',AL2(1),AL2(1) COPY MODULE TABLE REF SPEC
CALDEFER DC    XL2'006C',AL2(0)        DEFER SPECIFICATION
CALEXPDL DC    XL2'006D',AL2(1),AL2(7) YYYYDDD EXPIRATION DATE SPEC
CALOUTPT DC    XL2'8002',AL1(6)        OUTPUT STATEMENT REFERENCE SPEC
CALCNTL  DC    XL2'8003',AL2(1),AL2(26) CNTL SPECIFICATION
CALSTCL  DC    XL2'8004',AL2(1),AL2(8) STORAGE CLASS SPECIFICATION
CALMGCL  DC    XL2'8005',AL2(1),AL2(8) MANAGEMENT CLASS SPECIFICATION
CALDACL  DC    XL2'8006',AL2(1),AL2(8) DATA CLASS SPECIFICATION
CALRECO  DC    XL2'800B',AL2(1),AL2(1) RECORD ORGANIZATION SPEC
CALKEYO  DC    XL2'800C',AL2(1),AL2(1) KEY OFFSET SPECIFICATION
CALREFD  DC    XL2'800D',AL2(1),AL2(26) COPY DD SPECIFICATION
CALLIKE  DC    XL2'800F',AL2(1),AL2(44) COPY MODEL SPECIFICATION
CALAVGR  DC    XL2'8010',AL2(1),AL2(1) AVERAGE RECORD SPECIFICATION
CALDSNT  DC    XL2'8012',AL2(1),AL2(1) DATASET TYPE SPECIFICATION R
***********************************************************************
* INFORMATION BELOW IS EXTRACTED FROM THE IBM MANUALS:                *
*  GC28-1645 SPL: APPLICATION DEVELOPMENT GUIDE                       *
*            .CHAPTER 22, DYNAMIC ALLOCATION                          *
*  SC28-1875 TSO/E VERSION 2 PROGRAMMING SERVICES                     *
*            .CHAPTER 17, REASON CODES FROM DYNAMIC ALLOCATION        *
*            .CHAPTER 17, RETURN CODES FROM DAIR                      *
*  SC26-4567 DFP3.3 SYSTEM PROGRAMMING REFERENCE                      *
*            .CHAPTER 4, RETURN CODES FROM LOCATE                     *
*            .CHAPTER 2, DADSM CREATE RETURN CODES                    *
*            .CHAPTER 4, RETURN CODES FROM CATALOG                    *
*            .CHAPTER 2, RETURN CODES FROM OBTAIN                     *
*                                                                     *
* INFOMSGS CONTAINS INFORMATIONAL MESSAGES WHICH ARE NOT CONSIDERED   *
* TO BE TERMINATING ERRORS. THE DYNAMIC ALLOCATION/UNALLOCATION       *
* PROCESSED SUCCESSFULLY, HOWEVER AN UNUSUAL CONDITION OCCURRED.      *
*                                                                     *
* ERRMSGS THE DESCRIPTIONS OF TERMINATING ERRORS WHOSE CODES ARE      *
* RETURNED IN THE ERROR REASON CODE FIELD. IN THESE CASES, THE        *
* REQUESTED FUNCTION FAILED FOR THE REASON GIVEN. FOR ERROR REASON    *
* CODES 035C, 0360, 0374, 0378, 037C, 0380, AND 0384, THE TEXT UNIT   *
* KEY IS RETURNED IN THE INFORMATION REASON CODE FIELD FOR THE UNIT   *
* WHICH CAUSED THE ERROR. THE TEXTUNIT TABLE CONTAINS A DESCRIPTION OF*
* EACH OF THESE TEXT UNITS.                                           *
***********************************************************************
*
INFOMSGS DS    0CL71                   NON-TERMINATING MESSAGES
 DC CL71'0008OVERRIDING DISPOSITION IGNORED                           '
 DC CL71'0021NOT CATLG/UNCATLG: A CONTROL VOLUME IS REQUIRED.         '
 DC CL71'0022NOT CATLG/UNCATLG: ALREADY CATALOGED OR NOT FOUND.       '
 DC CL71'0023NOT CATLG/UNCATLG: SPECIFIED INDEX DOES NOT EXIST.       '
 DC CL71'0024NOT CATLG: NO SPACE IN CATALOG.                          '
 DC CL71'0025NOT CATLG/UNCATLG: NOT ENOUGH STORAGE AVAILABLE.         '
 DC CL71'0026NOT CATLG/UNCATLG: IMPROPERLY NAMED GDG.                 '
 DC CL71'0027NOT CATLG: TAPE DENSITY UNKNOWN.                         '
 DC CL71'0029NOT CATLG/UNCATLG: I/O ERROR IN THE CATALOG.             '
 DC CL71'0031NOT DELETED: EXPIRATION DATE HAS NOT YET OCCURRED.       '
 DC CL71'0034NOT DELETED: NO DEVICE AVAILABLE TO MOUNT VOLUME.        '
 DC CL71'0035NOT DELETED: NOT ENOUGH STORAGE AVAILABLE.               '
 DC CL71'0036NOT DELETED: PROBLEM MOUNTING OR DISMOUNTING VOLUMES.    '
 DC CL71'0038NOT DELETED: SCRATCH ROUTINE ERROR. SEE IEF283I MESSAGE. '
 DC CL71'0050NOT CATLG: DSNAME IS IN APOSTROPHES.                     '
 DC X'FFFFFFFF'           END OF TABLE
 DC CL67'**** UNKNOWN INFORMATION REASON CODE SEE GC28-1852 ****  '
*
ERRMSGS  DS    0CL73           DYNALLOC ERROR REASON CODE MESSAGES
 DC CL71'0204VIRTUAL STORAGE UNAVAILABLE.                             '
 DC CL71'020CREQUEST FOR EXCLUSIVE USE OF SHARED DS CANNOT BE HONORED.'
 DC CL71'0210THE DATA SET REQUESTED ALLOCATED TO ANOTHER JOB OR USER. '
 DC CL71'0214A DEVICE OF THE REQUESTED TYPE WAS NOT AVAILABLE.        '
 DC CL71'0218THE REQUIRED VOLUME WASNT MOUNTED ON AN AVAILABLE DEVICE.'
 DC CL71'021CINCORRECT UNIT NAME SUPPLIED.                            '
 DC CL71'0220REQUESTED VOLUME NOT AVAILABLE.                          '
 DC CL71'0224ELIGIBLE DEVICE TYPES DO NOT CONTAIN ENOUGH UNITS.       '
 DC CL71'0228SPECIFIED VOLUME OR UNIT IN USE BY SYSTEM.               '
 DC CL71'022CVOLUME MOUNTED ON INELIGIBLE PERMANENTLY RSDNT/RSVD UNIT.'
 DC CL71'0230PERMANENTLY RSDNT/RSVD VOLUME ON REQUIRED UNIT.          '
 DC CL71'0234MORE THAN 1 DEVICE REQUIRED FOR REQUEST FOR SPECIFIC UNIT'
 DC CL71'0238NO SPACE AVAILABLE IN TASK INPUT OUTPUT TABLE (TIOT).    '
 DC CL71'023CREQUIRED CATALOG NOT MOUNTED, USER UNAUTHORIZED TO MOUNT.'
 DC CL71'0240REQUESTED DEVICE IS A CONSOLE.                           '
 DC CL71'0244TELECOMM. DEVICE NOT ACCESSIBLE.                         '
 DC CL71'0248MSS VIRTUAL VOLUME CANNOT BE MOUNTED.                    '
 DC CL71'024COPERATING SYSTEM MANAGED RESOURCE UNAVAILABLE TO SUBSYSTM'
 DC CL71'0250SUBSYSTEM RESOURCE NOT AVAILABLE.                        '
 DC CL71'0254THE TIOT RESOURCE IS UNAVAILABLE AND CONDITIONAL ENQ REQ.'
 DC CL71'0258INSUFFICIENT NBR OF UNRESTRICTED DEVICES FOR REQUEST.    '
 DC CL71'025CREQUESTED DEVICE IS BOXED DUE TO I/O ERROR OR OPERATOR.  '
 DC CL71'0260UNIT DOES NOT MEET SPECIFIED STATUS REQUIREMENTS.        '
 DC CL71'0264INVALID REQUEST DUE TO CURRENT UNIT STATUS.              '
 DC CL71'0268TAPE DEVICE IS BROKEN.                                   '
 DC CL71'026CREQUEST REQUIRES MORE SMS-MANAGED VOLUMES THAN ELIGIBLE. '
 DC CL71'0270REQUEST NEEDS MORE NON-SMS-MANAGED VOLUMES THAN ELIGIBLE.'
 DC CL71'0304THE DDNAME WAS NOT SPECIFIED BY THE CALLING ROUTINE.     '
 DC CL71'0308THE DDNAME SPECIFIED BY THE CALLING ROUTINE WAS NOT FOUND'
 DC CL71'0314RESTORING DDNAMES WOULD RESULT IN DDNAME DUPLICATION.    '
 DC CL71'0318INVALID CHARACTERS ARE PRESENT IN THE DDNAME.            '
 DC CL71'031CINVALID CHARACTERS ARE PRESENT IN THE MEMBER NAME.       '
 DC CL71'0320INVALID CHARACTERS ARE PRESENT IN THE DSNAME.            '
 DC CL71'0324INVALID CHARACTERS ARE PRESENT IN THE SYSOUT PROGRAM NAME'
 DC CL71'0328INVALID CHARACTERS ARE PRESENT IN THE SYSOUT FORM NUMBER.'
 DC CL71'032CAN INVALID SYSOUT CLASS WAS SPECIFIED BY THE CALLER.     '
 DC CL71'0330A MEMBER NAME WAS SPECIFIED, BUT THE DATA SET IS NOT PDS.'
 DC CL71'0334THE SUPPLIED DATA SET NAME EXCEEDED 44 CHARACTERS IN LEN.'
 DC CL71'0338THE DATA SET DISPOSITION SPECIFIED IS INVALID.           '
 DC CL71'0358DELETE CANNOT BE SPECIFIED IF THE DATA SET IS SHARED.    '
 DC CL71'035CINVALID PARM SPECIFIED IN TEXT UNIT: ALL FUNCTIONS.      '
 DC CL71'0360INVALID KEY SPECIFIED IN TEST UNIT: ALL FUNCTIONS.       '
 DC CL71'0364JOBLIB/STEPLIB/JOBCAT/STEPCAT DDNAMES NOT ALLOWED.       '
 DC CL71'0368AUTHORIZED FUNCTION REQUESTED BY UNAUTHORIZED USER.      '
 DC CL71'036CINVALID PARAMETER LIST FORMAT: ALL FUNCTIONS.            '
 DC CL71'0374INVALID VERB SPECIFIED IN TEXT UNIT.                     '
 DC CL71'0378DUPLICATE KEY SPECIFIED IN TEXT UNIT.                    '
 DC CL71'037CINVALID LENGTH SPECIFIED IN TEXT UNIT.                   '
 DC CL71'0380MUTUALLY EXCLUSIVE PARAMETERS SPECIFIED.                 '
 DC CL71'0384MUTUALLY INCLUSIVE PARAMETER NOT SPECIFIED.              '
 DC CL71'0388REQUIRED PARAMETER NOT SPECIFIED.                        '
 DC CL71'038CDUPLICATE DDNAME SPECIFIED FOR CONCATENATION.            '
 DC CL71'0390GDG GROUP NAME SPECIFIED WITH REL. GDG NUMBER > 35 CHARS.'
 DC CL71'0394STATUS AND RELATIVE GENERATION NUMBER ARE INCOMPATIBLE.  '
 DC CL71'0398VOLUME SEQUENCE NUMBER EXCEEDS THE NUMBER OF VOLUMES.    '
 DC CL71'039CDEVICE TYPE AND VOLUME INCOMPATIBLE.                     '
 DC CL71'03A0SUBSYSTEM DETECTED AN INVALID PARAMETER.                 '
 DC CL71'03A4UNABLE TO PROTECT DATASET/VOLUME, CONFLICTING PARAMETER. '
 DC CL71'03A8REQUEST BLOCK EXTENSION HAS INVALID FORMAT.              '
 DC CL71'03ACTHE CPPL ADDRESS IS NOT SPECIFIED IN REQUEST BLOCK EXTNSN'
 DC CL71'0410SPECIFIED DDNAME IS ALLOCATED TO A DATA SET, CANNOT FREE.'
 DC CL71'0420THE SPECIFIED DDNAME IS ASSOCIATED WITH AN OPEN DATA SET.'
 DC CL71'0424DECONCATENATION WOULD RESULT IN DUPLICATE DDNAMES.       '
 DC CL71'0434DDNAME SPECIFIED IN DDNAME REQUEST IS CONVERTIBLE.       '
 DC CL71'0438SPECIFIED DDNAME NOT FOUND.                              '
 DC CL71'043CCOULD NOT DEALLOCATE ENOUGH RESOURCES FOR CONTROL LIMIT. '
 DC CL71'0440SPECIFIED DSNAME NOT FOUND.                              '
 DC CL71'0444RELATIVE ENTRY NUMBER SPECIFIED NOT FOUND.               '
 DC CL71'0448DATA SET ALREADY EXISTS FOR A NEW ALLOCATION.            '
 DC CL71'044CEXISTING DATA SET REQUESTED FOUND ALLOCATED AS DELETABLE.'
 DC CL71'0450REQUEST WOULD EXCEED 1635 CONCURRENT ALLOCATIONS MAX.    '
 DC CL71'0454DDNAME IN DCB REFERENCE NOT FOUND.                       '
 DC CL71'0458DSNAME IN DCB REFERENCE OR VOLUME REFERENCE IS GDG GROUP.'
 DC CL71'045CDSNAME TO DEALLOC IS PART OF A CONCATENATED GROUP.       '
 DC CL71'0460DSNAME TO DEALLOCATE NOT ASSOCIATED WITH SPECIFIED DDNAME'
 DC CL71'0464DSNAME TO BE DEALLOCATED IS A PRIVATE CATALOG.           '
 DC CL71'0468ERROR WHILE ALLOCATING OR OPENING A PRIVATE CATALOG.     '
 DC CL71'046CREMOTE WORKSTATION NOT DEFINED TO JOB ENTRY SUBSYSTEM.   '
 DC CL71'0470USER UNAUTHORIZED FOR SUBSYSTEM REQUEST.                 '
 DC CL71'0474ERROR WHILE ATTEMPTING TO SELECT OPTIMUM DEVICE.         '
 DC CL71'0478UNABLE TO PROCESS JOB ENTRY SUBSYSTEM REQUEST.           '
 DC CL71'047CUNABLE TO ESTABLISH ESTAE ENVIRONMENT.                   '
 DC CL71'0480THE NUMBER OF UNITS TO SATISFY THE REQUEST EXCEEDS LIMIT.'
 DC CL71'0484REQUEST DENIED BY OPERATOR.                              '
 DC CL71'0488GDG PATTERN DSCB NOT MOUNTED.                            '
 DC CL71'048CGDG PATTERN DSCB NOT FOUND.                              '
 DC CL71'0490ERROR CHANGING ALLOCATION ASSIGNMENTS.                   '
 DC CL71'0494ERROR PROCESSING OS CVOL.                                '
 DC CL71'0498MSS VIRTUAL VOLUME NOT ACCESSIBLE.                       '
 DC CL71'049CMSS VIRTUAL VOLUME NOT DEFINED.                          '
 DC CL71'04A0SPECIFIED MSVGP NAME NOT DEFINED.                        '
 DC CL71'04A4SUBSYSTEM REQUEST IN ERROR.                              '
 DC CL71'04A8SUBSYSTEM DOES NOT SUPPORT ALLOCATION VIA KEY DALSSNM.   '
 DC CL71'04ACSUBSYSTEM IS NOT OPERATIONAL.                            '
 DC CL71'04B0SUBSYSTEM DOES NOT EXIST.                                '
 DC CL71'04B4PROTECT REQUEST NOT PROCESSED. RACF NOT ACTIVE IN SYSTEM.'
 DC CL71'04B8MSS NOT INITIALIZED FOR ALLOCATION.                      '
 DC CL71'04BCMSS VOLUME SELECT ERROR.                                 '
 DC CL71'04C0PROTECT REQUEST FAILED: USER NOT DEFINED TO RACF.        '
 DC CL71'04C4REQUEST FOR VOL=REF OR DCB=DSNAME EXCEEDED MAX REFERBACKS'
 DC CL71'04C8NON-ZERO RETURN CODE FROM COMMON ALLOCATION OR JFCB INIT.'
 DC CL71'04CCINVALID OUTPUT DESCRIPTOR OR INVALID DDNAME REFERENCE.   '
 DC CL71'04D0SMS SUBSYSTEM IS NOT AVAILABLE.                          '
 DC CL71'1704REQUIRED CATALOG CANNOT BE OPENED.                       '
 DC CL71'1708DSNAME NOT FOUND IN CATALOG OR IS A GDG BASE.            '
 DC CL71'170CINDEX, ALIAS, OR GDG NAME WAS FOUND.                     '
 DC CL71'1710A DATASET EXISTS AT SOME LEVEL OF INDEX OTHER THAN LOWEST'
 DC CL71'1714A SYNTAX ERROR EXISTS IN THE NAME.                       '
 DC CL71'1718PERMANENT I/O ERROR FOUND WHEN PROCESSING THE CATALOG.   '
 DC CL71'171CRELATIVE TRACK SUPPLIED TO LOCATE IS OUT OF THE CATALOG. '
 DC CL71'1726DFHSM LOCATE PREPROCESSOR EXPERIENCED AN ERROR.          '
 DC CL71'4704DUPLICATE DATA SET NAME.                                 '
 DC CL71'4708NO AVAILABLE ROOM IN THE VTOC OR VTOC INDEX.             '
 DC CL71'470CA PERMANENT I/O ERROR IN THE VTOC OR VTOC INDEX.         '
 DC CL71'4710THE ABSOLUTE TRACK REQUESTED IS NOT AVAILABLE.           '
 DC CL71'4714THE QUANTITY OF SPACE REQUESTED IS NOT AVAILABLE.        '
 DC CL71'4718THE RECORD LENGTH SPECIFIED IS GREATER THAN 65,535 BYTES.'
 DC CL71'471CWRONG DSORG FOR ISAM INDEX REQUEST.                      '
 DC CL71'4720NO PRIME AREA REQUEST FOR ISAM DATA SET.                 '
 DC CL71'4724PRIME AREA MUST BE REQUESTED BEFORE OVFLOW.              '
 DC CL71'4728ISAM SPACE REQUEST MUST BEGIN ON A CYLINDER BOUNDARY.    '
 DC CL71'472CDUPLICATE ISAM DATASET ELEMENT.                          '
 DC CL71'4730INVALID DADSM REALLOC PARAMETER LIST.                    '
 DC CL71'4734INVALID JFCB OR PARTIAL DSCB POINTER.                    '
 DC CL71'4738NOT ENOUGH SPACE ON VOLUME FOR DIRECTORY.                '
 DC CL71'473CREALLOC ALLOC=ABS IS NOT SUPPORTED.                      '
 DC CL71'4740INVALID USER-LABEL REQUEST.                              '
 DC CL71'4744INVALID UCB POINTER. MUST BE UCB ADDRESS, NOT A COPY.    '
 DC CL71'4748DOS VTOC CANNOT BE CONVERTED TO AN OS VTOC.              '
 DC CL71'474CNO SPACE PARAMETER GIVEN FOR NEW DATA SET.               '
 DC CL71'4750INVALID REQUEST FOR ISAM INDEX.                          '
 DC CL71'4754ISAM MULTIVOLUME INDEX NOT ALLOWED.                      '
 DC CL71'4758INVALID ISAM DATASET ELEMENT.                            '
 DC CL71'475CISAM MULTIVOLUME OVFLOW REQUEST NOT ALLOWED.             '
 DC CL71'4760ABSTR AND CYL REQUESTS CONFLICT (ISAM).                  '
 DC CL71'4764CYL AND CONTIG REQUEST CONFLICT (ISAM).                  '
 DC CL71'4768INVALID SPACE SUBPARAMETER.                              '
 DC CL71'476CPRIMARY SPACE REQUEST MAY NOT BE ZERO FOR ISAM.          '
 DC CL71'4770ISAM INDEX REQUEST DUPLICATION.                          '
 DC CL71'4774USER LABELS NOT SUPPORTED.                               '
 DC CL71'4778INVALID COMBINATION OF DSSIZE AND MINAU IN REALLOC PARAM.'
 DC CL71'477CDSSIZE NOT A MULTIPLE OF MINAU.                          '
 DC CL71'4780DIRECTORY SPACE REQUEST IS LARGER THAN PRIMARY SPACE.    '
 DC CL71'4784SPACE REQUEST MUST BE ABSTR FOR A DOS VOLUME.            '
 DC CL71'4788INVALID FMT3 DSCB POINTER.                               '
 DC CL71'478CINDEX REQUEST MUST PRECEDE PRIME FOR ISAM DATA SET.      '
 DC CL71'4790INVALID THIRD DD CARD FOR ISAM ALLOCATION.               '
 DC CL71'4794OVERLAPPING DATA SETS IN VTOC.                           '
 DC CL71'4798OVERLAPPING DOS SPLIT CYLINDER EXTENTS IN THE VTOC.      '
 DC CL71'479CDADSM CREATE TERMINATED BECAUSE OF POSSIBLE VTOC ERRORS. '
 DC CL71'47A0ISAM CREATE TERMINATED DUE TO POSSIBLE VTOC ERRORS.      '
 DC CL71'47A4ALLOCATION TERMINATED BECAUSE OF DOS STACKED PACK FORMAT.'
 DC CL71'47A8RACDEF FAILED, DATASET ALREADY DEFINED.                  '
 DC CL71'47ACUSER NOT AUTHORIZED TO DEFINE DATASET.                   '
 DC CL71'47B0INSTALLATION EXIT REJECTED REQUEST WITH RC=08.           '
 DC CL71'47B4INSTALLATION EXIT REJECTED REQUEST WITH RC=04.           '
 DC CL71'47B8RACF DEFINE WITH MODELING SPECIFIED AND MODEL NOT FOUND. '
 DC CL71'47BCINVALID FMT2 DSCB POINTER.                               '
 DC CL71'47C0REQUESTED DATASET CREATION WAS NOT ALLOWED BY SMS.       '
 DC CL71'47C4REQUESTED DATASET CREATION WAS NOT POSSIBLE.             '
 DC CL71'47C8THE PDSE DIRECTORY COULD NOT BE BUILT.                   '
 DC CL71'5704THE CATALOG CANNOT BE OPENED.                            '
 DC CL71'5708CATALOG STRUCTURE INCONSISTENT WITH REQUESTED OPERATION. '
 DC CL71'5710THE NECESSARY INDEX STRUCTURE DOES NOT EXIST IN CATALOG. '
 DC CL71'5714INSUFFICIENT SPACE IN CATALOG.                           '
 DC CL71'5718IMPROPERLY NAMED GDG OR GDG IS FULL AND THIS IS OLD NAME.'
 DC CL71'571CI/O ERROR IN THE CATALOG.                                '
 DC CL71'6704THE REQUIRED VOLUME WAS NOT MOUNTED.                     '
 DC CL71'6708THE FORMAT 1 DSCB WAS NOT FOUND IN THE VTOC.             '
 DC CL71'670CI/O ERROR IN VTOC OR INVALID FORMAT 1 DSCB.              '
 DC CL71'6710AN INVALID WORK AREA POINTER WAS SUPPLIED.               '
 DC CL71'7700SUBSYSTEM ERROR.                                         '
 DC CL71'7704SUBSYSTEM INTERFACE ERROR WHILE PROCESSING DALSSNM.      '
 DC CL71'8700SCHEDULER JCL FACILITY (SJF) ERROR.                      '
 DC CL71'8704SCHEDULER JCL FACILITY ACCESS FUNCTION ERROR.            '
 DC CL71'8708MUTUAL EXCLUSIVITY CHECKER ERROR.                        '
 DC CL71'9700SEVERE SMS IDAX ERROR.                                   '
 DC CL71'9704SEVERE SMS CATALOG ERROR.                                '
 DC CL71'9708SEVERE SMS VOLREF ERROR.                                 '
 DC CL71'970CSEVERE SMS VTOC ERROR.                                   '
 DC CL71'9710SEVERE SMS DISP ERROR.                                   '
 DC CL71'9714SEVERE SMS COPY SWB ERROR.                               '
 DC CL71'9728SYSTEM ERROR WHILE ALLOCATING A DEVICE.                  '
 DC X'FFFFFFFF'                END OF TABLE
 DC CL67'**** UNKNOWN ERROR REASON CODE SEE GC28-1852 ****        '
*
TEXTUNIT DS 0CL71
 DC CL71'0001DDNAME                                                   '
 DC CL71'0002DSNAME                                                   '
 DC CL71'0003MEMBER NAME OR RELATIVE GDG NUMBER                       '
 DC CL71'0004STATUS (OLD, NEW, SHR, ETC)                              '
 DC CL71'0005NORMAL DISPOSITION (KEEP, DELETE, CATLG, ETC)            '
 DC CL71'0006CONDITIONAL DISPOSITION (KEEP, CATLG, DELETE, ETC        '
 DC CL71'0007SPECIFY SPACE ALLOCATION IS IN TRACKS                    '
 DC CL71'0008SPECIFY SPACE ALLOCATION IS IN CYLINDERS                 '
 DC CL71'0009SPECIFY AVERAGE DATA BLOCK LENGTH USED FOR SPACE REQUEST '
 DC CL71'000APRIMARY SPACE QUANTITY                                   '
 DC CL71'000BSECONDARY SPACE QUANTITY                                 '
 DC CL71'000CNUMBER OF PDS DIRECTORY BLOCKS                           '
 DC CL71'000DDELETE UNUSED SPACE WHEN CLOSED (RLSE)                   '
 DC CL71'000EFORMAT OF ALLOCATED SPACE (ALX, MXIG, CONTIG)            '
 DC CL71'000FWHOLE CYLINDER ALLOCATION (ROUND) REQUEST                '
 DC CL71'0010VOLUME SERIAL NUMBER                                     '
 DC CL71'0011REQUEST PRIVATE VOLUME                                   '
 DC CL71'0012VOLUME SEQUENCE NUMBER                                   '
 DC CL71'0013VOLUME COUNT - MAX NUMBER OF VOLUMES                     '
 DC CL71'0014VOLUME REFERENCE TO A DSNAME (VOL=REF=)                  '
 DC CL71'0015UNIT NAME (DISK, CART, TAPE, ETC)                        '
 DC CL71'0016UNIT COUNT - NUMBER OF DEVICES TO BE ALLOCATED           '
 DC CL71'0017PARALLEL MOUNT REQUEST - VOLUMES ON SEPARATE DEVICES     '
 DC CL71'0018SYSOUT CLASS REQUEST (SYSOUT=)                           '
 DC CL71'0019SYSOUT WRITER PROGRAM NAME                               '
 DC CL71'001ASYSOUT FORM NUMBER                                       '
 DC CL71'001BSYSOUT OUTPUT LIMIT - NUMBER OF RECORDS IN DATASET       '
 DC CL71'001CUNALLOCATION AT CLOSE REQUEST (FREE=CLOSE)               '
 DC CL71'001DNUMBER OF SYSOUT COPIES (COPIES=)                        '
 DC CL71'001ELABEL TYPE (NL, SL, BLP, ETC)                            '
 DC CL71'001FDATASET SEQUENCE NUMBER ON A MULTI-FILE TAPE VOLUME      '
 DC CL71'0020PASSWORD PROTECTION REQUEST                              '
 DC CL71'0021INPUT ONLY OR OUTPUT ONLY REQUEST (BDAM AND BSAM ONLY)   '
 DC CL71'0022EXPIRATION DATE AS YYDDD                                 '
 DC CL71'0023RETENTION PERIOD - NUMBER OF DAYS BEFORE EXPIRATION      '
 DC CL71'0024DUMMY DATASET REQUEST                                    '
 DC CL71'0025FORMS CONTROL BUFFER (FCB) IMAGE IDENTIFICATION          '
 DC CL71'0026FORM ALIGNMENT AND IMAGE VERIFICATION (VERIFY OR ALIGN)  '
 DC CL71'0027QNAME (FOR TCAM TPROCESS)                                '
 DC CL71'0028REQUEST IF FOR A TIME SHARING TERMINAL                   '
 DC CL71'0029UNIVERSAL CHARACTER SET (UCS) REQUEST                    '
 DC CL71'002AFOLD MODE REQUEST                                        '
 DC CL71'002BCHARACTER SET IMAGE VERIFICATION REQUEST                 '
 DC CL71'002CDCB REFERENCE TO A DSNAME (MODEL/PATTERN DSCB REFERENCE) '
 DC CL71'002DDCB REFERENCE TO A DDNAME (TO BE USED AS A MODEL)        '
 DC CL71'002EBUFFER ALIGNMENT (BFALN)                                 '
 DC CL71'002FBUFFERING TECHNIQUE (BFTEK)                              '
 DC CL71'0030(MAX) NUMBER BYTES PER BLOCK (BLKSIZE)                   '
 DC CL71'0031NUMBER OF BUFFERS INITIALLY ASSIGNED TO A LINE (BUFIN)   '
 DC CL71'0032BUFFER LENGTH (BUFL)                                     '
 DC CL71'0033MAX NBR BUFFERS ALLOCATED AT ONE TIME TO A LINE (BUFMAX) '
 DC CL71'0034NUMBER OF BUFFERS TO BE ASSIGNED (BUFNO)                 '
 DC CL71'0035BUFFER OFFSET (BUFOFF)                                   '
 DC CL71'0036NUMBER OF OUTPUT BUFFERS FOR A LINE GROUP (BUFOUT)       '
 DC CL71'0037NBR BUFFERS TO ALLOCATE IN ADVANCE FOR GET MACRO (BUFRQ) '
 DC CL71'0038LENGTH IN BYTES FOR BUFFERS (BUFSZ)                      '
 DC CL71'0039PAPER TAPE CODE                                          '
 DC CL71'003ARELATIVE PRIORITY OF SEND AND RECEIVE (CPRI)             '
 DC CL71'003BTAPE DENSITY (DEN)                                       '
 DC CL71'003CDATASET ORGANIZATION (DSORG)                             '
 DC CL71'003DERROR OPTION (EROPT)                                     '
 DC CL71'003EMAX NBR GAM I/O MACROS TO BE ISSUED BEFORE A WAIT (GNCP) '
 DC CL71'003FPOLLING INTERVAL FOR LINES IN A GROUP (INTVL)            '
 DC CL71'0040KEY LENGTH IN BYTES (KEYLEN)                             '
 DC CL71'0041SEARCH LIMIT (LIMCT)                                     '
 DC CL71'0042LOGICAL RECORD LENGTH (LRECL)                            '
 DC CL71'0043MODE OF OPERATION FOR CARD READ/PUNCH                    '
 DC CL71'0044MAX NBR READ/WRITE MACROS ISSUED BEFORE A CHECK (NCP)    '
 DC CL71'0045OPTION CODE (OPTCD)                                      '
 DC CL71'0046RELATION OF PCIS TO BUFFER ALLOCATION/FREE DURING RECEIVE'
 DC CL71'0047RELATION OF PIIS TO BUFFER ALLOCATION/FREE DURING SEND   '
 DC CL71'0048PRINTER LINE SPACING (PRTSP)                             '
 DC CL71'0049RECORD FORMAT (RECFM)                                    '
 DC CL71'004ABYTES RESERVED IN 1ST BUFFER FOR DATETIME AND SEQUENCE   '
 DC CL71'004BBYTES RESERVED NON-1ST BUFFER FOR DATETIME AND SEQUENCE  '
 DC CL71'004CSIZE OF INPUT WORK AREA FOR TELECOMM JOBS (SOWA)         '
 DC CL71'004DSTACKER BIN TO RECEIVE CARDS (STACK)                     '
 DC CL71'004EPERCENT OF NONREUS DISK MESSAGE QUEUE USED BEFORE FLUSH  '
 DC CL71'004FRECORDING TECHNIQUE FOR 7-TRACK TAPES                    '
 DC CL71'0050PASSWORD FOR A PROTECTED DATASET                         '
 DC CL71'0051TCAM NETWORK CONTROL PROGRAM NAME                        '
 DC CL71'0052PERMANENTLY ALLOCATED ATTRIBUTE                          '
 DC CL71'0053CONVERTIBLE ATTRIBUTE                                    '
 DC CL71'0054OPEN/CLOSE/EOV TRACE REQUEST (DIAGNS=TRACE)              '
 DC CL71'0055REQUEST RETURN OF ASSOCIATED DDNAME                      '
 DC CL71'0056REQUEST RETURN OF ASSOCIATED DSNAME                      '
 DC CL71'0057REQUEST RETURN OF DATASET ORGANIZATION                   '
 DC CL71'0058SYSOUT REMOTE WORK STATION DESTINATION NODE NAME         '
 DC CL71'0059SYSOUT HOLD QUEUE REQUEST                                '
 DC CL71'005A3525 CARD READ/PUNCH DATASET TYPE                        '
 DC CL71'005BINPUT TO 3886 CHARACTER READER                           '
 DC CL71'005CREQUEST ALLOCATION OF A SUBSYSTEM DATASET                '
 DC CL71'005DREQUEST RETURN OF VOLUME SERIAL NUMBER                   '
 DC CL71'005EMSS VOLUME GROUP NAME                                    '
 DC CL71'005FNAME OF SUBSYSTEM TO PROCESS THE DATASET                 '
 DC CL71'0060SUBSYSTEM PARAMETER STRING                               '
 DC CL71'0061PROTECT WHEN CREATED (DASD) OR WHEN USED (TAPE)          '
 DC CL71'0062REQUEST ALLOCATION OF A SUBSYSTEM DATASET TO SYSIN       '
 DC CL71'0063SYSOUT USER ID NAME AT A REMOTE LOCATION DESTINATION     '
 DC CL71'0064BURST REQUEST FOR 3800 PRINTER                           '
 DC CL71'0065CHARACTER ARRANGEMENT TABLE NAME                         '
 DC CL71'0066COPY GROUP SPECIFICATION                                 '
 DC CL71'0067FLASH FORMS OVERLAY NAME                                 '
 DC CL71'0068FLASH FORMS OVERLAY COUNT                                '
 DC CL71'0069COPY MODIFICATION MODULE NAME                            '
 DC CL71'006ACOPY MODULE TABLE REFERENCE                              '
 DC CL71'006BRECORD LENGTH FOR AN ISO/ANSI/FIPS TAPE DATASET          '
 DC CL71'006CDEFER MOUNT UNTIL DATASET IS OPENED                      '
 DC CL71'006DEXPIRATION DATE (YYYYDDD)                                '
 DC CL71'8001ACCESS SPECIFICATION CODE FOR ISO/ANSI/FIPS TAPE DATASETS'
 DC CL71'8002OUTPUT STATEMENT NAME REFERENCE                          '
 DC CL71'8003CNTL STATEMENT NAME REFERENCE                            '
 DC CL71'8004STORAGE CLASS                                            '
 DC CL71'8005MANAGEMENT CLASS                                         '
 DC CL71'8006DATA CLASS                                               '
 DC CL71'800BRECORD ORGANIZATION SPECIFICATION FOR VSAM               '
 DC CL71'800CRELATIVE KEY OFFSET IN LOGICAL RECORDS FOR VSAM          '
 DC CL71'800DNAME OF JCL DD STATEMENT TO GET ATTRIBUTES               '
 DC CL71'800ECOPY RACF PROFILE NAME                                   '
 DC CL71'800FNAME OF MODEL DATASET WHOSE ATTRIBUTES ARE TO BE COPIED  '
 DC CL71'8010ALLOCATION UNIT TO BE USED WHEN DATASET IS ALLOCATED     '
 DC CL71'8012PDS/PDSE SPECIFICATION                                   '
 DC X'FFFFFFFF'                END OF TABLE
 DC CL67'**** UNKNOWN TEXT UNIT VALUE SEE GC28-1852 ****          '
*
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*       GETMAINED AREA FOR VOLATILE STORAGE AREAS
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
GOTNAREA DSECT
SAVE     DS    18F                     REGISTER SAVE AREA
GVREGS   DS    0F                      REGS INPUT TO GRPVRBL
GVR8     DS    F                          R8 = INCOMING FIELD LENGTH
GVR9     DS    F                          R9 = RETURN ADDRESS
GVR10    DS    F                          R10 = TEXT UNIT ADDRESS
GVR11    DS    F                          R11 = NUMBER INCOMING FIELDS
GVR12    DS    F                          R12 = INCOMING FIELD ADDRESS
WORK5    DS    CL5                     CONVERSION WORK AREA
*
*
*
         DS    0F
S99RBPTR DS    A(S99RB)                POINTER TO PARAMETER BLOCK
S99RB    DS    0XL20                   DDDYNAM PARAMETER BLOCK
         DS    AL1(20)                 LENGTH OF BLOCK
S99VERB  DS    AL1(1)                  REQUEST CODE = 01
         DS    XL2'4000'               DO NOT USE EXISTING ALLOCATION
S99ERROR DS    AL2(0)                  ERROR RETURN CODE
S99INFO  DS    AL2(0)                  INFORMATION REASON CODE
S99TUPTR DS    A(S99TUPL)              POINTER TO POINTER LIST
         DS    A(0)                    RESERVED
         DS    A(0)                    FLAGS2
*
*
*
S99TUPL  DS    0F                      LIST OF TEXT UNIT POINTERS
         DS    256F
PTREND   DS    A(*)                    END OF LIST ADDRESS
*
*
*
         DS    0F
DALDDNAM DS   XL2'0001',AL2(1),AL2(8) DDNAME SPECIFICATION
DDNAME   DS   CL8                     DDNAME
         DS    0F
DALDSNAM DS    XL2'0002',AL2(1),AL2(44) DSNAME SPECIFICATION
DSNAME   DS    CL44                    DATASET NAME
         DS    0F
DALMEMBR DS    XL2'0003',AL2(1),AL2(8) MEMBER/G000V00 SPECIFICATION
MEMBER   DS    CL8                     MEMBER NAME/ GDG G000V00
         DS    0F
DALSTATS DS    XL2'0004',AL2(1),AL2(1) STATUS SPECIFICATION
STATUS   DS    XL1                     DATASET STATUS:
*                                       01=OLD, 02=MOD, 04=NEW, 08=SHR
         DS    0F
DALNDISP DS    XL2'0005',AL2(1),AL2(1) NORMAL DISPOSITION SPECIFICATION
NORMDISP DS    XL1                     NORMAL DISPOSITION:
*                                      08=KEEP
         DS    0F
DALCDISP DS    XL2'0006',AL2(1),AL2(1) CONDITIONAL DISP SPECIFICATION
CONDDISP DS    XL1                     CONDITIONAL DISPOSITION:
*                                      SAME AS NORMDISP
         DS    0F
DALTRK   DS    XL2'0007',AL2(0)        SPACE TYPE: TRACK = 07
*
         DS    0F
DALCYL   DS    XL2'0008',AL2(0)        SPACE TYPE: CYLINDER = 08
*
         DS    0F
DALBLKLN DS    XL2'0009',AL2(1),AL2(3) SPACE TYPE: AVERAGE BLOCKS
AVGBLKLN DS    XL3                     AVERAGE BLOCK SIZE
*
         DS    0F
DALPRIME DS    XL2'000A',AL2(1),AL2(3) PRIMARY SPACE SPECIFICATION
PRIMSPAC DS    XL3                     PRIMARY SPACE QUANTITY
         DS    0F
DALSECND DS    XL2'000B',AL2(1),AL2(3) SECONDARY SPACE AMOUNT SPEC
SCNDSPAC DS    XL3                     SECONDARY SPACE AMOUNT
         DS    0F
DALDIR   DS    XL2'000C',AL2(1),AL2(3) DIRECTORY BLOCKS SPECIFICATION
DIRBLK   DS    XL3                     NBR DIRECTORY BLOCKS
         DS    0F
DALRLSE  DS    XL2'000D',AL2(0)        RLSE UNUSED SPACE SPECIFICATION
         DS    0F
DALSPFRM DS    XL2'000E',AL2(1),AL2(1) SPACE FORM: ALX, MXIG, CONTIG
SPFRMTYP DS    XL1                     02=ALX, 04=MXIG, 08=CONTIG
         DS    0F
DALROUND DS    XL2'000F',AL2(0)        ROUND TO WHOLE CYLINDERS
         DS    0F
DALVLSER DS    XL2'0010',AL2(6)        VOLUME SERIAL NUMBER SPEC
         DS    6XL8                    ROOM FOR 6 VOL SER'S
         DS    0F
DALPRIVT DS    XL2'0011',AL2(0)        PRIVATE VOLUME SPECIFICATION
         DS    0F
DALVLSEQ DS    XL2'0012',AL2(1),AL2(2) VOLUME SEQUENCE SPECIFICATION
VOLSEQNO DS    XL2                     VOLUME SEQUENCE NUMBER
         DS    0F
DALVLCNT DS    XL2'0013',AL2(1),AL2(1) VOLUME COUNT SPECIFICATION
VOLCNT   DS    XL1                     NBR VOLUMES
         DS    0F
DALVLRDS DS    XL2'0014',AL2(1),AL2(44) VOLUME REFERENCE TO A DATASET
VRDSNAME DS    CL44                    DSNAME REFERRED TO FOR VOLUME
         DS    0F
DALUNIT  DS    XL2'0015',AL2(1),AL2(8) UNIT SPECIFICATION
UNITNAME DS    CL8                     UNIT NAME/ DEVICE NAME
         DS    0F
DALUNCNT DS    XL2'0016',AL2(1),AL2(1) UNIT COUNT SPECIFICATION
UNITCNT  DS    XL1                     NBR UNITS
         DS    0F
DALPARAL DS    XL2'0017',AL2(0)        PARALLEL MOUNT REQUEST
         DS    0F
DALSYSOU DS    XL2'0018',AL2(1),AL2(1) SYSOUT CLASS SPECIFICATION
SYSOUT   DS    CL1                     SYSOUT CLASS
         DS    0F
DALSPGNM DS    XL2'0019',AL2(1),AL2(8) SYSOUT PROGRAM NAME SPEC
SPGMNAME DS    CL8                     SYSOUT PROGRAM NAME
         DS    0F
DALSFMNO DS    XL2'001A',AL2(1),AL2(4) SYSOUT FORM NUMBER SPEC
SYSFRMNO DS    CL4                     SYSOUT FORM NUMBER
         DS    0F
DALOUTLM DS    XL2'001B',AL2(1),AL2(3) OUTPUT LIMIT SPECIFICATION
OUTLIMNO DS    XL3                     OUTPUT LIMIT
         DS    0F
DALCLOSE DS    XL2'001C',AL2(0)        FREE=CLOSE SPECIFICATION
         DS    0F
DALCOPYS DS    XL2'001D',AL2(1),AL2(1) SYSOUT DATASET COPIES SPEC
SYSOCPYS DS    XL1                     NUMBER SYSOUT COPIES
         DS    0F
DALLABEL DS    XL2'001E',AL2(1),AL2(1) LABEL TYPE SPECIFICATION
LBLTYP   DS    XL1                     LABEL TYPE:
*                                      01=NL, 02=SL, 10=BLP
         DS    0F
DALDSSEQ DS    XL2'001F',AL2(1),AL2(2) DATASET SEQUENCE NBR SPEC
DSETSEQ  DS    XL2                     DATASET SEQUENCE NBR ON TAPE
         DS    0F
DALPASPR DS    XL2'0020',AL2(1),AL2(1) PASSWORD PROTECTION SPEC
PSWDPROT DS    XL1                     PASSWORD PROTECTION: 10=PWREAD
*                                      30=NOPWREAD
         DS    0F
DALINOUT DS    XL2'0021',AL2(1),AL2(1) INPUT/OUTPUT ONLY SPEC
INOTONLY DS    XL1                     40=OUTPUT,80=INPUT
         DS    0F
DALEXPDT DS    XL2'0022',AL2(1),AL2(5) YYDDD EXPIRATION DATE SPEC
EXPYYDDD DS    CL5                     YYDDD EXPIRATION DATE
         DS    0F
DALRETPD DS    XL2'0023',AL2(1),AL2(2) RETENTION PERIOD SPECIFICATION
RETPRD   DS    XL2                     RETENTION PERIOD (DAYS)
         DS    0F
DALDUMMY DS    XL2'0024',AL2(0)        DUMMY DATASET SPECIFICATION
         DS    0F
DALFCBIM DS    XL2'0025',AL2(1),AL2(4) FCB IMAGE SPECIFICATION
FCBNAME  DS    CL4                     FCB IMAGE NAME
         DS    0F
DALFCBAV DS    XL2'0026',AL2(1),AL2(1) FCB ALIGN/VERIFY SPECIFICATION
ALGNVERF DS    XL1                     04=VERIFY, 08=ALIGN
         DS    0F
DALTERM  DS    XL2'0028',AL2(0)        USE TSO TERMINAL AS I/O DEVICE
         DS    0F
DALUCS   DS    XL2'0029',AL2(1),AL2(4) UCS SPECIFICATION
UCSNAME  DS    CL4                     UCS NAME
         DS    0F
DALUFOLD DS    XL2'002A',AL2(0)        FOLD MODE SPECIFICATION
         DS    0F
DALUVRFY DS    XL2'002B',AL2(0)        TRAIN/CHAIN MOUNT VERIFY SPEC
         DS    0F
DALDCBDS DS    XL2'002C',AL2(1),AL2(44) DCB REF TO A DSNAME SPEC
DCBDSNAM DS    CL44                    DSNAME USED IN DCB REFERENCE
         DS    0F
DALDCBDD DS    XL2'002D',AL2(1),AL2(26) DCB REFERENCE TO A DDNAME
DCBDDNAM DS    CL26                    DDNAME USED IN DCB REFERENCE
         DS    0F
DALBLKSZ DS    XL2'0030',AL2(1),AL2(2) BLOCK SIZE SPECIFICATION
BLKSIZE  DS    XL2                     BLKSIZE
         DS    0F
DALBUFNO DS    XL2'0034',AL2(1),AL2(1) NUMBER BUFFERS SPECIFICATION
BUFNO    DS    XL1                     NBR BUFFERS
         DS    0F
DALDEN   DS    XL2'003B',AL2(1),AL2(1) TAPE DENSITY SPECIFICATION
DEN      DS    XL1                     TAPE DENSITY: 03=200, 43=556,
*                                      83=800, C3=1600, D3=6250
         DS    0F
DALDSORG DS    XL2'003C',AL2(1),AL2(2) DSORG SPECIFICATION
DSORG    DS    XL2                     DATASET ORGANIZATION:
*                                      0008=VSAM, 0080=GS, 0200=PO,
*                                      0300=POU, 2000=DA, 2100=DAU,
*                                      4000=PS, 4100=PSU
         DS    0F
DALEROPT DS    XL2'003D',AL2(1),AL2(1) ERROR OPTION SPECIFICATION
ERROPTN  DS    XL1                     ERROR OPTION: 10=T, 20=ABE,
*                                      40=SKP, 80=ACC
         DS    0F
DALKYLEN DS    XL2'0040',AL2(1),AL2(1) KEY LENGTH SPECIFICATION
KEYLEN   DS    XL1                     KEY LENGTH
         DS    0F
DALLRECL DS    XL2'0042',AL2(1),AL2(2) LRECL SPECIFICATION
LRECL    DS    XL2                     LRECL
         DS    0F
DALNCP   DS    XL2'0044',AL2(1),AL2(1) NCP SPECIFICATION
NBRDWRT  DS    XL1                     NBR READ/WRITE BEFORE CHECK
         DS    0F
DALOPTCD DS    XL2'0045',AL2(1),AL2(1) OPTCD SPECIFICATION
OPTNCODE DS    XL1                     01=R OR J, 02=T, 04=Z, 08=A OR Q
*                                      10=F OR H OR O, 20=C OR E, 40=B
*                                      OR U, 80=W. MULTIPLE BITS O.K.
         DS    0F
DALPRTSP DS    XL2'0048',AL2(1),AL2(1) PRTSP SPECIFICATION
PRTLNSPC DS    XL1                     01=0, 09=1, 11=2, 19=3
         DS    0F
DALRECFM DS    XL2'0049',AL2(1),AL2(1) RECORDING FORMAT SPEC
RECFM    DS    XL1                     RECORDING FORMAT, SUM OF:
*                                      80=FIXED, 40=VARIABLE,
*                                      192=UNDEFINED, 10=BLOCKED,
*                                      04=ASA CONTROL CHARACTERS,
*                                      02=MACHINE CONTROL CHARACTERS,
*                                      08=STANDARD(F) OR SPANNED(V)
*                                      20=VRBL ASCII(D) OR TRK OFLO(T)
         DS    0F
DALTRTCH DS    XL2'004F',AL2(1),AL2(1) 7-TRACK TAPE MODE SPEC
TRTCH7   DS    XL1                     04=NON-COMPACTN, 08=COMPACTN,
*                                      13=C, 23=E, 2B=ET, 3B=T
         DS    0F
DALPASSW DS    XL2'0050',AL2(1),AL2(32) PASSWORD VALUE SPECIFICATION
PASSWORD DS    CL32                    PASSWORD
         DS    0F
DALDIAGN DS    XL2'0054',AL2(0)        DIAGNS=TRACE SPECIFICATION
         DS    0F
DALSUSER DS    XL2'0058',AL2(1),AL2(8) SYSOUT REMOTE WORKSTATION SPEC
SYSWSNAM DS    CL8                     REMOTE WORKSTATION NAME
         DS    0F
DALSHOLD DS    XL2'0059',AL2(0)        SYSOUT HOLD QUEUE SPECIFICATION
         DS    0F
DALUSRID DS    XL2'0063',AL2(1),AL2(8) SYSOUT USERID SPECIFICATION
USERID   DS    CL8                     USERID FOR SYSOUT
         DS    0F
DALBURST DS    XL2'0064',AL2(1),AL2(1) BURST SPECIFICATION
BURSTSTK DS    XL1                     02=BURSTER-TRIMMER-STACKER
*                                      04=CONTINUOUS FORMS STACKING
         DS    0F
DALCHARS DS    XL2'0065',AL2(4)        CHARACTER ARRANGEMENT SPEC
CHARNAMS DS    4XL6                    ROOM FOR FOUR NAMES
         DS    0F
DALCOPYG DS    XL2'0066'               CHARACTER ARRANGEMENT SPEC
DALCOPYN DS    AL2(8)                  NUMBER OF COPY GROUPS (1-8)
GRPCOPYS DS    8XL3                    ROOM FOR 8 FIELDS
         DS    0F
DALFFORM DS    XL2'0067',AL2(1),AL2(4) FLASH FORMS OVERLAY SPEC
FORMNAME DS    CL4                     FLASH FORM NAME
         DS    0F
DALFCNT  DS    XL2'0068',AL2(1),AL2(1) FLASH FORMS OVERLAY COUNT SPEC
FORMCNT  DS    XL1                     NBR COPIES TO BE FLASHED
         DS    0F
DALMMOD  DS    XL2'0069',AL2(1),AL2(4) COPY MODIFICATION MODULE SPEC
MODULNAM DS    CL4                     COPY MODIFICATION MODULE NAME
         DS    0F
DALMTRC  DS    XL2'006A',AL2(1),AL2(1) COPY MODULE TABLE REF SPEC
MODTBLRF DS    XL1                     COPY MODULE TABLE REFERENCE:
*                                      00=1ST C.A.T. GIVEN ON DALCHARS,
*                                      01=2ND, 02=3RD, 03=4TH
         DS    0F
DALDEFER DS    XL2'006C',AL2(0)        DEFER SPECIFICATION
         DS    0F
DALEXPDL DS    XL2'006D',AL2(1),AL2(7) YYYYDDD EXPIRATION DATE SPEC
XYYYYDDD DS    CL7                     YYYYDDD EXPIRATION DATE
         DS    0F
DALOUTPT DS    XL2'8002',AL1(6)        OUTPUT STATEMENT REFERENCE SPEC
OUTNAMES DS    8XL28                   OUTPUT STATEMENT NAME6
         DS    0F
DALCNTL  DS    XL2'8003',AL2(1),AL2(26) CNTL SPECIFICATION
CNTLRFNC DS    CL26                    CNTL STATEMENT BACK REFERENCE
         DS    0F
DALSTCL  DS    XL2'8004',AL2(1),AL2(8) STORAGE CLASS SPECIFICATION
STORCLAS DS    CL8                     STORAGE CLASS NAME
         DS    0F
DALMGCL  DS    XL2'8005',AL2(1),AL2(8) MANAGEMENT CLASS SPECIFICATION
MGMTCLAS DS    CL8                     STORAGE CLASS NAME
         DS    0F
DALDACL  DS    XL2'8006',AL2(1),AL2(8) DATA CLASS SPECIFICATION
DATACLAS DS    CL8                     DATA CLASS NAME
         DS    0F
DALRECO  DS    XL2'800B',AL2(1),AL2(1) RECORD ORGANIZATION SPEC
RECDORGN DS    XL1                     80=VSAM KSDS, 40=VSAM ESDS,
*                                      20=VSAM RRDS, 10=VSAM LINEAR SP
         DS    0F
DALKEYO  DS    XL2'800C',AL2(1),AL2(1) KEY OFFSET SPECIFICATION
KEYOFST  DS    XL1                     KEY OFFSET
         DS    0F
DALREFD  DS    XL2'800D',AL2(1),AL2(26) COPY DD SPECIFICATION
DDREF    DS    CL26                    DDNAME REFERENCE FOR ATTRIBUTES
         DS    0F
DALLIKE  DS    XL2'800F',AL2(1),AL2(44) COPY MODEL SPECIFICATION
LIKEDSNM DS    CL44                    DSNAME USED FOR MODEL
         DS    0F
DALAVGR  DS    XL2'8010',AL2(1),AL2(1) AVERAGE RECORD SPECIFICATION
ALOCUNIT DS    XL1                     ALLOCATION IN: 80=SINGLE RECORDS
*                                      40=THOUSAND RECORD UNITS,
*                                      20=MILLION RECORD UNITS
         DS    0F
DALDSNT  DS    XL2'8012',AL2(1),AL2(1) DATASET TYPE SPECIFICATION
DSTYPE   DS    XL1                     80=PDSE, 40=PDS
ENDGOTTN EQU   *
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*       CALLER PASSED PARAMETER AREAS
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
PARM1    DSECT ,                       1ST PARAMETER DESCRIPTION
PRMDDNAM DS    CL8                     DDNAME
PRMDSNAM DS    CL44                    DATASET NAME
PRMMEMBR DS    CL8                     MEMBER NAME
PRMSTATS DS    XL2                     STATUS: 1=OLD,2=MOD,4=NEW,8=SHR
PRMNDISP DS    XL2                     NORMAL DISPOSITION: 8=KEEP,
*                                         1=UNCATLG,2=CATLG,4=DELETE
PRMCDISP DS    XL2                     CONDITIONAL DISPOSITION: 8=KEEP,
*                                         1=UNCATLG,2=CATLG,4=DELETE
PRMUNIT  DS    CL8                     UNIT NAME
PRMUNCNT DS    XL2                     UNIT COUNT
PRMVLSER DS    6CL6                    VOLUME SERIAL NUMBERS (UP TO 6)
PRMLABEL DS    XL2                     LABEL TYPE:01=NL, 02=SL, 10=BLP
PRMDSSEQ DS    XL2                     DATASET SEQUENCE NBR (TAPE)
PRMCLOSE DS    CL1                     NONZERO= FREE=CLOSE
PRMRETPD DS    XL2                     RETENTION PERIOD IN DAYS
PRMRECFM DS    XL2                     RECORDING FORMAT: HEX SUM OF
*                                      80=FIXED, 40=VARIABLE,
*                                      192=UNDEFINED, 10=BLOCKED,
*                                      04=ASA CONTROL CHARACTERS,
*                                      02=MACHINE CONTROL CHARACTERS,
*                                      08=STANDARD(F) OR SPANNED(V)
*                                      20=VRBL ASCII(D) OR TRK OFLO(T)
PRMLRECL DS    XL2                     LOGICAL RECORD LENGTH
PRMBLKSZ DS    XL2                     BLOCK SIZE
PRMDEN   DS    XL2                     TAPE DENSITY: 03=200, 43=556,
*                                      83=800, C3=1600, D3=6250
PRMBUFNO DS    XL2                     BUFNO
PRMKYLEN DS    XL2                     KEY LENGTH
PRMDSORG DS    XL2                     DATASET ORGANIZATION:
*                                      0008=VSAM, 0080=GS, 0200=PO,
*                                      0300=POU, 2000=DA, 2100=DAU,
*                                      4000=PS, 4100=PSU
PRMSPACE DS    CL1                     SPACE TYPE:
*                                      C=CYL, T=TRK
PRMPRIME DS    XL4                     PRIMARY SPACE AMOUNT
PRMSECND DS    XL4                     SECONDARY SPACE AMOUNT
PRMRLSE  DS    CL1                     NONZERO=RLSE
PRMDIR   DS    XL4                     NBR DIRECTORY BLOCKS
PRMEX100 DS    CL2                     CENTURY FOR EXPIRATION DATE
PRMEXPDT DS    CL5                     EXPIRATION DATE YYDDD
PRMBLKLN DS    XL4                     AVG BLKSIZE FOR SPACE ALLOC
PRMSPFRM DS    XL2                     2=ALX, 4=MXIG, 8=CONTIG
PRMROUND DS    CL1                     NONZERO=ROUND
PRMPRIVT DS    CL1                     NONZERO=PRIVATE VOLUME REQUEST
PRMVLSEQ DS    XL2                     VOLUME SEQUENCE NUMBER
PRMVLCNT DS    XL2                     VOLUME COUNT
PRMVLRDS DS    CL44                    DSNAME REFERRED TO FOR VOLSER
PRMPARAL DS    CL1                     NONZERO=PARALLEL MOUNT REQUEST
PRMSPGNM DS    CL8                     SYSOUT PROGRAM NAME
PRMSFMNO DS    CL4                     SYSOUT FORM NUMBER
PRMOUTLM DS    XL4                     OUTLIM FOR SYSOUT
PRMCOPYS DS    XL2                     NUMBER SYSOUT COPIES
PRMPASPR DS    XL2                     10=PWREAD, 30=NOPWREAD
PRMINOUT DS    XL2                     40=OUTPUT-ONLY, 80=INPUT-ONLY
PRMFCBIM DS    CL4                     FCB IMAGE NAME
PRMFCBAV DS    XL2                     4=VERIFY, 8=ALIGN
PRMTERM  DS    CL1                     USE TSO TERMINAL AS DEVICE
PRMUCS   DS    CL4                     UCS IMAGE NAME
PRMUFOLD DS    CL1                     NONZERO=FOLD MODE
PRMUVRFY DS    CL1                     NONZERO=VERIFY CHAIN MOUNT
PRMDCBDS DS    CL44                    DCB MODEL DSNAME
PRMDCBDD DS    CL26                    DCB DDNAME BACKREFERENCE
PRMEROPT DS    XL2                     ERR OPTION: 10=T, 20=ABE,
*                                                  40=SKP, 80=ACC
PRMNCP   DS    XL2                     NUMBER READ/WRITE BEFORE CHECK
PRMOPTCD DS    XL2                     OPTCD VALUE
PRMPRTSP DS    XL2                     PRINTER SPACING
PRMTRTCH DS    XL2                     7-TRACK TAPE VALUES
PRMPASSW DS    CL32                    PASSWORD VALUE
PRMDIAGN DS    CL1                     NONZERO= DIAGNS=TRACE
PRMSUSER DS    CL8                     SYSOUT DEST NODE NAME
PRMSHOLD DS    CL1                     NONZERO= HOLD=YES
PRMUSRID DS    CL8                     SYSOUT DEST USERID
PRMBURST DS    XL2                     2=BURSTER, 4=CONTINUOUS
PRMCHARS DS    4CL4                    CHAR ARRANGEMENT TBL NAMES
PRMCOPYG DS    8XL2                    SYSOUT COPY GROUPS
PRMFFORM DS    CL4                     SYSOUT FLASH FORM OVERLAY
PRMFCNT  DS    XL2                     SYSOUT FLASH OVERLAY COUNT
PRMMMOD  DS    CL4                     MODIFY MODULE NAME
PRMMTRC  DS    XL2                     COPY MODULE TABLE REFERENCE
PRMDEFER DS    CL1                     NONZERO=DEFER MOUNT REQUEST
PRMOUTPT DS    8CL26                   OUT STATEMENT REFERENCES (1-8)
PRMCNTL  DS    CL26                    CNTL STATEMENT REFERENCE
PRMSTCL  DS    CL8                     STORCLAS
PRMMGCL  DS    CL8                     MGMTCLAS
PRMDACL  DS    CL8                     DATACLAS
PRMRECO  DS    XL2                     RECORD ORG 8=KS,4=ES,2=RR,1=LS
PRMKEYO  DS    XL2                     KEY OFFSET
PRMREFD  DS    CL26                    SMS REFDD DDNAME REFERENCE
PRMLIKE  DS    CL44                    SMS LIKE DSNAME REFERENCE
PRMAVGR  DS    XL2                     80=SINGLE, 40=THOU ,20=MILL
PRMDSNT  DS    XL2                     DSNTYPE, 80=PDSE, 40=PDS
*
*
*
PARM2    DSECT ,                       2ND PARAMETER DESCRIPTION
REQCODE  DS    CL1                     REQUEST CODE, A=ALLOC, V=VOLSER
RETCODE  DS    CL2                     DYNALLOC RETURN CODE
ERRRET   DS    CL4                     ERROR RETURN CODE
ERRMSG   DS    CL71                    ERROR REASON MESSAGE
INFORET  DS    CL4                     INFO RETURN CODE
INFOMSG  DS    CL71                    INFORMATION REASON MESSAGE
*
*
*
ALLOCDYN CSECT
         END
