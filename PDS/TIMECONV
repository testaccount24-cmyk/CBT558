         TITLE '***** COMPUTE DATE/TIME USING A STCK VALUE *****'
         PRINT NOGEN
TIMECONV SVLNK R3,,,SUB
*
**********************************************************************
* USER PASSES THE ADDRESS OF A DOUBLEWORD TIME VALUE IN THE FORMAT   *
* GIVEN BY THE STCK INSTRUCTION, AND AN 11-BYTE AREA IN WHICH THIS   *
* ROUTINE RETURNS THE DATE AND TIME IN CHARACTER FORMAT: YYDDDHHMMSS *
*  AUTHOR R. THORNTON MAY 1990                                       *
**********************************************************************
*
MAINLINE L     R2,0(R1)                 POINT TO USER'S TOD VALUE
         MVO   HEX,0(7,R2)              SAVE TOD CLOCK VALUE
         L     R9,4(R1)                 POINT TO USER RETURN AREA
         SR    R15,R15                  CLEAR FOR INSERTS
COMPUT6  ZAP   PTOD,PWR6                GET FIRST MULTIPLIER
         IC    R15,HEX                  GET HIGH ORDER BYTE OF 7
         CVD   R15,DBLWD                CONVERT TO PACKED
         MP    PTOD,DBLWD               FIND DECIMAL EQUIVALENT
COMPUT5  ZAP   PMUL,PWR5                GET NEXT MULTIPLIER
         IC    R15,HEX+1                GET NEXT LOWER BYTE OF 7
         CVD   R15,DBLWD                CONVERT TO PACKED
         MP    PMUL,DBLWD               FIND DECIMAL EQUIVALENT
         AP    PTOD,PMUL                ADD TO TOTAL
COMPUT4  ZAP   PMUL,PWR4                GET NEXT MULTIPLIER
         IC    R15,HEX+2                GET NEXT LOWER BYTE OF 7
         CVD   R15,DBLWD                CONVERT TO PACKED
         MP    PMUL,DBLWD               FIND DECIMAL EQUIVALENT
         AP    PTOD,PMUL                ADD TO TOTAL
COMPUT3  ZAP   PMUL,PWR3                GET NEXT MULTIPLIER
         IC    R15,HEX+3                GET NEXT LOWER BYTE OF 7
         CVD   R15,DBLWD                CONVERT TO PACKED
         MP    PMUL,DBLWD               FIND DECIMAL EQUIVALENT
         AP    PTOD,PMUL                ADD TO TOTAL
ADDLST3  ICM   R15,7,HEX+4              GET LAST 3 BYTES OF 7
         CVD   R15,DBLWD                CONVERT TO PACKED
         AP    PTOD,DBLWD               ADD TO TOTAL
         OI    PTOD+12,X'0F'            CHOP OFF MICROSECONDS
         ZAP   PTOD,PTOD(13)            RIGHT JUSTIFY WHOLE SECONDS
         DP    PTOD,P60                 COMPUTE SECONDS PAST MIN
         ZAP   SECCALC,PTOD+14(2)       MOVE SECONDS PAST MIN
         ZAP   PTOD,PTOD(14)            RIGHT JUSTIFY WHOLE MINUTES
         DP    PTOD,P60                 COMPUTE MINUTES PAST HR
         ZAP   MINCALC,PTOD+14(2)       MOVE MINUTES PAST HR
         ZAP   PTOD,PTOD(14)            RIGHT JUSTIFY WHOLE HOURS
         DP    PTOD,P24                 COMPUTE HOURS PAST MIDNITE
         ZAP   HOURCALC,PTOD+14(2)      MOVE HOURS PAST MIDNITE
         ZAP   PTOD,PTOD(14)            RIGHT JUSTIFY WHOLE DAYS
         AP    PTOD,P1                  ADJUST FOR NON-LEAP 1900
         CP    PTOD,P365                PAST END OF 1900?
         BH    COMPQ                    YES
         CP    PTOD,P58                 PAST FEB 28, 1900?
         BH    COMPQ                    YES
         SP    PTOD,P1                  NO, READJUST IN 1900
COMPQ    DP    PTOD,P1461               COMPUTE QUAD-YEARS
         MP    PTOD(13),P4              TOTAL YEARS IN QUAD-YEARS
         ZAP   YEARCALC,PTOD(13)        YEARS IN QUAD-YEARS
         XC    PTOD(13),PTOD            DAYS OVER A QUAD-YEAR
         CP    PTOD,P365                MORE THAN 1 YEAR?
         BH    OVR1YR                   YES
         B     SETDAYS                  CONTINUE
OVR1YR   AP    YEARCALC,P1              ADD 1 FOR THE LEAP YEAR
         SP    PTOD,P366                DEDUCT THE LEAP YEAR
         CP    PTOD,P364                MORE THAN A YEAR LEFT?
         BNH   SETDAYS                  NO
OVR2YR   AP    YEARCALC,P1              ADD FOR SECOND YEAR
         SP    PTOD,P365                DEDUCT FOR SECOND YEAR
         CP    PTOD,P364                MORE THAN A YEAR LEFT?
         BNH   SETDAYS                  NO
OVR3YR   AP    YEARCALC,P1              ADD FOR THIRD YEAR
         SP    PTOD,P365                DEDUCT FOR THIRD YEAR
SETDAYS  ZAP   DAYCALC,PTOD             COPY DAY OF YEAR
         AP    DAYCALC,P1               MAKE RELATIVE TO 1
         UNPK  0(2,R9),YEARCALC
         OI    1(R9),C'0'
         UNPK  2(3,R9),DAYCALC
         OI    4(R9),C'0'
         UNPK  5(2,R9),HOURCALC
         OI    6(R9),C'0'
         UNPK  7(2,R9),MINCALC
         OI    8(R9),C'0'
         UNPK  9(2,R9),SECCALC
         OI    10(R9),C'0'
         L     R13,4(R13)              GET CALLER'S SAVE AREA ADDR
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGS
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN TO CALLER
*
***********************************************************************
*        DATA AREAS                                                   *
***********************************************************************
*
PMUL     DC    PL16'0'                 MULTIPLY AREA
PTOD     DC    PL16'0'                 DECIMAL EQUIVALENT TOD VALUE
HEX      DC    XL8'00'                 HEX TOD CLOCK AREA
DBLWD    DC    D'0'                    DOUBLEWORD WORK AREA
PWR3     DC    PL5'16777216'           VALUE FOR 256**3
PWR4     DC    PL6'4294967296'         VALUE FOR 256**4
PWR5     DC    PL7'1099511627776'      VALUE FOR 256**5
PWR6     DC    PL8'281474976710656'    VALUE FOR 256**6
YEARCALC DC    PL2'0'                   YEARS
DAYCALC  DC    PL2'0'                   DAYS
HOURCALC DC    PL2'0'                   HOURS
MINCALC  DC    PL2'0'                   MINUTES
SECCALC  DC    PL2'0'                   SECONDS
P1       DC    PL1'1'                   CONSTANT 1
P4       DC    PL4'4'                   CONSTANT 4
P58      DC    PL2'58'                  CONSTANT 58
P60      DC    PL2'60'                  CONSTANT 60
P24      DC    PL2'24'                  CONSTANT 24
P364     DC    PL2'364'                 CONSTANT 364
P365     DC    PL2'365'                 CONSTANT 365
P366     DC    PL2'366'                 CONSTANT 366
P1461    DC    PL3'1461'                CONSTANT 1461
         LTORG
         END
