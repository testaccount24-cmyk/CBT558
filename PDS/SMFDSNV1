         TITLE '***** EXTRACT DATA FOR A VSAM DSNAME FROM SMF *****'
         PRINT NOGEN
SMFDSNV1 SVLNK R3,R4
**********************************************************************
* SELECTS SMF TYPE 17,18,60,62, AND 64 FOR DSNAME GIVEN IN READER1.  *
* OUTPUT MAY BE FED INTO SMFDSNV2                                    *
*                                                                    *
* WRITE AN EXTRACT DATA FILE CONTAINING ONE RECORD FOR EACH SMF TYPE *
* 17 (SCRATCH DATASET STATUS), TYPE 18 (RENAME DATA SET STATUS),     *
* TYPE 60 (VSAM VOLUME DATA SET UPDATED), TYPE 62 (VSAM COMPONENT    *
* OR CLUSTER OPENED), AND TYPE 64 (VSAM COMPONENT OR CLUSTER STATUS) *
* FOR THE DATASET NAME OR GROUP SPECIFIED ON THE CONTROL CARD IN THE *
* READER1 INPUT FILE.                                                *
*                                                                    *
*  THE DSNAME MAY END IN * FOR A GENERIC COMPARE                     *
*                                                                    *
*  DDNAME RECFM LRECL IN/OUT CONTENT                                 *
*  INPUT1   VBS 32760+INPUT  SMF DATA  (LOGICAL RECORDS BUILT BY PGM)*
*  READER1   FB    80 INPUT  CONTROL CARD                            *
*  OUTPUT1   FB   106 OUTPUT EXTRACT FILE                            *
*                                                                    *
*  AUTHOR R. THORNTON MAR 1991                                       *
**********************************************************************
*
***********************************************************************
*        INITIALIZATION                                               *
***********************************************************************
OPENS    OPEN  (OUTPUT1,OUTPUT,INPUT1,,READER1) OPEN FILES
         L     R2,=F'65536'             GET SMF RECORD AREA LENGTH
         STORAGE OBTAIN,LENGTH=(2),ADDR=SMFRECDA GET SMF RECD AREA
         PUT   OUTPUT1,HEADER1          WRITE OUTPUT HEADER1
         PUT   OUTPUT1,HEADER2          WRITE OUTPUT HEADER2
         PUT   OUTPUT1,HEADER3          WRITE OUTPUT HEADER3
         PUT   OUTPUT1,HEADER4          WRITE OUTPUT HEADER3
         GET   READER1,DSNAMCRD         READ DSNAME CARD
         LA    R1,DSNAME                POINT TO DSNAME FIELD
         LA    R2,44                    LOOP COUNT
         SR    R15,R15                  CLEAR FOR BYTE COUNT
CHKSTAR  CLI   0(R1),C' '               END OF DSNAME?
         BE    POINTCVT                 YES
         CLI   0(R1),C'*'               GENERIC DSNAME?
         BE    GENERIC                  YES
         LA    R15,1(R15)               ADD 1 TO BYTE COUNTER
         LA    R1,1(R1)                 ADVANCE TO NEXT BYTE
         BCT   R2,CHKSTAR               LOOP THRU DSNAME
         B     POINTCVT                 NOT GENERIC
GENERIC  BCTR  R15,0                    COMPUTE
         STH   R15,CPRLENG                    AND SAVE IT
POINTCVT L     R1,16                    POINT TO CVT
         L     R1,0(R1)                 POINT TO NEW-OLD WORDS
         L     R1,0(R1)                 POINT TO MY TCB
         L     R1,12(R1)                POINT TO MY TIOT
         AH    R1,INPUT1+40             POINT TO ENTRY FOR INPUT1
         ST    R1,TIOTDD                SAVE INPUT1 TIOT DD ENTRY ADDR
         B     MAINLINE                 GO PROCESS
ENDCTL   WTO   'SMFDSNV1: MISSING CONTROL CARD, ABENDING',ROUTCDE=11
         ABEND 111,DUMP                 TERMINATE IN ERROR
***********************************************************************
*        MAINLINE PROCESSING                                          *
***********************************************************************
MAINLINE BAS   R9,GETSMF                GET INPUT AREA ADDRESS
         USING TYPE17,R10
         SR    R2,R2                    CLEAR FOR TRT
         TRT   SMF17RTY,SELECTYP        SCAN FOR DESIRED RECORD TYPES
         BZ    MAINLINE                 NOT A DESIRED TYPE, SKIP IT
         DROP  R10
BRTBL    B     BRTBL(R2)                BRANCH TO APPROPRIATE POINT
         B     GOT17                    BRANCH IF TYPE 17
         B     GOT18                    BRANCH IF TYPE 18
         B     GOT60                    BRANCH IF TYPE 60
         B     GOT62                    BRANCH IF TYPE 62
         B     GOT64                    BRANCH IF TYPE 64
         USING TYPE17,R10
GOT17    LA    R9,SMF17DSN              POINT TO TYPE 17 DSNAME
         MVC   JLOGDDNM,BLANKS          BLANK DDNAME
         MVC   JLOGVOL,SMF17FVL         MOVE VOLUME SERIAL
         B     COMPARE                  GO CHECK
         DROP  R10
         USING TYPE18,R10
GOT18    LA    R9,SMF18ODS              POINT TO TYPE 18 OLD DSNAME
         MVC   JLOGDDNM,BLANKS          BLANK DDNAME
         MVC   JLOGVOL,SMF18FVL         MOVE VOLUME SERIAL
         LH    R1,CPRLENG               GET COMPARE LENGTH
         EX    R1,EXCMPR                FOUND THE DSN?
         BE    JLOGOUT                  YES
         LA    R9,SMF18NDS              POINT TO TYPE 18 NEW DSNAME
         B     COMPARE                  FOUND THE DSN?
         DROP  R10
         USING TYPE60,R10
GOT60    LA    R9,SMF60ENM              POINT TO TYPE 60 ENTRY NAME
         MVC   JLOGVOL,BLANKS           CLEAR VOLUME SERIAL
         MVC   JLOGDDNM,BLANKS          CLEAR DDNAME
         B     COMPARE                  FOUND THE DSN?
         DROP  R10
         USING TYPE62,R10
GOT62    LA    R9,SMF62DNM              POINT TO TYPE 62 OLD DSNAME
         MVC   JLOGVOL,SMF62VSR         MOVE VOLUME SERIAL
         MVC   JLOGDDNM,BLANKS          CLEAR DDNAME
         B     COMPARE                  FOUND THE DSN?
         DROP  R10
         USING TYPE64,R10
GOT64    LA    R9,SMF64DNM              POINT TO TYPE 64 OLD DSNAME
         MVC   JLOGVOL,SMF64VSN         MOVE VOLUME SERIAL
         MVC   JLOGDDNM,BLANKS          CLEAR DDNAME
         B     COMPARE                  FOUND THE DSN?
         DROP  R10
         USING TYPE17,R10
COMPARE  LH    R1,CPRLENG               GET COMPARE LENGTH
         EX    R1,EXCMPR                FOUND THE DSN?
         BNE   MAINLINE                 NO, GO READ SMF FILE
         DROP  R10
         USING TYPE17,R10
JLOGOUT  MVC   JLOGJBN,SMF17JBN         JOBNAME TO OUTPUT
         UNPK  JLOGRSD,SMF17RSD         READER START DATE TO OUTPUT
         ICM   R1,15,SMF17RST           GET READER START TIME
         CVD   R1,DBLWD                 CONVERT TO DECIMAL
         UNPK  JLOGRST,DBLWD            READER START TIME TO OUTPUT
         OI    JLOGRST+7,C'0'           CLEAR SIGN
         UNPK  JLOGCRDT,SMF17DTE        RECORD CREATION DATE TO OUTPUT
         ICM   R1,15,SMF17TME           RECORD CREATION TIME TO OUTPUT
         CVD   R1,DBLWD                 CONVERT TO DECIMAL
         UNPK  JLOGCRTM,DBLWD           RECORD CREATION TIME TO OUTPUT
         OI    JLOGCRTM+7,C'0'          CLEAR SIGN
         MVC   JLOGSID,SMF17SID         SYSTEM ID TO OUTPUT
         SR    R1,R1                    CLEAR FOR INSERT
         IC    R1,SMF17RTY              GET SMF RECORD TYPE
         CVD   R1,DBLWD                 CONVERT TO DECIMAL
         UNPK  JLOGTYPE,DBLWD           SMF TYPE TO OUTPUT
         OI    JLOGTYPE+1,C'0'          CLEAR SIGN
         L     R1,TIOTDD                TIOT DD ENTRY FOR INPUT1
         L     R1,16(R1)                UCB FOR INPUT1
         MVC   JLOGVOLS,28(R1)          VOLSER TO OUTPUT
         MVC   JLOGDSN,0(R9)            DSNAME TO OUTPUT
WRTJLOG  PUT   OUTPUT1,JLOGRECD         WRITE JOBLOG EXTRACT RECORD
         B     MAINLINE                 GO READ SMF
EXCMPR   CLC   DSNAME(1),0(R9)          EXECUTED COMPARE
*
***********************************************************************
*        ASSEMBLE NEXT SMF RECORD IN SMFRECD (GOTTEN) AREA            *
*        FOR EFFICIENCY, ONLY TYPE 14 AND 15 RECORDS ARE ASSEMBLED.   *
*        ON RETURN, R10 WILL POINT TO THE NEXT SMF RECORD, FULLY      *
*        ASSEMBLED. RECORD LENGTH WILL BE RIGHT JUSTIFIED IN THE      *
*        SMFLEN FULLWORD. DO NOT USE THE RDW OF THE RECORD AREA, AS   *
*        THIS WILL ONLY BE ACCURATE FOR RECORDS CONTAINED COMPLETELY  *
*        IN ONE BLOCK WHICH ARE PROCESSED IN THE INPUT BLOCK.         *
***********************************************************************
GETSMF   GET   INPUT1                   READ NEXT SMF SEGMENT
         CLI   2(R1),X'01'              IS IT FIRST SEGMENT OF A RECD?
         BH    GETSMF                   NO
         CLI   5(R1),17                 IS IT A TYPE 17 RECORD?
         BE    SAVADLN                  YES
         CLI   5(R1),18                 IS IT A TYPE 18 RECORD?
         BE    SAVADLN                  YES
         CLI   5(R1),60                 IS IT A TYPE 60 RECORD?
         BE    SAVADLN                  YES
         CLI   5(R1),62                 IS IT A TYPE 62 RECORD?
         BE    SAVADLN                  YES
         CLI   5(R1),64                 IS IT A TYPE 64 RECORD?
         BNE   GETSMF                   NO
SAVADLN  ST    R1,LASTSEGA              SAVE ITS ADDRESS
         LH    R2,0(R1)                 GET RECORD LENGTH
         ST    R2,SMFLEN                AND SAVE IT
         CLI   2(R1),X'00'              IS IT A COMPLETE RECORD?
         BH    GOTFIRST                 NO
         LR    R10,R1                   COPY RECORD ADDRESS
         BR    R9                       RETURN
GOTFIRST L     R10,SMFRECDA             R10 ALWAYS POINTS TO SMF RECD
         LR    R14,R1                   COPY SEGMENT ADDRESS
         LH    R15,0(R14)               GET SEGMENT LENGTH
         LR    R1,R15                   COPY LENGTH
         LR    R0,R10                   COPY RECORD AREA ADDRESS
         MVCL  R0,R14                   MOVE 1ST SEGMENT TO AREA
GETSEGMT GET   INPUT1                   GET NEXT SEGMENT OF RECORD
         ST    R1,LASTSEGA              SAVE ITS ADDRESS
         CLI   2(R1),X'01'              FIRST SEGMENT AGAIN?
         BH    OKNOT1                   NO
         WTO   'SMFDSNV1: SEGMENT 1 FOUND BEFORE END OF RECORD',       X
               ROUTCDE=11
         ABEND 111,DUMP
OKNOT1   CLI   2(R1),X'04'              VALID SEGMENT TYPE?
         BL    GOTMIDL                  YES
         WTO   'SMFDSNV1: INVALID SEGMENT TYPE IN RECORD',             X
               ROUTCDE=11
         ABEND 222,DUMP
GOTMIDL  LA    R14,4(0,R1)              COPY SEGMENT (DATA) ADDRESS
         LH    R2,2(R1)                 GET SEGMENT LENGTH
         SH    R2,=H'4'                 DEDUCT RDW SIZE
         LR    R1,R2                    COPY LENGTH FOR MOVE
         LR    R15,R1                   COPY LENGTH
         LR    R0,R10                   COPY RECORD AREA ADDRESS
         A     R0,SMFLEN                COMPUTE JOIN POINT ADDRESS
         A     R2,SMFLEN                COMPUTE LENGTH SO FAR
         C     R2,=F'65536'             WILL IT EXCEED AREA SIZE?
         BL    SETLENG                  NO, OK TO CONTINUE
         WTO   'SMFDSNV1: RECORD EXCEEDS 65536 BYTES, AREA OVERFLOW',  X
               ROUTCDE=11
         ABEND 333,DUMP
SETLENG  ST    R2,SMFLEN                UPDATE LENGTH
         MVCL  R0,R14                   MOVE THIS SEGMENT TO AREA
         L     R1,LASTSEGA              POINT TO THIS SEGMENT
         CLI   2(R1),X'03'              IS IT AN INTERMEDIATE SEGMENT?
         BE    GETSEGMT                 YES
         BR    R9                       NO, LAST SEGMENT, RETURN
*
***********************************************************************
*        END OF JOB                                                   *
***********************************************************************
EOJ      CLOSE (OUTPUT1,,INPUT1,,READER1) CLOSE FILES
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         L     R14,12(R13)             PICK UP RETURN ADDRESS
         L     R15,RETCODE             GET RETURN CODE
         LM    R0,R12,20(R13)          RESTORE CALLER'S REGS
         BR    R14                     RETURN TO CALLER
***********************************************************************
*        DATA DEFINITIONS                                             *
***********************************************************************
DBLWD    DS    D                       WORK AREA
SMFRECDA DS    A                       POINTER TO SMF RECORD AREA
SMFLEN   DS    F                       TOTAL SMF RECORD LENGTH
LASTSEGA DS    A                       ADDRESS OF LAST SMF SEGMENT
RETCODE  DC    F'0'                    RETURN CODE
TIOTDD   DC    A(0)                    @ TIOT DD ENTRY FOR INPUT1
BLANKS   DC    CL8' '                  BLANKS
CPRLENG  DC    H'43'                   LENGTH CODE FOR COMPARE
*
DSNAMCRD DS    0CL80                   DSNAME CONTROL CARD
DSNAME   DS    CL44                      REQUESTED DSNAME
         DS    CL36
*
FINDBLNK DC    XL256'00'               TABLE TO SCAN FOR BLANK
         ORG   FINDBLNK+C' '
         DC    X'FF'                   STOP ON C' '
         ORG
SELECTYP DC    XL256'00'                SCAN FOR DESIRED RECORD TYPE
         ORG   SELECTYP+17
         DC    X'0408'                  TYPE 17, 18
         ORG   SELECTYP+60
         DC    X'0C'                    TYPE 60
         ORG   SELECTYP+62
         DC    X'10'                    TYPE 62
         ORG   SELECTYP+64
         DC    X'14'                    TYPE 64
         ORG
*
JLOGRECD DS    0CL106                   JOBLOG EXTRACT RECORD
JLOGJLOG DS    0CL16                      JOBLOG NUMBER
JLOGJBN  DS    CL8                          JOBNAME
JLOGRSD  DS    CL6                          READER START DATE
JLOGRST  DS    CL8                          READER START TIME
JLOGCRDT DS    CL6                        CREATION DATE
JLOGCRTM DS    CL8                        CREATION TIME
JLOGSID  DS    CL4                        SYSTEM ID
JLOGTYPE DS    CL2                        SMF RECORD TYPE
JLOGVOLS DS    CL6                        VOLSER OF SMF TAPE
JLOGDDNM DS    CL8                        DDNAME
JLOGDSN  DS    CL44                       DSNAME
JLOGVOL  DS    CL6                        VOLUME SERIAL
*
HEADER1  DS    0CL106                   JOBLOG EXTRACT RECORD
         DC    CL8' '                       JOBNAME
         DC    CL6' RDR  '                  READER START DATE
         DC    CL8' RDR  '                  READER START TIME
         DC    CL6' '                     CREATION DATE
         DC    CL8' '                     CREATION TIME
         DC    CL4'SMF '                  SYSTEM ID
         DC    CL2'RT'                    SMF RECORD TYPE
         DC    CL6' SMF  '                VOLSER OF SMF TAPE
         DC    CL8' '                     DDNAME
         DC    CL44' '                    DSNAME
         DC    CL6' '                     VOLUME SERIAL
*
HEADER2  DS    0CL106                   JOBLOG EXTRACT RECORD
         DC    CL8'  JOB   '                JOBNAME
         DC    CL6' STRT '                  READER START DATE
         DC    CL8' STRT '                  READER START TIME
         DC    CL6' CREA '                CREATION DATE
         DC    CL8' CREA '                CREATION TIME
         DC    CL4'SYS '                  SYSTEM ID
         DC    CL2'EY'                    SMF RECORD TYPE
         DC    CL6' TAPE '                VOLSER OF SMF TAPE
         DC    CL8' '                     DDNAME
         DC    CL44' '                    DSNAME
         DC    CL6' '                     VOLUME SERIAL NUMBER
*
HEADER3  DS    0CL106                   JOBLOG EXTRACT RECORD
         DC    CL8'  NAME  '                JOBNAME
         DC    CL6' DATE '                  READER START DATE
         DC    CL8' TIME   '                READER START TIME
         DC    CL6' DATE '                CREATION DATE
         DC    CL8' TIME   '              CREATION TIME
         DC    CL4'ID  '                  SYSTEM ID
         DC    CL2'CP'                    SMF RECORD TYPE
         DC    CL6' VOL  '                VOLSER OF SMF TAPE
         DC    CL8' DDNAME '              DDNAME
         DC    CL44'DSNAME'               DSNAME
         DC    CL6'VOLSER'                VOLUME SERIAL NUMBER
*
HEADER4  DS    0CL106                   JOBLOG EXTRACT RECORD
         DC    8C'.'                        JOBNAME
         DC    6C'_'                        READER START DATE
         DC    8C'.'                        READER START TIME
         DC    6C'_'                      CREATION DATE
         DC    8C'.'                      CREATION TIME
         DC    4C'_'                      SYSTEM ID
         DC    2C'.'                      SMF RECORD TYPE
         DC    6C'_'                      VOLSER OF SMF TAPE
         DC    8C'.'                      DDNAME
         DC    44C'_'                     DSNAME
         DC    6C'.'                      VOLUME SERIAL NUMBER
*
P0       DC    P'0'                    CONSTANT 0
P1       DC    P'1'                    CONSTANT 1
EDITWRD  DC    XL10'40206B2020206B202121'
*
PRT      DS    0CL80
PRTCNT   DC    CL10' '                 COUNT
         DC    CL1' '
PRTDSN   DC    CL44' '                 DSNAME
         DC    CL25' '
***********************************************************************
*        FILE DEFINITIONS                                             *
***********************************************************************
READER1  DCB   DSORG=PS,MACRF=GM,DDNAME=READER1,EODAD=ENDCTL,          X
               RECFM=FB,LRECL=80
INPUT1   DCB   DSORG=PS,MACRF=GL,DDNAME=INPUT1,EODAD=EOJ,              X
               RECFM=VBS,LRECL=X
OUTPUT1  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT1,                       X
               RECFM=FB,LRECL=106
         LTORG
*******************************************************************
*                   DSECTS                                        *
*******************************************************************
*
*        INPUT AREA FOR SMF RECORD
*
         PRINT GEN
TYPE17   DSECT
         IFASMFR 17
TYPE18   DSECT
         IFASMFR 18
TYPE60   DSECT
         IFASMFI6 60
TYPE62   DSECT
         IFASMFR 62
TYPE64   DSECT
         IFASMFR 64
JFCBDEF  DSECT
         IEFJFCBN LIST
         END
