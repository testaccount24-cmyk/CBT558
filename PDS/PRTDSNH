         TITLE '*** PRINT REQUESTED DSNAME HISTORY ***'
         PRINT GEN
PRTDSNH  CSECT
         USING *,R15
         STM   R14,R12,12(R13)       SAVE CALLER'S REGS
         LR    R3,R15                SET PROGRAM BASE REG
         DROP  R15
         USING PRTDSNH,R3
         LA    R15,SAVE              POINT TO MY SAVE AREA
         ST    R15,8(R13)            SET LSA
         ST    R13,4(R15)            SET HSA
         LR    R13,R15               SET SAVE AREA POINTER
         B     OPEN                  BRANCH AROUND CONSTANTS
         DC    CL8'PRTDSNH'          EYECATCHER
SAVE     DS    18F                   REGISTER SAVE AREA
********************************************************************
* INITIALIZATION: OPEN FILES FOR PROCESSING. FOR THE HISTORY FILE, *
* READ THE JFCB TO GET INFORMATION NEEDED BY THE OBTAIN/CAMLST     *
* MACRO SET WHICH READ THE FORMAT 1 LABEL FOR THE HISTORY FILE. THE*
* LAST USED TTR FIELD IN THE FORMAT1 LABEL IS SAVED FOR THE BINARY *
* SEARCH ROUTINE.                                                  *
********************************************************************
OPEN     OPEN  (LISTING,OUTPUT,HISTORY,,REQUEST) OPEN FILES
         RDJFCB HISTORY              READ THE JFCB
         LTR   R15,R15               FORMAT1 READ O.K?
         BZ    READF1LB              YES
         ST    R15,SAVER15           SAVE RETURN CODE FOR DEBUGGING
         WTO   'ERROR READING JFCB FOR HISTORY FILE',ROUTCDE=11
         ABEND 111,DUMP
READF1LB OBTAIN CAMMAC               READ THE FORMAT 1 LABEL
         MVC   DS1LSTAR(3),FORMAT1+54   SAVE LAST USED TTR
         ST    R15,SAVER15           SAVE RETURN CODE FOR DEBUGGING
         LTR   R15,R15               FORMAT1 READ O.K?
         BZ    MAINLINE              YES
         WTO   'ERROR READING FORMAT1 DSCB FOR HISTORY FILE',ROUTCDE=11
         ABEND 222,DUMP
********************************************************************
* MAINLINE ROUTINE. FIRST READ THE REQUEST FILE TO GET THE DSNAME  *
* OF INTEREST USING THE READREQ ROUTINE. AT END OF REQUEST FILE    *
* TERMINATE PROCESSING. FOR EACH REQUEST PERFORM THE SRCHHIST      *
* TO POSITION FOR READING THE HISTORY FILE, THEN THE READHIST      *
* ROUTINE TO FIND THE HISTORY RECORD FOR THE REQUESTED DSNAME. IF  *
* A HISTORY RECORD IS FOUND, PERFORM THE PRTHIST ROUTINE TO PRINT  *
* THE HISTORY RECORD. IF THE REQUEST IS GENERIC, REPEAT FROM THE   *
* SRCHHIST PERFORM, ELSE GO BACK TO READ THE NEXT REQUEST.         *
********************************************************************
MAINLINE BAS   R9,READREQ            READ NEXT REQUEST RECORD
         BAS   R9,SRCHHIST           SEARCH THE HISTORY FILE
MLREAD   BAS   R9,READHIST           GO READ NEXT HISTORY RECORD
         CLI   FOUND,1               FOUND THE HISTORY RECORD?
         BE    MLPRINT               YES
         CLI   GENFND,1              NO, GENERIC FOUND?
         BE    MAINLINE              YES
MLNOFND  BAS   R9,PRTNOTFD           NO, PRINT NOT FOUND MESSAGE
         B     MAINLINE              GO READ NEXT REQUEST
MLPRINT  BAS   R9,PRTHIST            YES, GO PRINT THE RECORD
         CLI   GENERIC,1             THIS A GENERIC REQUEST?
         BE    MLREAD                YES
         B     MAINLINE              NO, GO READ NEXT REQUEST
********************************************************************
* READ NEXT REQUEST RECORD. CALCULATE THE LENGTH CODE OF THE DSNAME*
* AND SET THE GENERIC INDICATOR IF IT ENDS WITH AN ASTERISK.       *
********************************************************************
READREQ  ST    R9,RR9                SAVE RETURN ADDRESS
         MVI   FOUND,0               CLEAR FOUND INDICATOR
         MVI   GENERIC,0             CLEAR GENERIC INDICATOR
         MVI   GENFND,0              CLEAR GENERIC FOUND INDICATOR
         MVC   DSNLENG,HWD0          CLEAR DSNAME LENGTH CODE
         GET   REQUEST,REQUDSN       READ NEXT REQUEST RECORD
         CLI   REQUDSN,C' '          FIRST BYTE OF DSNAME IS BLANK?
         BE    RRXIT                 YES
         LA    R15,REQUDSN+43        POINT TO END OF REQUESTED DSNAME
RRCKRHE  CLI   0(R15),C' '           AT RIGHT HAND END?
         BNE   RRATRHE               YES
         BCT   R15,RRCKRHE           LOOP TO FIND RIGHT HAND END
RRATRHE  CLI   0(R15),C'*'           DSNAME ENDS WITH ASTERISK?
         BNE   RRCALC                NO
         MVI   GENERIC,1             YES, INDICATE GENERIC NAME
         BCTR  R15,0                 BACK UP PAST ASTERISK
RRCALC   LA    R1,REQUDSN            CALCULATE
         SR    R15,R1                   DSNAME LENGTH CODE
         STH   R15,DSNLENG           SAVE DSNAME LENGTH CODE
RRXIT    L     R9,RR9                GET RETURN ADDRESS
         BR    R9                    EXIT
********************************************************************
* BINARY SEARCH ROUTINE FOR THE HISTORY FILE. A "NOTE" POINTER IS  *
* BUILT USING A RELATIVE TRACK NUMBER BETWEEN 0 AND END OF FILE,   *
* THEN A POINT IS ISSUED TO POSITION TO THAT TRACK, FOLLOWED BY A  *
* READ FOR THE FIRST BLOCK ON THE TRACK. THIS IS ALL REPEATED,     *
* DIVIDING THE TRACK DIFFERENCE BY 2 AND ADJUSTING FORWARD AND BACK*
* UNTIL THE DIFFERENCE IS ONE, AND HISTORY COMPARES LOW.           *
********************************************************************
SRCHHIST ST    R9,SH9                SAVE RETURN ADDRESS
         MVI   USECURR,1             INDICATE USE CURRENT BLOCK
         XC    TT,TT                 ZERO LAST READ TRACK
         LH    R1,LASTRK             PICK UP LAST REL TRK NBR
         SRL   R1,1                  DIVIDE BY 2
         STH   R1,OFFSET             INITIAL OFFSET
         MVI   MOTION,FORWARD        SET MOTION FORWARD
SHNEXT   LH    R1,TT                 GET CURRENT TRACK NBR
         CLI   MOTION,BACKWARD       IS MOTION BACKWARD?
         BE    SHSUB                 YES
SHADD    AH    R1,OFFSET             ADD OFFSET
         CH    R1,LASTRK             PAST END OF DATASET?
         BNH   SHPOINT               NO
         LH    R1,LASTRK             YES, FORCE TO LAST TRACK
         B     SHPOINT               AND GO TO POINT
SHSUB    SH    R1,OFFSET             SUBTRACT OFFSET
         BNM   SHPOINT               BRANCH IF NOT NEGATIVE
         SR    R1,R1                 NEGATIVE, FORCE TO FIRST TRACK
SHPOINT  STH   R1,TT                 UPDATE CURRENT TRACK NBR
         POINT HISTORY,TTRZ          POINT TO TRACK
         READ  READ1,SF,HISTORY,BLOCK READ FIRST BLOCK ON TRACK
         CHECK READ1                 AWAIT READ COMPLETION
         SR    R1,R1                 CLEAR FOR INSERT
         IC    R1,BLOCK+8            GET DSN LENGTH FROM HIST RECD
         CH    R1,DSNLENG            HIST DSNAME SHORTER THAN REQUEST?
         BNH   SHCOMPR               YES
         LH    R1,DSNLENG            NO, USE REQUEST LENGTH
SHCOMPR  MVI   MOTION,FORWARD        ASSUME FORWARD SEARCH
         EX    R1,SHCLC              COMPARE DSNAMES
         BL    SHDIVIDE              BLOCK LOW, LEAVE FORWARD
         MVI   MOTION,BACKWARD       ELSE SET FOR BACKWARD MOVEMENT
SHDIVIDE LH    R1,OFFSET             PICK UP LAST OFFSET USED
         SRL   R1,1                  DIVIDE BY TWO
         STH   R1,OFFSET             AND UPDATE OFFSET VALUE
         CH    R1,HWD1               OFFSET GREATER THAN 1?
         BH    SHNEXT                YES, CONTINUE
         CLI   MOTION,FORWARD        POSITIONED BEFORE THE DSNAME?
         BE    SHXIT                 YES, READY TO EXIT
         MVC   OFFSET,HWD1           NO, INSURE OFFSET NOT ZERO
         B     SHNEXT                GO LOOK AGAIN
SHXIT    LA    R1,BLOCK              POINT TO BLOCK
         AH    R1,0(R1)              POINT TO END OF BLOCK+1
         ST    R1,BLKENDA            SAVE END OF BLOCK ADDRESS
         LA    R1,BLOCK+4            POINT TO FIRST RECORD IN BLOCK
         ST    R1,CURRECA            SAVE RECORD ADDRESS
         L     R9,SH9                GET RETURN ADDRESS
         BR    R9                    EXIT
SHCLC    CLC   BLOCK+9(1),REQUDSN    EXECUTED COMPARE
********************************************************************
* PRINT A "NOT FOUND" MESSAGE                                      *
********************************************************************
PRTNOTFD ST    R9,PN9                SAVE RETURN ADDRESS
         MVC   PRT(44),REQUDSN       REQUESTED DSNAME TO PRINT
         LA    R1,PRT                POINT TO PRINT LINE
         AH    R1,DSNLENG            POINT TO END OF DSNAME
         MVC   2(32,R1),=CL32'DSNAME NOT FOUND IN HISTORY FILE'
         BAS   R9,PRINT              GO PRINT THE MESSAGE
         BAS   R9,PRINT              AND A BLANK LINE AFTER
PNXIT    L     R9,PN9                GET RETURN ADDRESS
         BR    R9                    EXIT
********************************************************************
* READ NEXT RECORD FROM THE HISTORY FILE. SINCE BSAM IS USED TO    *
* PERMIT USE OF THE POINT MACRO, DEBLOCKING MUST BE DONE HERE.     *
* COMPARE DSNAME IN RECORD READ TO THAT REQUESTED AND SET FOUND    *
* INDICATOR IF IT MATCHES. IF NOT, CONTINUE READING UNTIL HISTORY  *
* DSNAME IS HIGH OR EOF.                                           *
********************************************************************
READHIST ST    R9,RH9                SAVE RETURN ADDRESS
         MVI   FOUND,0               INDICATE RECORD NOT FOUND
RHADVNX  L     R1,CURRECA            POINT TO CURRENT RECORD IN BLOCK
         C     R1,BLKENDA            THIS BLOCK EXHAUSTED?
         BNH   RHNEXT                NO, GO POINT TO NEXT
RHREAD   READ  READ2,SF,HISTORY,BLOCK READ NEXT BLOCK IN FILE
         CHECK READ2                 AWAIT READ COMPLETION
RHUSECUR LA    R1,BLOCK              POINT TO BLOCK
         AH    R1,0(R1)              POINT TO END OF BLOCK+1
         ST    R1,BLKENDA            SAVE END OF BLOCK ADDRESS
         LA    R1,BLOCK+4            POINT TO FIRST RECORD IN BLOCK
         ST    R1,CURRECA            SAVE RECORD ADDRESS
         B     RHSTEP                CONTINUE
RHNEXT   MVC   CURRECA,CURRENDA      SET CURRENT RECORD ADDRESS
RHSTEP   AH    R1,0(R1)              POINT TO END OF RECORD+1
         ST    R1,CURRENDA           SAVE END+1 ADDRESS
         L     R1,CURRECA            POINT TO CURRENT RECORD
         USING HISTREC,R1
         CLC   DSNLENG+1(1),HISTDSNL DSNAMES SAME LENGTH?
         BE    RHCOMPR               YES
         CLI   GENERIC,1             THIS A GENERIC REQUEST?
         BNE   RHNOMTCH              NO, NOT A MATCH
RHCOMPR  LH    R15,DSNLENG           PICK UP REQUEST DSNAME LENGTH
         EX    R15,DSNCMPR           COMPARE REQUESTED:HISTORY DSN'S
         BNE   RHNOMTCH              NO, NOT A MATCH
         MVI   FOUND,1               EQUAL, INDICATE RECORD FOUND
         B     RHXIT                 AND EXIT
RHNOMTCH SR    R15,R15               CLEAR FOR INSERT
         IC    R15,HISTDSNL          GET HISTORY DSNAME LENGTH
         CH    R15,DSNLENG           IS HISTORY LONGER?
         BNH   RHCOMP2               NO
         LH    R15,DSNLENG           YES, USE REQUESTED DSN LENGTH
RHCOMP2  EX    R15,DSNCMPR           COMPARE REQUESTED:HISTORY DSN'S
         BNL   RHADVNX               REQUEST HI/=, GO READ HISTORY
RHXIT    L     R9,RH9                GET RETURN ADDRESS
         BR    R9                    EXIT
DSNCMPR  CLC   REQUDSN(1),HISTDSN    EXECUTED COMPARE
         DROP  R1
********************************************************************
* FORMAT AND PRINT THE HISTORY RECORD AND ALL ITS ACTIVITY SEGMENTS*
********************************************************************
PRTHIST  ST    R9,PH9                SAVE RETURN ADDRESS
         MVI   GENFND,1              INDICATE GENERIC DSNAME FOUND
         L     R11,CURRECA           POINT TO CURRENT RECORD
         USING HISTREC,R11
         SR    R12,R12               CLEAR FOR INSERT
         IC    R12,HISTDSNL          GET DSNAME LENGTH
         EX    R12,PHMVDSN           MOVE DSNAME TO PRINT
         LA    R12,HISTDSN+1(R12)    POINT TO FIRST ACTIVITY SEGMENT
         ST    R12,FRSTACTV          SAVE FIRST ACTIVITY SEG ADDR
         BAS   R9,PRINT              GO PRINT DSNAME LINE
         L     R12,CURRECA           POINT TO CURRENT RECORD
         AH    R12,0(R12)            POINT TO END OF RECORD
         SH    R12,ACTVLENG          BACK UP TO LAST ACTIVITY SEG
         ST    R12,CURRACTV          SAVE CURRENT ACTIVITY SEG ADDR
PHSEG    C     R12,FRSTACTV          FINISHED PRINTING THE LAST SEG?
         BL    PHXIT                 YES
         BAS   R9,PRTACTV            GO FORMAT AND PRINT SEGMENT
         L     R12,CURRACTV          POINT TO CURRENT ACTIVITY SEG
         SH    R12,ACTVLENG          BACK UP 1 SEGMENT
         ST    R12,CURRACTV          SAVE SEGMENT ADDRESS
         B     PHSEG                 LOOP THRU ALL SEGMENTS
PHXIT    BAS   R9,PRINT              BLANK LINE FOLLOWS
         L     R9,PH9                GET RETURN ADDRESS
         BR    R9                    EXIT
PHMVDSN  MVC   PRT(1),HISTDSN        EXECUTED MOVE
         DROP  R11
********************************************************************
* FORMAT AND PRINT A HISTORY ACTIVITY SEGMENT                      *
********************************************************************
PRTACTV  ST    R9,PA9                SAVE RETURN ADDRESS
         L     R12,CURRACTV          POINT TO ACTIVITY SEGMENT
         USING ACTIVITY,R12
         MVC   PRTJOB,ACTJOB         MOVE JOB NAME
         MVC   PRTDATE,DATEDIT       MOVE EDIT MASK
         ED    PRTDATE,ACTDATE       EDIT DATE TO PRINT LINE
         ICM   R0,15,ACTTIME         GET TIME
         SRDL  R0,32                 SHIFT FOR DIVIDE
         D     R0,F100               DROP SEC/100
         SR    R0,R0                 CLEAR FOR NEXT DIVIDE
         D     R0,F60                GET SECONDS
         CVD   R0,DBLWD              CONVERT TO PACKED
         UNPK  PRTSECS,DBLWD         UNPACK TO PRINT
         OI    PRTSECS+1,C'0'        CLEAR SIGN
         MVI   PRTDLM2,C':'          SET MIN:SEC DELIMITER
         SR    R0,R0                 CLEAR SIGN
         D     R0,F60                COMPUTE MINUTES & HOURS
         CVD   R0,DBLWD              CONVERT MINUTES TO PACKED
         UNPK  PRTMINS,DBLWD         UNPACK TO PRINT
         OI    PRTMINS+1,C'0'        CLEAR SIGN
         MVI   PRTDLM1,C':'          SET HR:MIN DELIMITER
         CVD   R1,DBLWD              CONVERT HOURS TO PACKED
         UNPK  PRTHRS,DBLWD          UNPACK TO PRINT
         OI    PRTHRS+1,C'0'         CLEAR SIGN
         SR    R10,R10               CLEAR FOR INSERT
         IC    R10,ACTFLAG           PICK UP FLAG BYTE
         SR    R11,R11               CLEAR FOR SHIFT
         SRDL  R10,1                 SHIFT LOW BIT INTO R11
         MVC   PRTDEVTY,=CL4'DASD'   ASSUME DASD DATASET
         LTR   R11,R11               IS IT DASD?
         BZ    PADSORG               YES
         MVC   PRTDEVTY,=CL4'TAPE'   NO, TAPE
         SR    R11,R11               CLEAR TAPE BIT
PADSORG  SRL   R10,1                 SHIFT OUT UNUSED BIT
         SRDL  R10,3                 SHIFT DSORG BITS INTO R11
         SRL   R11,26                SHIFT TO MULTIPLY BY 8
         LA    R11,DSORGTBL(R11)     POINT TO DSORG TABLE ENTRY
         MVC   PRTDSORG,0(R11)       MOVE DSORG TO PRINT
         SLL   R10,4                 MULTIPLY ACTION BITS BY 16
         LA    R10,ACTIONTB(R10)     POINT TO ACTION TABLE ENTRY
         MVC   PRTACTN,0(R10)        MOVE ACTION TO PRINT LINE
         BAS   R9,PRINT              PRINT THE LINE
PAXIT    L     R9,PA9                GET RETURN ADDRESS
         BR    R9                    EXIT
         DROP  R12
********************************************************************
* PRINT A LINE ROUTINE                                             *
********************************************************************
PRINT    ST    R9,P9                 SAVE RETURN ADDRESS
         PUT   LISTING,PRT           PRINT THE LINE
         MVC   PRT,BLANKS            CLEAR PRINT LINE
PXIT     L     R9,P9                 GET RETURN ADDRESS
         BR    R9                    EXIT
********************************************************************
* END OF JOB. CLOSE FILES AND TERMINATE                            *
********************************************************************
EOJ      CLOSE (LISTING,,HISTORY,,REQUEST) CLOSE THE FILES
         L     R13,SAVE+4            POINT TO CALLER'S SAVE AREA
         LM    R14,R12,12(R13)       RESTORE CALLER'S REGS
         SR    R15,R15               RC=0
         BR    R14                   RETURN TO CALLER
********************************************************************
* DATA AREAS                                                       *
********************************************************************
DBLWD    DS    D                     DOUBLEWORD WORK AREA
P9       DS    A                     RETURN ADDRESS FOR PRINT
RR9      DS    A                     RETURN ADDRESS FOR READREQ
SH9      DS    A                     RETURN ADDRESS FOR SRCHHIST
PN9      DS    A                     RETURN ADDRESS FOR PRTNOTFD
RH9      DS    A                     RETURN ADDRESS FOR READHIST
PH9      DS    A                     RETURN ADDRESS FOR PRTHIST
PA9      DS    A                     RETURN ADDRESS FOR PRTACTV
SAVER15  DC    F'0'                  SAVE AREA FOR R15
DS1LSTAR DS    0F                    LAST USED TTR
LASTRK   DS    H                       LAST TRACK NUMBER
LASTRZ   DS    H                       LAST RECORD NUMBER
BLKENDA  DS    A                     ADDRESS OF CURRENT BLOCK END+1
CURRACTV DS    A                     ADDRESS OF CURRENT ACTIVITY SEG
CURRECA  DS    A                     ADDRESS OF CURRENT RECORD
CURRENDA DS    A                     ADDRESS OF CURRENT RECORD END+1
F100     DC    F'100'                CONSTANT 100
F60      DC    F'60'                 CONSTANT 60
FRSTACTV DS    A                     FIRST ACTIVITY SEGMENT ADDRESS
ACTVLENG DC    AL2(L'ACTSEG)         LENGTH OF ACTIVITY SEGMENT
OFFSET   DS    H                     TRACK OFFSET FOR SRCHHIST
HWD0     DC    H'0'                  CONSTANT 0
HWD1     DC    H'1'                  CONSTANT 1
TTRZ     DS    0F                    TTRZ ADDRESS FOR POINTS
TT       DS    H                       RELATIVE TRACK NUMBER
RZ       DC    XL2'0100'               RECORD 1 ON TRACK
DSNLENG  DC    H'0'                  DSN LENGTH CODE
FOUND    DC    X'00'                 RECORD FOUND INDICATOR
GENFND   DC    X'00'                 01 = GENERIC DSNAME FOUND
GENERIC  DC    X'00'                 01 = GENERIC DSNAME
DATEDIT  DC    XL7'40202061202020'   EDIT WORD FOR DATE
REQUDSN  DC    CL80' '               RECORD FROM REQUEST FILE
PRT      DC    CL80' '               PRINT LINE
         ORG   PRT
         DS    CL8
PRTJOB   DS    CL8                   JOB NAME
         DS    CL2
PRTDATE  DS    CL7                   DATE
         DS    CL2
PRTHRS   DS    CL2                   HOUR
PRTDLM1  DS    CL1
PRTMINS  DS    CL2                   MIN
PRTDLM2  DS    CL1
PRTSECS  DS    CL2                   SECONDS
         DS    CL2
PRTACTN  DS    CL16                  ACTION TAKEN
         DS    CL2
PRTDEVTY DS    CL4                   DEVICE TYPE
         DS    CL2
PRTDSORG DS    CL8                   DSORG
         ORG
BLANKS   DC    CL80' '               CONSTANT BLANKS
MOTION   DS    CL1                   DIRECTION OF MOTION
FORWARD  EQU   C'F'                    FORWARD MOTION VALUE
BACKWARD EQU   C'B'                    BACKWARD MOTION VALUE
USECURR  DC    X'01'                 1 = USE CURRENT BLOCK
*
ACTIONTB DS    0CL6                ACTIONS TABLE
         DC    CL16'UNKNOWN'                  : 000
         DC    CL16'CREATE'             CREATE: 001
         DC    CL16'DELETE'             DELETE: 010
         DC    CL16'UPDATE'             UPDATE: 011
         DC    CL16'READ'               READ: 100
         DC    CL16'RENAME (DELETED)'   RENAME TO (DELETE): 101
         DC    CL16'RENAME (CREATED)'   RENAMED FROM (CREATE): 110
         DC    CL16'UNKNOWN'                  : 111
*
DSORGTBL DS    0CL8                  DSORGS TABLE
         DC    CL8'UNKNOWN'                      : 000
         DC    CL8'PHY SEQ'           PHYSICALLY SEQUENTIAL: 001
         DC    CL8'GDG'               GENERATION DATA GROUP: 010
         DC    CL8'VSAM'              VSAM: 011
         DC    CL8'ISAM'              ISAM: 100
         DC    CL8'DA'                DIRECT ACCESS: 101
         DC    CL8'PDS'               PARTITIONED: 110
         DC    CL8'UNKNOWN'                      : 111
*
CAMMAC   CAMLST SEARCH,JFCB,JFCB+118,FORMAT1 READ FORMAT1 DSCB
         DC    C'*** FORMAT 1 LABEL FOLLOWS ***'
FORMAT1  DS    CL96                  FORMAT1 DSCB FOR HISTORY FILE
         DC    C'*** JFCB FOLLOWS ***'
JFCB     DS    CL176                 JFCB FOR HISTORY FILE
         DC    C'*** END OF JFCB ***'
JFCBEXIT DS    0F                    EXIT LIST FOR RDJFCB FOR HISTORY
         DC    X'87'                   IDENTIFY EXIT TYPE, END OF LIST
         DC    AL3(JFCB)               POINT TO JFCB READ-IN AREA
********************************************************************
*  DSECT'S                                                         *
********************************************************************
HISTREC  DSECT ,                     HISTORY RECORD HEADER
HISTHEAD DS    0CL49                    HEADER GROUP NAME
HISTRDW  DS    XL2                      LENGTH OF RECORD
HISTZZ   DS    XL2                      ZEROS
HISTDSNL DS    XL1                      DSNAME LENGTH-1
HISTDSN  DS    0CL44                    DSNAME (1-44 CHARACTERS)
*
ACTIVITY DSECT ,                     HISTORY ACTIVITY SEGMENT
ACTSEG   DS    0XL16                    ACTIVITY GROUP NAME
ACTDATE  DS    PL3                      DATE OF DSNAME REFERENCE
ACTTIME  DS    XL4                      TIME OF DSNAME REFERENCE
ACTJOB   DS    CL8                      JOBNAME
ACTFLAG  DS    XL1                      BITS 0-2 ACTION TAKEN,
*                                       BITS 3-5 DSORG.
*                                       BIT 6 UNUSED, BIT 7 DEVICE
PRTDSNH  CSECT
********************************************************************
*  DCB'S                                                           *
********************************************************************
LISTING  DCB   DDNAME=LISTING,DSORG=PS,MACRF=PM,RECFM=FB,LRECL=80
HISTORY  DCB   DDNAME=HISTORY,DSORG=PS,EODAD=RHXIT,EXLST=JFCBEXIT,     X
               MACRF=RP,RECFM=VB
REQUEST  DCB   DDNAME=REQUEST,DSORG=PS,MACRF=GM,RECFM=FB,LRECL=80,     X
               EODAD=EOJ
         LTORG
BLOCK    DS    CL32768               HISTORY BLOCK AREA
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
