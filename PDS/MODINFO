         TITLE 'MODINFO: PRINTS INFO FOR A LOAD MODULE'
MODINFO  CSECT
***********************************************************************
* PROGRAM TO READ THE DIRECTORY ENTRY FOR A LOAD MODULE AND WRITE     *
* INFORMATION FOR THE LOAD MODULE INCLUDING MEMBER NAME, LENGTH,      *
* ATTRIBUTES, ALIAS-OF NAME (IF MEMBER IS AN ALIAS), AND LAST LINKEDIT*
* DATE.                                                               *
*                                                                     *
* AUTHOR R. THORNTON   MAY 1998                                       *
***********************************************************************
*
         USING MODINFO,R3,R4
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)             SET UP SECOND
         LA    R4,1(R4)                    BASE REGISTER
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     GETPARM                 BRANCH AROUND CONSTANTS
         DC    CL8'MODINFO'            PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
START    DS    0H                      BEGIN PROCESSING
**********************************************************************
*        PROCESS PARM FIELD
**********************************************************************
GETPARM  L     R2,0(R1)                GET PARM FIELD ADDR
         CLC   0(2,R2),H0              ANY PARM DATA?
         BE    BADPARM                 NO, CONTINUE
         CLC   0(2,R2),MAXPARM         VALID PARM LENGTH?
         BNH   PARMOK                  YES
BADPARM  WTO   'MODINFO: INVALID PARM ON EXEC STATEMENT',ROUTCDE=11
         ABEND 999,DUMP
MOVPARM  MVC   MEMNAME(1),2(R2)        EXECUTED MOVE
PARMOK   LH    R1,0(R2)                PICK UP PARM LENGTH
         BCTR  R1,0                    DEDUCT ONE FOR LENGTH CODE
         EX    R1,MOVPARM              MOVE THE MEMBER NAME
         OPEN  (LISTING,OUTPUT,PDSMEM,,LOADLIB) OPEN FILES
         BAS   R9,PRINT                PRINT HEADER LINE
*
*
*
READDIR  LH    R12,REMBYTS             GET NBR BYTES REMAINING IN BLOCK
         CH    R12,=H'35'              ANY MORE ENTRIES IN BLOCK
         BH    GETADR                  YES
NEXREC   GET   LOADLIB                 READ DIRECTORY BLOCK
         ST    R1,BLOKSTRT             SAVE BLOCK START ADDRESS
         LR    R12,R1                  GET BLOCK ADDRESS
         MVC   REMBYTS,0(R12)          MOVE NBR BYTES IN BLOCK
         CLC   REMBYTS,ZERO            ANY BYTES IN BLOCK
         BE    EOJ                     NO, EOF
         LA    R12,2(R12)              STEP PAST BLOCK SIZE FIELD
         ST    R12,RECADDR             STORE RECORD ADDRESS
GETADR   L     R12,RECADDR             GET NEXT ENTRY ADDRESS
         USING PDS2,R12
         CLI   PDS2NAME,X'FF'          END OF BLOCK?
         BE    NEXREC                  YES
         CLC   PDS2NAME,MEMNAME        THIS THE DESIRED MEMBER?
         BE    BLDPRNT                 YES
NEXDNT   NI    PDS2INDC,B'00011111'    CLEAR ALIAS, TTR BITS
         SR    R11,R11                 CLEAR R11 FOR INSERT
         IC    R11,PDS2INDC            PICK UP NBR USER HALFWORDS
         SLL   R11,1                   X2 = NUMBER USER BYTES
         LA    R11,PDS2USRD-PDS2(R11)  ENTRY LENGTH (BASIC+USER)
CALCREM  LH    R12,REMBYTS             GET NBR BYTES REMAINING
         SR    R12,R11                 SUBTRACT THIS ENTRY LENGTH
         BP    STREM                   ANY LEFT
         SR    R12,R12                 NO, SET TO ZERO
STREM    STH   R12,REMBYTS             STORE REMAINING BYTES
         A     R11,RECADDR             CALCULATE NEXT ENTRY ADDRESS
         ST    R11,RECADDR             STORE NEXT ENTRY ADDRESS
         CLI   0(R11),X'FF'            END OF DIRECTORY?
         BE    NOTFND                  YES
         B     READDIR                 GO READ AGAIN
BLDPRNT  MVC   PNAME,PDS2NAME          MOVE MEMBER NAME TO PRINT
         CLI   PNAME,C'V'
         BNE   UNPKTTR
         B     UNPKTTR
UNPKTTR  UNPK  WORK(7),PDS2TTRP(4)     TTR TO
         TR    WORK(6),TRTBL-C'0'        PRINT
         MVC   PTTR,WORK                    LINE
         UNPK  WORK(7),PDS2STOR(4)     MODULE
         TR    WORK(6),TRTBL-C'0'         LENGTH TO
         MVC   PLENG,WORK                    PRINT LINE
         TM    PDS2INDC,PDS2ALIS       THIS MEMBER AN ALIAS?
         BZ    TRYREFR                 NO
         LA    R11,PDSBCEND            POINT TO END OF BASIC SECTION
         TM    PDS2ATR1,PDS2SCTR       SCATTER SECTION PRESENT?
         BZ    MOVALIAS                NO
         LA    R11,PDSS01LN(R11)       YES, STEP PAST SCTR SECTION
         USING PDSS02,R11
MOVALIAS MVC   PALIAS,PDS2MNM          MOVE ALIAS-OF NAME TO PRINT
         DROP  R11
TRYREFR  TM    PDS2ATR2,PDS2REFR       IS IT REFR?
         BZ    TRYRENT                 NO
         MVC   PREFR,=C'REFR'          YES
TRYRENT  TM    PDS2ATR1,PDS2RENT       IS IT RENT?
         BZ    TRYREUS                 NO
         MVC   PRENT,=C'RENT'          YES
TRYREUS  TM    PDS2ATR1,PDS2REUS       IS IT REUS?
         BZ    TRYEXEC                 NO
         MVC   PREUS,=C'REUS'          YES
TRYEXEC  TM    PDS2ATR1,PDS2EXEC       IS IT EXECUTABLE?
         BZ    FINDMEM                 NO
         MVC   PEXEC,=C'EXEC'          YES
FINDMEM  FIND  PDSMEM,MEMNAME,D        FIND MEMBER BY NAME
         LTR   R15,R15                 ANY ERROR
         BNZ   NOTFND2                 YES
         GETMAIN R,LV=32768           PDS BLOCK AREA
         ST    R1,PDSAREA             SAVE THE ADDRESS
READMEM  L     R12,PDSAREA             POINT TO INPUT BUFFER
         READ  INDECB,SF,PDSMEM,(12),'S'  READ NEXT BLOCK
         CHECK INDECB                  WAIT FOR COMPLETION
         CLI   0(R12),X'80'            IS IT AN IDR RECORD?
         BNE   READMEM                 NO
         CLI   2(R12),X'02'            TYPE 2 IDR RECORD?
         BNE   READMEM                 NO
         MVC   PRTDATE,=X'402120202061202020' EDIT WORD
         ED    PRTDATE+1,14(R12)         EDIT LINKEDIT DATE
         MVC   PRTDATE(3),=C' 19'
         MVI   PRTDATE+9,C' '
         CLI   15(R12),X'64'
         BH    OLDCENT
         MVC   PRTDATE(3),=C' 20'
OLDCENT  DS    0H
         BAL   R9,PRINT                PRINT THE LINE
         B     EOJ                     QUIT
*
NOTFND   WTO   'MEMBER SPECIFIED NOT FOUND IN DIRECTORY',ROUTCDE=11
         ABEND 888,DUMP
*
NOTFND1  WTO   'LINKDATE RECORD NOT FOUND IN MODULE',ROUTCDE=11
         ABEND 777,DUMP
*
NOTFND2  WTO   'MEMBER SPECIFIED NOT FOUND BY FIND MACRO',ROUTCDE=11
         ABEND 666,DUMP
*
PRINT    PUT   LISTING,PRT             PRINT A LINE
         MVI   PRT,C' '                BEGIN CLEAR
         MVC   PRT+1(79),PRT           FINISH CLEAR
         BR    R9                      RETURN
*
*
*
EOJ      CLOSE (LISTING,,LOADLIB)      CLOSE FILES
         L     R13,4(R13)              RESTORE RETURN POINTER
         LM    R14,R12,12(R13)         RESTORE CALLING PGM REGISTERS
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN TO CALLER
*
*
*
BLOKSTRT DC    A(0)                    ADDRESS OF START OF BLOCK
PDSAREA  DS    A                       PDS BLOCK STORAGE AREA
TRTBL    DC    C'0123456789ABCDEF'
REMBYTS  DC    H'0'                    BYTES REMAINING IN BLOCK
ZERO     DC    H'0'
H0       DC    H'0'                    CONSTANT ZERO
MAXPARM  DC    H'8'                    MAXIMUM PARM FIELD LENGTH
MEMNAME  DC    CL8' '                  PARM MEMBER NAME
RECADDR  DS    F
BLANKS   DC    CL80' '                 CONSTANT BLANKS
WORK     DS    CL9                     HEX <-> CHAR WORK
*
PRT      DS    0CL80
PNAME    DS    CL8                     MODULE NAME
         DS    CL1
PLENG    DS    CL6                     MODULE LENGTH
         DS    CL1
PTTR     DS    CL6                     TTR TO MODULE
         DS    CL1
PALIAS   DS    CL8                     ALIAS-OF NAME
         DS    CL1
PREFR    DS    CL4                     REFRESHABLE
         DS    CL1
PRENT    DS    CL4                     REENTRANT
         DS    CL1
PREUS    DS    CL4                     REUSABLE
         DS    CL1
PEXEC    DS    CL4                     EXECUTABLE
PRTDATE  DS    CL9                     LINK-EDIT DATE
         DS    CL20
*
         ORG   PRT
HEADLINE DS    0CL80
         DC    CL9'__NAME__ '          MODULE NAME
         DC    CL7'LENGTH '            MODULE LENGTH
         DC    CL7'__TTR_ '            TTR TO MODULE
         DC    CL9'ALIAS-OF '          ALIAS-OF NAME
         DC    CL5'REFR '              REFRESHABLE
         DC    CL5'RENT '              REENTRANT
         DC    CL5'REUS '              REUSABLE
         DC    CL4'EXEC'               EXECUTABLE
         DC    CL9' LINKDATE'
         DC    CL20' '
         ORG
*
         LTORG
LOADLIB  DCB   DSORG=PS,MACRF=GL,DDNAME=LOADLIB,RECFM=F,               X
               LRECL=256,BLKSIZE=256,EODAD=NOTFND
LISTING  DCB   DSORG=PS,MACRF=PM,DDNAME=LISTING,RECFM=FB,              X
               LRECL=80
PDSMEM   DCB   DDNAME=LOADLIB,DSORG=PO,MACRF=R,EODAD=NOTFND1
*
*
*
         IHAPDS PDSBLDL=NO
MODINFO  CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
