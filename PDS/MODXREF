         TITLE '***** LOAD MODULE CROSS-REFERENCE *****'
MODXREF  SVLNK R3,R4
         PRINT NOGEN
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*              LOAD MODULE CROSS-REFERENCE PROGRAM
*
*  THIS PROGRAM PRINTS A MODULE MAP SHOWING ALL CSECTS, THEIR LOCATIONS
*AND LENGTHS, ENTRY POINTS WITHIN EACH CSECT AND LOCATION, AND ALL
*REFERENCES TO OTHER EXTERNAL SYMBOLS FROM WITHIN THE CSECT OR ENTRY
*POINT. THIS FIRST LIST IS THE "REFERS TO" LISTING. A SECOND LISTING
*PRODUCED TO SHOW "REFERENCED BY" INFORMATION, IN WHICH ALL EXTERNAL
*SYMBOLS ARE LISTED WITH THE REFERENCING LOCATIONS GIVEN. PURPOSE OF
*THE PROGRAM IS TO AID IN DEVELOPMENT OF DOCUMENTATION OF LOAD MODULES
*HAVING COMPLICATED STRUCTURES WITH MANY INCLUDED PROGRAMS.
*
*  A PARM FIELD MAY BE USED TO ELIMINATE COBOL'S LIBRARY SUBROUTINES
*FROM PRINTING, TO SHOW ONLY THE APPLICATION COMPONENTS. THE PARM
*VALUE FOR THIS OPTION IS: PARM='NOILB'.
*
*  DD CARDS USED:  SYSLIB   - ALLOCATES THE PDS CONTAINING THE MODULES
*                             TO BE CROSS-REFERENCED.RECFM=U ISHARD-
*                             CODED.
*                  SYSPRINT - PRINTED OUTPUT. RECFM=FBA,LRECL=80 IS
*                             HARD-CODED.
*                  SYSIN    - CONTROL CARD INPUT. RECFM=FB,LRECL=80
*                             IS HARD-CODED.
*
*   CONTROL CARDS: ENTER ONE CARD PER MODULE TO BE CROSS-REFERENCED.
*                  THE CARD MUST CONTAIN THE MEMBER NAME OF THE
*                  MODULE LEFT JUSTIFIED IN COLUMNS 1-8 WITH
*                  TRAILING BLANKS IF LESS THAN 8 CHARACTERS.
*
* AUTHOR R THORNTON - APR 1979
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
****************************************************************
*                                                              *
* GET STORAGE FOR THE SYMBOL TABLE, RLD TABLE, AND OPEN FILES  *
*                                                              *
****************************************************************
*
         L     R1,0(R1)                GET PARM ADDRESS
         CLC   0(2,R1),=H'0'           ANY PARM?
         BE    OPENS                   NO
         MVI   NOILB1+1,X'80'          YES, SET ILB BYPASS
         MVI   NOILB2+1,X'80'          SET SECOND ILB BYPASS
OPENS    OPEN  (SYSPRINT,OUTPUT,SYSLIB,,SYSIN) OPEN FILES
         TM    SYSIN+48,X'10'          DID SYSIN OPEN O.K.
         BZ    NOCTL                   NO
         GETMAIN R,LV=32768            GET BUFFER STORAGE
         ST    R1,BUFAD                SAVE BUFFER ADDRESS
         GETMAIN R,LV=38000            GET SYMBOL TABLE STORAGE
         ST    R1,SYMTBAD              SAVE SYMBOL TABLE ADDRESS
         A     R1,=F'38000'            COMPUTE END ADDR
         ST    R1,ENDSYM               STORE TBL END ADDR
         GETMAIN R,LV=96000            GET RLD TABLE STORAGE
         ST    R1,RLDTBL               SAVE RLD TABLE ADDRESS
         A     R1,=F'96000'            COMPUTE END ADDR
         ST    R1,ENDRLD               STORE TBL END ADDR
*
*
*
NEXCARD  BAL   R9,GETCTL               EXTRACT DESIRED MEMBER NAME
         L     R1,SYMTBAD              GET SYMBOL TABLE ADDRESS
         ST    R1,CURRSYM              SET CURRENT TABLE ADDRESS
         L     R1,RLDTBL               GET CURRENT RLD TABLE ADDRESS
         ST    R1,CURRLD               SET CURRENT ADDRESS
         BAL   R9,BLDL                 ISSUE BLDL AND PRINT
         MVI   CCAT,0                  INSURE TTR0
         POINT SYSLIB,TTRMOD           POINT TO 1ST BLOCK OF MODULE
*
*
*
****************************************************************
*                                                              *
* MAINLINE PROCESSING FOR THE LOAD MODULE. THE DIRECTORY ENTRY *
* AND TEXT ARE PROCESSED.                                      *
*                                                              *
****************************************************************
*
MAINLINE EQU   *                       MAINLINE ROUTINE
         L     R6,BUFAD                GET BUFFER ADDRESS
         READ  DECB,SF,SYSLIB,(6),'S'  READ BLOCK FROM MEMBER
         CHECK DECB                    AWAIT COMPLETION
         CLI   0(R6),X'20'             CESD RECORD
         BNE   TESTOTHR                NO
         BAL   R9,CESDREC              PROCESS CESD RECORDS
         B     MAINLINE                GO READ AGAIN
TESTOTHR LA    R9,CNTLRECS             ASSUME CONTROL RECORD
         CLI   0(R6),1                 IT IS CONTROL
         BE    PERFORM                 YES
         CLI   0(R6),5                 IS IT CONTROL
         BE    PERFORM                 YES
         CLI   0(R6),13                IS IT CONTROL
         BE    PERFORM                 YES
         LA    R9,RLDRECS              ASSUME RLD RECORD
         CLI   0(R6),2                 IS IT RLD
         BE    PERFORM                 YES
         CLI   0(R6),6                 IS IT RLD
         BE    PERFORM                 YES
         CLI   0(R6),14                IS IT RLD
         BE    PERFORM                 YES
         LA    R9,CTRLRECS             ASSUME CONTROL AND RLD
         CLI   0(R6),3                 IS IT CTL AND RLD
         BE    PERFORM                 YES
         CLI   0(R6),7                 IS IT CTL AND RLD
         BE    PERFORM                 YES
         CLI   0(R6),15                IS IT CTL AND RLD
         BE    PERFORM                 YES
         LA    R9,IDRRECS              ASSUME IDR RECORD
         CLI   0(R6),X'80'             IS IT IDR
         BE    PERFORM                 YES
         B     MAINLINE                NONE OF THESE, SKIP
PERFORM  BALR  R9,R9                   PERFORM APPROPRIATE ROUTINE
         TM    PROCESS,X'40'           MODULE PROCESSING DONE
         BZ    MAINLINE                NO, GO READ AGAIN
         BAL   R9,PRNTFMT              FORMAT AND PRINT DATA
         B     NEXCARD                 GO COMPLETE PROCESSING
*
*
*
****************************************************************
*                                                              *
* PROCESS LOAD MODULE CONTROL RECORDS. THESE RECORDS PRECEDE   *
* TEXT RECORDS, WHICH ARE READ AND BYPASSED.                   *
*                                                              *
****************************************************************
*
CNTLRECS EQU   *                       CONTROL RECORD PROCESSING
         ST    R9,CT9                  SAVE RETURN ADDR
         TM    0(R6),X'08'             RECORD PRECEDES LAST RECORD OF M
         BZ    CTRDPAST                NO
         OI    PROCESS,X'40'           YES, SHOW PROCESSING COMPLETE
         B     CTXIT                   AND EXIT
CTRDPAST L     R6,BUFAD                POINT TO BUFFER
         READ  DECB,SF,,(6),MF=E       READ FOLLOWING TEXT RECORD
         CHECK DECB                    AWAIT COMPLETION
CTXIT    L     R9,CT9                  GET RETURN ADDR
         BR    R9                      EXIT
*
****************************************************************
*                                                              *
* PROCESS IDR RECORDS. THE LAST LINK-EDITED DATE LINE IS       *
*   PRINTED WHEN THE APPROPRIATE IDR RECORD IS FOUND.          *
****************************************************************
*
IDRRECS  ST    R9,IDR9                 SAVE RETURN ADDRESS
         CLI   2(R6),2                 LINK-EDIT DATA RECORD?
         BNE   IDRXIT                  NO, IGNORE IT
         UNPK  JULDATE,15(3,R6)        UNPACK LINK DATE
         LA    R1,5                    NBR BYTES TO CHECK
         LA    R15,JULDATE             @ 1ST BYTE TO CHECK
CKVALNUM CLI   0(R15),C'0'             LESS THAN ZERO?
         BL    IDRXIT                  YES, INVALID
         CLI   0(R15),C'9'             GREATER THAN 9?
         BH    IDRXIT                  YES, INVALID
         LA    R15,1(R15)              O.K., GO TO NEXT BYTE
         BCT   R1,CKVALNUM             CHECK ALL 5 DIGITS
         PACK  JULDAY,JULDATE+2(3)     PACK THE JULIAN DAY
         ZAP   JULDAY,JULDAY           TEST FOR ZERO DAY
         BZ    IDRXIT                  ZERO IS INVALID
         CP    JULDAY,=P'366'          GREATER THAN 366?
         BH    IDRXIT                  OVER 366 IS INVALID
         MVC   MSGYR,JULDATE           YEAR TO DATE LINE
         PACK  JULWK,JULDATE(2)        PACK JULIAN YEAR
         DP    JULWK,=PL1'4'           DIVIDE BY 4
         ZAP   JULWK+2(1),JULWK+2(1)   TEST FOR ZERO REMAINDER
         BNZ   NOTLEAP                 LEAP YEAR WHEN ZERO
         CP    JULDAY,=P'60'           TEST FOR FEB 29TH
         BL    NOTLEAP                 BEFORE FEB 29TH, O.K.
         BH    SUB1DAY                 AFTER FEB 29TH, DEDUCT 1 DAY
         MVC   MSGMTH,=C'FEB'          DATE LINE MONTH
         MVC   MSGDAY,=C'29'           DATE LINE DAY
         B     WRTDATE                 GO PRINT
SUB1DAY  SP    JULDAY,=P'1'            SUBTRACT 1 DAY FOR LEAP YEAR
NOTLEAP  LA    R1,JULMOTBL             @ MONTH TABLE
FINDMO   CP    5(2,R1),JULDAY          NEXT ENTRY DAY IS HIGHER?
         BNL   GOTMO                   YES, THEN THIS IS MONTH
         LA    R1,5(R1)                NO, STEP TO NEXT ENTRY
         B     FINDMO                  AND CONTINUE SCAN
GOTMO    SP    JULDAY,0(2,R1)          DEDUCT STARTING DAY OF MTH
         UNPK  MSGDAY,JULDAY           DIFFERENCE IS DAY OF MONTH
         OI    MSGDAY+1,C'0'           CLEAR SIGN ON DAY
         CLI   MSGDAY,C'0'             1ST DIGIT OF DAY IS ZERO?
         BNE   MOVEMTH                 NO
         MVI   MSGDAY,C' '             YES, SET TO BLANK
MOVEMTH  MVC   MSGMTH,2(R1)            MONTH TO DATE LINE
WRTDATE  MVC   PRT+10(32),DATEMSG      DATE LINE TO PRINT
         BAL   R9,PRINT                PRINT DATE LINE
IDRXIT   L     R9,IDR9                 GET RETURN ADDRESS
         BR    R9                      AND EXIT
*
****************************************************************
*                                                              *
* PROCESS RLD RECORDS. A TABLE OF RLD DATA IS BUILT.
*                                                              *
****************************************************************
*
RLDRECS  EQU   *                       RLD RECORD PROCESSING
         TM    0(R6),X'08'             LAST RECORD OF MODULE
         BZ    RLSV9                   NO
         OI    PROCESS,X'40'           SHOW PROCESSING COMPLETE
RLSV9    ST    R9,RL9                  SAVE RETURN ADDR
         LH    R8,6(R6)                NBR BYTES OF RLD DATA
         LA    R6,16(R6)               @ 1ST BYTE OF RLD DATA
         AR    R8,R6                   END OF RLD DATA ADDR
         L     R7,CURRLD               @ NEXT RLD TBL ENTRY
         USING RLDTBLD,R7
         LH    R10,0(R6)               RELOCATION POINTER
         LH    R11,2(R6)               POSITION POINTER
         LA    R6,4(R6)                PASS POINTERS
RLDNXT   C     R7,ENDRLD               END OF RLD TBL
         BE    RLDFULL                 YES, ERROR
         STH   R10,RLDRP               SAVE RELOC PTR
         STH   R11,RLDPP               POS PTR
         PACK  RLDTYPE,0(1,R6)         INVERT FLAG BYTE
         NI    RLDTYPE,X'0F'           CLEAR HI-ORDER
         CLI   RLDTYPE,9               UNRESOLVED
         BNE   RLADMV                  NO
         MVI   RLDTYPE,8               YES, USE PREFERRED VALUE
RLADMV   SR    R1,R1                   CLEAR WORK REG
         ICM   R1,7,1(R6)              PICK UP ADDRESS
         STCM  R1,7,RLDADDR            AND SAVE IT
         XC    RLDTONAM(9),RLDTONAM    CLEAR
         LH    R15,RLDRP               GET RELOCATION POINTER
         BCTR  R15,R0                  DEDUCT 1
         LTR   R15,R15                 TEST DIFFERENCE
         BM    RLNXT                   NEG, ERROR
         MH    R15,SYMLEN              TIMES SYM TBL ENTRY LENG
         A     R15,SYMTBAD             @ ESD SYMBOL TBL ENTRY
         C     R15,CURRSYM             PAST END OF TABLE
         BH    RLNXT                   YES, ERROR
         USING SYMTBL,R15
         MVC   RLDTONAM,EXTSYM         ESD SYMBOL TO RLD TBL ENTRY
         CLC   RLDPP,RLDRP             A-TYPE ADCON?
         BE    RLCKUNR                 YES, NOT EXTERNALLY REF'D
         OI    SYMIND,X'80'            SHOW SYMBOL REFERENCED
RLCKUNR  CLI   RLDTYPE,8               IS IT UNRESOLVED?
         BNE   RLGFM                   NO, RESOLVED
         OI    SYMIND,X'01'            YES, SHOW UNRESOLVED
RLGFM    XC    RLDFMNAM,RLDFMNAM       CLEAR REFERENCED FROM NAME
         LH    R15,RLDPP               GET POSITION POINTER
         BCTR  R15,0                   RELATIVIZE POINTER
         LTR   R15,R15                 VALID POINTER?
         BM    RLNXT                   NO, SKIP IT
         MH    R15,SYMLEN              TIMES SYMTBL ENTRY SIZE
         A     R15,SYMTBAD             PLUS TABLE START ADDRESS
         C     R15,CURRSYM             PAST END OF SYMTBL?
         BNL   RLNXT                   YES, SKIP IT
         MVC   RLDFMNAM,EXTSYM         SET REFERENCED FROM NAME
         DROP  R15
RLNXT    LA    R7,L'RLDENT(R7)         TO NEXT TBL ENTRY
         TM    0(R6),1                 NEXT ITEM HAS REL AND POS PTRS
         BO    RLSAME                  NO
         LH    R10,4(R6)               PICK UP NEW REL PTR
         LH    R11,6(R6)               PICK UP NEW POS PTR
         LA    R6,4(R6)                STEP OVER 4 BYTES
RLSAME   LA    R6,4(R6)                TO NEXT RLD ITEM
         CR    R6,R8                   END OF RLD DATA
         BL    RLDNXT                  NO
         ST    R7,CURRLD               SET NEW CURRENT ADDRESS
         L     R9,RL9                  GET RETURN ADDR
         BR    R9                      EXIT
         DROP  R7
*
****************************************************************
*                                                              *
* PROCESS CONTROL AND RLD RECORDS. THESE RECORDS CONTAIN BOTH  *
* RLD AND CONTROL INFORMATION, AND ARE PROCESSED BY BOTH       *
* THE RLDRECS AND CNTLRECS ROUTINES.                           *
*                                                              *
****************************************************************
*
CTRLRECS EQU   *                       CONTROL AND RLD RECORDS
         ST    R9,CR9                  SAVE RETURN ADDR
         BAL   R9,RLDRECS              PROCESS RLD DATA
         L     R6,BUFAD                RESET BUFFER ADDRESS
         BAL   R9,CNTLRECS             PROCESS CONTROL DATA
         L     R9,CR9                  GET RETURN ADDR
         BR    R9                      EXIT
*
****************************************************************
*                                                              *
* PROCESS COMPOSITE ESD RECORDS. DATA FROM THESE RECORDS IS    *
* PLACED IN THE SYMBOL TABLE.
*                                                              *
****************************************************************
*
CESDREC  EQU   *                       CESD RECORD PROCESSING
         ST    R9,CES9                 SAVE RETURN
         L     R7,CURRSYM              GET SYMBOL TBL ADDR
         USING SYMTBL,R7
         LH    R10,4(R6)               GET ESD ID OF 1ST ITEM
         LH    R8,6(R6)                NBR BYTES OF ESD DATA
         SRL   R8,4                    COMPUTE NBR ENTRIES
         LA    R6,8(R6)                STEP TO 1ST RECORD ESD ITEM
CESDNXT  C     R7,ENDSYM               END OF TABLE
         BNL   SYMFULL                 YES, ERROR
         MVC   EXTSYM,0(R6)            SYMBOL NAME
         MVC   TYPSYM,8(R6)            TYPE
         NI    TYPSYM,X'0F'            CLEAR BITS 0-3
         MVI   SYMIND,0                CLEAR INDICATOR
         TM    8(R6),X'14'             POSSIBLE ENTAB/SEGTAB
         BNO   CEMVAD                  NO
         TM    8(R6),X'03'             IS IT ENTAB/SEGTAB
         BNZ   CEMVAD                  NO
         MVC   TYPSYM(2),=X'0F00'      SHOW ENTAB/SEGTAB
CEMVAD   MVC   SYMADDR,9(R6)           ADDRESS OF SYMBOL
         MVC   SYMLENG,13(R6)          LENGTH OR LR ESD ID
         STCM  R10,3,SYMESDID          ESD ID
         LA    R10,1(R10)              ADD 1 TO ESD COUNTER
         LA    R6,16(R6)               TO NEXT ESD ITEM IN INPUT
         LA    R7,L'SYMENT(R7)         STEP TO NEXT ENTRY
         ST    R7,CURRSYM              SAVE NEXT TABLE ADDR
CESNXT   BCT   R8,CESDNXT              LOOP THRU INPUT RECORD
         L     R9,CES9                 GET RETURN ADDR
         BR    R9                      EXIT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*  FIRST, SORT THE SYMTBL AND RLDTBL IN ASCENDING ORDER BY ADDRESS
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
PRNTFMT  ST    R9,PF9                  SAVE RETURN ADDRESS
         MVC   PRTLINE,MAPHDR          HEADER TO PRINT
         BAL   R9,PRINT                PRINT HEADER
         MVI   PCC,C'0'                SET DOUBLE SPACING
         L     R7,SYMTBAD              @ SYMBOL TABLE
         USING SYMTBL,R7
         LA    R15,L'SYMENT(R7)        POINT TO 2ND ENTRY
PSCKLO   TM    SYMIND-SYMENT(R15),1    UNRESOLVED?
         BZ    PSCKL00                 NO, RESOLVED
         MVC   SYMADDR-SYMENT(L'SYMADDR,R15),=X'FFFFFF' UNRESOLVED
         MVI   TYPSYM-SYMENT(R15),0    SHOW IT AS CSECT
PSCKL00  TM    SYMIND,1                UNRESOLVED?
         BZ    PSCKLO0                 NO, RESOLVED
         MVC   SYMADDR,=X'FFFFFF'      UNRESOLVED
         MVI   TYPSYM,0                SHOW IT AS CSECT
PSCKLO0  CLC   SYMADDR,SYMADDR-SYMENT(R15) 1ST IS HIGH?
         BL    PSSTP2                  1ST LOW, NO SWITCH
         BH    PSSWCH                  1ST HIGH, SWITCH
         CLI   TYPSYM-SYMENT(R15),0    2ND IS SD?
         BE    PSSWCH                  YES, SWITCH
         CLI   TYPSYM-SYMENT,4         2ND IS PC?
         BNE   PSSTP2                  NO
PSSWCH   MVC   HOLDSYM,SYMENT          YES, SAVE FIRST
         MVC   SYMENT,0(R15)           MOVE 2ND TO 1ST LOCATION
         MVC   0(L'SYMENT,R15),HOLDSYM MOVE 1ST TO 2ND LOCATION
PSSTP2   LA    R15,L'SYMENT(R15)       2ND POINTER UP 1 ENTRY
         C     R15,CURRSYM             END OF TABLE?
         BL    PSCKLO                  NO, CONTINUE
         LA    R7,L'SYMENT(R7)         YES, STEP 1ST ENTRY
         LA    R15,L'SYMENT(R7)        2ND FOLLOWS 1ST
         C     R15,CURRSYM             2ND POINTER NOW AT END?
         BL    PSCKLO                  NO
         L     R7,SYMTBAD              POINT TO 1ST SYM ENTRY
         L     R8,RLDTBL               @ RLD TABLE
         USING RLDTBLD,R8
         LA    R15,L'RLDENT(R8)        POINT TO 2ND ENTRY
PSCKLOA  CLC   RLDADDR,RLDADDR-RLDENT(R15) 1ST IS HIGH?
         BNH   PSSTP2A                 NO
         MVC   HOLDRLD,RLDENT          YES, SAVE FIRST
         MVC   RLDENT,0(R15)           MOVE 2ND TO 1ST LOCATION
         MVC   0(L'RLDENT,R15),HOLDRLD MOVE 1ST TO 2ND LOCATION
PSSTP2A  LA    R15,L'RLDENT(R15)       2ND POINTER UP 1 ENTRY
         C     R15,CURRLD              END OF TABLE?
         BL    PSCKLOA                 NO, CONTINUE
         LA    R8,L'RLDENT(R8)         YES, STEP 1ST ENTRY
         LA    R15,L'RLDENT(R8)        2ND FOLLOWS 1ST
         C     R15,CURRLD              2ND POINTER NOW AT END?
         BL    PSCKLOA                 NO
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*  NEXT, SIFT OUT NULLS FROM SYMTBL (ALSO ILB..... MODULES IF
*  PARM=NOILB). CHANGE PC TO SD TYPE.
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         L     R7,SYMTBAD              @ SYMTBL
         LR    R15,R7                  COPY SYMTBL ADDRESS
CKGDSYM  CLC   EXTSYM(3),=C'ILB'       IS IT AN ILB MODULE?
NOILB1   NOP   DROPSYM                 NO
         CLI   TYPSYM,7                IS IT A NULL?
         BE    DROPSYM                 YES
         CR    R7,R15                  ANY NEED TO MOVE?
         BE    CSNOMOV                 NO
         CLI   TYPSYM,4                IS IT PC?
         BNE   CSMOVE                  NO
         MVI   TYPSYM,0                YES, CHANGE TO SD
CSMOVE   MVC   0(L'SYMENT,R15),0(R7)   MOVE SECOND TO FIRST LOC
CSNOMOV  LA    R15,L'SYMENT(R15)       MOVE FIRST POINTER
DROPSYM  LA    R7,L'SYMENT(R7)         MOVE SECOND POINTER
         C     R7,CURRSYM              END OF TABLE?
         BL    CKGDSYM                 NO
         ST    R15,CURRSYM             YES, SET NEW TABLE END
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* NEXT, SIFT OUT A-TYPE ADDRESS CONSTANTS (AND ILB..... MODULES IF
* PARM=NOILB). ELIMINATE ANY ENTRIES WHICH HAVE NO CORRESPONDING
* SYMTBL ENTRIES.
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         L     R8,RLDTBL               @ RLD TABLE
         LR    R15,R8                  COPY TABLE ADDRESS
CKGDRLD  CLC   RLDTONAM(3),=C'ILB'     COBOL MODULE?
NOILB2   NOP   DROPRLD                 YES
         CLC   RLDPP,RLDRP             A-TYPE ADCON?
         BE    DROPRLD                 YES
         L     R7,SYMTBAD              @ SYMTBL
CKVALESD C     R7,CURRSYM              END OF TABLE
         BE    DROPRLD                 YES
         CLC   RLDPP,SYMESDID          MATCHING SYMTBL ENTRY?
         BE    RLTAKE                  YES
         LA    R7,L'SYMENT(R7)         NO, STEP TO NEXT ENTRY
         B     CKVALESD                LOOP
RLTAKE   CR    R7,R15                  ANY NEED TO MOVE?
         BE    RLNOMOVE                NO
         MVC   0(L'RLDENT,R15),0(R8)   YES, MOVE 2ND TO 1ST
RLNOMOVE LA    R15,L'RLDENT(R15)       STEP 1ST POINTER
DROPRLD  LA    R8,L'RLDENT(R8)         STEP 2ND POINTER
         C     R8,CURRLD               END OF TABLE?
         BL    CKGDRLD                 NO
         ST    R15,CURRLD              YES, SET NEW TABLE END
         L     R7,SYMTBAD              @ SYMTBL
         L     R8,RLDTBL               @ RLDTBL
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*  NOW READY TO FORMAT THE PRINT LINES. THE SYMTBL AND RLDTBL ARE
*  PROCESSED TO PREPARE THE PRINTOUT. FIRST IS THE NUMERIC BY
*  LOCATION LIST.
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
PRTSYM   CLI   TYPSYM,0                IS IT SD
         BNE   CENOTSD                 NO
         MVC   CSNAME,EXTSYM           SYMBOL NAME
         TM    SYMIND,1                IS IT UNRESOLVED?
         BZ    CECSADR                 NO, RESOLVED
         MVC   CSNAME+8(13),=C'($UNRESOLVED)'  YES, SHOW IT
         B     CEEPRT                  AND GO PRINT
CECSADR  LA    R12,SYMADDR             @ SYMBOL ADDR
         BAL   R9,HEXPRT3              CONVERT
         MVC   CSLOC,PRTABL            SYMBOL ADDR
         LA    R12,SYMLENG             @ LENGTH
         BAL   R9,HEXPRT3              CONVERT
         MVC   CSLEN,PRTABL            SYMBOL LENGTH
         CLI   TYPSYM+L'SYMENT,0       NEXT ENTRY IS SD?
         BE    CEEPRT                  YES
         CLC   RLDPP,SYMESDID          NEXT RLD IS FOR THIS ESD?
         BE    CEEPRT                  YES
         LA    R7,L'SYMENT(R7)         NO, STEP TO NEXT ENTRY
         C     R7,CURRSYM              END OF TABLE?
         BNL   CEEPRT                  YES
CENOTSD  MVC   ENTNAME,EXTSYM          ENTRY POINT NAME
         TM    SYMIND,1                IS IT UNRESOLVED?
         BZ    CELRADR                 NO
         MVC   ENTNAME+8(13),=C'($UNRESOLVED)' YES, SHOW UNRESOLVED
         B     CEEPRT                  AND GO PRINT
CELRADR  LA    R12,SYMADDR             @ SYMBOL ADDR
         BAL   R9,HEXPRT3              CONVERT
         MVC   ENTLOC,PRTABL           SYMBOL ADDR
         MVC   SYMTYP,=C'LR'           ASSUME LR
         CLI   TYPSYM,3                IS IT LR
         BE    CEEPRT                  YES
         MVC   SYMTYP,=C'ER'           ASSUME ER
         CLI   TYPSYM,2                IS IT ER
         BE    CEEPRT                  YES
         MVC   SYMTYP,=C'PR'           ASSUME PR
         CLI   TYPSYM,6                IS IT PR
         BE    CEEPRT                  YES
         MVC   SYMTYP,=C'CM'           ASSUME CM
         CLI   TYPSYM,5                IS IT CM
         BE    CEEPRT                  YES
         MVC   SYMTYP,=C'WX'           ASSUME WX
         CLI   TYPSYM,X'0A'            IS IT WX
         BE    CEEPRT                  YES
         MVC   SYMTYP,=C'ES'           ASSUME ENTAB/SEGTAB
         CLI   TYPSYM,X'0F'            IS IT ENTAB/SEGTAB
         BE    CEEPRT                  YES
         MVI   SYMTYP-1,C'?'           UNIDENTIFIABLE TYPE
         LA    R12,TYPSYM              @ TYPE
         BAL   R9,HEXPRT1              CONVERT
         MVC   SYMTYP,PRTABL           TYPE
         MVI   SYMTYP+2,C'?'           UNIDENTIFIABLE TYPE
CEEPRT   C     R8,CURRLD               END OF RLD TABLE?
         BNL   CEEPRT1                 NO
         CLC   RLDPP,SYMESDID          RLD FOR THIS ESD?
         BNE   CEEPRT1                 NO
CEFMTRL  MVC   REFTONAM,RLDTONAM       NAME REFERENCED TO PRINT
         MVI   REFLPN,C'('             DELIMITER
         LA    R12,RLDADDR             @ REFERENCE LOCATION
         BAL   R9,HEXPRT3              CONVERT TO PRINTABLE
         MVC   REFLOC,PRTABL           ADDRESS TO PRINT
         MVI   REFRPN,C')'             DELIMITER
         CLI   RLDTYPE,8               UNRESOLVED?
         BNE   CEESTPX                 NO
         MVC   REFRPN+2(11),=C'$UNRESOLVED'
CEESTPX  LA    R8,L'RLDENT(R8)         STEP TO NEXT RLD ENTRY
CEEPRT1  CLI   ENTNAME,C' '            ENTRY POINT NAME FOUND?
         BNE   CEEPRT2                 YES
         CLI   CSNAME,C' '             CSECT NAME FOUND?
         BE    CEEPRT2                 NO
         CLI   REFTONAM,C' '           REFERRED-TO NAME FOUND?
         BE    CEEPRT2                 NO
         MVC   SYMTYP(13),=C'. . . . . . .' ADD EYE GUIDE
CEEPRT2  BAL   R9,PRINT                GO PRINT A LINE
CEECK1   C     R8,CURRLD               END OF RLD TABLE?
         BNL   CESTEP                  YES
CEECK2   CLC   RLDPP,SYMESDID          RLD IS FOR THIS ESD?
         BE    CEFMTRL                 YES
CESTEP   LA    R7,L'SYMENT(R7)         TO NEXT TBL ENTRY LOCATION
         C     R7,CURRSYM              END OF TABLE ENTRIES?
         BL    PRTSYM                  NO
*
****************************************************************
* PREPARE FOR REFERENCED-BY LISTING. FIRST SORT THE RLD TABLE  *
* IS ASCENDING ORDER BY TO NAME AND FROM NAME.                 *
****************************************************************
*
         MVI   PCC,C'-'                SET TRIPLE SPACE
         MVI   PRT,C'-'                BEGIN SEPARATOR
         MVC   PRT+2(70),PRT           FINISH SEPARATOR
         BAL   R9,PRINT                PRINT IT
         MVC   PRTLINE,REFHDR          HEADER TO PRINT
         BAL   R9,PRINT                PRINT HEADER
         MVI   PCC,C'0'                SET DOUBLE SPACING
         L     R8,RLDTBL               @ RLD TABLE
         LA    R15,L'RLDENT(R8)        POINT TO 2ND ENTRY
RSCKLOA  CLC   RLDTONAM(16),RLDTONAM-RLDENT(R15) 1ST IS HIGH?
         BNH   RSSTP2A                 NO
         MVC   HOLDRLD,RLDENT          YES, SAVE FIRST
         MVC   RLDENT,0(R15)           MOVE 2ND TO 1ST LOCATION
         MVC   0(L'RLDENT,R15),HOLDRLD MOVE 1ST TO 2ND LOCATION
RSSTP2A  LA    R15,L'RLDENT(R15)       2ND POINTER UP 1 ENTRY
         C     R15,CURRLD              END OF TABLE?
         BL    RSCKLOA                 NO, CONTINUE
         LA    R8,L'RLDENT(R8)         YES, STEP 1ST ENTRY
         LA    R15,L'RLDENT(R8)        2ND FOLLOWS 1ST
         C     R15,CURRLD              2ND POINTER NOW AT END?
         BL    RSCKLOA                 NO
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* FORMAT AND PRINT REFERENCED BY LISTING USING DATA FROM THE RLD      *
* TABLE.                                                              *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         L     R8,RLDTBL               @ RLD TABLE
RFTONXT  C     R8,CURRLD               AT RLD TABLE END?
         BNL   UNREFLST                YES
         MVC   PRT(8),RLDTONAM         NAME REFERRED TO
         MVC   CURRTO,RLDTONAM         SAVE FOR COMPARES
         LA    R15,PRT+11              1ST REFERRING NAME LOC
         LA    R14,6                   MAX NAMES PER LINE
RFFMNAM  MVC   0(8,R15),RLDFMNAM       REFERRING NAME
         MVC   CURRFM,RLDFMNAM         SAVE FOR COMPARES
         LA    R15,10(R15)             TO NEXT PRINT LOCATION
         LA    R8,L'RLDENT(R8)         TO NEXT RLD TABLE ENTRY
         BCT   R14,RFFCHK              DEDUCT 1 AND CHECK
         BAL   R9,PRINT                FULL LINE, PRINT IT
         LA    R15,PRT+11              1ST REFERRING NAME LOC
         LA    R14,6                   MAX NAMES PER LINE
RFFCHK   C     R8,CURRLD               PAST RLD TABLE END?
         BNL   RFFINAL                 YES
         CLC   RLDTONAM,CURRTO         NEXT ENTRY FOR THIS NAME?
         BE    RFFCHK1                 YES
         BAL   R9,PRINT                NO, PRINT SHORT LINE
         B     RFTONXT                 AND CONTINUE LISTING
RFFCHK1  CLC   RLDFMNAM,CURRFM         SAME REFERRING NAME?
         BNE   RFFMNAM                 NO, GO ADD TO PRINT LINE
         LA    R8,L'RLDENT(R8)         YES, STEP PAST THE ENTRY
         B     RFFCHK                  GO CHECK THIS ONE
RFFINAL  BAL   R9,PRINT                ELSE PRINT SHORT LINE
UNREFLST L     R7,SYMTBAD              POINT TO SYMTBL
         MVI   PCC,C'0'                SET DOUBLE SPACING
CKUNEND  C     R7,CURRSYM              END OF SYMTBL?
         BNL   PFMTXIT                 YES, ALL THRU
         TM    SYMIND,X'80'            THIS SYMBOL REFERENCED?
         BO    URSTEP                  YES
         MVC   PRT(8),EXTSYM           SYMBOL TO PRINT
         MVC   PRT+11(13),=C'$UNREFERENCED' SHOW IT UNREFERENCED
         BAL   R9,PRINT                PRINT THE LINE
URSTEP   LA    R7,L'SYMENT(R7)         TO NEXT SYMTBL ENTRY
         B     CKUNEND                 CONTINUE
PFMTXIT  L     R9,PF9                  GET RETURN ADDR
         BR    R9                      AND EXIT
         DROP  R7
         DROP  R8
*
****************************************************************
*                                                              *
* ISSUE BLDL FOR THE MAIN MODULE, AND PRINT MODULE RELATED INFO*
*                                                              *
****************************************************************
*
BLDL     EQU   *                       ISSUE BLDL AND PRINT INFO
         ST    R9,BL9                  SAVE RETURN ADDR
ISSBLDL  BLDL  SYSLIB,BLDLIST          ISSUE BLDL
         LTR   R15,R15                 ANY ERRORS
         BNZ   MISSMEM                 YES
         LA    R1,MEMBER+35            END OF BASIC PORTION
         TM    ATTR2,X'10'             SSI PRESENT
         BZ    BLREFA1                 NO
         LA    R1,4(R1)                ADD FOR SSI
BLREFA1  TM    ALIASIND,X'80'          ALIAS
         BZ    BLREFA2                 NO
         LA    R1,11(R1)               ADD FOR ALIAS
BLREFA2  TM    ATTR1A,X'04'            SCATTER FORMAT
         BZ    BLREFA3                 NO
         LA    R1,8(R1)                ADD FOR SCATTER
BLREFA3  MVC   AUTHLEN(2),0(R1)        AUTH LENGTH AND CODE
         TM    ATTR2,X'10'             SSI PRESENT
         BZ    BLCKALI                 NO
         LA    R1,MEMBER+35            END OF BASIC PORTION
         TM    ATTR1A,X'04'            SCATTER FORMAT
         BZ    BLSSI2                  NO
         TM    ALIASIND,X'80'          ALIAS
         BO    BLFMTED                 YES, NO REFORMAT NEEDED
         LA    R1,8(R1)                NO, STEP PAST SCATTER SECTION
         B     BLMVSSI                 GO MOVE SSI
BLSSI2   TM    ALIASIND,X'80'          ALIAS
         BZ    BLMVSSI                 NO
         LA    R1,11(R1)               YES, STEP PAST ALIAS SECTION
BLMVSSI  MVC   SSI,0(R1)               MOVE SSI DATA
BLCKALI  TM    ALIASIND,X'80'          ALIAS?
         BZ    BLFMTED                 NO
BLASC    TM    ATTR1A,X'04'            SCATTER FORMAT
         BO    BLFMTED                 YES, NO REFORMAT NEEDED
         MVC   ALMEM,MEMBER+38         MOVE ALIAS MEMBER
         MVC   ALEPA(3),MEMBER+35      YES, MOVE ALIAS DATA
BLFMTED  MVI   PCC,C'*'                BUILD
         MVC   PRT,PCC                   SEPARATOR
         MVI   PCC,C'-'                    LINE
         BAL   R9,PRINT                PRINT SEPARATOR
         MVC   PRT(26),=C'DIRECTORY INFO FOR MODULE '
         MVC   PRT+27(8),MEMBER        MEMBER NAME TO PRINT
         BAL   R9,PRINT                PRINT
         TM    ALIASIND,X'80'          IS IT AN ALIAS
         BZ    BLALPRT                 NO
         MVC   PRT+10(13),=C'*** ALIAS ***'
BLALPRT  BAL   R9,PRINT                PRINT
         TM    ATTR1A,X'F7'            ANY ATTRIBUTES HERE?
         BNZ   BLATTRS                 YES
         TM    ATTR1B,X'08'            ANY ATTRIBUTE HERE?
         BNZ   BLATTRS                 YES
         TM    ATTR2,X'30'             ANY ATTRIBUTE HERE?
         BZ    BLALGTH                 NO
BLATTRS  MVC   PRT+10(13),=C'ATTRIBUTES:  '
         LA    R12,ATTR1A              @ ATTRIBUTES
         BAL   R9,HEXPRT2              CONVERT
         MVC   PRT+23(4),PRTABL        ATTRIBUTES 1
         MVI   PRT+27,C':'             DELIMITER
         TM    ATTR1A,X'80'            RENT
         BZ    BLAT1A                  NO
         MVC   PRT+30(4),=C'RENT'
BLAT1A   TM    ATTR1A,X'40'            REUS
         BZ    BLAT1B                  NO
         MVC   PRT+35(4),=C'REUS'
BLAT1B   TM    ATTR1A,X'20'            OVLY
         BZ    BLAT1C                  NO
         MVC   PRT+40(4),=C'OVLY'
BLAT1C   TM    ATTR1A,X'10'            TEST
         BZ    BLAT1D                  NO
         MVC   PRT+45(4),=C'TEST'
BLAT1D   TM    ATTR1B,X'08'            OL
         BZ    BLAT1E                  NO
         MVC   PRT+50(2),=C'OL'
BLAT1E   TM    ATTR1A,X'04'            SCTR
         BZ    BLAT1F                  NO
         MVC   PRT+53(4),=C'SCTR'
BLAT1F   TM    ATTR1A,X'02'            EXEC
         BZ    BLAT1G                  NO
         MVC   PRT+58(4),=C'EXEC'
BLAT1G   TM    ATTR1B,X'01'            REFR
         BZ    BLAT1PRT                NO
         MVC   PRT+63(4),=C'REFR'
BLAT1PRT BAL   R9,PRINT                PRINT
         TM    ATTR2,X'30'             ANY ATTRIBUTES HERE?
         BZ    BLALGTH                 NO
         BAL   R9,HEXPRT1              CONVERT
         MVC   PRT+23(2),PRTABL        ATTRIBUTES 2
         MVI   PRT+27,C':'             DELIMITER
         TM    ATTR2,X'20'             PAGE ALIGNMENT
         BZ    BLAT3A                  NO
         MVC   PRT+30(16),=C'PAGE ALIGN REQRD'
BLAT3A   TM    ATTR2,X'10'             SSI PRESENT
         BZ    BLAT3PRT                NO
         MVC   PRT+50(11),=C'SSI PRESENT'
BLAT3PRT BAL   R9,PRINT                PRINT
BLALGTH  MVC   PRT+10(13),=C'TOTAL LENGTH='
         LA    R12,TOTVIRT             @ TOTAL LENGTH
         BAL   R9,HEXPRT3              CONVERT
         MVC   PRT+23(6),PRTABL        TOTAL LENGTH OF MODULE
         BAL   R9,PRINT                PRINT
         MVC   PRT+10(11),=C'E. P. ADDR='
         LA    R12,LKEPA               @ E.P. ADDR
         BAL   R9,HEXPRT3              CONVERT
         MVC   PRT+21(6),PRTABL        E.P. ADDR
         BAL   R9,PRINT                PRINT
BLFAL    TM    ALIASIND,X'80'          ALIAS
         BZ    BLAUTHC                 NO
         MVC   PRT+10(28),=C'E.P. ADDRESS OF THIS MEMBER='
         LA    R12,ALEPA               @ E.P. ADDR
         BAL   R9,HEXPRT3              CONVERT
         MVC   PRT+38(6),PRTABL        E.P. ADDR
         BAL   R9,PRINT
         MVC   PRT+10(17),=C'REAL MEMBER NAME='
         MVC   PRT+27(8),ALMEM         REAL MEMBER NAME
         BAL   R9,PRINT
BLAUTHC  MVC   PRT+10(10),=C'AUTH CODE='
         LA    R12,AUTHCOD             @ AUTH CODE
         BAL   R9,HEXPRT1              CONVERT
         MVC   PRT+20(2),PRTABL        AUTH CODE
         BAL   R9,PRINT                PRINT
         TM    ALIASIND,X'80'          ALIAS
         BZ    BLXIT                   NO
         MVC   PRT+5(38),=C'***** REAL MEMBER DIRECTORY INFO *****'
         MVI   PCC,C'0'                DOUBLE SPACE
         BAL   R9,PRINT                PRINT
         MVC   MEMBER,ALMEM            REAL MEMBER NAME TO LIST
         B     ISSBLDL                 DO OVER FOR REAL MEMBER
BLXIT    L     R9,BL9                  GET RETURN ADDR
         BR    R9                      EXIT
*
****************************************************************
*                                                              *
* CREATE PRINTABLE HEX FROM HEX. ON ENTRY, REG 12 CONTAINS THE *
* ADDRESS OF THE DATA TO BE REFORMATTED. ENTRY POINT USED      *
* DETERMINES THE SIZE OF THE FIELD. OUTPUT DATA IS PLACED IN   *
* THE PRTABL FIELD, 2 CHARACTERS PER BYTE.                     *
*                                                              *
****************************************************************
*
HEXPRT1  UNPK  PRTABL(3),0(2,R12)      UNPACK HEX
         B     HEXCLTR                 CONTINUE
HEXPRT2  UNPK  PRTABL(5),0(3,R12)      UNPACK HEX
         B     HEXCLTR                 CONTINUE
HEXPRT3  UNPK  PRTABL(7),0(4,R12)      UNPACK HEX
         B     HEXCLTR                 CONTINUE
HEXPRT4  UNPK  PRTABL(9),0(5,R12)      UNPACK HEX
HEXCLTR  MVZ   PRTABL(8),XZROS         CLEAR FOR TRANSLATE
         TR    PRTABL(8),TRTBL         MAKE PRINTABLE
         BR    R9                      EXIT
*
****************************************************************
*                                                              *
* PRINT USING SYSPRINT.                                        *
*                                                              *
****************************************************************
*
PRINT    EQU   *                       PRINT ROUTINE
         TM    SYSPRINT+48,X'10'       IS SYSPRINT OPEN
         BNO   CLRPRT                  NO
         PUT   SYSPRINT,PRTLINE        WRITE PRINT LINE
CLRPRT   MVC   PRT,BLANX               CLEAR PRINT LINE
         AP    LINECT,P1               INCR LINE COUNTER
         CLI   PCC,C' '                SINGLE SPACED
         BE    SETSGL                  YES
         AP    LINECT,P1               INCR LINE COUNTER
         CLI   PCC,C'0'                DOUBLE SPACED
         BE    SETSGL                  YES
         AP    LINECT,P1               INCR LINE COUNTER
         CLI   PCC,C'-'                TRIPLE SPACED
         BE    SETSGL                  YES
         ZAP   LINECT,P0               NO, MUST BE NEW PAGE
SETSGL   MVI   PCC,C' '                SET SINGLE SPACING
         CP    LINECT,P58              PAST END OF PAGE
         BH    NEWPAGE                 YES
         BR    R9                      EXIT
NEWPAGE  MVI   PCC,C'1'                SET SKIP TO HOF
         ZAP   LINECT,P0               RESET LINE COUNTER
         BR    R9                      EXIT
*
****************************************************************
*                                                              *
* PROCESS THE CONTROL CARD CONTAINING MODULE NAME AND CSECT.   *
* THIS MUST BE THE FIRST CARD IN THE SYSIN DECK.               *
*                                                              *
****************************************************************
*
GETCTL   EQU   *                       EXTRACT DESIRED MEMBER/CSECT
         GET   SYSIN                   READ THE CONTROL CARD
         LA    R12,72                  LENGTH OF CONTROL CARD
         LA    R11,8                   MAX LENGTH OF MEMBER NAME
         MVC   MEMBER,BLANX            CLEAR MEMBER NAME FIELD
         LA    R10,MEMBER              @ MEMBER NAME FIELD
CKBLK1   CLI   0(R1),C' '              CONTROL BYTE IS BLANK
         BNE   GCMEMOV                 NO, GO MOVE MEMBER NAME
         LA    R1,1(R1)                TO NEXT CONTROL BYTE
         BCT   R12,CKBLK1              SUBTRACT 1 FROM REMAINING LENGTH
         B     GCEND                   ALL BLANKS, EXIT
GCMEMOV  MVC   0(1,R10),0(R1)          CONTROL BYTE TO MEMBER NAME
         LA    R1,1(R1)                TO NEXT CONTROL BYTE
         BCTR  R12,R0                  SUBTRACT 1 FROM LENGTH
         LA    R10,1(R10)              TO NEXT NAME BYTE
         BCTR  R11,R0                  SUBTRACT 1 FROM LENGTH
         CLI   0(R1),C' '              GOT A BLANK
         BE    GCEND                   YES
         CLI   0(R1),C','              GOT A COMMA
         BE    GCEND                   YES
         LTR   R12,R12                 END OF CONTROL DATA
         BE    GCEND                   YES
         LTR   R11,R11                 NAME FULL
         BNZ   GCMEMOV                 NO, CONTINUE
         B     NAMEOV8                 YES, NAME TOO LONG
GCEND    CLC   MEMBER,BLANX            ANY MEMBER NAME FOUND
         BE    NOMBR                   NO
         BR    R9                      EXIT
*
*
*
****************************************************************
*                                                              *
* MISCELLANEOUS ERROR MESSAGES.                                *
*                                                              *
****************************************************************
*
NOCTL    MVC   PRT(L'NOCNTRL),NOCNTRL  NO CONTROL INFO MESSAGE
         B     ERREND                  GO PRINT
NAMEOV8  MVC   PRT(L'OVER8),OVER8      NAME OVER 8 MESSAGE
         B     ERREND                  GO PRINT
NOMBR    MVC   PRT(L'NOMEM),NOMEM      MISSING MEMBER NAME MESSAGE
         B     ERREND                  GO PRINT
MISSMEM  MVC   PRT(L'INVMEM),INVMEM    MEMBER NOT IN PDS MESSAGE
         B     ERREND                  GO PRINT
SYMFULL  MVC   PRT(L'FULLSYM),FULLSYM  FULL SYM TBL MSG
         B     ERREND                  GO PRINT
RLDFULL  MVC   PRT(L'FULLRLD),FULLRLD  RLD TBL FULL MSDG
         B     ERREND                  GO PRINT
ERREND   BAL   R9,PRINT                GO PRINT MESSAGE
         B     NEXCARD                 GO TO NEXT CARD
*
*
****************************************************************
*                                                              *
* END OF JOB.
*                                                              *
****************************************************************
EOJ      EQU   *                       END OF JOB
         CLOSE (SYSLIB,,SYSPRINT,,SYSIN) CLOSE FILES
         L     R13,4(R13)              GET POINTER TO CALLER'S SAVE ARE
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGS
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN TO CALLER
*
****************************************************************
*
*                 *** DATA AND WORK AREAS ***
****************************************************************
*
*
*
MAPHDR   DC    CL13'-  CSECT     '
         DC    CL14'LOC   LENGTH  '
         DC    CL18'TYPE    ENTRY     '
         DC    CL19'LOC   REFERS TO(AT)'
         DC    CL16' '
*
*
*
REFHDR   DC    CL80'- SYMBOL     REFERENCED BY'
*
*
*
PRTLINE  DS    0CL80                   PRINT LINE
PCC      DC    C'1'                    CARRIAGE CONTROL
PRT      DC    CL79' '                 PRINT DATA
         ORG   PRT
CSNAME   DS    CL8                     CSECT NAME
         DS    CL2
CSLOC    DS    CL6                     CSECT START LOCATION
         DS    CL2
CSLEN    DS    CL6                     CSECT LENGTH
         DS    CL3
SYMTYP   DS    CL2                     SYMBOL TYPE
         DS    CL3
ENTNAME  DS    CL8                     ENTRY POINT NAME
         DS    CL2
ENTLOC   DS    CL6                     ENTRY POINT START LOCATION
         DS    CL2
REFTONAM DS    CL8                     "REFERS TO" NAME
REFLPN   DS    CL1
REFLOC   DS    CL6                     LOCATION OF REFERENCE
REFRPN   DS    CL1
         DS    CL13
*
*
JULDAY   DS    PL2                     JULIAN DAY
JULDATE  DS    CL5                     JULIAN DATE
JULMOTBL DS    0CL5                    JULIAN MONTH TABLE
         DC    PL2'0',C'JAN'
         DC    PL2'31',C'FEB'
         DC    PL2'59',C'MAR'
         DC    PL2'90',C'APR'
         DC    PL2'120',C'MAY'
         DC    PL2'151',C'JUN'
         DC    PL2'181',C'JUL'
         DC    PL2'212',C'AUG'
         DC    PL2'243',C'SEP'
         DC    PL2'273',C'OCT'
         DC    PL2'305',C'NOV'
         DC    PL2'334',C'DEC'
         DC    PL2'999',C'???'
JULWK    DS    PL3
IDR9     DS    F
DATEMSG  DS    0CL31                  LINK DATE MESSAGE
         DC    CL20'LAST LINK-EDITED ON '
MSGMTH   DS    CL3
         DC    C' '
MSGDAY   DS    CL2
         DC    CL4', 19'
MSGYR    DS    CL2
*
*
*
         DS    0F
BLDLIST  DS    0CL62                   BLDL LIST
         DC    H'1'                    ONE ENTRY
         DC    H'58'                   LENGTH OF ENTRY
MEMBER   DC    CL8' '                  MEMBER NAME
TTRMOD   DC    XL3'000000'             TTR OF MODULE
CCAT     DC    XL1'00'                 CONCATENATION NUMBER
         DC    XL1'00'
ALIASIND DC    XL1'00'                 ALIAS AND MISC INDICATOR
*                           80=ALIAS
TTR1TXT  DC    XL3'000000'             TTR OF 1ST TXT RECORD
         DC    XL1'00'
TTRNS    DC    XL3'000000'             TTR OF NOTE OR SCATTER LIST
NNOTE    DC    XL1'00'                 NBR ENTRIES IN NOTE LIST
ATTR1A   DC    XL1'00'                 MODULE ATTRIBUTES 1, BYTE 1
*                           80=RENT
*                           40=REUS
*                           20=OVERLAY
*                           10=UNDER TEST
*                           08=ONLY LOADABLE
*                           04=SCATTER FORMAT
*                           02=EXECUTABLE
*                           01=ONE TXT, NO RLD RECORDS
ATTR1B   DC    XL1'00'                 ATTRIBUTES 1, BYTE 2
*                           80=CANNOT BE REPROCESSED BY LKED E
*                           40=ORIGIN OF 1ST TXT RECORD IS ZERO
*                           20=ASSIGNED ENTRY POINT ADDR IS ZERO
*                           10=CONTAINS NO RLD RECORD
*                           08=CANNOT BE REPROCESSED BY LKED
*                           04=CONTAINS TESTRAN SYMBOLS
*                           02=CREATED BY LKED
*                           01=REFR
TOTVIRT  DC    XL3'000000'             TOTAL VIRTUAL STRG REQRD FOR MOD
LENG1    DC    XL2'0000'               LENGTH OF 1ST TEXT RECORD
LKEPA    DC    XL3'000000'             ASSIGNED ENTRY POINT ADDR
ATTR2    DC    XL1'00'                 ATTRIBUTES 2
*                           80=PROCESSED BY OS/VS LKED
*                           20=PAGE ALIGNMENT REQUIRED FOR MODULE
*                           10=SSI PRESENT
         DC    XL2'0000'
SCTRLEN  DC    XL2'0000'               SCATTER LIST LENGTH
TTLEN    DC    XL2'0000'               TRANSLATION TABLE LENGTH
SCESDID  DC    XL2'0000'               CESD NBR FOR 1ST TXT RECD
SCEPESD  DC    XL2'0000'               CESD NBR FOR ENTRY POINT
ALEPA    DC    XL3'000000'             ENTRY POINT OF THE MEMBER NAME
ALMEM    DC    CL8' '                  REAL MEMBER NAME FOR ALIAS
SSI      DS    XL4'00000000'           SSI BYTES
AUTHLEN  DC    XL1'00'                 AUTH CODE LENGTH
AUTHCOD  DC    XL1'00'                 AUTH CODE
*
*
*
RLDTBLD  DSECT ,                       RELOCATION DICTIONARY TABLE
RLDENT   DS    0CL24                   11 BYTE ENTRIES
RLDRP    DS    XL2                     RELOCATION POINTER
RLDPP    DS    XL2                     POS PTR (SYMBOL CESD NBR)
RLDTYPE  DS    XL1                     TYPE: 08=UNRESOLVED
RLDADDR  DS    XL3                     LKED ASSGND ADDR OF CONSTANT
RLDTONAM DS    CL8                     REFERENCE-TO NAME
RLDFMNAM DS    CL8                     REFERENCED-FROM NAME
*
*
*
SYMTBL   DSECT ,                       EXTERNAL SYMBOL TABLE ENTRY
SYMENT   DS    0CL18                   19 BYTE ENTRIES
EXTSYM   DS    CL8                     EXTERNAL SYMBOL NAME
TYPSYM   DS    XL1                     SYMBOL TYPE
*                                      00=SD (NAMED CSECT)
*                                      02=ER (EXTRN)
*                                      03=LR (ENTRY)
*                                      04=PC (UNNAMED CSECT)
*                                      05=CM (COM)
*                                      06=PR (PSEUDO REGISTER)
*                                      07=NULL
*                                      0A=WX (WXTRN)
*                                      0F=ENTAB OR SEGTAB
SYMIND   DS    XL1                     INDICATOR:
*                                      X'80'=REFERENCED
*                                      X'01'=UNRESOLVED
SYMADDR  DS    XL3                     SYMBOL ADDRESS (0 FOR ER, WX, NU
SYMLENG  DS    XL3                     LENGTH FOR SD, PC, CM, PR
SYMESDID DS    XL2                     ESD ID OF THIS ITEM
MODXREF  CSECT
*
*
*
CURRTO   DS    CL8                     CURRENT REFERENCED BY NAME
CURRFM   DS    CL8                     CURRENT REFERENCED BY NAME
HOLDSYM  DS    CL(L'SYMENT)            HOLD AREA FOR SYM ENTRY
HOLDRLD  DS    CL(L'RLDENT)            HOLD AREA FOR RLD ENTRY
BUFAD    DS    F                       SYSLIB BUFFER ADDR
SYMTBAD  DS    F                       SYMBOL TABLE ADDRESS
CURRSYM  DS    F                       CURRENT SYM TBL ADDR
ENDSYM   DS    F                       SYM TBL END ADDR
RLDTBL   DS    F                       ADDR OF RLD TABLE
CURRLD   DS    F                       CURR RLD TBL ADDR
ENDRLD   DS    F                       RLD TBL END ADDR
PROCESS  DC    XL1'00'                 PROCESS INDIC 80=SYM TBL BUILT
CES9     DS    F                       CESDREC RETURN ADDR
BL9      DS    F                       BLDL RTN RETURN ADDR
CR9      DS    F                       CTRLRECS RETURN ADDR
CT9      DS    F                       CNTLRECS RETURN ADDR
RL9      DS    F                       RLDRECS RETURN ADDR
PF9      DS    F                       PRNTFMT RETURN ADDR
LINECT   DC    PL2'0'                  PRINT LINE COUNTER
SYMLEN   DC    AL2(L'SYMENT)           LENGTH OF SYMTBL ENTRY
PRTABL   DS    CL9                     HEX-PRINTABLE CONVERSION AREA
P0       DC    P'0'                    CONSTANT 0
P1       DC    P'1'                    CONSTANT 1
P58      DC    P'58'                   CONSTANT 58
SYMHDR   DC    C'0     SYMBOL        TYPE   IND  ADDR'
         DC    C'    SEG  LRID   LENG  ESDID'
         DC    CL64' '
*
*
*
BLANX    DC    CL121' '                CONSTANT BLANKS
XZROS    DC    8X'00'                  CONSTANT ZEROS
TRTBL    DC    C'0123456789ABCDEF'     TRANSLATE TBL
NOCNTRL  DC    C'MEMBER MUST BE ENTERED VIA SYSIN          '
OVER8    DC    C'MEMBER OR CSECT NAME OVER 8 CHARACTERS'
NOMEM    DC    C'NO MEMBER NAME FOUND IN CONTROL CARD OR PARM'
INVMEM   DC    C'SPECIFIED MEMBER NOT FOUND IN SYSLIB PDS'
FULLSYM  DC    C'SYMBOL TABLE FULL: OVER 2000 ENTRIES'
FULLRLD  DC    C'RLD TABLE FULL: OVER 3000 ENTRIES'
PRTCHAR  DC    256C'.'                 CHARACTER TRANSLATE TABLE
         ORG   PRTCHAR+C' '
         DC    C' '
         ORG   PRTCHAR+C'A'
         DC    C'ABCDEFGHI'
         ORG   PRTCHAR+C'J'
         DC    C'JKLMNOPQR'
         ORG   PRTCHAR+C'S'
         DC    C'STUVWXYZ'
         ORG   PRTCHAR+C'0'
         DC    C'0123456789'
         ORG
*
*
*
SYSIN    DCB   DSORG=PS,MACRF=GL,DDNAME=SYSIN,                         X
               RECFM=FB,LRECL=80,EODAD=EOJ
SYSLIB   DCB   DSORG=PO,MACRF=R,DDNAME=SYSLIB,                         X
               RECFM=U,NCP=1
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FBA,LRECL=80
         END
