         PRINT NOGEN
         TITLE '***** USECPU: USE SPECIFIED AMOUNT OF CPU TIME *****'
USECPU SVLNK R3
*
***********************************************************************
* READS THE PARM FIELD ON THE EXECUTE STATEMENT TO DETERMINE THE      *
* WHOLE NUMBER OF CPU SECONDS TO BE USED. AN INSTRUCTION LOOP IS THEN *
* EXECUTED TO USE THAT MUCH CPU TIME, THEN THE PROGRAM ENDS.          *
*                                                                     *
* AUTHOR R THORNTON AUG 1990                                          *
***********************************************************************
*
*
***********************************************************************
* INITIALIZATION: GET CPU SECONDS FROM PARM DATA                      *
***********************************************************************
*
         L     R11,0(R1)               POINT TO PARM DATA
         LH    R12,0(R11)              GET PARM FIELD LENGTH
         LTR   R12,R12                 ANY PARM DATA ENTERED?
         BZ    BADPARM                 NO, ERROR
         CH    R12,H8                  8 BYTES OF PARM DATA?
         BNE   BADPARM                 NO, ERROR
         MVZ   NUMTST,2(R11)           MOVE ZONES FOR TEST
         CLC   NUMTST,ZEROS            CHECK FOR NUMERICS
         BNE   BADPARM                 BRANCH IF NOT NUMERIC
         MVC   CPUTIME,2(R11)          MOVE THE HHMMSSTH VALUE
         STIMER TASK,EXIT,DINTVL=CPUTIME SET TIMER
         B     MAINLINE                GO PROCESS
BADPARM  WTO   'INVALID PARM, MUST BE 8 DIGITS: HHMMSSTH',ROUTCDE=11
         ABEND 111,DUMP                ABEND
*
***********************************************************************
* MAINLINE PROCESSING: EXECUTE A GROUP OF INSTRUCTIONS UNTIL THE      *
* NUMBER OF CPU SECONDS SPECIFIED HAS BEEN USED.                      *
***********************************************************************
*
MAINLINE CLI   EOJSW,X'FF'             END OF JOB?
         BE    EOJ                     YES, TERMINATE
         L     R10,LOOPCNT             PICK UP COUNTER
         LA    R10,1(R10)              ADD 1
         ST    R10,LOOPCNT             STORE UPDATED COUNT
         L     R10,16                  POINT TO CVT
         ST    R10,CVTADR              SAVE CVT ADDR
         L     R10,0(R10)              POINT TO NEW-OLD WORDS
         L     R11,8(R10)              POINT TO MY ASCB
         ST    R11,ASCBADR             SAVE ASCB ADDRESS
         MVC   ASCBAREA,0(R11)         SAVE PART OF ASCB
         L     R12,144(R11)            PICK UP ASCBOUCB
         ST    R12,OUCBADR             SAVE OUCB ADDRESS
         ICM   R9,15,MV31BIT           GET BIT, POINTER FOR 31BIT
         BSM   0,R9                    SET 31 BIT ADDRESSING
MV31BIT  DC    AL1(128),AL3(MOVEOUCB)  USED TO GET 31 BIT ADDR.
MOVEOUCB MVC   OUCBAREA,0(R12)         SAVE PART OF OUCB
         L     R12,60(R12)             PICK UP OUCBCPU
         LA    R9,SAVOUCB              GET BIT, POINTER FOR 24BIT
         BSM   0,R9                    SET 24 BIT ADDRESSING
SAVOUCB  ST    R12,OUCBCPU             SAVE CPU TIME VALUE
         L     R10,4(R10)              POINT TO MY TCB
         ST    R10,TCBADR              SAVE TCB ADDRESS
         MVC   TCBAREA,0(R10)          SAVE PART OF TCB
         L     R10,164(R10)            POINT TO TCT
         ST    R10,TCTADR              SAVE TCT ADDRESS
         MVC   TCTAREA,0(R10)          SAVE PART OF TCT
         B     MAINLINE                THEN TERMINATE
*
***********************************************************************
*        EXIT ROUTINE FOR STIMER POP                                  *
***********************************************************************
*
         USING *,R15
EXIT     MVI   EOJSW,X'FF'             SHOW END OF JOB
         BR    R14                     RETURN TO O/S
         DROP  R15
*
***********************************************************************
*        END OF JOB: USED ALL CPU TIME REQUESTED                      *
***********************************************************************
*
EOJ      DC    H'00'                   CAUSE S0C1 ABEND
         L     R13,4(R13)              GET CALLER'S SAVE ADDRESS
         LM    R14,R12,12(R13)         GET CALLER'S REGISTERS
         SR    R15,R15                 ZERO RETURN CODE
         BR    R14                     RETURN TO CALLER
*
***********************************************************************
*        STORAGE AND FILE AREAS                                       *
***********************************************************************
*
DBLWD    DS    D
CPUTIME  DC    D'0'
CVTADR   DC    A(0)                    CVT ADDRESS
ASCBADR  DC    A(0)                    ASCB ADDRESS
TCBADR   DC    A(0)                    TCB ADDRESS
OUCBADR  DC    A(0)                    OUCB ADDRESS
TCTADR   DC    A(0)                    TCT ADDRESS
OUCBCPU  DC    F'0'                    LAST VALUE FOR OUCBCPU
LOOPCNT  DC    F'0'                    LOOP COUNTER
H8       DC    H'8'
EOJSW    DC    X'00'                   END OF JOB SWITCH
P1024K   DC    P'1024000'
NUMTST   DC    CL8'00000000'
ZEROS    DC    CL8'00000000'
         DS    0D
ASCBLIT  DC    CL4'ASCB'
ASCBAREA DS    CL256
         DS    0D
OUCBLIT  DC    CL4'OUCB'
OUCBAREA DS    CL256
         DS    0D
TCBLIT   DC    CL4'TCB'
TCBAREA  DS    CL256
         DS    0D
TCTLIT   DC    CL4'TCT'
TCTAREA  DS    CL256
         END
