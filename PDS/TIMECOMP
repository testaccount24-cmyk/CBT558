         TITLE '***** COMPUTE DATE/TIME FROM A TOD STAMP (STCK)*****'
         PRINT NOGEN
TIMECOMP SVLNK R3,R4
*
**********************************************************************
* READS A USER-KEYED TIME-OF-DAY VALUE FROM THE SYSIN FILE, CONVERTS *
* IT TO DATE AND TIME FORMAT, AND PRINTS THE RESULT VIA THE SYSPRINT *
* FILE. THE PROGRAM EXPECTS THE HIGH 13 HEX DIGITS OF AN 8-BYTE      *
* T.O.D. STAMP AS OBTAINED BY USE OF THE STCK INSTRUCTION            *
*  AUTHOR R. THORNTON JUN 1985 CORRECTED JULY 1989                   *
**********************************************************************
*
***********************************************************************
* OPEN SYSPRINT FOR PRINTING AND SYSIN FOR CONTROL INPUT.             *
***********************************************************************
*
         OPEN  (SYSPRINT,OUTPUT,SYSIN)  OPEN PRINT AND CONTROL FILES
*
***********************************************************************
* MAINLINE PROCESSING                                                 *
***********************************************************************
*
MAINLINE TIME  DEC                      GET TIME AND DATE
         STCK  DBLWD                    SAVE TOD CLOCK VALUE
         STM   R0,R1,TIMEDATE           SAVE
         MVC   PRT(22),CURRIS           'CURRENT TOD VALUE IS' MSG
         UNPK  PRT+22(9),DBLWD(5)       CONVERT TO 1 NIBBLE PER BYTE
         UNPK  PRT+30(9),DBLWD+4(5)     CONVERT TO 1 NIBBLE PER BYTE
         TR    PRT+22(16),TRTBLA-C'0'   TRANSLATE TO PRINTABLE
         MVC   PRT+38(15),DATIMIS       'DATE/TIME IS:' MSG
         MVC   PRT+53(7),EDT5           EDIT WORD FOR DATE
         ED    PRT+53(7),TIMEDATE+5     DATE TO PRINT
         MVC   PRT+60(12),EDT8          EDIT WORD FOR TIME
         ED    PRT+60(12),TIMEDATE      TIME TO PRINT
         MVI   PRT+60,C'/'              DELIMIT DATE/TIME
         BAL   R9,PRINT                 PRINT THE TOD AND DATE/TIME
ASKTOD   MVC   PRT(43),ENTR13           'ENTER 13-HEX DIGITS ... ' MSG
         BAL   R9,PRINT                 PRINT THE REQUEST
GETTOD   GET   SYSIN,TODVALU+1          READ TOD VALUE
         CLC   TODVALU+1(3),ENDLIT      END REQUESTED?
         BE    EOJ                      YES
         MVI   TODVALU,C'0'             INSURE LEADING ZERO
         LA    R14,TODVALU              POINT TO CHARACTER HEX DATA
         LA    R15,7                    CONVERT 7 CHARACTER PAIRS
CVRTHEX  BAL   R9,CHARHEX               GO CONVERT TO REAL HEX
         CLI   CHERR,1                  ANY ERROR?
         BE    ASKTOD                   YES, REPEAT
         MVC   PRT(13),TODVALU+1        MOVE HEX TOD VALUE TO PRINT
         MVC   PRT+13(8),HEXLIT         '(HEX) = ' MSG
         SR    R15,R15                  CLEAR FOR INSERTS
COMPUT6  ZAP   PTOD,PWR6                GET FIRST MULTIPLIER
         IC    R15,HEX                  GET HIGH ORDER BYTE OF 7
         CVD   R15,DBLWD                CONVERT TO PACKED
         MP    PTOD,DBLWD               FIND DECIMAL EQUIVALENT
COMPUT5  ZAP   PMUL,PWR5                GET NEXT MULTIPLIER
         IC    R15,HEX+1                GET NEXT LOWER BYTE OF 7
         CVD   R15,DBLWD                CONVERT TO PACKED
         MP    PMUL,DBLWD               FIND DECIMAL EQUIVALENT
         AP    PTOD,PMUL                ADD TO TOTAL
COMPUT4  ZAP   PMUL,PWR4                GET NEXT MULTIPLIER
         IC    R15,HEX+2                GET NEXT LOWER BYTE OF 7
         CVD   R15,DBLWD                CONVERT TO PACKED
         MP    PMUL,DBLWD               FIND DECIMAL EQUIVALENT
         AP    PTOD,PMUL                ADD TO TOTAL
COMPUT3  ZAP   PMUL,PWR3                GET NEXT MULTIPLIER
         IC    R15,HEX+3                GET NEXT LOWER BYTE OF 7
         CVD   R15,DBLWD                CONVERT TO PACKED
         MP    PMUL,DBLWD               FIND DECIMAL EQUIVALENT
         AP    PTOD,PMUL                ADD TO TOTAL
ADDLST3  ICM   R15,7,HEX+4              GET LAST 3 BYTES OF 7
         CVD   R15,DBLWD                CONVERT TO PACKED
         AP    PTOD,DBLWD               ADD TO TOTAL
EDITANS  MVC   PRT+21(25),LONGEDIT      EDIT WORD TO PRINT
         ED    PRT+21(25),PTOD+6        EDIT DECIMAL EQUIVALENT TOD
         MVC   PRT+47(9),DECMLIT        '(DECIMAL)' MSG
         BAL   R9,PRINT                 PRINT VALUE
BGNCALC  ZAP   USECCALC,PTOD+12(4)      MOVE MICROSECONDS
         NI    USECCALC,X'0F'           CLEAR HIGH DIGIT
         OI    PTOD+12,X'0F'            CHOP OFF MICROSECONDS
RJSECS   ZAP   PTOD,PTOD(13)            RIGHT JUSTIFY WHOLE SECONDS
         DP    PTOD,P60                 COMPUTE SECONDS PAST MIN
         ZAP   SECCALC,PTOD+14(2)       MOVE SECONDS PAST MIN
RJMINS   ZAP   PTOD,PTOD(14)            RIGHT JUSTIFY WHOLE MINUTES
         DP    PTOD,P60                 COMPUTE MINUTES PAST HR
         ZAP   MINCALC,PTOD+14(2)       MOVE MINUTES PAST HR
RJHRS    ZAP   PTOD,PTOD(14)            RIGHT JUSTIFY WHOLE HOURS
         DP    PTOD,P24                 COMPUTE HOURS PAST MIDNITE
         ZAP   HOURCALC,PTOD+14(2)      MOVE HOURS PAST MIDNITE
RJDAYS   ZAP   PTOD,PTOD(14)            RIGHT JUSTIFY WHOLE DAYS
         MVI   LPYR,1                   INDICATE LEAP YEAR
         AP    PTOD,P1                  ADJUST FOR NON-LEAP 1900
         CP    PTOD,P365                PAST END OF 1900?
         BH    COMPQ                    YES
         CP    PTOD,P58                 PAST FEB 28, 1900?
         BH    COMPQ                    YES
         SP    PTOD,P1                  NO, READJUST IN 1900
COMPQ    DP    PTOD,P1461               COMPUTE QUAD-YEARS
         MP    PTOD(13),P4              TOTAL YEARS IN QUAD-YEARS
         ZAP   YEARCALC,PTOD(13)        YEARS IN QUAD-YEARS
         XC    PTOD(13),PTOD            DAYS OVER A QUAD-YEAR
         CP    PTOD,P365                MORE THAN 1 YEAR?
         BH    OVR1YR                   YES
         B     COMPMNTH                 CONTINUE
OVR1YR   MVI   LPYR,0                   INDICATE NOT LEAP YEAR
         AP    YEARCALC,P1              ADD 1 FOR THE LEAP YEAR
         SP    PTOD,P366                DEDUCT THE LEAP YEAR
         CP    PTOD,P364                MORE THAN A YEAR LEFT?
         BNH   COMPMNTH                 NO
OVR2YR   AP    YEARCALC,P1              ADD FOR SECOND YEAR
         SP    PTOD,P365                DEDUCT FOR SECOND YEAR
         CP    PTOD,P364                MORE THAN A YEAR LEFT?
         BNH   COMPMNTH                 NO
OVR3YR   AP    YEARCALC,P1              ADD FOR THIRD YEAR
         SP    PTOD,P365                DEDUCT FOR THIRD YEAR
COMPMNTH ZAP   MNTHCALC,P1              INITIALIZE MONTH
         LA    R15,MTHTBL               POINT TO JULIAN MONTH TABLE
         CLI   LPYR,1                   LEAP YEAR?
         BNE   CHKDAYS                  NO
         LA    R15,LYMTHTBL             YES, USE LEAP YEAR TABLE
CHKDAYS  CP    PTOD,2(2,R15)            IS THIS THE MONTH?
         BL    FNDMNTH                  YES
         AP    MNTHCALC,P1              NO, INCREMENT MONTH
         LA    R15,2(R15)               STEP TO NEXT MONTH ENTRY
         B     CHKDAYS                  LOOP TO FIND MONTH
FNDMNTH  SP    PTOD,0(2,R15)            DEDUCT DAYS TO START OF MTH
         ZAP   DAYCALC,P1               INITIALIZE DAY OF MONTH
         AP    DAYCALC,PTOD             COMPUTE DAY OF MONTH
PRTVALU  MVC   EDUS-1(8),EDIT7          EDIT WORD
         ED    EDUS-1(8),USECCALC
         MVI   EDUS,C'.'
         MVC   EDSC-1(4),EDIT3
         ED    EDSC-1(4),SECCALC
         MVI   EDSC,C':'
         MVC   EDMN-1(4),EDIT3
         ED    EDMN-1(4),MINCALC
         MVI   EDMN,C':'
         MVC   EDHR-1(4),EDIT3
         ED    EDHR-1(4),HOURCALC
         MVC   EDHR-1(2),BLANX
         MVC   EDDA-1(4),EDIT3
         ED    EDDA-1(4),DAYCALC
         MVI   EDDA,C'/'
         MVC   EDMO-1(4),EDIT3
         ED    EDMO-1(4),MNTHCALC
         MVI   EDMO,C'/'
         MVC   EDYR-1(4),EDIT3
         ED    EDYR-1(4),YEARCALC
         MVC   EDYR-1(2),BLANX
         MVC   PRT,CMPVLU               LITERAL AND EDIT WORDS
ENDFRMT  BAL   R9,PRINT
         B     MAINLINE                 CONTINUE
*
***********************************************************************
*        ***** END COMMAND *****                                      *
*           END OF JOB ROUTINE                                        *
***********************************************************************
*
EOJ      CLOSE (SYSIN,,SYSPRINT)       CLOSE FILES
         L     R13,4(R13)              GET CALLER'S SAVE AREA ADDR
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGS
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN TO CALLER
*
***********************************************************************
*        PRINT A LINE                                                 *
***********************************************************************
*
PRINT    PUT   SYSPRINT,PRT            WRITE PRINT LINE
         MVC   PRT,BLANX               CLEAR PRINT LINE
         BR    R9                      EXIT
*
***********************************************************************
*        ROUTINE TO CONVERT CHARACTERS TO HEX, TWO CHARACTERS PER BYTE*
*        ON ENTRY, R14 POINTS TO THE HEX FIELD AND R15 CONTAINS THE   *
*        NUMBER OF CHARACTER PAIRS TO CONVERT (80 MAX). THE HEX       *
*        RESULT IS STORED IN THE HEX FIELD. CHERR=1 IF ANY OF THE     *
*        CHARACTERS ARE INVALID (NOT 0-9 OR A-F).                     *
***********************************************************************
*
CHARHEX  LA    R12,HEX                  POINT TO HEX FIELD
         MVI   CHERR,0                  CLEAR ERROR INDICATOR
NEXPAIR  MVC   0(1,R12),1(R14)          MOVE SECOND CHAR (NUMERIC)
         TR    0(1,R12),TRCHAR          TRANSLATE
         CLI   0(R12),X'FF'             INVALID CHARACTER?
         BNE   DO1ST                    NO
CHERRS   MVI   CHERR,1                  INDICATE INVALID CHARACTER
         BR    R9                       EXIT
DO1ST    MVC   WORK(1),0(R14)           MOVE 1ST CHAR (ZONE)
         TR    WORK(1),TRCHAR           TRANSLATE
         CLI   WORK,X'FF'               INVALID CHARACTER?
         BE    CHERRS                   YES, ERROR
         PACK  WORK(1),WORK(1)          INVERT ZONE BYTE
         MVZ   0(1,R12),WORK            SET ZONE IN PLACE
         LA    R12,1(R12)               STEP OVER 1 BYTE IN CHARS
         LA    R14,2(R14)               STEP OVER 2 CHARS IN INPUT
         BCT   R15,NEXPAIR              CONTINUE
         BR    R9                       EXIT
*
***********************************************************************
*                                                                     *
*        DATA AREAS                                                   *
*                                                                     *
***********************************************************************
*
TIMEDATE DC    D'0'                    TIME AND DATE FROM TIME MACRO
CURRIS   DC    CL22'CURRENT TOD VALUE IS: '
DATIMIS  DC    CL15', DATE/TIME IS:'
EDT5     DC    XL7'4021204B202020'      EDIT WORD FOR DATE
EDT8     DC    XL13'4021207A20207A20204B2020'
ENTR13   DC    CL43'ENTER 13-HEX DIGITS FOR TOD TO BE EVALUATED'
ENDLIT   DC    CL3'END'
HEXLIT   DC    CL8'(HEX) = '
DECMLIT  DC    CL9'(DECIMAL)'
PMUL     DC    PL16'0'                 MULTIPLY AREA
PTOD     DC    PL16'0'                 DECIMAL EQUIVALENT TOD VALUE
HEX      DC    XL7'00'                 HEX CONVERSION AREA
CHERR    DC    X'00'                   CONVERSION ERROR INDICATOR
TRTBLA   DC    C'0123456789ABCDEF'     TRANSLATE TABLE
TRCHAR   DC    256X'FF'                TRANSLATE TABLE FOR CHARHEX
         ORG   TRCHAR+X'81'            ORG TO LOWER CASE A
         DC    X'0A0B0C0D0E0F'         A-F = 0A-0F
         ORG   TRCHAR+X'C1'            ORG TO UPPER CASE A
         DC    X'0A0B0C0D0E0F'         A-F = 0A-0F
         ORG   TRCHAR+C'0'             ORG TO ZERO
         DC    X'00010203040506070809' 0-9 = 00-09
         ORG
DBLWD    DC    D'0'                    DOUBLEWORD WORK AREA
WORK     DC    CL11' '                 WORK AREA
PWR3     DC    PL5'16777216'           VALUE FOR 256**3
PWR4     DC    PL6'4294967296'         VALUE FOR 256**4
PWR5     DC    PL7'1099511627776'      VALUE FOR 256**5
PWR6     DC    PL8'281474976710656'    VALUE FOR 256**6
LONGEDIT DC    XL25'40206B2020206B2020206B2020206B2020204B202020202020'
PRT      DC    CL80' '                 PRINT AREA
BLANX    DC    CL80' '                 CONSTANT BLANKS
TODVALU  DC    CL90' '                 SYSIN READ-IN AREA
EDIT3    DC    XL4'F0202120'
EDIT7    DC    XL8'F021202020202020'
CMPVLU   DC    CL41'DATE AND TIME (YY/MM/DD HH:MM:SS.UUUUUU):'
EDYR     DS    XL3
EDMO     DS    XL3
EDDA     DS    XL3
         DS    CL2' '
EDHR     DS    XL3
EDMN     DS    XL3
EDSC     DS    XL3
EDUS     DS    XL7
         DC    CL80' '
MTHTBL   DC    PL2'0',PL2'31',PL2'59',PL2'90',PL2'120',PL2'151'
         DC    PL2'181',PL2'212',PL2'243',PL2'273',PL2'304',PL2'334'
         DC    PL2'365'
LYMTHTBL DC    PL2'0',PL2'31',PL2'60',PL2'91',PL2'121',PL2'152'
         DC    PL2'182',PL2'213',PL2'244',PL2'274',PL2'305',PL2'335'
         DC    PL2'366'
YEARCALC DC    PL2'0'                   YEARS
MNTHCALC DC    PL2'0'                   MONTHS
DAYCALC  DC    PL2'0'                   DAYS
HOURCALC DC    PL2'0'                   HOURS
MINCALC  DC    PL2'0'                   MINUTES
SECCALC  DC    PL2'0'                   SECONDS
USECCALC DC    PL4'0'                   MICROSECONDS
LPYR     DC    X'00'                    LEAP YEAR INDICATOR
P0       DC    PL1'0'                   CONSTANT 0
P1       DC    PL1'1'                   CONSTANT 1
P4       DC    PL4'4'                   CONSTANT 4
P58      DC    PL2'58'                  CONSTANT 58
P60      DC    PL2'60'                  CONSTANT 60
P24      DC    PL2'24'                  CONSTANT 24
P364     DC    PL2'364'                 CONSTANT 364
P365     DC    PL2'365'                 CONSTANT 365
P366     DC    PL2'366'                 CONSTANT 366
P1461    DC    PL3'1461'                CONSTANT 1461
*
***********************************************************************
*                                                                     *
*        PRINT AND CONTROL FILES                                      *
*                                                                     *
***********************************************************************
*
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=EOJ,               X
               RECFM=FB,LRECL=80
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FB,LRECL=80
         LTORG
         END
