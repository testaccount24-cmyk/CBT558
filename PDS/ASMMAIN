         TITLE '*** ASMMAIN: TEST COBOL CALLS ***'
ASMMAIN CSECT
ASMMAIN AMODE 31
ASMMAIN RMODE ANY
*********************************************************************
* ASSEMBLER MAIN PROGRAM USED TO TEST VARIOUS STATIC AND DYNAMIC    *
* TO COBOL AND ASSMEBLER SUBPROGRAMS. AS WRITTEN:                   *
* 1. STATICALLY CALL COBSUBS1 (COBOL PROGRAM)                       *
* 2. STATICALLY CALL ASMSUBS1 (ASSEMBLER PROGRAM)                   *
* 3. DYNAMICALLY CALL COBSUBD1 (COBOL PROGRAM)                      *
* 4. DYNAMICALLY CALL ASMSUBD1 (ASSEMBLER PROGRAM)                  *
* 5. STATICALLY CALL COBSUBS2 (COBOL PROGRAM)                       *
* 6. DYNAMICALLY CALL COBSUBD2 (COBOL PROGRAM)                      *
* FOR THIS TEST, NEITHER ILBOSTP0 NOR IGZERRE IS CALLED TO INITIATE *
* AN RTEREUS ENVIRONMENT. PURPOSE IS TO SEE IF THESE CALLS WILL     *
* WORK PROPERLY WITHOUT THAT CALL.                                  *
*                                                                   *
* AUTHOR R THORNTON AUG 2001                                        *
*********************************************************************
*
*********************************************************************
*        SAVE REGISTERS, SET UP BASE REGS, CHAIN SAVE AREAS         *
*********************************************************************
         USING ASMMAIN,R3,R4
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)             SET UP SECOND
         LA    R4,1(R4)                    BASE REGISTER
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     START                   BRANCH AROUND CONSTANTS
         DC    CL8'ASMMAIN'            PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
START    OI    CSS1END,X'80'           TERMINATE COBSUBS1 PARMLIST
         OI    ASS1END,X'80'           TERMINATE ASMSUBS1 PARMLIST
         OI    CSD1END,X'80'           TERMINATE COBSUBD1 PARMLIST
         OI    ASD1END,X'80'           TERMINATE ASMSUBD1 PARMLIST
         OI    CSS2END,X'80'           TERMINATE COBSUBS2 PARMLIST
         OI    CSD2END,X'80'           TERMINATE COBSUBD2 PARMLIST
*********************************************************************
*        PROCESS PARM FIELD                                         *
*********************************************************************
         L     R2,0(R1)                GET PARM FIELD ADDR
         CLC   0(2,R2),H0              ANY PARM DATA?
         BE    MAINLINE                NO, CONTINUE
         LH    R15,0(R2)               PICK UP PARM FIELD LENGTH
         EX    R15,PARMMOVE            SAVE PARM DATA
PARMMOVE MVC   PARMDATA(1),2(R2)       SAVE PARM DATA
*********************************************************************
*             MAINLINE ROUTINE                                      *
*********************************************************************
MAINLINE LA    R1,CSS1PARM             POINT TO PARMLIST
         L     R15,=V(COBSUBS1)        POINT TO COBOL SUBROUTINE
         BASR  R14,R15                 CALL COBSUBS1 STATICALLY
         LA    R1,ASS1PARM             POINT TO PARMLIST
         L     R15,=V(ASMSUBS1)        POINT TO ASSEMBLER SUBROUTINE
         BASR  R14,R15                 CALL ASMSUBS1 STATICALLY
         LOAD  EP=COBSUBD1             LOAD COBOL SUBRTN DYNAMICALLY
         LR    R15,R0                  COPY ENTRY POINT ADDRESS
         LA    R1,CSD1PARM             POINT TO PARMLIST
         BASR  R14,R15                 CALL DYN LOADED COBOL PGM
         DELETE EP=COBSUBD1            DELETE THE COBOL PROGRAM
         LOAD  EP=ASMSUBD1             LOAD ASM SUBRTN DYNAMICALLY
         LR    R15,R0                  COPY ENTRY POINT ADDRESS
         LA    R1,ASD1PARM             POINT TO PARMLIST
         BASR  R14,R15                 CALL DYN LOADED ASM PGM
         DELETE EP=ASMSUBD1            DELETE THE ASSEMBLER PROGRAM
         LA    R1,CSS2PARM             POINT TO PARMLIST
         L     R15,=V(COBSUBS2)        POINT TO COBOL SUBROUTINE
         BASR  R14,R15                 CALL COBSUBS2 STATICALLY
         LOAD  EP=COBSUBD2             LOAD COBOL SUBRTN DYNAMICALLY
         LR    R15,R0                  COPY ENTRY POINT ADDRESS
         LA    R1,CSD2PARM             POINT TO PARMLIST
         BASR  R14,R15                 CALL DYN LOADED COBOL PGM
         DELETE EP=COBSUBD2            DELETE THE COBOL PROGRAM
         B     EOJ                     ALL THROUGH, GO TERMINATE
*********************************************************************
*             END OF JOB                                            *
*********************************************************************
EOJ      L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         L     R14,12(R13)             RESTORE RETURN REG: R14
         L     R15,RETCODE             SET RETURN CODE
         LM    R0,R12,20(R13)          RESTORE CALLER'S REGS 0-12
         BR    R14                     RETURN
*********************************************************************
*        STORAGE AND FILE AREAS                                     *
*********************************************************************
*
CSS1PARM DC    A(CSS1P1)               PARMLIST FOR COBSUBS1
         DC    A(CSS1P2)
CSS1END  DC    A(CSS1P3)
CSS1P1   DC    CL8'COBSUBS1'             PARM 1 = PROGRAM NAME
CSS1P2   DC    PL2'1'                    PARM 2 = PACKED 1
CSS1P3   DC    H'1'                      PARM 3 = HALFWORD 1
*
ASS1PARM DC    A(ASS1P1)               PARMLIST FOR COBSUBS1
         DC    A(ASS1P2)
ASS1END  DC    A(ASS1P3)
ASS1P1   DC    CL8'ASMSUBS1'             PARM 1 = PROGRAM NAME
ASS1P2   DC    PL2'2'                    PARM 2 = PACKED 2
ASS1P3   DC    H'2'                      PARM 3 = HALFWORD 2
*
CSD1PARM DC    A(CSD1P1)               PARMLIST FOR COBSUBD1
         DC    A(CSD1P2)
CSD1END  DC    A(CSD1P3)
CSD1P1   DC    CL8'COBSUBD1'             PARM 1 = PROGRAM NAME
CSD1P2   DC    PL2'3'                    PARM 2 = PACKED 3
CSD1P3   DC    H'3'                      PARM 3 = HALFWORD 3
*
ASD1PARM DC    A(ASD1P1)               PARMLIST FOR ASMSUBD1
         DC    A(ASD1P2)
ASD1END  DC    A(ASD1P3)
ASD1P1   DC    CL8'ASMSUBD1'             PARM 1 = PROGRAM NAME
ASD1P2   DC    PL2'4'                    PARM 2 = PACKED 4
ASD1P3   DC    H'4'                      PARM 3 = HALFWORD 4
*
CSS2PARM DC    A(CSS2P1)               PARMLIST FOR COBSUBS2
         DC    A(CSS2P2)
CSS2END  DC    A(CSS2P3)
CSS2P1   DC    CL8'COBSUBS2'             PARM 1 = PROGRAM NAME
CSS2P2   DC    PL2'900'                  PARM 2 = PACKED 1
CSS2P3   DC    H'900'                    PARM 3 = HALFWORD 1
*
CSD2PARM DC    A(CSD2P1)               PARMLIST FOR COBSUBD2
         DC    A(CSD2P2)
CSD2END  DC    A(CSD2P3)
CSD2P1   DC    CL8'COBSUBD2'             PARM 1 = PROGRAM NAME
CSD2P2   DC    PL2'900'                  PARM 2 = PACKED 1
CSD2P3   DC    H'900'                    PARM 3 = HALFWORD 1
*
RETCODE  DC    F'0'                    RETURN CODE
H0       DC    H'0'                    CONSTANT 0
PARMDATA DC    CL104' '                DATA FROM EXEC STMT PARM FLD
*
*
         LTORG
ASMMAIN CSECT
*********************************************************************
*             REGISTER EQUATES                                      *
*********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
