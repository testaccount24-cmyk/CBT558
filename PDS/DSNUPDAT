         TITLE '***** PURGE THE DSNAME HISTORY FILE *****'
         PRINT NOGEN
DSNUPDAT CSECT
**********************************************************************
*  READS THE SORTED DSNAME HISTORY FILE AND THE SORTED USERID FILE.  *
*  DROPS ANY DSNAME HISTORY FILE RECORD OLDER THAN ONE YEAR AND ANY  *
*  DATASET RECORD WHOSE HIGH ORDER NODE MATCHES A TSO USERID.        *
*                                                                    *
*  DDNAME RECFM LRECL IN/OUT CONTENT                                 *
*  USERIDS   FB      8  IN   TSO USERIDS                             *
*  DSNACTV   FB     65  IN   SORTED SMF DSNAME ACTIVITY              *
*  OLDMAST   VB   4092  IN   OLD DSNAME HISTORY FILE                 *
*  NEWMAST   VB   4092 OUT   NEW DSNAME HISTORY FILE                 *
*                                                                    *
*  AUTHOR R. THORNTON MAY 1998                                       *
**********************************************************************
*
**********************************************************************
*        INITIALIZATION                                              *
**********************************************************************
         USING DSNUPDAT,R3,R4
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)             SET UP SECOND
         LA    R4,1(R4)                    BASE REGISTER
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     OPENS                   BRANCH AROUND CONSTANTS
         DC    CL8'DSNUPDAT'           PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
OPENS    OPEN  (NEWHISTY,OUTPUT,USERIDS,,DSNACTV,,OLDHISTY) OPEN FILES
         TIME  DEC                     GET CURRENT DATE IN R1
         ST    R1,LASTYEAR             SAVE CURRENT DATE
         MVI   LASTYEAR,X'19'          ASSUME CENTURY IS 19
         CLI   LASTYEAR+1,X'50'        IF YEAR IS PAST 50
         BH    BACKUP1                 CENTURY IS 19
         MVI   LASTYEAR,X'20'          ELSE CENTURY IS 20
BACKUP1  SP    LASTYEAR,=P'1000'       BACK UP TO 1 YEAR AGO TODAY
         GETMAIN R,LV=4096             GET STORAGE FOR HISTORY WORK
         ST    R1,HISTWORK             SAVE HISTORY WORK ADDRESS
         MVI   NEWNAME,0               SHOW NO NEW HISTORY RECORD
         AH    R1,=H'4076'             COMPUTE END OF HIST WORK AREA
         ST    R1,HISTMAX              AND SAVE IT
         BAS   R9,GETUSR               READ FIRST USERID RECORD
         BAS   R9,GETACT               READ FIRST DSN ACTIVITY RECORD
         BAS   R9,GETOLDH              READ FIRST OLD HISTORY RECORD
***********************************************************************
*        MAINLINE PROCESSING                                          *
***********************************************************************
MAINLINE CLC   OLDNAME,DSNDSNAM        OLD HISTORY <= ACTIVITY?
         BNH   OLDLOW                  YES
ACTLOW   CLI   NEWNAME,0               IS THERE A NEW HIST REC?
         BE    ALNONEW                 NO
         CLC   DSNDSNAM,NEWNAME        THIS ACTIVITY FOR NEW HIST?
         BNE   ALWRTNEW                NO
         BAS   R9,ADDSEGMT             YES, GO ADD A NEW SEGMENT
         BAS   R9,GETACT               READ NEXT ACTIVITY RECORD
         B     MAINLINE                AND CONTINUE PROCESSING
ALWRTNEW BAS   R9,WRITE                WRITE NEW HISTORY RECORD
ALNONEW  BAS   R9,COPYACT              BUILD NEW HIST FROM ACTIVITY
         BAS   R9,GETACT               READ NEXT ACTIVITY RECORD
         B     MAINLINE                AND CONTINUE PROCESSING
OLDLOW   CLI   NEWNAME,0               IS THERE A NEW HIST REC?
         BE    OLNONEW                 NO
         BAS   R9,WRITE                YES, WRITE NEW HISTORY RECORD
OLNONEW  BAS   R9,COPYOLD              BUILD NEW HISTORY FROM OLD HIST
         BAS   R9,GETOLDH              READ NEXT OLD HISTORY RECORD
         B     MAINLINE                CONTINUE PROCESSING
***********************************************************************
*        READ NEXT DSNAME ACTIVITY RECORD. COMPUTE AND STORE DSNAME   *
*        LENGTH AND REFORMAT IN ACTIVITY SEGMENT FORMAT.              *
***********************************************************************
GETACT   ST    R9,GA9                   SAVE RETURN ADDRESS
GETACTV  GET   DSNACTV,DSNRECD          READ HISTORY RECORD
         CLC   DSNJOB,=CL8'HSM     '    ACTIVITY DUE TO HSM?
         BE    GETACTV                  YES, DROP THE RECORD
         LA    R9,DSNDSNAM+43           POINT TO END OF DSNAME
GACKRHE  CLI   0(R9),C' '               FOUND RIGHT HAND END?
         BNE   GARHE                    YES
         BCT   R9,GACKRHE               LOOP TO LOCATE RHE
GARHE    LA    R1,DSNDSNAM              POINT TO LEFT HAND END
         SR    R9,R1                    COMPUTE DSNAME LENGTH CODE
         STC   R9,ACTDSNL               SAVE LENGTH
         ZAP   RFMDATE,DSNDATE+1(3)     MOVE IN DATE
         MVC   RFMTIME,DSNTIME          MOVE IN TIME
         MVC   RFMJOB,DSNJOB            MOVE IN JOB
         LA    R1,ACTNS                 POINT TO ACTIONS TABLE
         LA    R2,6                     NUMBER TABLE ENTRIES
GAFNDACT CLC   DSNACTN,0(R1)            FOUND ACTION IN TABLE?
         BE    GAGOTACT                 YES
         LA    R1,2(R1)                 NO, STEP TO NEXT ENTRY
         BCT   R2,GAFNDACT              CONTINUE SEARCH
         B     GASET2                   NOT FOUND, LEAVE UNK
GAGOTACT MVC   RFMFLAG,1(R1)            SET FLAGS FOR ACTION
GASET2   LA    R1,ORGS                  POINT TO DSORGS TABLE
         LA    R2,6                     NUMBER TABLE ENTRIES
GAFNDORG CLC   DSNDSORG,0(R1)           FOUND DSORG IN TABLE?
         BE    GAGOTORG                 YES
         LA    R1,3(R1)                 NO, STEP TO NEXT ENTRY
         BCT   R2,GAFNDORG              CONTINUE SEARCH
         B     GASETDVC                 NOT FOUND, LEAVE UNK
GAGOTORG OC    RFMFLAG,2(R1)            SET FLAGS FOR ACTION
GASETDVC CLI   DSNDEVTY,C'D'            IS IT DISK?
         BE    GAXIT                    YES, ALREADY SET
         OI    RFMFLAG,X'01'            NO, SET IT TO TAPE
GAXIT    L     R9,GA9                   GET RETURN ADDRESS
         BR    R9                       RETURN
EOFACT   CLI   OLDNAME,X'FF'            IS IT EOF OLD HISTORY AS WELL?
         BE    EOJ                      YES
         MVI   DSNDSNAM,X'FF'           INDICATE EOF ACTIVITY
         B     GAXIT                    NO, RETURN TO GETACT CALLER
***********************************************************************
*        COPY OLD HISTORY RECORD TO HISTORY WORK AREA. DELETE ANY     *
*        OLD ACTIVITY SEGMENTS.                                       *
***********************************************************************
COPYOLD  ST    R9,CO9                   SAVE RETURN ADDRESS
         MVC   NEWNAME,OLDNAME          SET UP NEW HISTORY NAME
         L     R8,OLDHIST               POINT TO OLD HISTORY RECORD
OLD      USING HISTORY,R8
         L     R10,HISTWORK             POINT TO NEW HISTORY WORK AREA
NEW      USING HISTORY,R10
         MVC   NEW.HISTHEAD,OLD.HISTHEAD MOVE FIXED HEADER PORTION
         SR    R11,R11                  CLEAR FOR INSERT
         IC    R11,NEW.HISTDSNL         GET DSNAME LENGTH
         LA    R10,NEW.HISTDSN+1(R11)   POINT TO FIRST ACTIVITY
         DROP  NEW
         ST    R10,HISTACT              SAVE 1ST ACTIVITY POINTER
         ST    R10,HISTEND              SAVE END RECD +1
NEW      USING ACTIVITY,R10
         LA    R8,OLD.HISTDSN+1(R11)    POINT TO 1ST ACTIVITY SEGMENT
         DROP  OLD
OLD      USING ACTIVITY,R8
COCHOLD  CLC   OLD.ACTJOB,=CL8'HSM     ' ACTIVITY CREATED BY HSM?
         BE    COSTP1                   YES, DROP IT
         ZAP   Y2KDATE,OLD.ACTDATE      COPY DATE FOR ADJUSTMENT
         MVI   Y2KDATE,X'20'            ASSUME CENTURY 2000
         CLI   Y2KDATE+1,X'50'          IS IT 2000?
         BL    COCHOLD1                 YES
         MVI   Y2KDATE,X'19'            NO, CENTURY 19
COCHOLD1 CP    Y2KDATE,LASTYEAR         THIS AN OLD SEGMENT?
         BL    COSTP1                   YES
         MVC   NEW.ACTSEG,OLD.ACTSEG    NO, MOVE THIS SEGMENT
         LA    R10,L'ACTSEG(R10)        STEP TO NEXT NEW HIST SEG
         ST    R10,HISTEND              SAVE NEW HIST END+1
COSTP1   LA    R8,L'ACTSEG(R8)          STEP TO NEXT OLD HIST SEG
         C     R8,OLDEND                PAST END OF RECORD?
         BL    COCHOLD                  NO, CONTINUE
         CLC   HISTEND,HISTACT          ANY SEGMENTS?
         BH    COXIT                    YES
         MVI   NEWNAME,0                NO SEGMENTS, THEN NO RECORD
COXIT    L     R9,CO9                   GET RETURN ADDRESS
         BR    R9                       RETURN
         DROP  OLD
         DROP  NEW
***********************************************************************
*        COPY DSNAME ACTIVITY RECORD INTO NEW HISTORY RECORD AREA     *
*        WITH REFORMATTING AS NEEDED.                                 *
***********************************************************************
COPYACT  ST    R9,CA9                   SAVE RETURN ADDRESS
         MVC   NEWNAME,DSNDSNAM         SET UP NEW HISTORY NAME
         L     R10,HISTWORK             POINT TO NEW HISTORY WORK AREA
         USING HISTORY,R10
         MVC   HISTDSNL,ACTDSNL         MOVE IN DSNAME LENGTH
         MVC   HISTDSN,DSNDSNAM         MOVE IN DSNAME
         SR    R1,R1                    CLEAR FOR INSERT
         IC    R1,HISTDSNL              PICK UP DSNAME LENGTH
         LA    R10,HISTDSN+1(R1)        POINT TO 1ST ACTIVITY SEGMENT
         ST    R10,HISTACT              SAVE 1ST ACTIVITY POINTER
         DROP  R10
         USING ACTIVITY,R10
         MVC   ACTSEG,RFMACT            MOVE IN SEGMENT
CAXIT    LA    R10,L'ACTSEG(R10)        POINT PAST THIS SEGMENT
         ST    R10,HISTEND              SET NEW HISTORY END ADDR
         DROP  R10
         L     R9,CA9                   GET RETURN ADDRESS
         BR    R9                       RETURN
***********************************************************************
*        ADD A NEW SEGMENT TO THE RECORD IN THE NEW HISTORY RECORD    *
*        AREA WITH REFORMATTING AS NEEDED. INSERT THE SEGMENT IN      *
*        DATE-TIME SEQUENCE. IF IT DUPLICATES ANOTHER, DROP IT. IF THE*
*        RECORD IS ALREADY FULL, DELETE THE OLDEST SEGMENT.           *
***********************************************************************
ADDSEGMT ST    R9,AS9                   SAVE RETURN ADDRESS
ASRSTRT  L     R9,HISTEND               POINT PAST END OF NEW HIST
         C     R9,HISTMAX               RECORD IS COMPLETELY FULL?
         BL    ASBAK1                   NO
         BAS   R9,DLTOLDST              YES, GO DELETE OLDEST SEGMENT
         B     ASRSTRT                  CONTINUE
         USING ACTIVITY,R9
ASBAK1   SH    R9,ACTLENG               BACK UP 1 SEGMENT
         C     R9,HISTACT               NOW PRIOR TO FIRST?
         BNL   ASCKDATE                 NO
         L     R9,HISTACT               YES, POINT TO FIRST ACT SEG
         B     ASINSB4                  GO INSERT BEFORE 1ST SEG
ASCKDATE ZAP   Y2KDATE,ACTDATE          COPY DATE FOR ADJUSTMENT
         MVI   Y2KDATE,X'20'            ASSUME CENTURY 2000
         CLI   Y2KDATE+1,X'50'          IS IT 2000?
         BL    ASCKDAT1                 YES
         MVI   Y2KDATE,X'19'            NO, CENTURY 19
ASCKDAT1 CP    Y2KDATE,DSNDATE          THIS SEG DATE < NEW SEG?
         BL    ASINSAFT                 YES, GO INSERT AFTER THIS ONE
         BH    ASBAK1                   AND GO BACK ANOTHER SEGMENT
         CLC   ACTTIME,RFMTIME          SAME DATE, TIME < NEW SEG?
         BH    ASBAK1                   NO, GO BACK ANOTHER SEGMENT
ASINSAFT LA    R9,L'ACTSEG(R9)          STEP TO NEXT SEG
ASINSB4  MVC   HOLDACT,0(R9)            SAVE CURRENT SEGMENT
         MVC   ACTSEG,RFMACT            MOVE IN NEW SEGMENT
         MVC   RFMACT,HOLDACT           REPLACE RFMACT
         LA    R9,L'ACTSEG(R9)          STEP TO NEXT SEGMENT
         C     R9,HISTEND               MOVED LAST ONE?
         BNH   ASINSB4                  NO, CONTINUE
         ST    R9,HISTEND               YES, SAVE NEW END ADDRESS
         DROP  R9
ASXIT    L     R9,AS9                   GET RETURN ADDRESS
         BR    R9                       RETURN
***********************************************************************
*        DELETE OLDEST SEGMENT IN FULL HISTORY RECORD                 *
***********************************************************************
DLTOLDST ST    R9,DO9                   SAVE RETURN ADDRESS
         L     R9,HISTACT               POINT TO FIRST ACTIVITY SEGMENT
         USING ACTIVITY,R9
         LA    R10,L'ACTSEG(R9)         POINT TO SECOND ACTIVITY SEG
DOMVSEG  MVC   ACTSEG,0(R10)            MOVE NEXT SEGMENT BACK ONE
         LA    R9,L'ACTSEG(R9)          ADVANCE 1
         LA    R10,L'ACTSEG(R10)        ADVANCE 1
         C     R10,HISTEND              NOW AT FORMER END?
         BL    DOMVSEG                  NO, CONTINUE MOVING
         ST    R9,HISTEND               FINISHED, SET NEW RECORD END
         DROP  R9
DOXIT    L     R9,DO9                   GET RETURN ADDRESS
         BR    R9                       RETURN
***********************************************************************
*        READ NEXT OLD HISTORY RECORD                                 *
***********************************************************************
GETOLDH  ST    R9,GO9                   SAVE RETURN ADDRESS
         GET   OLDHISTY                 READ HISTORY RECORD
         LR    R9,R1                    POINT TO RECORD READ
         USING HISTORY,R9
         ST    R9,OLDHIST               SAVE RECORD ADDRESS
         MVC   OLDNAME,BLANKS           CLEAR OLD HIST DSNAME
         IC    R1,HISTDSNL              GET OLD HIST DSNAME LENGTH
         EX    R1,MOVOLDNM              MOVE NAME TO OLDNAME
         AH    R9,HISTRDW               POINT TO END OF RECORD
         ST    R9,OLDEND                SAVE END POINTER
GOXIT    L     R9,GO9                   GET RETURN ADDRESS
         BR    R9                       RETURN
EOFOLDH  CLI   DSNDSNAM,X'FF'           ALSO EOF DSNAME ACTIVITY?
         BE    EOJ                      YES, THEN EOJ
         MVI   OLDNAME,X'FF'            INDICATE EOF
         B     GOXIT                    ELSE RETURN TO GETOLDH CALLER
MOVOLDNM MVC   OLDNAME(1),HISTDSN       EXECUTED MOVE
         DROP  R9
***********************************************************************
*        READ NEXT TSO USERID RECORD                                  *
***********************************************************************
GETUSR   ST    R9,GU9                   SAVE RETURN ADDRESS
         GET   USERIDS,TSOUSER          READ TSO USERID RECORD
GUXIT    L     R9,GU9                   GET RETURN ADDRESS
         BR    R9                       RETURN
EOFIDS   MVI   TSOUSER,X'FF'            SET TSOUSER HIGH
         B     GUXIT                    AND RETURN
***********************************************************************
*        WRITE RECORDS TO NEW HISTORY FILE. DROP THE RECORD IF ITS    *
*        LEADING 7 CHARACTERS MATCH A TSO USERID.                     *
***********************************************************************
WRITE    ST    R9,WRT9                  SAVE RETURN ADDRESS
CHKTSOID L     R9,HISTWORK              POINT TO NEW HISTORY RECORD
         USING HISTORY,R9
         CLC   TSOUSER(7),HISTDSN       HIGH NODE IS TSO USERID?
         BE    WRTXIT                   YES, DROP THE RECORD
         BH    OK2WRITE                 OK TO WRITE
         BAS   R9,GETUSR                READ NEXT TSOUSER RECORD
         B     CHKTSOID                 GO CHECK AGAIN
OK2WRITE L     R10,HISTEND              POINT TO END(+1) OF RECORD
         SR    R10,R9                   COMPUTE RECORD LENGTH
         STH   R10,HISTRDW-HISTORY(R9)  SET VARIABLE RECORD LENGTH
         PUT   NEWHISTY,HISTORY         WRITE NEW HISTORY RECORD
         MVI   NEWNAME,0                INDICATE NO RECORD HERE
         DROP  R9
WRTXIT   L     R9,WRT9                  GET RETURN ADDRESS
         BR    R9                       RETURN
***********************************************************************
*        END OF JOB                                                   *
***********************************************************************
EOJ      L     R9,HISTWORK             POINT TO OUTPUT AREA
         CLI   0(R9),X'00'             ANY RECORD TO BE WRITTEN?
         BNE   EOJ1                    NO
         BAS   R9,WRITE                YES, GO WRITE IT
EOJ1     CLOSE (DSNACTV,,USERIDS,,NEWHISTY,,OLDHISTY) CLOSE FILES
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGS
         SR    R15,R15                 SET RETURN CODE
         BR    R14                     RETURN TO CALLER
***********************************************************************
*        DATA DEFINITIONS                                             *
***********************************************************************
DBLWD    DS    D                       WORK AREA
WRT9     DS    A                       WRITE ROUTINE RETURN ADDRESS
AS9      DS    A                       RETURN ADDRESS FOR ADDSEGMT
CO9      DS    A                       RETURN ADDRESS FOR COPYOLD
DO9      DS    A                       RETURN ADDRESS FOR DLTOLDST
CA9      DS    A                       RETURN ADDRESS FOR COPYACT
GU9      DS    A                       GETUSR RETURN ADDRESS
GA9      DS    A                       GETACT RETURN ADDRESS
GO9      DS    A                       GETOLDH RETURN ADDRESS
HISTWORK DS    A                       ADDRESS OF CURRENT HISTORY REC
HISTACT  DS    A                       ADDRESS OF 1ST ACT SEG IN CURR
HISTMAX  DS    A                       ADDRESS OF END+1 OF AREA
HISTEND  DS    A                       ADDRESS OF END+1 OF CURR HIST
OLDHIST  DS    A                       ADDRESS OF OLD HISTORY REC
OLDEND   DS    A                       ADDRESS OF OLD HIST REC END
LASTYEAR DS    PL4                     DATE 1 YEAR AGO
ACTLENG  DC    AL2(L'ACTSEG)           LENGTH OF ACTIVITY SEGMENT
ACTDSNL  DS    XL1                     LENGTH OF DSNDSNAM
BLANKS   DC    CL133' '                CONSTANT BLANKS
TSOUSER  DS    CL8                     USERIDS FILE RECORD
OLDNAME  DS    CL44                    OLD HISTORY DSNAME
NEWNAME  DS    CL44                    NEW HISTORY NAME
HOLDACT  DS    CL(L'ACTSEG)            HOLD AREA FOR SWITCHING SEGMENTS
Y2KDATE  DS    PL4                     DATE ADJUSTED FOR Y2K
*
PRTLINE  DS    0CL133                  PRINT LINE
PRTCC    DC    CL1'1'                    CARRIAGE CONTROL
PRT      DS    0CL132                    PRINT DATA
*
DSNRECD  DS    0CL65                   DSNAME RECORD
DSNDSNAM DS    CL44                         DATASET NAME
DSNDATE  DS    PL4                          REFERENCE DATE YYYYDDD
DSNTIME  DS    XL4                          REFERENCE TIME HHMM
DSNACTN  DS    CL1                          ACTION (C=CREATE, D=DELETE,
*                                             U=UPDATE, R=READ, T&F =
*                                             RENAME TO AND FROM
DSNDSORG DS    CL2                          DSORG (PS, GD, VS, IS, DA)
DSNDEVTY DS    CL1                          DEVICE TYPE
DSNJOB   DS    CL8                          JOB NAME
DSNSMFTY DS    XL1                          SMF RECORD TYPE USED
*
RFMACT   DS    0CL16               REFORMATTED ACTIVITY RECORD
RFMDATE  DS    PL3                   DATE YYDDD
RFMTIME  DS    XL4                   TIME BIN SEC/100 SINCE MIDNIGHT
RFMJOB   DS    CL8                   JOB NAME
RFMFLAG  DS    XL1                   ACTION/DSORG/DEVICE FLAGS
*
ACTNS    DS    0CL2                ACTIONS TABLE
         DC    C'C',B'00100000'      CREATE
         DC    C'D',B'01000000'      DELETE
         DC    C'U',B'01100000'      UPDATE
         DC    C'R',B'10000000'      READ
         DC    C'T',B'10100000'      RENAME TO (DELETE)
         DC    C'F',B'11000000'      RENAMED FROM (CREATE)
*
ORGS     DS    0CL3                DSORGS TABLE
         DC    C'PS',B'00000100'      PHYSICALLY SEQUENTIAL
         DC    C'GD',B'00001000'      GENERATION DATA GROUP
         DC    C'VS',B'00001100'      VSAM
         DC    C'IS',B'00010000'      ISAM
         DC    C'DA',B'00010100'      DIRECT ACCESS
         DC    C'PO',B'00011000'      PARTITIONED
***********************************************************************
*        FILE DEFINITIONS                                             *
***********************************************************************
DSNACTV  DCB   DSORG=PS,MACRF=GM,DDNAME=DSNACTV,EODAD=EOFACT,          X
               RECFM=FB,LRECL=65
USERIDS  DCB   DSORG=PS,MACRF=GM,DDNAME=USERIDS,EODAD=EOFIDS,          X
               RECFM=FB,LRECL=8
OLDHISTY DCB   DSORG=PS,MACRF=GL,DDNAME=OLDHISTY,EODAD=EOFOLDH,        X
               RECFM=VB,LRECL=4092
NEWHISTY DCB   DSORG=PS,MACRF=PM,DDNAME=NEWHISTY,                      X
               RECFM=VB,LRECL=4092
         LTORG
***********************************************************************
*        DSECTS                                                       *
***********************************************************************
HISTORY  DSECT ,                  FIXED PORTION OF HISTORY RECORD
HISTHEAD DS    0XL49
HISTRDW  DS    XL2                  RDW
HISTZZ   DS    XL2
HISTDSNL DS    XL1                  DSNAME LENGTH-1
HISTDSN  DS    CL44                 DSNAME (UP TO 44 BYTES)
*
ACTIVITY DSECT ,                  ACTIVITY SEGMENT DESCRIPTION
ACTSEG   DS    0XL16
ACTDATE  DS    PL3                  DATE YYDDD
ACTTIME  DS    XL4                  SEC/100 SINCE MIDNIGHT
ACTJOB   DS    CL8                  JOBNAME
ACTFLAG  DS    XL1                  FLAGS. BITS 0-2 = ACTION,
*                                   BITS 3-5 = DSORG, BIT 7 = DEVICE
***********************************************************************
*        REGISTER EQUATES                                             *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
