         TITLE '*** CALLGND3: TEST GENLDAT2 VERSIONS   ***'
CALLGND3 CSECT
*********************************************************************
* COMPARES THE OUTPUTS FROM TWO VERSIONS OF GENLDAT2 AND WRITES     *
* BOTH RESULTS TO THE SYSPRINT FILE IF THE OUTPUTS DIFFER FOR THE   *
* SAME INPUT.                                                       *
* FOR THIS TEST, THE NEW VERSION OF GENLDAT2 MUST BE MEMBER AND     *
* CSECT NAME GENLDAT3 IN THE NEWSUBR LOAD LIBRARY.                  *
*                                                                   *
* R THORNTON AUG 2000                                               *
*********************************************************************
*
*********************************************************************
*        SAVE REGISTERS, SET UP BASE REGS, CHAIN SAVE AREAS         *
*********************************************************************
         USING CALLGND3,R3,R4
         STM   R14,R12,12(R13)   SAVE CALLER'S REGS
         LR    R3,R15            SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)       SET UP SECOND
         LA    R4,1(R4)              BASE REGISTER
         LA    R15,MYSAVE        POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)        SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)        SET HSA IN MY SAVE AREA
         LR    R13,R15           SET UP SAVE AREA POINTER
         B     START             BRANCH AROUND CONSTANTS
         DC    CL8'CALLGND3'     PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'     ASSEMBLY DATE
         DC    CL8'&SYSTIME'     ASSEMBLY TIME
MYSAVE   DS    18F               MY REGISTER SAVE AREA
START    DS    0H                BEGIN PROCESSING
*********************************************************************
*        OPEN FILES, LOAD THE SUBROUTINES, SET ESTAE ROUTINE        *
*********************************************************************
OPENS    OPEN  (SYSPRINT,OUTPUT,OLDSUBR,,NEWSUBR) OPEN FILES
         TM    OLDSUBR+48,X'10'  OLDSUBR OPENED OK?
         BO    OPTRYNEW          YES
         WTO   'OLDSUBR OPEN FAILED',ROUTCDE=11
         ABEND 111,DUMP          TERMINATE IN ERROR
OPTRYNEW TM    NEWSUBR+48,X'10'  NEWSUBR OPENED OK?
         BO    OPLOADS           YES
         WTO   'NEWSUBR OPEN FAILED',ROUTCDE=11
         ABEND 222,DUMP          TERMINATE IN ERROR
OPLOADS  LOAD  EP=GENLDAT2,DCB=OLDSUBR LOAD OLD VERSION OF GENLDAT2
         ST    R0,OLDGND2        SAVE OLD MODULE ADDRESS
         LOAD  EP=GENLDAT3,DCB=NEWSUBR LOAD NEW VERSION OF GENLDAT2
         ST    R0,NEWGND2        SAVE THE ENTRY POINT ADDRESS
         ESTAE ABNDRTN           ESTABLISH ESTAE ENVIRONMENT
*********************************************************************
* MAINLINE EXECUTIVE PROGRAM                                        *
*********************************************************************
MAINLINE BAS   R14,GETDATE       GO GET NEXT DATE
         BAS   R14,CALLGDTS      GO CALL GENLDAT2'S AND COMPARE RESULTS
         B     MAINLINE          LOOP UNTIL FINISHED
*********************************************************************
* SETS A NEW DATE REQUEST IN THE PARMFLD AREA WHICH WILL BE PASSED  *
* TO BOTH VERSIONS OF GENLDAT2 BY CALLGTDS.                         *
*********************************************************************
GETDATE  ST    R14,GD14          SAVE RETURN ADDRESS
GDGSW    NOP   GDGMDY            BRANCH SWITCH
         CP    JULDATE,=PL4'2099005' NOW AT JAN 5, 2099?
         BE    GDJEND            YES, START WITH GREGORIAN MDY
         CP    JULDATE+2(2),=PL2'367' NOW AT DAY 367?
         BNL   GDJNEWY           YES
         AP    JULDATE+2(2),=P'1' ADD 1 TO JULIAN DAY
         OI    JULDATE+3,X'0F'   CLEAR SIGN TO F
         B     GDXIT             AND RETURN
GDJNEWY  ZAP   JULDATE+2(2),=P'0' ZERO OUT THE DAY
         AP    JULDATE,=P'1000'  ADD 1 TO JULIAN YEAR
         OI    JULDATE+3,X'0F'   CLEAR SIGN TO F
         B     GDXIT             CONTINUE
GDJEND   MVI   DATYP,C'G'        CHANGE DATE TYPES
         OI    GDGSW+1,X'F0'     TURN ON GREGORIAN MDY SWITCH
         ZAP   JULDATE,=P'0'     CLEAR JULIAN DATE
         OI    JULDATE+3,X'0F'   CLEAR SIGN TO F
         MVC   GREGMDY,=CL8'12251899' SET INITIAL DATE TO 12/25/1899
         B     GDXIT             RETURN
GDGMDY   CLC   GREGMDY+2(2),=CL2'32' NOW AT DAY 32?
         BNL   GDGNEWMO          YES
         PACK  DBLWORD(2),GREGMDY+2(2) ADD 1
         AP    DBLWORD(2),=P'1'          TO
         UNPK  GREGMDY+2(2),DBLWORD(2)     DAY OF MONTH
         OI    GREGMDY+3,X'F0'   CLEAR SIGN
         B     GDXIT             AND EXIT
GDGNEWMO MVC   GREGMDY+2(2),=CL2'00' SET DAY OF MONTH TO ZEROS
         CLC   GREGMDY(2),=CL2'13' END OF YEAR?
         BNL   GDGNEWYR          YES
         PACK  DBLWORD(2),GREGMDY(2) ADD 1
         AP    DBLWORD(2),=P'1'          TO
         UNPK  GREGMDY(2),DBLWORD(2)       MONTH
         OI    GREGMDY+1,X'F0'   CLEAR SIGN
         B     GDXIT             RETURN
GDGNEWYR MVC   GREGMDY(4),=CL4'0000' SET MONTH AND DAY TO ZEROS
         CLC   GREGMDY+4(4),=CL4'2100' NOW AT YEAR 2100?
         BE    EOJ               YES, ALL THROUGH
         PACK  DBLWORD(3),GREGMDY+4(4) ADD 1
         AP    DBLWORD(3),=P'1'        TO
         UNPK  GREGMDY+4(4),DBLWORD(3)     YEAR
         OI    GREGMDY+7,X'F0'   CLEAR SIGN
GDXIT    L     R14,GD14          GET RETURN ADDRESS
         BR    R14               RETURN
GD14     DC    A(0)              RETURN ADDRESS
*********************************************************************
*  CALL THE TWO VERSIONS OF GENLDAT2 WITH IDENTICAL INPUT DATA AND  *
*  COMPARE RESULTS. IF RESULTS DIFFER, OR IF EITHER SUBROUTINE      *
*  ABENDED, PRINT A BLANK LINE FOLLOWED BY THE PAIR OF RESULT AREAS.*
*********************************************************************
CALLGDTS ST    R14,CG14          SAVE RETURN ADDRESS
         MVI   OLDFLAG,C' '      CLEAR OLD SUBROUTINE ABENDED FLAG
         MVC   OLDPARMS,PARMFLD  MOVE PARAMETERS FOR CALL
         L     R15,OLDGND2       POINT TO OLD SUBROUTINE ENTRY POINT
         LA    R1,OLDPTR         SET UP PARAMETER LIST REG
         MVI   LAST,C'O'         SHOW OLD SUBROUTINE CALLED LAST
         BASR  R14,R15           EXECUTE IT
CGNEW    MVI   LAST,C' '         CLEAR LAST CALLED FLAG
         MVI   NEWFLAG,C' '      CLEAR NEW SUBROUTINE ABENDED FLAG
         MVC   NEWPARMS,PARMFLD  MOVE PARAMETERS FOR CALL
         L     R15,NEWGND2       POINT TO NEW SUBROUTINE ENTRY POINT
         LA    R1,NEWPTR         SET UP PARAMETER LIST REG
         MVI   LAST,C'O'         SHOW NEW SUBROUTINE CALLED LAST
         BASR  R14,R15           EXECUTE IT
CGCMPR   MVI   LAST,C' '         CLEAR LAST CALLED FLAG
         CLC   OLDPARMS,NEWPARMS BOTH SUBROUTINES RETURNED SAME DATA?
         BNE   CGWRITE           NO, GO WRITE TO SYSPRINT
         CLI   OLDFLAG,C'A'      OLD SUBROUTINE ABENDED?
         BE    CGWRITE           YES
         CLI   NEWFLAG,C'A'      NEW SUBROUTINE ABENDED?
         BNE   MAINLINE          NO, GO GET NEXT DATE
CGWRITE  MVC   PRT,BLANKS        WRITE A
         BAS   R14,PRINT         PRINT A BLANK LINE
         MVC   PRT(L'PARMFLD+1),OLDFLAG MOVE OLD SUBROUTINE DATA
         BAS   R14,PRINT         PRINT OLD SUBROUTINE DATA
         MVC   PRT(L'PARMFLD+1),NEWFLAG MOVE OLD SUBROUTINE DATA
         BAS   R14,PRINT         PRINT NEW SUBROUTINE DATA
CGXIT    L     R14,CG14          GET RETURN ADDRESS
         BR    R14               RETURN TO CALLER
CGABEND  CLI   LAST,C'O'         OLD SUBROUTINE CALLED LAST?
         BE    CGOLDABN          YES
         CLI   LAST,C'N'         NEW SUBROUTINE CALLED LAST?
         BE    CGNEWABN          YES
         WTO   'CALLGND3 ABENDED WITH AN SDWA',ROUTCDE=11
         ABEND 888,DUMP          TERMINATE IN ERROR
CGOLDABN MVI   OLDFLAG,C'A'      SET OLD SUBROUTINE ABEND FLAG
         B     CGNEW             GO CALL NEW SUBROUTINE
CGNEWABN MVI   NEWFLAG,C'A'      SET NEW SUBROUTINE ABEND FLAG
         B     CGCMPR            GO COMPARE RESULTS
CG14     DC    A(0)              RETURN ADDRESS
*********************************************************************
* PRINT A LINE TO SYSPRINT                                          *
*********************************************************************
PRINT    ST    R14,P14           SAVE RETURN ADDRESS
         PUT   SYSPRINT,PRTLINE  PRINT THE LINE
         MVC   PRTLINE,BLANKS    CLEAR PRINT LINE
         L     R14,P14           GET RETURN ADDRESS
         BR    R14               RETURN
P14      DC    A(0)              RETURN ADDRESS
*********************************************************************
*             END OF JOB                                            *
*********************************************************************
EOJ      CLOSE SYSPRINT          CLOSE PRINT FILE
         L     R13,4(R13)        POINT TO CALLER'S SAVE AREA
         LM    R14,R12,12(R13)   RESTORE CALLER'S REGS
         SR    R15,R15           SET RC=0
         BR    R14               RETURN
***********************************************************************
*        ESTAE HANDLING ROUTINE                                       *
***********************************************************************
         USING *,R15
ABNDRTN  L     R3,GND3BASE       GET BASE REG FOR CALLGND3
         DROP  R15
         USING CALLGND3,R3
         ST    R14,ESTAE14       SAVE RETURN ADDRESS
         ST    R1,ESTAE1         SAVE SDWA ADDRESS
         C     R0,F12            WAS SDWA OBTAINED?
         BE    NOSDWA            NO
         USING SDWA,R1
         MVC   ABENDPSW,SDWAEC1  SAVE PSW
         MVC   ABENDRGS,SDWASRSV SAVE REGS
         MVC   ABENDCMP,SDWACMPC SAVE ABEND CODE
         B     RCVR              CONTINUE
NOSDWA   MVI   ABENDPSW,X'FF'    SHOW NO SDWA
         MVC   ABENDPSW+1(75),ABENDPSW   DATA IS AVAILABLE
RCVR     L     R1,ESTAE1         RECOVER R1
         SETRP RC=4,RETREGS=YES,DUMP=NO,FRESDWA=YES,                   X
               REGS=(14,12),RETADDR=CGABEND
         DROP  R1
ABENDPSW DS    D                 ABEND PSW
ABENDRGS DS    8D                ABEND REGS
ABENDCMP DS    F                 COMPLETION CODE
*********************************************************************
*        STORAGE AND FILE AREAS                                     *
*********************************************************************
DBLWORD  DS    D                 DOUBLEWORD WORK AREA
OLDGND2  DC    A(0)              OLD GENLDAT2 ENTRY POINT ADDRESS
NEWGND2  DC    A(0)              NEW GENLDAT2 ENTRY POINT ADDRESS
ESTAE1   DS    A                 ESTAE SDWA ADDRESS
ESTAE14  DS    A                 ESTAE RETURN ADDRESS
ESTAE15  DS    F                 RETURN CODE FROM ESTAE
F12      DC    F'12'             CONSTANT 12
GND3BASE DC    A(CALLGND3)       BASE REG VALUE FOR CALLGND3
LAST     DC    C' '              LAST CALLED FLAG
*
BLANKS   DC    CL133' '                BLANKS
*
PRTLINE  DS    0CL133                  PRINT LINE
PCC      DC    CL1' '                  CARRIAGE CONTROL
PRT      DS    0CL132                  PRINT DATA
         DC    CL132' '
*
OLDAREA  DS    0F                OLD SUBROUTINE AREA
OLDPTR   DC    A(OLDPARMS)          OLD SUBROUTINE PARM POINTER
OLDFLAG  DS    CL1                  OLD SUBROUTINE ABEND FLAG
OLDPARMS DS    CL(L'PARMFLD)        OLD SUBROUTINE PARMS
*
NEWAREA  DS    0F                NEW SUBROUTINE AREA
NEWPTR   DC    A(NEWPARMS)          NEW SUBROUTINE PARM POINTER
NEWFLAG  DS    CL1                  NEW SUBROUTINE ABEND FLAG
NEWPARMS DS    CL(L'PARMFLD)        NEW SUBROUTINE PARMS
*
PARMFLD  DS    0CL79             PARAMETER AREA DESCRIPTION
DATYP    DC    CL1'J'             .DATE TYPE SUPPLIED: J=JULIAN,
*                                    G=GREGORIAN MDY, Y=GREGORIAN YMD
DATERR   DS    CL1                .ERROR INDICATOR:  BLANK=SUCCESSFUL
*                                    E=ERROR IN DATA SUPPLIED
DAYWK    DS    CL1                .DAY OF WEEK INDICATOR: 1=MON,
*                                    2=TUE, 3=WED, 4=THU,
*                                    5=FRI, 6=SAT, 7=SUN
HOLIDAY  DS    CL1                .HOLIDAY INDICATOR: BLANK=NOT A
*                                    HOLIDAY, 1=NEW YEAR'S DAY,
*                                    2=(NOT USED), 3=GOOD FRIDAY
*                                    4=MEMORIAL DAY, 5=INDPNDNC DAY,
*                                    6=LABOR DAY, 7=THANKSGIVING DAY,
*                                    8=FRIDAY  AFTER THANKSGIVING,
*                                    9=CHRISTMAS DAY
YEARTYP  DS    CL1                .0=NOT LEAP YEAR, 1=LEAP YEAR
JULDATE  DC    XL4'1899360F'      .JULIAN DATE. CONTAINS AN UNSIGNED,
*                                    PACKED DECIMAL DATE OF THE FORM
*                                    FORM YYYYDDDF, IF DATYP=J. IT WILL
*                                    CONTAIN THE CORRECT JULIAN DATE ON
*                                    SUCCESSFUL RETURN.
GREGMDY  DS    CL8                .GREGORIAN DATE, AN UNSIGNED,
*                                    ZONED DECIMAL DATE OF THE FORM
*                                    MMDDYYYY, IF DATYP=G. ON GOOD
*                                    RETURN THIS FIELD WILL CONTAIN THE
*                                    GREGORIAN DATE IN THIS FORMAT.
GREGYMD  DS    CL8                .GREGORIAN DATE, AN UNSIGNED,
*                                    ZONED DECIMAL DATE OF THE FORM
*                                    YYYYMMDD, IF DATYP=Y. ON GOOD
*                                    RETURN THIS FIELD WILL CONTAIN
*                                    GREGORIAN DATE IN THIS FORMAT.
LITDATE  DS    CL18               .A LITERAL DATE, LEFT JUSTIFIED
*                                    IN AN 18-BYTE FIELD. EXAMPLES ARE:
*                                    JANUARY 16, 1979
*                                    MAY 9, 2002
JULSLASH DS    CL8                .JULIAN DATE WITH SLASH: YYYY/DDD
GRGSLASH DS    CL10               .GREGORIAN DATE WITH SLASHES:
*                                    MM/DD/YYYY
DAYLIT   DS    CL9                .LITERAL DAY OF WEEK
MONTHLIT DS    CL9                .LITERAL MONTH
*********************************************************************
*             DCB'S                                                 *
*********************************************************************
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FBA,LRECL=133
OLDSUBR  DCB   DSORG=PO,MACRF=R,DDNAME=OLDSUBR
NEWSUBR  DCB   DSORG=PO,MACRF=R,DDNAME=NEWSUBR
         LTORG
*********************************************************************
*             REGISTER EQUATES                                      *
*********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*********************************************************************
*             SDWA DSECT                                            *
*********************************************************************
         IHASDWA DSECT=YES
CALLGND3 CSECT
         END
