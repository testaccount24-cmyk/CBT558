         PRINT GEN
PDSDIRB  SVLNK R3,R4
********************************************************************
* READS THE SYSIN FILE TO GET THE NAMES OF PDS'S WHOSE DIRECTORIES *
* ARE TO BE COPIED TO THE OUTPUT FILE. FOR EACH PDS NAME FOUND,    *
* A DYNAMIC ALLOCATION IS DONE. IF THE DATASET IS A PDS, ITS       *
* DIRECTORY IS READ, AND A RECORD IS WRITTEN TO THE SYSOUT FILE    *
* FOR EACH MEMBER. SYSOUT FILE RECORDS CONTAIN MAMBER NAME IN COL  *
* 1-8, A SEQUENTIALLY ASCENDING 3-DIGIT NUMBER BEGINNING WITH 001  *
* IN COLUMNS 24-26, AND THE DSNAME IN COL 28-71. THE SEQUENTIAL    *
* NUMBER IS INCREMENTED FOR EACH CONTROL CARD READ.                *
* AUTHOR R THORNTON 09/18/97                                       *
********************************************************************
OPENS    OPEN  (SYSOUT,OUTPUT,SYSPRINT,OUTPUT,SYSIN) OPEN FILES
********************************************************************
* GET THE NEXT DSNAME CARD, SET UP FIELDS IN SYSOUT RECORD, PERFORM*
* THE ALLOCATE ROUTINE TO DYNAMICALLY ALLOCATE A //INPUT1 DD FOR IT*
* THEN PERFORM THE PDSDIRRD ROUTINE TO READ THE DIRECTORY AND WRITE*
* RECORDS TO SYSOUT.                                               *
********************************************************************
MAINLINE GET   SYSIN,INREC             READ NEXT DSNAME CARD
         PACK  WORK,SEQNBR             PACK SEQUENTIAL DSNAME NUMBER
         AP    WORK,P1                 ADD 1
         UNPK  SEQNBR,WORK             UNPACK INTO SYSOUT RECORD
         OI    SEQNBR+2,C'0'           CLEAR THE SIGN
         MVC   DSNAME,INDSNAM          MOVE DSNAME TO SYSOUT RECORD
         BAS   R9,ALLOCATE             ALLOCATE A //INPUT1 DD
         CLI   ALLOCERR,0              ALLOCATED O.K?
         BNE   MAINLINE                NO, GO READ NEXT DSNAME
         BAS   R9,PDSDIRRD             GO PROCESS THE DIRECTORY
         B     MAINLINE                LOOP THROUGH ALL DSNAMES
********************************************************************
* OPEN THE PDS WHOSE DIRECTORY IS TO BE READ, THEN PERFORM READDIR *
* REPEATEDLY, WRITING MEMBER RECORDS TO THE SYSOUT FILE UNTIL NO   *
* MORE DIRECTORY ENTRIES ARE FOUND, THEN RETURN TO CALLER.         *
********************************************************************
PDSDIRRD ST    R9,PD9                  SAVE RETURN ADDRESS
         OPEN  PDS                     OPEN FILE
         TM    PDS+48,X'10'            DID IT OPEN CORRECTLY?
         BO    CLREOFSW                YES
         MVC   PRT(27),=CL27'***UNABLE TO OPEN DATASET: '
         MVC   PRT+27(44),DSNAME       DSNAME TO MESSAGE
         BAS   R9,PRINT                PRINT ERROR MESSAGE
         MVC   RC,F8                   SET RC=8
         B     DIRXIT                  AND EXIT
CLREOFSW MVI   PDSEOF,0                CLEAR EOF INDICATOR
RDIRCTY  BAS   R9,READDIR              READ NEXT DIRECTORY ENTRY
         CLI   PDSEOF,1                END OF DIRECTORY
         BE    DIRXIT                  YES, END OF DIRECTORY
         CLI   MEMBER,X'F9'            EARLY DIRECTORY EOF?
         BNH   RDCKVALM                NO
         MVI   PDSEOF,1                SET END OF DIRECTORY FLAG
         B     DIRXIT                  AND EXIT
RDCKVALM TRT   MEMBER(1),NATNLCH       NAME BEGINS WITH NATIONAL CHAR?
         BNZ   RDIRCTY                 NO, BAD ENTRY, GO GET NEXT
         TRT   MEMBER+1(7),VALCH       REST OF MEMBER NAME VALID?
         BNZ   RDIRCTY                 NO, BAD ENTRY, GO GET NEXT
         PUT   SYSOUT,OUTREC           WRITE OUTPUT RECORD
         B     RDIRCTY                 CONTINUE
DIRXIT   CLOSE PDS                     CLOSE FILE
         FREEPOOL PDS                  FREE THE BUFFER
         MVC   REMBYTS,ZERO            CLEAR REMAINING BYTES
         L     R9,PD9                  GET RETURN ADDRESS
         BR    R9                      RETURN TO CALLER
********************************************************************
* READ DIRECTORY ENTRY ROUTINE                                     *
********************************************************************
READDIR  ST    R9,RD9                  SAVE RETURN ADDRESS
REREAD   LH    R12,REMBYTS             GET NBR BYTES REMAINING IN BLOCK
         CH    R12,ELEVEN              ANY MORE ENTRIES IN BLOCK
         BNL   GETADR                  YES
NEXREC   GET   PDS                     READ DIRECTORY BLOCK
         LR    R12,R1                  GET BLOCK ADDRESS
         MVC   REMBYTS,0(R12)          MOVE NBR BYTES IN BLOCK
         CLC   REMBYTS,ZERO            ANY BYTES IN BLOCK
         BH    STPOVER                 YES
SETEOF   MVI   PDSEOF,1                NO, EOF
         B     RDDXIT                  EXIT
STPOVER  LA    R12,2(R12)              STEP PAST BLOCK SIZE FIELD
         ST    R12,RECADDR             STORE RECORD ADDRESS
GETADR   L     R12,RECADDR             GET NEXT ENTRY ADDRESS
         MVC   MEMBER,0(R12)           MOVE MEMBER NAME TO RECORD
         CLI   MEMBER,C'9'             IS IT EARLY EOF?
         BH    SETEOF                  YES
         NI    11(R12),CLRBITS         CLEAR ALIAS, TTR BITS
         SR    R11,R11                 CLEAR WORK REG
         IC    R11,11(R12)             GET NBR USER HALFWORDS
         SLL   R11,1                   MULTIPLY BY 2
         LA    R11,12(R11)             CALCULATE RECORD LENGTH
         LH    R12,REMBYTS             GET NBR BYTES REMAINING
         SR    R12,R11                 SUBTRACT THIS ENTRY LENGTH
         BP    STREM                   ANY LEFT
         SR    R12,R12                 NO, SET TO ZERO
STREM    STH   R12,REMBYTS             STORE REMAINING BYTES
         A     R11,RECADDR             CALCULATE NEXT ENTRY ADDRESS
         ST    R11,RECADDR             STORE NEXT ENTRY ADDRESS
RDDXIT   L     R9,RD9                  GET RETURN ADDRESS
         BR    R9                      EXIT
********************************************************************
* ALLOCATE A //INPUT1 DD STATEMENT FOR THE DSNAME                  *
********************************************************************
ALLOCATE ST    R9,ALL9                 SAVE RETURN ADDRESS
         MVI   ALLOCERR,0              CLEAR INDICATOR
         LA    R0,PARM1                CLEAR
         LA    R1,PARMSEND-PARM1          PARM
         SR    R15,R15                       FIELDS
         MVCL  R0,R14                           TO ZEROS
         MVC   PRMDDNAM,=CL8'INPUT1'   MOVE IN DDNAME
         MVC   PRMDSNAM,DSNAME         MOVE IN DSNAME
         MVC   PRMSTATS,=H'8'          DISP=SHR
         MVI   REQCODE,C'A'            REQUEST ALLOCATION.
         CALL  ALLOCDYN,(PARM1,PARM2)  ALLOCATE THE DATASET
         CLC   RETCODE,=C'00'          ANY ERROR?
         BE    ALLEXIT                 NO
         MVC   PRT(36),=CL36'***UNABLE TO ALLOCATE THIS DATASET: '
         MVC   PRT+36(44),DSNAME       DSNAME TO MESSAGE
         BAS   R9,PRINT                PRINT MESSAGE
         MVC   RC,F8                   RC=8
         MVI   ALLOCERR,1              INDICATE ALLOCATION ERROR
ALLEXIT  L     R9,ALL9                 GET RETURN ADDRESS
         BR    R9                      RETURN TO CALLER
********************************************************************
* PRINT ROUTINE. PRINT THE LINE IN PRT AND CLEAR IT TO SPACES      *
********************************************************************
PRINT    PUT   SYSPRINT,PRT            PRINT THE LINE
         MVC   PRT,BLANKS              CLEAR LINE TO SPACES
         BR    R9                      EXIT
********************************************************************
* END OF JOB. CLOSE FILES AND RETURN                               *
********************************************************************
EOJ      CLOSE (SYSIN,,SYSOUT,,SYSPRINT) CLOSE FILES
         L     R13,4(R13)              GET CALLER'S SAVE ADDRESS
         L     R14,12(R13)             GET RETURN ADDRESS
         L     R15,RC                  GET RETURN CODE
         LM    R0,R12,20(R13)          GET CALLER'S REGISTERS
         BR    R14                     RETURN TO CALLER
********************************************************************
* DATA, FILES, AND CONSTANTS                                       *
********************************************************************
RC       DC    F'0'                    END OF JOB RETURN CODE
PD9      DS    A                       RETURN ADDRESS FOR PDSDIRRD
RD9      DS    A                       RETURN ADDRESS FOR READDIR
ALL9     DS    A                       RETURN ADDRESS FOR ALLOCATE
F8       DC    F'8'                    CONSTANT 8
H80      DC    H'80'                   CONSTANT 80
PRT      DC    CL133' '                PRINT AREA
BLANKS   DC    CL133' '                CONSTRANT BLANKS
WORK     DS    CL2                     WORK FIELD
P1       DC    PL1'1'                  CONSTANT 1
ALLOCERR DC    X'00'                   ALLOCATION ERROR INDICATOR
PDSEOF   DC    X'00'                   EOF INDICATOR FOR PDS
INREC    DS    0CL80                   INPUT CONTROL RECORD
INDSNAM  DS    CL44                      DSNAME
         DS    CL36
OUTREC   DS    0CL80                   OUTPUT RECORD
MEMBER   DS    CL8                       MEMBER NAME COL 1-8
         DC    CL15' '                   BLANKS COL 9-23
SEQNBR   DC    CL3'000'                  DATASET NUMBER COL 24-26
         DC    CL1' '                    BLANK COL 27
DSNAME   DC    CL44' '                   DSNAME COL 28-71
         DC    CL9' '                    BLANKS COL 72-80
EOF      EQU   C'Z'
REMBYTS  DC    H'0'                    BYTES REMAINING IN BLOCK
ELEVEN   DC    H'11'
ZERO     DC    H'0'
RECADDR  DS    F
CLRBITS  EQU   X'1F'
*
*
*
PARM1    DS    0C                      1ST PARAMETER DESCRIPTION
PRMDDNAM DS    CL8                     DDNAME TXT
PRMDSNAM DS    CL44                    DSN=TXT
PRMMEMBR DS    CL8                     MEMBER NAME/GDG GEN TXT
PRMSTATS DS    XL2                     DISP=STATUS NUM: 1=OLD,2=MOD,
*                                                  4=NEW,8=SHR
PRMNDISP DS    XL2                     DISP=NORMAL NUM: 8=KEEP,
*                                         1=UNCATLG,2=CATLG,4=DELETE
PRMCDISP DS    XL2                     DISP=CONDITIONAL NUM:
*                                         SAME AS PRMNDISP
PRMUNIT  DS    CL8                     UNIT= TXT
PRMUNCNT DS    XL2                     UNIT COUNT NUM
PRMVLSER DS    6CL6                    VOL=SER= TXT (1-6)
PRMLABEL DS    XL2                     LABEL= NUM:01=NL,02=SL,10=BLP
PRMDSSEQ DS    XL2                     DATASET SEQUENCE NUM (TAPE)
PRMCLOSE DS    CL1                     FREE=CLOSE >0
PRMRETPD DS    XL2                     RETPD= NUM
PRMRECFM DS    XL2                     RECFM=: HEX SUM OK
*                                      80=FIXED, 40=VARIABLE,
*                                      C0=UNDEFINED, 10=BLOCKED,
*                                      04=ASA CONTROL CHARACTERS,
*                                      02=MACHINE CONTROL CHARACTERS,
*                                      08=STANDARD(F) OR SPANNED(V)
*                                      20=VRBL ASCII(D) OR TRK OFLO(T)
PRMLRECL DS    XL2                     LRECL= NUM
PRMBLKSZ DS    XL2                     BLKSIZE= NUM
PRMDEN   DS    XL2                     DEN= NUM: 03=200,43=556,
*                                             83=800,C3=1600,D3=6250
PRMBUFNO DS    XL2                     BUFNO= NUM
PRMKYLEN DS    XL2                     KEYLEN= NUM
PRMDSORG DS    XL2                     DSORG= NUM:
*                                      0008=VSAM, 0080=GS, 0200=PO,
*                                      0300=POU, 2000=DA, 2100=DAU,
*                                      4000=PS, 4100=PSU
PRMSPACE DS    CL1                     SPACE= TYPE TXT:
*                                      C=CYL, T=TRK
PRMPRIME DS    XL4                     PRIMARY SPACE AMOUNT NUM
PRMSECND DS    XL4                     SECONDARY SPACE AMOUNT NUM
PRMRLSE  DS    CL1                     RLSE >0
PRMDIR   DS    XL4                     DIRECTORY BLOCKS NUM
PRMEX100 DS    CL2                     EXPDT= CENTURY TXT
PRMEXPDT DS    CL5                     EXPDT= YYDDD TXT
PRMBLKLN DS    XL4                     SPACE AVERAGE BLOCKSIZE NUM
PRMSPFRM DS    XL2                     SPACE FORM NUM: 2=ALX,
*                                                  4=MXIG, 8=CONTIG
PRMROUND DS    CL1                     ROUND >0
PRMPRIVT DS    CL1                     PRIVATE >0
PRMVLSEQ DS    XL2                     VOLUME SEQUENCE NUM
PRMVLCNT DS    XL2                     VOLUME COUNT NUM
PRMVLRDS DS    CL44                    VOL=REF= DSNAME TXT
PRMPARAL DS    CL1                     PARALLEL MOUNT REQUEST >0
PRMSPGNM DS    CL8                     SYSOUT PROGRAM NAME TXT
PRMSFMNO DS    CL4                     SYSOUT FORM NUMBER TXT
PRMOUTLM DS    XL4                     OUTLIM FOR SYSOUT NUM
PRMCOPYS DS    XL2                     COPIES= NUM
PRMPASPR DS    XL2                     PASSWORD PROTECTION NUM:
*                                            10=PWREAD, 30=NOPWREAD
PRMINOUT DS    XL2                     INPUT/OUTPUT ONLY NUM:
*                                      40=OUTPUT-ONLY, 80=INPUT-ONLY
PRMFCBIM DS    CL4                     FCB= TXT
PRMFCBAV DS    XL2                     FCB ALIGN/VERIFY NUM:
*                                           4=VERIFY, 8=ALIGN
PRMTERM  DS    CL1                     TERM=TS >0
PRMUCS   DS    CL4                     UCS= TXT
PRMUFOLD DS    CL1                     UCS FOLD >0
PRMUVRFY DS    CL1                     UCS VERIFY REQUEST >0
PRMDCBDS DS    CL44                    DCB MODEL DSNAME TXT
PRMDCBDD DS    CL26                    DCB DDNAME BACKREFERENCE TXT
PRMEROPT DS    XL2                     EROPT= NUM: 10=T, 20=ABE,
*                                                  40=SKP, 80=ACC
PRMNCP   DS    XL2                     NCP= NUM
PRMOPTCD DS    XL2                     OPTCD= SUM OK: 1=R,J; 2=T;
*                                             4=Z; 8=A,Q; 10=F,H,O;
*                                             20=C,E; 40=B,U; 80=W
PRMPRTSP DS    XL2                     PRINTER SPACING NUM: 1=NO SPACE
*                                          9=SINGLE SPACED, 11=DOUBLE
*                                          SPACED, 19=TRIPLE SPACED
PRMTRTCH DS    XL2                     7-TRACK TAPE NUM: 4=NON-COMPACT,
*                                          8=COMPACTION, 13=C, 23=E,
*                                          2B=ET, 3B=T
PRMPASSW DS    CL32                    PASSWORD VALUE TXT
PRMDIAGN DS    CL1                     DIAGNS=TRACE >0
PRMSUSER DS    CL8                     SYSOUT DEST NODE NAME TXT
PRMSHOLD DS    CL1                     HOLD=YES >0
PRMUSRID DS    CL8                     SYSOUT DEST USERID TXT
PRMBURST DS    XL2                     BURST= NUM: 2=BURST/STACK/TRIM
*                                                  4=CONTINUOUS
PRMCHARS DS    4CL4                    CHARS= NAMES TXT (0-4)
PRMCOPYG DS    8XL2                    SYSOUT COPY GROUPS (0-8)
PRMFFORM DS    CL4                     FLASH= FORM OVERLAY NAME TXT
PRMFCNT  DS    XL2                     FLASH OVERLAY COUNT NUM
PRMMMOD  DS    CL4                     MODIFY= MODULE NAME TXT
PRMMTRC  DS    XL2                     MODIFY TRC NUM: 0=1ST CAT,
*                                       1=2ND CAT, 2=3RD CAT, 3=4TH CAT
PRMDEFER DS    CL1                     DEFER MOUNT REQUEST >0
PRMOUTPT DS    8CL26                   OUTPUT= REFERENCES TXT (0-8)
PRMCNTL  DS    CL26                    CNTL STATEMENT REFERENCE TXT
PRMSTCL  DS    CL8                     STORCLAS= TXT
PRMMGCL  DS    CL8                     MGMTCLAS= TXT
PRMDACL  DS    CL8                     DATACLAS= TXT
PRMRECO  DS    XL2                     RECORG=NUM: 8=KS,4=ES,2=RR,1=LS
PRMKEYO  DS    XL2                     KEYOFF= NUM
PRMREFD  DS    CL26                    REFDD= DDNAME REFERENCE TXT
PRMLIKE  DS    CL44                    LIKE= DSNAME REFERENCE TXT
PRMAVGR  DS    XL2                     AVGREC= NUM: 80=SINGLE RECS
*                                        40=THOUSANDS ,20=MILLIONS
PRMDSNT  DS    XL2                     DSNTYPE= NUM: 80=PDSE, 40=PDS
*
*
*
PARM2    DS    0C                      2ND PARAMETER DESCRIPTION
REQCODE  DS    CL1                     REQUEST CODE, A=ALLOC, V=VOLSER
RETCODE  DS    CL2                     ALLOCDYN RETURN CODE
ERRRET   DS    CL4                     ERROR RETURN CODE
ERRMSG   DS    CL71                    ERROR REASON MESSAGE
INFORET  DS    CL4                     INFO RETURN CODE
INFOMSG  DS    CL71                    INFORMATION REASON MESSAGE
PARMSEND EQU   *                       END OF ALLOCDYN PARMS
*
NATNLCH  DC    256X'FF'      NATIONAL CHARACTERS
         ORG   NATNLCH+C' '    BLANK
         DC    X'00'
         ORG   NATNLCH+C'$'    DOLLAR SIGN
         DC    X'00'
         ORG   NATNLCH+C'#'    POUNDS SIGN
         DC    X'00'
         ORG   NATNLCH+C'@'    AT SIGN
         DC    X'00'
         ORG   NATNLCH+C'A'    ALPHABET A-I
         DC    9X'00'
         ORG   NATNLCH+C'J'    ALPHABET J-R
         DC    9X'00'
         ORG   NATNLCH+C'S'    ALPHABET S-Z
         DC    8X'00'
         ORG
*
VALCH    DC    256X'FF'        VALID NAME CHARACTERS AFTER 1ST
         ORG   VALCH+C' '      BLANK
         DC    X'00'
         ORG   VALCH+C'$'      DOLLAR SIGN
         DC    X'00'
         ORG   VALCH+C'-'      HYPHEN
         DC    X'00'
         ORG   VALCH+C'#'      POUNDS SIGN
         DC    X'00'
         ORG   VALCH+C'@'      AT SIGN
         DC    X'00'
         ORG   VALCH+C'A'      ALPHABET A-I
         DC    9X'00'
         ORG   VALCH+C'J'      ALPHABET J-R
         DC    9X'00'
         ORG   VALCH+C'S'      ALPHABET S-Z
         DC    8X'00'
         ORG   VALCH+C'0'      DIGITS 0-9
         DC    10X'00'
         ORG
*
SYSOUT   DCB   DSORG=PS,MACRF=PM,DDNAME=SYSOUT,                        X
               RECFM=FB,LRECL=80
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FB,LRECL=133
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=EOJ,               X
               RECFM=FB,LRECL=80
PDS      DCB   DSORG=PS,MACRF=GL,DDNAME=INPUT1,RECFM=F,                X
               LRECL=256,BLKSIZE=256,EODAD=EOF
PDSDIRB  CSECT
         END
