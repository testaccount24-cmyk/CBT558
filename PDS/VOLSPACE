VOLSPACE CSECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* 03/98 QUADE                                                       *
* REMOVED OLD UCB LOOKUP ROUTINE AND CHANGED TO 'UCBLOOK' MACRO,    *
* TO ADD SUPPORT FOR 4-DIGIT DEVICE ADDRESSES. NOTE THAT EVEN FOR   *
* THE UCBLOOK MACRO TO RETURN DATA ON 4-DIGIT UCB'S YOU MUST CODE   *
* NONDEFAULT OPERANDS, "LOC=ANY," "DYNAMIC=YES," AND "RANGE=ALL"    *
*                                                                   *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* 3/83 J.SCHNELLMANN                                                *
* THIS SOURCE CODE WAS RECONSTRUCTED FROM THE LOAD MODULE.          *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* MODIFICATIONS:                                                    *
* 3/83 ADDED 3380 TO DEVICE TYPE TABLE                              *
*      ADDED CVAFTST ROUTINE TO DETERMINE WHETHER VTOC IS INDEXED.  *
*      ADDED CVAFDSM ROUTINE TO GET CORRECT NUMBER OF AVAILABLE     *
*      DSCB'S FOR INDEXED VTOC.                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         REQU
         USING *,R15
         B     BEGIN
         DC    C'*VOLSPACE*'
BEGIN    STM   R14,R12,12(R13)
         USING VOLSPACE,R11     ESTABLISH BASE REGISTER
         LR    R11,R15
         DROP  R15
         LR    R2,R13           SAVE REG 13
         LA    R3,552           LENGTH FOR GETMAIN
         LR    R0,R3
         GETMAIN R,LV=(0)
         ST    R3,0(R1)         SAVE LENGTH OF WORKAREA AT WK0
         ST    R13,4(R1)        SAVE REG 13 AT WK4
         LR    R13,R1           ESTABLISH ADDRESSABILITY FOR
         USING WORKAREA,R13     WORKAREA DSECT
         ST    R1,8(R2)         SAVE ADDRESS OF WORKAREA
         LM    R14,R4,12(R2)    RESTORE REGS 14 - 4 FROM SAVE AREA
         LM    R2,R5,0(R1)      GET COMMAND PARAMETER ADDRESSES
         LA    R14,EFFPLST
         XC    EFFPLST,EFFPLST  CLEAR IKJEFF19 PARM LIST AREA
         ST    R1,16(,R14)      SAVE ADDRESS OF CPPL
         LA    R1,ECB           LOAD ADDRESS OF ECB
         ST    R1,20(,R14)      AND SAVE IT IN WORKAREA
         XC    ECB,ECB          SET ECB TO ZEROES
         LA    R1,PPLIST        LOAD ADDRESS OF IKJPARS PARM LIST
         LA    R14,0(,R3)       GET @ OF USER PROFILE TABLE (UPT)
         LA    R15,0(,R5)       @ OF ENVIRONMENT CONTROL TABLE (ECT)
         LA    R0,ECB           GET @ OF CP EVENT CONTROL BLOCK (ECB)
         STM   R14,R0,0(R1)     STORE ADDRESSES IN PARM LIST
         L     R14,PCLADDR      @ OF PARAMETER CONTROL LIST (PCL)
         LA    R15,ANS          @ OF ANSWER AREA, PTR TO PARAMETER
*                        DESCRIPTOR LIST (PDL) RETURNED BY IKJPARS
         LR    R0,R2            @ OF COMMAND BUFFER
         STM   R14,R0,12(R1)    STORE ADDRESSES IN PARM LIST
         LA    R14,WORKAREA     @ OF USER WORK AREA (UWA)
         ST    R14,24(,R1)      STORE ADDRESS IN PARM LIST
         MVI   24(R1),X'80'     INDICATE END OF PARM LIST
         CALLTSSR EP=IKJPARS
         LA    R14,EFFPLST      GET @ OF IKJEFF19 PARM LIST
         ST    R15,4(,R14)      SAVE RETURN CODE FROM IKJPARS
         LTR   R15,R15          IF RETURN CODE IS NOT ZERO
         BNZ   PARSERR          BRANCH TO ERROR ROUTINE
         L     R2,16(,R1)       ELSE GET PDL POINTER
         CL    R2,PARSRET       IF X'FF000000' RETURNED
         BE    PARSERR          BRANCH TO ERROR ROUTINE
         L     R2,ANS           LOAD @ OF PDL IN REG 2
         L     R9,8(,R2)        @ OF VOLUME ID ENTERED
         LH    R8,12(,R2)       LENGTH OF COMMAND PARM ENTERED
*
MOVREPLY MVC   MESSAGE,REPLY    MOVE REPLY MESSAGE TO WORKAREA
         MVC   MSGVOLID,0(R9)   MOVE VOLUME ID TO MESSAGE
*        L     R1,CVTPTR        LOAD CVT POINTER
*        USING CVTMAP,R1
*        L     R1,CVTILK2       GET @ OF FIRST HALFWORD ADDRESS IN
*        DROP  R1               UCB LOOKUP TABLE
UCB2     SMODE KEY=0,STATE=S
         UCBLOOK VOLSER=MSGVOLID,UCBPTR=LUCBADDR,LOC=ANY,NOPIN,        X
               DYNAMIC=YES,RANGE=ALL
         LR    R3,R0
         LR    R4,R15
         SMODE KEY=N,STATE=P
         LTR   R4,R4
         BNZ   NOTFOUND
*
FOUNDIT  L     R0,LUCBADDR       @ OF UCB
         L     R6,LUCBADDR       COPY HERE TOO
         USING UCB,R6
         LA    R1,LSPMSG         @ OF LSPACE MESSAGE AREA
         SVC   78                EXEC LSPACE ROUTINE   (IGC0007H)
         UNPK  CVDWORK(5),UCBCHAN(3)
         TR    CVDWORK(4),FORMHEX
         MVC   MSGUCB(4),CVDWORK MOVE UCB NAME TO REPLY MESSAGE AREA
         LTR   R15,R15           IF LSPACE NOT SUCCESSFUL
         BNZ   LSPACERR          BRANCH TO LSPACE MESSAGE ROUTINE
         SR    R1,R1             ELSE,  CLEAR REG 1
         IC    R1,UCBUNTYP       GET UNIT TYPE FROM UCB
         MH    R1,HWDSIX         MULTIPLY BY SIX TO GET OFFSET FOR
         LA    R1,DEVTABLE(R1)   DEVICE TYPE TABLE
         MVC   MSGDTYPE,0(R1)    MOVE DEVICE TYPE TO REPLY MESSAGE AREA
         MVC   MSGCYLT,LSPCYLT   MOVE TOTAL AVAIL CYL'S TO MESSAGE
         MVC   MSGTRKT,LSPTRKT   MOVE TOTAL AVAIL TRK'S TO MESSAGE
         MVC   MSGNUMEX,LSPNUMEX MOVE NO. OF FREE EXTENTS TO MESSAGE
         MVC   MSGCYLL,LSPCYLL   MOVE LARGEST EXTENT - CYL'S
         MVC   MSGTRKL,LSPTRKL   MOVE LARGEST EXTENT - TRK'S
*
         CVAFTST UCB=(R6)
         B     BRTBL(R15)
BRTBL    B     NOINDEX           DFDS NOT ON SYSTEM           RC=0
         B     NOINDEX           DFDS ON - VTOC NOT INDEXED   RC=4
         B     INDEXED           DFDS ON - VTOC INDEXED       RC=8
         B     CVAFERR           DFDS ON - VOLUME NOT MOUNTED RC=12
         B     CVAFERR           DFDS ON - INVALID UCB        RC=16
*
INDEXED  MVI   MSGINDEX,C'*'     MOVE '*' TO MSG TO INDICATE INDEXED
         XC    CVPL,CVPL         CLEAR CVAF PARM LIST
         MVC   CVLBL,=CL4'CVPL'  SET LABEL
         MVC   CVLTH,=H'64'      SET LENGTH OF PARM LIST
         LA    R7,IXDSCBS        GET @ OF DSCB COUNT AREA
         SMODE KEY=0
         CVAFDSM ACCESS=MAPDATA,MAP=VTOC,COUNT=YES,UCB=(R6),           X
               CTAREA=(R7),MF=(E,CVPL)
         SMODE KEY=NZERO
         LTR   R15,R15           IF NON ZERO RETURN CODE
         BNZ   CVAFERR           BRANCH TO CVAFERR ROUTINE
         L     R1,IXDSCBS        ELSE, LOAD R1 WITH DSCB COUNT
         B     CONVDEC           AND BRANCH TO CONVDEC ROUTINE
*
CVAFERR  MVC   MSGDSCB,=CL4'****'   MOVE ASTERISKS TO MESSAGE
         B     PUTL                 BRANCH TO PUTLINE ROUTINE
*
NOINDEX  MVC   WKOBPLST,OBTPLIST SET UP OBTAIN PARAMETER LIST
         LA    R14,MSGVOLID      @ OF VOLUME ID
         LA    R15,OBWKAREA      @ OF WORKAREA FOR REPLY
         STM   R14,R15,VOLSERAD  STORE ADDRESSES IN PARM LIST
         OBTAIN WKOBPLST
         LH    R1,DS4DSREC       GET NO OF AVAILABLE DSCB'S FROM
CONVDEC  CVD   R1,CVDWORK        FORMAT 4 DSCB AND CONVERT TO DECIMAL
         OI    CVDWORK+7,X'0F'   SET SIGN
         UNPK  MSGDSCB,CVDWORK+5(3) UNPACK IT TO MESSAGE AREA
         B     PUTL              BRANCH TO IKJPUTL ROUTINE
*
NOTFOUND MVC   LLZZ,LLZZ23       SET LENGTH FOR NOT MOUNTED MESSAGE
         MVC   MSGUCB(19),NOMNTMSG  MOVE NOT MOUNTED MSG TO MSG AREA
         B     PUTL              BRANCH TO IKJPUTL ROUTINE
*
LSPACERR MVC   LLZZ,LLZZ45       SET LENGTH FOR LSPACE ERROR MESSAGE
         MVC   MSGDTYPE(30),LSPMSG  MOVE LSPACE MSG TO MESSAGE AREA
*
PUTL     PUTLINE PARM=PTPB,UPT=0(,R3),ECT=0(,R5),ECB=ECB,              X
               OUTPUT=(MESSAGE,TERM,SINGLE,DATA),                      X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     X
               MF=(E,PUTLIST)
         S     R8,FWDSIX          SUB 6 FROM LENGTH OF CMND PARM
         BNP   FINISHED           IF NOT PLUS THEN BRANCH TO FINISHED
         LA    R9,6(,R9)          ELSE, BUMP TO NEXT VOLUME ID
         B     MOVREPLY           AND REPEAT PROCESSING
*
PARSERR  LA    R14,EFFPLST        GET @ OF IKJEFF19 PARM LIST
         MVI   13(R14),X'15'      SET CALLID FOR PARSE ERROR
         XC    LINKPLST,LINKPLST  CLEAR LINK PARM LIST
         LINK  EP=IKJEFF19,PARAM=EFFPLST,MF=(E,EFFPTR),                X
               SF=(E,LINKPLST)
*
FINISHED IKJRLSA ANS
*
FREEWORK LH    R0,GMLENGTH+2      GET LENGTH OF GETMAINED AREA
         LR    R1,R13             GET @ OF GETMAINED AREA
         L     R13,SAVER13        RESTORE SAVE AREA ADDRESS
         FREEMAIN R,LV=(0),A=(1)
         LM    R14,R12,12(R13)    RESTORE REGISTERS
         LA    R15,0              SET RETURN CODE
         BR    R14                RETURN
*
         LTORG
*
PCLADDR  DC    A(COMDPCL)
*
JUNK1    DC    C'0123456789ABCDEF'
FORMHEX  EQU   JUNK1-240
*
PARSRET  DC    X'FF000000'
*
REPLY    DS    0CL78
LLZZ78   DC    X'004E0000'
MSG      DC    C'TSO001            SP(C=    ,T=    ,E=    ) L-EXT(C=   X
                ,T=    ) DSCB(    )'
*
F4DSN    DC    44X'04'
*
DEVTABLE DC    CL102'       2311  2301  2303  2303  2321 2301-12305-2 2X
               314  3330        3350       3330-1 3380             '
*
OBTPLIST DS    0F
OBTPRM1  DC    X'C1000000'
F4DSNAD  DC    A(F4DSN)
OBTPRM3  DC    F'0'
OBTPRM4  DC    F'0'
*
LLZZ23   DC    X'00170000'
*
LLZZ45   DC    X'002D0000'
*
FWDSIX   DC    X'00000006'
*
HWDSIX   DC    X'0006'
*
NOMNTMSG DC    CL19' NOT MOUNTED       '
*
COMDPCL  IKJPARM
*
COMDPCE  IKJIDENT ' VOLUME(S) ',FIRST=ALPHANUM,OTHER=ALPHANUM,         X
               PROMPT=' VOLUMES(S)+'
*
         IKJENDP
*
*VT      DSECT
         CVT  DSECT=YES
*
UCB      DSECT
         IEFUCBOB
*
WORKAREA DSECT
GMLENGTH DS    F             LENGTH OF GETMAINED WORKAREA
SAVER13  DS    F             ADDRESS OF SAVEAREA (R13)
*
         DS    CL64
*
LUCBADDR DS    A
CVDWORK  DS    D
         DS    F
ANS      DS    F             IKJPARS ANSWER AREA
ECB      DS    F             EVENT CONTROL BLOCK
*
LSPMSG   DS    0CL30         MESSAGE RETURNED FROM LSPACE
         DS    CL6
LSPCYLT  DS    CL4
         DS    CL1
LSPTRKT  DS    CL4
         DS    CL1
LSPNUMEX DS    CL4
         DS    CL1
LSPCYLL  DS    CL4
         DS    CL1
LSPTRKL  DS    CL4
*
         DS    CL44
*
OBWKAREA DS    0CL97          FORMAT 4 DSCB RETURNED BY OBTAIN
         DS    CL6
DS4DSREC DS    CL2
         DS    CL6
DS4VTOCI DS    CL1
         DS    CL82
*
         DS    0F
PPLIST   DS    0CL28          IKJPARS PARAMETER LIST
PPLUPT   DS    F
PPLECT   DS    F
PPLECB   DS    F
PPLPCL   DS    F
PPLANS   DS    F
PPLCBUF  DS    F
PPLUWA   DS    F
*
PUTLIST  DS    0CL16         IKJPUTL PARAMETER LIST  (PUTLINE)
PUTUPT   DS    F
PUTECT   DS    F
PUTECB   DS    F
PUTPARM  DS    F
*
EFFPTR   DS    F              POINTER TO IKJEFF19 PARM LIST
*
         DS    CL12
*
LINKPLST DS    0CL8           LINK PARAMETER LIST (IKJEFF19)
EPADDR   DS    F
ZEROES   DS    F
*
PTPB     DS    0CL12          PUTL PARAMETER BLOCK
         DS    F
         DS    F
         DS    F
*
MESSAGE  DS    0CL78
LLZZ     DS    CL4
MSGVOLID DS    CL6
MSGINDEX DS    CL1
MSGUCB   DS    CL4
MSGDTYPE DS    CL6
         DS    CL6
MSGCYLT  DS    CL4
         DS    CL3
MSGTRKT  DS    CL4
         DS    CL3
MSGNUMEX DS    CL4
         DS    CL10
MSGCYLL  DS    CL4
         DS    CL3
MSGTRKL  DS    CL4
         DS    CL7
MSGDSCB  DS    CL4
         DS    CL1
         DS    CL2
MSGLEN   EQU   *-MESSAGE
*
         DS    0F
WKOBPLST DS    0CL16             OBTAIN PARAMETER LIST
OPCODE   DS    F
DSNADDR  DS    F
VOLSERAD DS    F
WKAREADR DS    F
*
EFFPLST  DS    0CL44             IKJEFF19 PARAMETER LIST
         DS    F
PARSR15  DS    F
         DS    F
EFFCODE  DS    F
CPPLADDR DS    F
ECBADDR  DS    F
         DS    CL20
*
IXDSCBS  DS    F                 DSCB COUNT AREA  (CVAFDSM)
*
CVPL     DS    0CL64             PARAMETER LIST USED BY CVAFDSM
CVLBL    DS    CL4
CVLTH    DS    H
CVFCTN   DS    XL1
CVSTAT   DS    XL1
CVFL1    DS    XL1
CVFL2    DS    XL1
CVRSVB   DS    H
CVUCB    DS    F
CVDSN    DS    F
CVBUFL   DS    F
CVIRCDS  DS    F
CVMRCDS  DS    F
CVIOAR   DS    F
CVDEB    DS    F
CVARG    DS    F
CVSPACE  DS    F
CVEXTS   DS    F
CVBUFL2  DS    F
CVVRFDA  DS    F
CVCTAR   DS    F
         END
