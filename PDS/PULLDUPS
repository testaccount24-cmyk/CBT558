         TITLE '*** PULLDUPS: PULL DUPLICATE RECORDS   ***'
PULLDUPS CSECT
***********************************************************************
* READS THE SYSIN FILE LOOKING FOR DUPLICATE KEYS. FIVE OUTPUT        *
* FILES ARE WRITTEN CONTAINING THE FOLLOWING:                         *
*   UNIQUES : CONTAINS ONLY RECORDS HAVING UNIQUE KEYS                *
*   DUPLGRPS: CONTAINS ONLY RECORDS THAT HAVE DUPLICATE KEYS.         *
*   UNIQDUPS: CONTAINS ALL UNIQUE + 1ST RECORDS OF DUPLICATE GRPS.    *
*   NON1DUPS: CONTAINS RECORDS HAVING DUPLICATE KEYS THAT ARE NOT     *
*             THE FIRST RECORD IN THE DUPLICATE GROUP.                *
*   FIRSTDUP: CONTAINS RECORDS THAT ARE THE FIRST RECORD OF A         *
*             DUPLICATE GROUP.                                        *
*                                                                     *
*  PARM FIELD CONTAINS THE KEY FIELD POSITION IN THE RECORD RELATIVE  *
*  TO 1 AND THE LENGTH OF THE KEY FIELD. KEY LENGTH MUST BE LESS THAN *
*  256.                                                               *
*                                                                     *
*  RECORD TOTALS ARE PRINTED ON THE SYSPRINT FILE.                    *
*                                                                     *
*  AUTHOR R THORNTON  AUGUST 2000                                     *
***********************************************************************
*
***********************************************************************
*        SAVE REGISTERS, SET UP BASE REGS, CHAIN SAVE AREAS           *
***********************************************************************
         USING PULLDUPS,R3,R4
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)             SET UP SECOND
         LA    R4,1(R4)                    BASE REGISTER
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     START                   BRANCH AROUND CONSTANTS
         DC    CL8'PULLDUPS'           PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
START    DS    0H                      BEGIN PROCESSING
***********************************************************************
*        PROCESS PARM FIELD: EXTRACT THE KEY FIELD POSITION AND LENGTH*
*        AND STORE THEM FOR PROCESSING.                               *
***********************************************************************
         L     R2,0(R1)                GET PARM FIELD ADDR
         LH    R12,0(R2)               MAX TIMES TO LOOP
         LTR   R12,R12                 ANY PARM DATA?
         BZ    BADPARM                 NO, ERROR
         CH    R12,H5                  MORE THAN 5 BYTES?
         BNH   SETUPR11                NO
         LA    R12,5                   YES, USE 5
SETUPR11 LA    R11,2(R2)               POINT TO 1ST BYTE OF PARM
MOVABYT1 MVC   WORK(4),WORK+1          SHIFT CURRENT CONTENT LEFT BY 1
         MVC   WORK+4(1),0(R11)        COPY IN THIS DIGIT
         LA    R11,1(R11)              ADVANCE TO NEXT PARM BYTE
         CLI   0(R11),C','             NOW AT COMMA?
         BE    ENDOFLOC                YES
         BCT   R12,MOVABYT1            NO, LOOP TO GET LOCATION
         B     BADPARM                 TOO LONG, ERROR
ENDOFLOC TRT   WORK,VALNUM             TEST FOR VALID NUMBER
         BNZ   BADPARM                 NON-NUMERIC, ERROR
         PACK  DBLWD,WORK              PACK POSITION
         CVB   R12,DBLWD               CONVERT TO BINARY
         BCTR  R12,0                   MAKE POSITION ZERO RELATIVE
         STH   R12,OFFSET              SAVE OFFSET TO FIELD
         LA    R11,1(R11)              STEP PAST THE COMMA
         LH    R12,0(R2)               GET PARM FIELD LENGTH
         LA    R12,2(R2,R12)           POINT TO END OF PARM DATA+1
         MVC   WORK,ZEROS              CLEAR WORK FIELD
MOVABYT2 MVC   WORK(4),WORK+1          SHIFT CURRENT CONTENT LEFT BY 1
         MVC   WORK+4(1),0(R11)        COPY IN THIS DIGIT
         LA    R11,1(R11)              ADVANCE TO NEXT PARM BYTE
         CR    R11,R12                 PAST END OF PARM FIELD?
         BL    MOVABYT2                NO, CONTINUE LOOP
         TRT   WORK,VALNUM             TEST FOR VALID NUMBER
         BNZ   BADPARM                 NON-NUMERIC, ERROR
         PACK  DBLWD,WORK              PACK POSITION
         CVB   R12,DBLWD               CONVERT TO BINARY
         CH    R12,H256                OVER 256 BYTES?
         BH    BADPARM                 YES, ERROR
         BCTR  R12,0                   MAKE LENGTH INTO LENGTH CODE
         STH   R12,LENGCODE            SAVE KEY FIELD LENGTH CODE
         B     OPENS                   CONTINUE
BADPARM  WTO   'PULLDUPS: INVALID PARM ON EXEC STATEMENT',ROUTCDE=11
         ABEND 111,DUMP
***********************************************************************
*        OPEN FILES                                                   *
***********************************************************************
OPENS    OPEN  (UNIQUES,OUTPUT,UNIQDUPS,OUTPUT,NON1DUPS,OUTPUT) OPEN
         OPEN  (SYSPRINT,OUTPUT,DUPLGRPS,OUTPUT,FIRSTDUP,OUTPUT,SYSIN)
         LH    R1,OFFSET               GET OFFSET TO KEY FIELD
         AH    R1,LENGCODE             AND ADD LENGTH
         CH    R1,SYSIN+82             KEY EXTENDS PAST END OF RECORD?
         BNH   GETAREAS                NO
BADPARM2 WTO   'PULLDUPS: KEY FIELD EXTENDS PAST END OF SYSIN RECORD', X
               ROUTCDE=11
         ABEND 222,DUMP
GETAREAS LH    R12,SYSIN+82            GET RECORD LENGTH
         STORAGE OBTAIN,LENGTH=(12),ADDR=AREA1 GET RECORD AREA1
         STORAGE OBTAIN,LENGTH=(12),ADDR=AREA2 GET RECORD AREA2
         L     R11,AREA2               POINT TO AREA2
GETFIRST GET   SYSIN,0(R11)            READ FIRST RECORD INTO AREA2
         AP    INPCOUNT,P1             INCREMENT COUNTER
***********************************************************************
*             MAINLINE ROUTINE                                        *
***********************************************************************
MAINLINE L     R11,AREA2               TEST FOR
         CLC   0(5,R11),ENDOFILE          END OF
         BE    EOJ                           SYSIN FILE
         L     R12,AREA1               ROTATE
         MVC   AREA1,AREA2                RECORD
         ST    R12,AREA2                     AREA ADDRESSES
         GET   SYSIN,0(R12)            READ NEXT RECORD INTO R12 AREA
         AP    INPCOUNT,P1             INCREMENT COUNTER
AFTEREAD L     R11,AREA1               PREVIOUS RECORD ADDRESS
         LR    R1,R11                  POINT TO PREVIOUS RECORD
         AH    R1,OFFSET               POINT TO KEY FIELD
         LH    R2,LENGCODE             GET KEY FIELD LENGTH
         EX    R2,COMPARE              COMPARE TO LAST KEY WRITTEN
         BE    OUT3                    EQUAL: NON-FIRST DUPLICATE
         EX    R2,SAVEKEY              SAVE THE LAST KEY WRITTEN
         MVI   DUPSW,0                 CLEAR DUPLICATE SWITCH
         PUT   UNIQDUPS,0(R11)         UNIQUE, OR 1ST DUP, TO UNIQDUPS
         AP    OUTCNT2,P1              INCREMENT COUNTER
         LR    R1,R11                  COPY PREVIOUS RECORD ADDRESS
         AH    R1,OFFSET               POINT TO KEY FIELD
         LR    R2,R12                  COPY CURRENT RECORD ADDRESS
         AH    R2,OFFSET               POINT TO KEY FIELD
         LH    R15,LENGCODE            GET KEY FIELD ADDRESS
         EX    R15,COMPCURR            COMPARE PREVIOUS TO CURRENT
         BNE   UNIQONES                DIFFERENT, PREVIOUS ID UNIQUE
         PUT   FIRSTDUP,0(R11)         SAME, FIRST OF DUPLICATE GROUP
         AP    OUTCNT5,P1              INCREMENT COUNTER
         PUT   DUPLGRPS,0(R11)           AND PART OF DUPLICATE GROUP
         AP    OUTCNT4,P1              INCREMENT COUNTER
         B     MAINLINE                CONTINUE
UNIQONES PUT   UNIQUES,0(R11)          UNIQUE, WRITE TO UNIQUES
         AP    OUTCNT1,P1              INCREMENT COUNTER
         B     MAINLINE                RETURN TO CALLER
OUT3     PUT   DUPLGRPS,0(R11)         WRITE IT (FIRST OF DUPL GRP)
         AP    OUTCNT4,P1              INCREMENT COUNTER
         PUT   NON1DUPS,0(R11)         WRITE DUPS TO NON1DUPS
         AP    OUTCNT3,P1              INCREMENT COUNTER
         B     MAINLINE                RETURN TO CALLER
COMPARE  CLC   0(1,R1),LASTKEY         EXECUTED COMPARE
COMPCURR CLC   0(1,R1),0(R2)           EXECUTED COMPARE
SAVEKEY  MVC   LASTKEY(1),0(R1)        EXECUTED MOVE
***********************************************************************
*        END OF SYSIN FILE                                            *
***********************************************************************
EOFIN    CP    INPCOUNT,P1             FIRST TIME?
         BL    EOJ                     YES, INPUT FILE IS EMPTY
         LA    R12,ENDOFILE            SET END OF FILE?
         ST    R12,AREA2               POINT TO EOF RECORD
         B     AFTEREAD                CONTINUE
***********************************************************************
*             END OF JOB                                              *
***********************************************************************
EOJ      MVC   PRT(12),TOTLEDIT        EDIT MASK
         ED    PRT(12),INPCOUNT        EDIT INPUT COUNTER
         MVC   PRT+13(12),=CL12'RECORDS READ' IDENTIFY COUNT
         PUT   SYSPRINT,PRT            PRINT COUNT
         MVC   PRT(12),TOTLEDIT        EDIT MASK
         ED    PRT(12),OUTCNT1         EDIT OUTPUT COUNTER
         MVC   PRT+13(15),=CL15'UNIQUES RECORDS' IDENTIFY COUNT
         PUT   SYSPRINT,PRT            PRINT COUNT
         MVC   PRT(12),TOTLEDIT        EDIT MASK
         ED    PRT(12),OUTCNT2         EDIT OUTPUT COUNTER
         MVC   PRT+13(15),=CL15'UNIQDUPS RECORDS' IDENTIFY COUNT
         PUT   SYSPRINT,PRT            PRINT COUNT
         MVC   PRT(12),TOTLEDIT        EDIT MASK
         ED    PRT(12),OUTCNT3         EDIT OUTPUT COUNTER
         MVC   PRT+13(15),=CL15'NON1DUPS RECORDS' IDENTIFY COUNT
         PUT   SYSPRINT,PRT            PRINT COUNT
         MVC   PRT(12),TOTLEDIT        EDIT MASK
         ED    PRT(12),OUTCNT4         EDIT OUTPUT COUNTER
         MVC   PRT+13(15),=CL15'DUPLGRPS RECORDS' IDENTIFY COUNT
         PUT   SYSPRINT,PRT            PRINT COUNT
         MVC   PRT(12),TOTLEDIT        EDIT MASK
         ED    PRT(12),OUTCNT5         EDIT OUTPUT COUNTER
         MVC   PRT+13(15),=CL15'FIRSTDUP RECORDS' IDENTIFY COUNT
         PUT   SYSPRINT,PRT            PRINT COUNT
        CLOSE (SYSIN,,UNIQDUPS,,NON1DUPS,,SYSPRINT,,DUPLGRPS,,FIRSTDUP)
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         L     R14,12(R13)             RESTORE RETURN REG: R14
         L     R15,RETCODE             SET RETURN CODE
         LM    R0,R12,20(R13)          RESTORE CALLER'S REGS 0-12
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN
***********************************************************************
*        STORAGE AND FILE AREAS                                       *
***********************************************************************
DBLWD    DS    D                       DOUBLEWORD WORK AREA
AREA1    DC    A(0)                    ADDRESS OF AREA1
AREA2    DC    A(0)                    ADDRESS OF AREA2
RETCODE  DS    F                       RETURN CODE
H0       DC    H'0'                    HEX ZERO
H5       DC    H'5'                    CONSTANT 5
H256     DC    H'256'                  CONSTANT 256
OFFSET   DC    H'0'                    OFFSET TO KEY FIELD
LENGCODE DC    H'0'                    LENGTH CODE OR KEY FIELD
P1       DC    P'1'                    CONSTANT 1
DUPSW    DC    X'00'                   01=1ST DUP WRITTEN
WORK     DC    CL5'00000'              WORK AREA
ZEROS    DC    CL5'00000'              CONSTANT ZEROS
ENDOFILE DC    XL5'FFFEFDFCFB'         END OF FILE FOR SYSIN
VALNUM   DC    256X'FF'                TRT TABLE FOR NUMERIC TESTS
         ORG   VALNUM+C'0'
         DC    10X'00'
         ORG
PRT      DC    CL80' '
INPCOUNT DC    PL5'0'                  INPUT RECORD COUNTER
OUTCNT1  DC    PL5'0'                  UNIQUES OUTPUT RECORD COUNTER
OUTCNT2  DC    PL5'0'                  UNIQDUPS OUTPUT RECORD COUNTER
OUTCNT3  DC    PL5'0'                  NON1DUPS OUTPUT RECORD COUNTER
OUTCNT4  DC    PL5'0'                  DUPLGRPS OUTPUT RECORD COUNTER
OUTCNT5  DC    PL5'0'                  FIRSTDUP OUTPUT RECORD COUNTER
LASTKEY  DS    CL256                   LAST KEY READ
         ORG   LASTKEY
         DC    256X'00'
         ORG
TOTLEDIT DC    XL12'402020206B2020206B202120' EDIT MASK FOR TOTAL
***********************************************************************
*             DCB'S                                                   *
***********************************************************************
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FB,LRECL=80
UNIQUES  DCB   DSORG=PS,MACRF=PM,DDNAME=UNIQUES
UNIQDUPS DCB   DSORG=PS,MACRF=PM,DDNAME=UNIQDUPS
NON1DUPS DCB   DSORG=PS,MACRF=PM,DDNAME=NON1DUPS
DUPLGRPS DCB   DSORG=PS,MACRF=PM,DDNAME=DUPLGRPS
FIRSTDUP DCB   DSORG=PS,MACRF=PM,DDNAME=FIRSTDUP
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=EOFIN
         LTORG
PULLDUPS CSECT
***********************************************************************
*             REGISTER EQUATES                                        *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
