         PRINT NOGEN
         TITLE '*****EASTER: COMPUTE THE DATE FOR EASTER *****'
EASTER SVLNK R3
*
***********************************************************************
* COMPUTE THE DATE FOR EASTER USING AN ALGORITHM PUBLISHED IN THE     *
* COMPUTER LANGUAGE MAGAZINE, BUT NOT DOCUMENTED. IT SEEMS TO WORK,   *
* BUT I HAVE NO IDEA WHAT IT DOES LOGICALLY. THE DATE PRINTED IS FOR  *
* GOOD FRIDAY, RATHER THAN EASTER.                                    *
* AUTHOR R THORNTON NOVEMBER 1990                                     *
***********************************************************************
*
*
***********************************************************************
* INITIALIZATION: OPEN FILES                                          *
***********************************************************************
*
         OPEN  (PRINT1,OUTPUT,INPUT1)  OPEN FILES
         PUT   PRINT1,HEADER           PRINT HEADER
*
***********************************************************************
* MAINLINE PROCESSING: READ THE INPUT 1 FILE TO GET A YEAR, WHICH IS  *
* IN THE FIRST 4 POSITIONS OF THE RECORD. THE COMPUTED DATE OF EASTER *
* FOR THAT YEAR IS PRINTED.                                           *
***********************************************************************
*
MAINLINE GET   INPUT1,INRECD           READ NEXT INPUT RECORD
         PACK  WORK,YEAR               PACK THE YEAR
         DP    WORK,P19                DIVIDE BY 19
         ZAP   A,WORK+6(2)             SAVE REMAINDER AS A
         UNPK  PA,A                    UNPACK TO PRINT
         OI    PA+2,C'0'               CLEAR SIGN
         PACK  WORK,YEAR               PACK THE YEAR
         DP    WORK,P100               DIVIDE BY 100
         ZAP   B,WORK(6)               QUOTIENT IS B
         UNPK  PB,B                    UNPACK TO PRINT
         OI    PB+2,C'0'               CLEAR SIGN
         ZAP   C,WORK+6(2)             REMAINDER IS C
         UNPK  PC,C                    UNPACK TO PRINT
         OI    PC+2,C'0'               CLEAR SIGN
         ZAP   WORK,B                  COPY B TO WORK
         DP    WORK,P4                 DIVIDE BY 4
         ZAP   D,WORK(7)               QUOTIENT IS D
         UNPK  PD,D                    UNPACK TO PRINT
         OI    PD+2,C'0'               CLEAR SIGN
         ZAP   E,WORK+7(1)             REMAINDER IS E
         UNPK  PE,E                    UNPACK TO PRINT
         OI    PE+2,C'0'               CLEAR SIGN
         ZAP   WORK,B                  COPY B TO WORK
         AP    WORK,P8                 ADD 8
         DP    WORK,P25                DIVIDE BY 25
         ZAP   F,WORK(6)               QUOTIENT IS F
         UNPK  PF,F                    UNPACK TO PRINT
         OI    PF+2,C'0'               CLEAR SIGN
         ZAP   WORK,B                  COPY B TO WORK
         SP    WORK,F                  DEDUCT F
         AP    WORK,P1                 ADD 1
         DP    WORK,P3                 DIVIDE BY 3
         ZAP   G,WORK(7)               QUOTIENT IS G
         UNPK  PG,G                    UNPACK TO PRINT
         OI    PG+2,C'0'               CLEAR SIGN
         ZAP   WORK,P19                19 TO WORK
         MP    WORK,A                  MULTIPLY BY A
         AP    WORK,B                  ADD B
         SP    WORK,D                  SUBTRACT D
         SP    WORK,G                  SUBTRACT G
         AP    WORK,P15                ADD 15
         DP    WORK,P30                DIVIDE BY 30
         ZAP   H,WORK+6(2)             REMAINDER IS H
         UNPK  PH,H                    UNPACK TO PRINT
         OI    PH+2,C'0'               CLEAR SIGN
         ZAP   WORK,C                  COPY C TO WORK
         DP    WORK,P4                 DIVIDE BY 4
         ZAP   I,WORK(7)               QUOTIENT IS I
         UNPK  PI,I                    UNPACK TO PRINT
         OI    PI+2,C'0'               CLEAR SIGN
         ZAP   K,WORK+7(1)             REMAINDER IS K
         UNPK  PK,K                    UNPACK TO PRINT
         OI    PK+2,C'0'               CLEAR SIGN
         ZAP   WORK,P32                COPY 32 TO WORK
         ZAP   WORK1,P2                COPY 2 TO WORK1
         MP    WORK1,E                 MULTIPLY WORK1 BY E
         AP    WORK,WORK1              ADD PRODUCT TO WORK
         ZAP   WORK1,P2                COPY 2 TO WORK1
         MP    WORK1,I                 MULTIPLY WORK1 BY I
         AP    WORK,WORK1              ADD PRODUCT TO WORK
         SP    WORK,H                  DEDUCT H
         SP    WORK,K                  DEDUCT K
         DP    WORK,P7                 DIVIDE BY 7
         ZAP   L,WORK+7(1)             REMAINDER IS L
         UNPK  PL,L                    UNPACK TO PRINT
         OI    PL+2,C'0'               CLEAR SIGN
         ZAP   WORK,A                  COPY A TO WORK
         ZAP   WORK1,P11               COPY 11 TO WORK1
         MP    WORK1,H                 MULTIPLY WORK1 BY H
         AP    WORK,WORK1              ADD PRODUCT TO WORK
         ZAP   WORK1,P22               COPY 22 TO WORK1
         MP    WORK1,L                 MULTIPLY WORK1 BY L
         AP    WORK,WORK1              ADD PRODUCT TO WORK
         DP    WORK,P451               DIVIDE BY 451
         ZAP   M,WORK(6)               QUOTIENT IS M
         UNPK  PM,M                    UNPACK TO PRINT
         OI    PM+2,C'0'               CLEAR SIGN
         ZAP   WORK,H                  COPY H TO WORK
         AP    WORK,L                  ADD L
         ZAP   WORK1,P7                COPY 7 TO WORK1
         MP    WORK1,M                 MULTIPLY BY M
         SP    WORK,WORK1              SUBTRACT PRODUCT FROM WORK
         AP    WORK,P114               ADD 114
         DP    WORK,P31                DIVIDE BY 31
         ZAP   N,WORK(6)               QUOTIENT IS N
         UNPK  PN,N                    UNPACK TO PRINT
         OI    PN+2,C'0'               CLEAR SIGN
         ZAP   P,WORK+6(2)             REMAINDER IS P
         UNPK  PP,P                    UNPACK TO PRINT
         OI    PP+2,C'0'               CLEAR SIGN
         ZAP   MONTH,N                 MONTH IS N
         ZAP   DAY,P                   COPY P TO DAY
         AP    DAY,P1                  DAY IS P + 1
         SP    DAY,P2                  COMPUTE GOOD FRIDAY'S DATE
         ZAP   DAY,DAY                 CHECK VALID DAY
         BP    PRTIT                   >0, O.K.
         SP    MONTH,P1                BACK UP 1 MONTH
         AP    DAY,P30                 ADD 30 DAYS
         CP    MONTH,P4                IN APRIL?
         BE    PRTIT                   YES
         CP    MONTH,P6                IN JUNE?
         BE    PRTIT                   YES
         CP    MONTH,P9                SEPTEMBER?
         BE    PRTIT                   YES
         CP    MONTH,P11               NOVEMBER?
         BE    PRTIT                   YES
         AP    DAY,P1                  ADD 1 MORE FOR 31 DAY MONTHS
         CP    MONTH,P2                FEBRUARY?
         BNE   PRTIT                   NO
         SP    DAY,=P'3'               BACK TO 28 DAY MONTH
         CP    D,P0                    LEAP YEAR?
         BNE   LPREM                   PROBABLY NOT
         CP    C,P0                    CENTURY YEAR?
         BE    PRTIT                   YES, NOT LEAP YEAR
LEAPYR   AP    DAY,P1                  ADD 1 FOR LEAP YEAR
         B     PRTIT                   GO PRINT
LPREM    CP    C,P0                    CENTURY YEAR?
         BE    LEAPYR                  YES, LEAP YEAR
PRTIT    UNPK  PMO,MONTH               MONTH TO PRINT
         OI    PMO+1,C'0'              CLEAR SIGN
         MVI   PSL1,C'/'               DELIMIT MONTH/DAY
         UNPK  PDA,DAY                 DAY TO PRINT
         OI    PDA+1,C'0'              CLEAR SIGN
         MVI   PSL2,C'/'               DELIMIT DAY/YEAR
         MVC   PYR,YEAR                YEAR TO PRINT
         BAL   R9,PRINT                PRINT
         B     MAINLINE                PROCESS ALL INPUT
*
***********************************************************************
*        PRINT A LINE                                                 *
***********************************************************************
*
PRINT    PUT   PRINT1,PRT              WRITE PRINT LINE
         BR    R9                      EXIT
*
***********************************************************************
*        END OF INPUT FILE AND END OF JOB                             *
***********************************************************************
*
EOJ      CLOSE (PRINT1,,INPUT1)        CLOSE FILES
         L     R13,4(R13)              GET CALLER'S SAVE ADDRESS
         LM    R14,R12,12(R13)         GET CALLER'S REGISTERS
         SR    R15,R15                 ZERO RETURN CODE
         BR    R14                     RETURN TO CALLER
*
***********************************************************************
*        STORAGE AND FILE AREAS                                       *
***********************************************************************
*
WORK     DS    D                  WORK AREA
WORK1    DS    D                  WORK AREA
* THE FOLLOWING WORK AREAS, A - P, ARE DEFINED BY FORMULAS AT THE
* RIGHT, WHERE PROCESSING WITHIN PARENTHESES PROCEEDS IN THE NORMAL
* M-D-A-S SEQUENCE, AND % INDICATES A REMAINDER AFTER DIVISION, WHILE
* / IS QUOTIENT AFTER DIVISION, * IS MULTIPLICATION. ALL ARITHMETIC
* IS INTEGER ONLY.
A        DS    PL2                A = YEAR % 19
B        DS    PL2                B = YEAR / 100
C        DS    PL2                C = YEAR % 100
D        DS    PL2                D = B / 4
E        DS    PL2                E = B % 4
F        DS    PL2                F = (B + 8) / 25
G        DS    PL2                G = (B - F + 1) / 3
H        DS    PL2                H = (19 * A + B - D - G + 15) % 30
I        DS    PL2                I = C / 4
K        DS    PL2                K = C % 4
L        DS    PL2                L = (32 + 2 * E + 2 * I - H - K) % 7
M        DS    PL2                M = (A + 11 * H + 22 * L) / 451
N        DS    PL2                N = (H + L - 7 * M + 114) / 31
P        DS    PL2                P = (H + L - 7 * M + 114) % 31
MONTH    DS    PL2                MONTH = N
DAY      DS    PL2                DAY = P + 1
P0       DC    P'0'               CONSTANT 0
P1       DC    P'1'               CONSTANT 1
P2       DC    P'2'               CONSTANT 2
P3       DC    P'3'               CONSTANT 3
P4       DC    P'4'               CONSTANT 4
P6       DC    P'6'               CONSTANT 6
P7       DC    P'7'               CONSTANT 7
P8       DC    P'8'               CONSTANT 8
P9       DC    P'9'               CONSTANT 9
P11      DC    P'11'              CONSTANT 11
P15      DC    P'15'              CONSTANT 15
P19      DC    P'19'              CONSTANT 19
P22      DC    P'22'              CONSTANT 22
P25      DC    P'25'              CONSTANT 25
P30      DC    P'30'              CONSTANT 30
P31      DC    P'31'              CONSTANT 31
P32      DC    P'32'              CONSTANT 32
P100     DC    P'100'             CONSTANT 100
P114     DC    P'114'             CONSTANT 114
P451     DC    P'451'             CONSTANT 451
*
PRT      DS    0CL80
PMO      DS    CL2
PSL1     DC    CL1'/'
PDA      DS    CL2
PSL2     DC    CL1'/'
PYR      DS    CL4
         DC    CL2' '
         DC    CL2'A='
PA       DS    CL3
         DC    CL4', B='
PB       DS    CL3
         DC    CL4', C='
PC       DS    CL3
         DC    CL4', D='
PD       DS    CL3
         DC    CL4', E='
PE       DS    CL3
         DC    CL4', F='
PF       DS    CL3
         DC    CL4', G='
PG       DS    CL3
         DC    CL4', H='
PH       DS    CL3
         DC    CL4', I='
PI       DS    CL3
         DC    CL4', K='
PK       DS    CL3
         DC    CL4', L='
PL       DS    CL3
         DC    CL4', M='
PM       DS    CL3
         DC    CL4', N='
PN       DS    CL3
         DC    CL4', P='
PP       DS    CL3
         DC    CL24' '
*
HEADER   DC    CL132'GOOD FRIDAY DATES'
*
INRECD   DS    0CL80
YEAR     DS    CL4
         DS    CL76
*
PRINT1   DCB   DSORG=PS,MACRF=PM,DDNAME=PRINT1,                        X
               RECFM=FB,LRECL=132
INPUT1   DCB   DSORG=PS,MACRF=GM,DDNAME=INPUT1,EODAD=EOJ,              X
               RECFM=FB,LRECL=80
         END
