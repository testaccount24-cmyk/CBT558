         TITLE '*** STRIPEDG STRIPS RECORDS FROM THE EDGE MACHINE ***'
STRIPEDG CSECT
*********************************************************************
* STRIPS RECORDS FROM THE EDGE MACHINE READABLE FILE. HELPFUL, SINCE*
* THE DATA SET IS TOO LARGE TO EDIT.                                *
*             RESPECIALIZE FOR EACH USE.                            *
*                                                                   *
* AUTHOR R THORNTON JAN 2002                                        *
*********************************************************************
*
*********************************************************************
*        SAVE REGISTERS, SET UP BASE REGS, CHAIN SAVE AREAS         *
*********************************************************************
         USING STRIPEDG,R3,R4
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)             SET UP SECOND
         LA    R4,1(R4)                    BASE REGISTER
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     START                   BRANCH AROUND CONSTANTS
         DC    CL8'STRIPEDG'           PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
START    DS    0H                      BEGIN PROCESSING
*********************************************************************
*        OPEN FILE                                                  *
*********************************************************************
OPENS    OPEN  INPUT1                  OPEN EDGE MACHINE FRIENDLY FILE
         OPEN  (OUTPUT1,OUTPUT)        OPEN STRIP OUTPUT FILE
         OPEN  (PRINT1,OUTPUT)         OPEN PRINT FILE
*********************************************************************
*             MAINLINE ROUTINE                                      *
*********************************************************************
MAINLINE GET   INPUT1,MACHINER         READ NEXT RECORD
         BAS   R9,SELECT               GO SEE IF RECORD DESIRED
         CLI   DESIRED,1               IS IT DESIRED?
         BNE   MAINLINE                NO
         BAS   R9,FORMAT               YES, FORMAT FOR OUTPUT
         BAS   R9,OUTPUT               THEN WRITE TO OUTPUT
         B     MAINLINE                LOOP THRU INPUT FILE
*********************************************************************
*             RECORD SELECTION ROUTINE                              *
*********************************************************************
SELECT   ST    R9,S9                   SAVE RETURN ADDRESS
         MVI   DESIRED,0               RESET SWITCH
         CLC   MRMEM,MRCSECT           MEMBER NAME = CSECT NAME?
         BNE   SXIT                    NO, SUB PROGRAM
*        CLI   MRCRMODE,C'2'           CSECT RMODE=24?
*        BNE   SXIT                    NO
         CLC   MRTYPE,=C'AR'           ASSEMBLER?
         BE    SETWANT                 YES
         CLC   MRTYPE,=C'UR'           USER DEFINED ASSEMBLER?
         BE    SETWANT                 YES
         CLI   MRTYPE,C'N'             UNKNOWN?
         BNE   SXIT                    NO
SETWANT  MVI   DESIRED,1               SHOW RECORD DESIRED
SXIT     L     R9,S9                   GET RETURN ADDRESS
         BR    R9                      EXIT
*********************************************************************
*             FORMAT ROUTINE                                        *
*********************************************************************
FORMAT   ST    R9,F9                   SAVE RETURN ADDRESS
         MVC   PRMEM,MRMEM             MEMBER NAME
         MVC   MODE,MRMAMODE           SET MODE FOR CONVERSION
         BAS   R9,CONVMODE             GO CONVERT MODE
         MVC   PRMAMODE,LITMODEL       MEMBER AMODE
         MVC   MODE,MRMRMODE           SET MODE FOR CONVERSION
         BAS   R9,CONVMODE             GO CONVERT MODE
         MVC   PRMRMODE,LITMODER       MEMBER RMODE
         MVC   PRCSECT,MRCSECT         CSECT NAME
         MVC   MODE,MRCAMODE           SET MODE FOR CONVERSION
         BAS   R9,CONVMODE             GO CONVERT MODE
         MVC   PRCAMODE,LITMODEL       CSECT AMODE
         MVC   MODE,MRCRMODE           SET MODE FOR CONVERSION
         BAS   R9,CONVMODE             GO CONVERT MODE
         MVC   PRCRMODE,LITMODER       CSECT RMODE
         MVC   PRTYPE,MRTYPE           CSECT TYPE
         MVC   PRUSRDAT,MRUSRDAT       FROM LIBRARY INDICATOR
FXIT     L     R9,F9                   GET RETURN ADDRESS
         BR    R9                      EXIT
*********************************************************************
*             OUTPUT ROUTINE                                        *
*********************************************************************
OUTPUT   ST    R9,O9                   SAVE RETURN ADDRESS
         PUT   PRINT1,PRTLINE          WRITE PRINT LINE
         PUT   OUTPUT1,MACHINER        WRITE OUTPUT RECORD
OXIT     L     R9,O9                   GET RETURN ADDRESS
         BR    R9                      EXIT
*********************************************************************
*             END OF JOB                                            *
*********************************************************************
EOJ      CLOSE INPUT1                  CLOSE INPUT FILE
         CLOSE OUTPUT1                 CLOSE OUTPUT FILE
         CLOSE PRINT1                  CLOSE PRINT FILE
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         L     R14,12(R13)             RESTORE RETURN REG: R14
         L     R15,RETCODE             SET RETURN CODE
         LM    R0,R12,20(R13)          RESTORE CALLER'S REGS 0-12
         BR    R14                     RETURN
*********************************************************************
*        AMODE/RMODE CONVERSION ROUTINE                             *
*********************************************************************
CONVMODE ST    R9,CM9                  SAVE RETURN ADDRESS
         MVC   LITMODE,BLANKS          CLEAR CONVERSION AREA
         LA    R1,MODETABL             POINT TO TABLE
CVCKEND  CLI   0(R1),X'FF'             END OF TABLE?
         BE    CVXIT                   YES
         CLC   0(1,R1),MODE            THIS THE RIGHT ENTRY?
         BE    CVXIT                   YES
         LA    R1,7(R1)                NO, STEP TO NEXT ENTRY
         B     CVCKEND CONTINUE SEARCH
CVXIT    MVC   LITMODE,1(R1)           MOVE CONVERTED LITERALS
         L     R9,CM9                  GET RETURN ADDRESS
         BR    R9                      EXIT
*********************************************************************
*        STORAGE AND FILE AREAS                                     *
*********************************************************************
DBLWD    DC    D'0'                    DOUBLEWORD WORK AREA
RETCODE  DC    F'0'                    RETURN CODE
CM9      DC    A(0)                    CONVMODE RETURN ADDRESS
S9       DC    A(0)                    RETURN ADDRESS FOR SELECT
F9       DC    A(0)                    RETURN ADDRESS FOR FORMAT
O9       DC    A(0)                    RETURN ADDRESS FOR OUTPUT
DESIRED  DC    X'00'                   RECORD SELECTION SWITCH
MODE     DC    CL1' '                  MODE TO BE CONVERTED
LITMODE  DS    0CL6                    MODE LITERALS
LITMODEL DS    CL3                       LEFT SIDE
LITMODER DS    CL3                       RIGHT SIDE
*
MODETABL DS    0CL7                    AMODE/RMODE CONVERSION TABLE
         DC    C'AANYANY'
         DC    C'2 2424 '
         DC    C'3 3131 '
         DC    X'FF',CL6' '
*
BLANKS   DC    CL256' '                BLANKS
*
PRTLINE  DS    0CL133                  PRINT LINE
PCC      DS    CL1                     CARRIAGE CONTROL
PRT      DS    0CL132
PRMEM    DS    CL8                     MEMBER NAME
         DC    CL1' '
PRMAMODE DS    CL3                     MEMBER AMODE
         DC    CL1'/'
PRMRMODE DS    CL3                     MEMBER RMODE
         DC    CL1' '
PRCSECT  DS    CL8                     CSECT NAME
         DC    CL1' '
PRCAMODE DS    CL3                     CSECT AMODE
         DC    CL1'/'
PRCRMODE DS    CL3                     CSECT RMODE
         DC    CL1' '
PRTYPE   DS    CL2                     CSECT TYPE
         DC    CL1' '
PRUSRDAT DS    CL4                     LIBRARY ABBREV.
         DC    CL91' '
*********************************************************************
* COPIED FROM: SPP.EDGE.USERCODE.PDS(MRRECBAL)                      *
*        MACHINE FRIENDLY OUTPUT RECORD - WRITTEN TO DD-MACHINE     *
*        200 BYTE FORMAT - EFFECTIVE WITH 1997/04A PRODUCT VERSION  *
*        LATEST UPDATE 06/15/1998 MOVE FORWARD FROM DEVELOPMENT     *
*        COPYRIGHT 1994 - 1998 RWS                                  *
*********************************************************************
MACHINER DS    0CL200              CURRENT  SIZE OF RECORD     04/1997
MRRECLEN EQU   200                 EQUATE FOR CURRENT REC LEN  04/1997
**       FIRST 41 BYTES OF RECORD - REMAINS THE SAME AS EARLIER
**                                  RECORD DEFINITIONS WITH 4/1997 CHG
MRMEM    DS    CL8                 MEMBER NAME FROM COBRD07
MRMAMODE DS    CL1                 AMODE OF THE MODULE (PRIM EP)
MRMRMODE DS    CL1                 RMODE OF THE MODULE
MRCSECT  DS    CL8                 CSECT NAME  FROM CSFMT01
*        THE FOLLOWING FIELDS ADDED 07/1993 RW - DATA FROM TRANSLATOR
*        IDR RECORDS
MRCOMPID DS    CL10                TRANSLATOR ID FROM IDR RECORD
*                                  NOMINALLY WILL BE COMPILER NAME
*                                  AND VERSION INFORMATION
*                                  5734-PL1
MRCOMPVM DS    CL4                 VERSION / MOD OF COMPILER
*                                  0501
MRCOMPDT DS    CL5                 TRANSLATION DATE
*                                  93189
*                                  YY ONLY, SOURCE IS IDR YYDDD
*                                  USE FIXED WINDOW OF 1968 FOR YYYY
*        END OF 07/1993 CHANGES
MRCAMODE DS    CL1                 AMODE OF CSECT
*                                  C' ' = PRE XA  C'A' = AMODE(ANY)
*                                  3 = AMODE(31), 2 = AMODE(24)
MRCRMODE DS    CL1                 RMODE OF CSECT
*                                  C'2' = PRE XA OR RMODE(24)
*                                  C'A' = RMODE(ANY)
MRTYPE   DS    CL2                 COMPILER TYPE FROM CSFMT01
*                                  NOTE:  USE PDOM FOR LATEST VALUES
*                                  VALUES ....
*                                               AR=ASSEMBLER
*                                               CC=CICS INTERFACE
*                                               CI=IBM C/370
*                                               CL=LATTICE C
*                                               CM=COMMON BLOCK
*                                               CR=COBOL RUNTIME
*                                               CS=SAS-C
*                                               C2=VS COBOL II
*                                               C3=COBOL 370
*                                               DI=DB2 INTERFACE
*                                               FG=FORTRAN G / G1
*                                               FH=FORTRAN H / H - EXT
*                                               FR=FORTRAN RUNTIME
*                                               FV=VS FORTRAN
*                                               II=IMS INTERFACE
*                                               NA=NOT ANALYZED (OVLY)
*                                               NR=NOT RECOGNIZED
*                                               PM=PLI FOR MVS + VM
*                                               PR=PL/I RUNTIME
*                                               P1=PLI V1
*                                               P2=PLI V2
*                                               UR=USER RECOG ASSEM.
*                                               VO=ANSI V2/V3 COBOL
*                                               VS=OS/VS COBOL
*                                               V4=OS/VS COBOL
**       END OF 1ST 41 BYTE SECTION - FIELDS PRIOR TO THIS
*                                     DID NOT CHANGE OR MOVE 04/1997
**
MRREST   DS    0CL159           INTERNAL USE ONLY - BLANK OUT REST
*                               OF RECORD DURING GENERATION
**       SECOND PORTION OF NEW FORMAT MACHINE RECORD
**       27 BYTE FIXED FORMAT AREA
**       POSITIONS 42 THRU 68 OF THE RECORD
**       FORMERLY AT THE 'END' OF THE MACHINE RECORD
**       NOW STARTS AFTER 'COMMON' MACHINE RECORD FIELDS
**       SYMBOLIC NAMES FOR FIELDS AND DESCRIPTIONS HAVE NOT CHANGED
**       ONLY LOCATION MOVED 04/1997 WITH 1997/04A RELEASE
**
*        THE FOLLOWING FIELD REDEFINED TO SUPPORT SYSTEM DATE      */
*        REQUESTS.  SEE PDOM FOR DETAILS.                          */
MRTIMEDT DS    C          1 = CONTAINS TIME SVC PATTERN   */
*                         2 = CONTAINS STCK INSTRUCTION   */
*                         3 = CONTAINS BOTH               */
*                         4 = COBOL ACCEPT...DATE/TIME/DAY*/
*                         9 = COBOL ACCEPT... OTHER       */
*        THE FOLLOWING FIELD PROVIDES LOAD MODULE ATTRIBUTES    */
MRLMATTR DS    C                REUS, RENT, OVLY (SEE PDOM FOR DETAIS)
*                    OVERLAY = 8
*                    REUS    = 1
*                    RENT    = 2
*                    RENT+REUS = 3
*                    DEFAULT = ' '
MREPNAME DS    CL8              ENTRY POINT SYMBOL FOR MODULE 12/1993
*        FIELDS ADDED 03/1994 IN EXISTING SPARE SPACE
MRCSSIZE DC    CL8'12345678'    CSECT SIZE IN DISPLAY DECIMAL FMT
*                               16000000 E.G.
MRUSRDAT DC    CL4'    '        DATA FROM /U PARM VALUE
MRDATLKD DC    CL5'YYDDD'       DATE OF LINKEDIT OF COMPOSITE MODULE
*                               WHY ONLY YY?  IDR (SOURCE OF THIS)
*                               HAS ONLY YYDDD - USE FIXED WINDOW
*                               TO INTERPRET THIS AS YYYY 68 UP = 19XX
*                               00 - 67 = 20XX
**
**       END OF SECOND BLOCK OF MACHINE RECORD
**
*        THE FOLLOWING AREA IS MAPPED DEPENDING ON MRTYPE
**       THIS IS THE THIRD LOGICAL PORTION OF THE MACHINE RECORD
**       IT WAS RELOCATED TO THE END OF THE MACHINE RECORD 04/1997
**       TO ALLOW FOR EASIER ADDITION OF ANY FUTURE FIELDS
**       NO FIELDS WERE RENAMED IN THE RE-ORGANIZATION OF THE RECORD
**       FOR THE MOST PART FIELDS ARE UNIQUE TO THE MRTYPE VALUE
**       OF THE CURRENT CSECT, FOR EXAMPLE THE C2 FIELDS ARE IN
**       USE FOR VS COBOL, COBOL/370 AND COBOL FOR MVS AND VM
**       CSECTS, BUT ARE NOT USED FOR PL/I CSECTS
**
MRSUPINF DS    0CL10               SUPPLEMENTARY INFORMATION FOR
*                                    LIBRARY IDENTIFICATION, ETC.
MRC2VER  DS    CL6                 COMPILER VERSION FROM SIGNATURE
MRC2LVL  DS    CL4                 USER LVLINFO FROM SIGNATURE
MRC2DAT  DS    0CL9                DATE COMPILED FROM SIGNATURE
MROCDATE DS    0CL8                ALSO FROM CAPEX OPT ON OS/VS AND V4
MROCDTMM DS    CL2                 MM PORTION OF DATE
         DS    C                   C'/'
MROCDTDD DS    CL2                 DD PORTION OF DATE
         DS    C                   C'/'
MROCDTYY DS    CL2                 YY PORTION OF DATE
         DS    C
MRC2TIM  DS    CL8                 TIME COMPILED FROM SIGNATURE
*        THE FOLLOWING FIELDS HAVE BEEN EXPANDED FROM ONE BIT
*        IN THE SIGNATURE TO 1 BYTE EACH HERE.
MRC2ADV  DS    C                   ADV    1 = YES, 0 = NO
MRC2QUOT DS    C                   QUOTE  0 = QUOTE, 1 = APOST
MRC22431 DS    C                   DATA24 0 = DATA24, 1 = DATA31
MRC2DECK DS    C                   DECK   0 = NODECK, 1 = DECK
MRC2DUMP DS    C                   DUMP   0 = NODUMP, 1 = DUMP
MRC2DYNA DS    C                   DYNAM  0 = NODYNAM, 1 = DYNAM
MRC2FAST DS    C                   FASTSRT 0 = NOFASTSRT, 1 = FASTSRT
MRC2FDUM DS    C                   FDUMP  0 = NOFDUMP, 1 = FDUMP
MRC2LIB  DS    C                   LIB    0 = NOLIB, 1 = LIB
MRC2LIST DS    C                   LIST   0 = NOLIST, 1 = LIST
MRC2MAP  DS    C                   MAP    0 = NOMAP,  1 = MAP
MRC2NUM  DS    C                   NUM    0 = NONUM,  1 = NUM
MRC2OBJ  DS    C                   OBJ    0 = NOOBJ,  1 = OBJ
MRC2OFFS DS    C                   OFFSSET 0 = NOOFFSET, 1 = OFFSET
MRC2OPT  DS    C                   OPTIMIZ 0 = NOOPTIMIZ, 1 = OPTIMIZ
MRC2STDD DS    C                   DEFAULT DD = 0, OUTDD = 1
MRC2PFD  DS    C                   TRINARY INDICATOR NUMPROC
*                                  REL 1-2  0 = NOPFDSGN, 1 = PFDSGN
*                                  REL 3   0 = NUMNPFD, 1 = NUMPFD
*                                          2 = NUMMIG
MRC2RENT DS    C                   RENT 0 = NORENT, 1 = RENT
MRC2RES  DS    C                   RES  0 = NORES,  1 = RES
MRC2SEQ  DS    C                   SEQ  0 = NOSEQ,  1 = SEQ
MRC2SIZE DS    C                   SIZE 0 = SIZE(N), 1 = SIZE(MAX)
MRC2SOUR DS    C                   SOURCE 0 = NOSOURCE, 1 = SOURCE
MRC2SSRN DS    C                   SSRANGE 0 = NOSSRANGE, 1 = SSRANGE
MRC2TERM DS    C                   TERM  0 = NOTERM, 1 = TERM
MRC2TEST DS    C                   TEST  0 = NOTEST, 1 = TEST
MRC2TRUN DS    C                   TRINARY INDICATOR TRUNC
*                                  REL 1-2  0 = NOTRUNC, 1 = TRUNC
*                                  REL 3   0 = TRUNCOPT, 1 = TRUNC(STD)
*                                          2 = TRUNC(BIN)
MRC2RW   DS    C                   RESERVED WORD 0 = DEFAULT
*                                                1 = USERSPEC WORD
MRC2VBRE DS    C                   VBREF 0 = NOVBREF, 1 = VBREF
MRC2XREF DS    C                   XREF  0 = NOXREF,  1 = XREF
MRC2ZWB  DS    C                   ZWB   0 = NOZWB,   1 = ZWB
*                                  FOLLOWING ARE REL 3 + ONLY
MRC2CMP2 DS    C                   CMPR2 0 = NOCMPR2  1 = CMPR2
MRC2NAME DS    C                   NAME  0 = NONAME   1 = NAME
MRC2NMCL DS    C                   NMCL  0 = NMCLPRI  1 = NMCLALT
MRC2DBCS DS    C                   DBCS  0 = NODBCS   1 = DBCS
MRC2AWO  DS    C                   AWO   0 = NOAWO    1 = AWO
MRC3EVE  DS    CL01             COBOL/370 EVENT OPTION        04/1994
*                                  0 = NOEVENT  1 = EVENT
MRC3CUR  DS    CL01             COBOL/370 CURRENCY OPTION     04/1994
*                                  0 = NOCURRENCY  1 = CURRENCY
MRC3RMOD DS    CL1      COBOL/370 RMODE FLAG 0 = RMODE(24) 1 = RMODEANY
*        02/1998 MRC3RSV1 AND MRC3RSV2 USED TO SUPPORT COBOL FOR OS/390
MRC3PGMN DS    C        PGMNAME VALUE 0 = COMPAT
*                                     1 = LONGMIXED, 2 = LONGUPPER
MRC3INTD DS    C        INTDATE VALUE 0 = ANSI, 1 = LILIAN
*        FOLLOWING SPARES USED 05/1998 FOR MORE FEATURES
*RC3RSV3 DS    C        FORMERLY
MRC3CLAS DS    C        IS COMPILATION A PROGRAM 0, OR CLASS 1
*RC3RSV4 DS    C        FORMERLY
MRC3DATP DS    C        DATEPROC      0 = NO, 1 = YES
* END OF FOLLOWING SPARES USED 05/1998 FOR MORE FEATURES
*        END OF 05/10/1997 ADDITIONS
*        THE FOLLOWING FIELD APPLIES TO VS COBOL II, V4 AND OS/VS COBOL
MRCOBSM  DS    C                SORT OR MERGE FOUND =1 ELSE 0
*                               ALL SORTS OR MERGES FOUND FOR COBOL II
*                               ALL SORTS OR MERGES FOUND FOR COBOL370
*                               SORTS AND MERGES FOUND FOR V4 AND OS/VS
*                               ONLY IF COMPILED WITH RES
MRCOBDC  DS    CL01     COBOL DYNAMIC CALLS FOUND IN MODULE    6/1994
*                       0=   NO DYNAMIC CALLS FOUND IN MODULE
*                       1=   CALL LITERAL FORCED DYANMIC FOUND
*                       2=   CALL DATANAME               FOUND
*                       3=   CALL LITERAL FORCED + CALL DATANAME
*                       4=   CAPEX OPTIMIZER CALL ADDER
*                            REALLY CODES 5, 6 AND 7
*        CAPEX OPT      5=   CALL LITERAL FORCED DYANMIC FOUND
*        CAPEX OPT      6=   CALL DATANAME               FOUND
*        CAPEX OPT      7=   CALL LITERAL FORCED + CALL DATANAME
*        THE FOLLOWING FIELDS RELATE TO VERSION 4 AND OS/VS COBOL
MROCSYMD DS    C                SYMDUMP 0 = NOSYMDUMP, 1 = SYMDUMP
MROCFLOW DS    C                FLOW    0 = NOFLOW, 1 = FLOW
MROCSTAT DS    C                STATE   0 = NOSTATE, 1 = STATE
MROCTEST DS    C                TEST    0 = NOTEST, 1 = TEST
MROCRES  DS    C                RES     0 = NORES, 1 = RES
MROCENDJ DS    C                ENDJOB  0 = NOENDJOB, 1 = ENDJOB
MROCO370 DS    C                OBJ370  0 = OBJ360, 1 = OBJ370
MROCCOPT DS    C                COMPILER OPTIMIZED 0 = NO, 1 = YES
MROCCAOP DS    C                CAPEX / CA OPTIMIZED 0 = NO, 1 = YES
MROCCDET DS    C                CAPEX / CA DTECT 0 = NO, 1 = YES
*        THE FOLLOWING ARE OS/VS ONLY OPTIONS
MROCCOUN DS    C                COUNT OPTION  0 = NO, 1 = YES
MROCTRAC DS    C                TRACE OPTION  0 = NO, 1 = YES
MROCLLVL DS    C                LANGLEVEL 1 = 1, 2 = 2
*        ADDED 05/10/1997 NEWLY RECOVERED ARTIFACT
MROCSYSO DS    C                TAIL LETTER OF SYSOU DDNAME
*                  NEXT 2 FIELDS MODIFIED 2000/07A
MRC3TSTS DS    C   TEST(*,SYM,X) 0 = NOSEPARATE, 1 = SEPARATE
*MROCRSV1 DS   C   FORMERLY     RESERVED
MRC3ARTH DS    C   ARITH:        0 = EXTEND,     1 = NOEXTEND
*MROCRSV2 DS   C   FORMERLY     RESERVED
MROCRSV3 DS    C   RESERVED     POTENTIAL ADDITIONAL ARTIFACT (FUTURE)
*        END OF 05/10/1997 ADDITIONS
*        PL/I V2 COMPILE TIME ARTIFACTS ADDED 3/1994
MRP2MAIN DS    CL1      1=OPTIONS (MAIN) / 0 = NOT SO  1
MRP2ORDE DS    CL1      0=NOREORD / 1=REORDER          2
MRP2EXEC DS    CL1      1=EXECOPS / 0=NOEXECOPS        3
MRP2CMPA DS    CL1      2=CMPAT(V2) / 1=CMPAT(V1)      4
MRP2GRAP DS    CL1      1=GRAPHIC / 0=NOCHGRAP         5
MRP2OPT  DS    CL1      1=OPT / 0=NOOPT                6
MRP2INTE DS    CL1      1=INTER / 0=NOINTER            7
MRP2FLOW DS    CL1      1=FLOW / 0=NOFLOW              8
MRP2COUN DS    CL1      1=COUNT / 0=NOCOUNT            9
MRP2TEST DS    CL1      1=TEST / 0=NOTEST             10
*                       SUB-OPTIONS OF TEST ARE NOT SHOWN
MRP2SYST DS    CL1      SYSTEM (CMS, CMSTP, MVS, TSO, CICS) 11   1
*                       1=CMS,  2=CMSTP, 3=MVS, 4=TSO, 5=CICS, 6=IMS
*        THE FOLLOWING LONELY FIELD IS COMMON TO PL/I V1, V2, AND
*                                                PL/I FOR MVS AND VM
MRP2CSTY DS    CL1      PLI CSECT TYPE
*                       1=COMPILER GENERATED RUNTIME CSECT
*                       2=EXTERNAL DATA CSECT
*                       3=STATIC   DATA CSECT
*                       4=CODE          CSECT
MRSPARE  DS   0CL32     FOR NOW - SOME SPARE SPACE
*        RESERVED FOR CUSTOM FEATURES AND EXPANSION
*            SPECIAL USAGES OF MRSPARE:
*            OS/VS COBOL PROGRAMS
*              - PARM='/6' USES THESE 32 BYTES TO SAVE THE BEGINNING
*                OF WORKING STORAGE FOR OS/VS COBOL PROGRAMS.
*              - PARM='/7' USES THE FIRST 21 BYTES TO SAVE THE START OF
*                OF WORKING STORAGE FOR OS/VS COBOL PROGRAMS.
*            VS COBOL II PROGRAMS - CSECT = IGZEOPT
*              - PARM='/1' STORES THE RUNTIME OPTIONS FROM IGZEOPT
*                IN THESE 32 BYTES.
*            COBOL FOR MVS AND COBOL FOR OS/390
*              - IF MILLENIUM LANGUAGE EXTENSIONS ARE ACTIVE, THE LAST
*                FOUR BYTES WILL CONTAIN THE YEAR WINDOW VALUE.
MRRESRV  DS    CL28  RESERVED SPACE, EXCEPT AS ABOVE.
MRYRWIND DS    CL4   IF MLE ACTIVE:  YEARWINDOW  (MRTYPE=C3)
*                       YYYY = FIXED WINDOW, -0NN = SLIDING WINDOW
*        END OF MRRECBAL RECORD DESCRIPTION
*
         ORG
*********************************************************************
*             DCB'S                                                 *
*********************************************************************
OUTPUT1  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT1,                       X
               RECFM=FB,LRECL=200
PRINT1   DCB   DSORG=PS,MACRF=PM,DDNAME=PRINT1,                        X
               RECFM=FBA,LRECL=133
INPUT1   DCB   DSORG=PS,MACRF=GM,DDNAME=INPUT1,EODAD=EOJ,              X
               RECFM=FB,LRECL=200
         LTORG
STRIPEDG CSECT
*********************************************************************
*             REGISTER EQUATES                                      *
*********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
