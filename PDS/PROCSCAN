         PRINT NOGEN
         TITLE '*****PROCSCAN: SCAN ENDEVOR PRC2LIST FOR COMPILERS ***'
PROCSCAN CSECT
PROCSCAN AMODE 31
PROCSCAN RMODE 24
***********************************************************************
* SCANS THE ENDEVOR PROCESSOR LIBRARY EADMIN.ENDEVOR.PRC2LIST WHICH   *
* IS A RECFM=VBA,LRECL=137 PDS. EACH MEMBER IS SCANNED FOR PGM=. WHEN *
* FOUND, THE OPERAND IS CHECKED FOR IKFCBL00, CPXUPTSM, IGYCRCTL,     *
* IEV90, ASMA90, OR IFOX00. WHEN ANY OF THESE ARE FOUND, AN OUTPUT    *
* RECORD WILL BE WRITTEN. ONCE FOUND, A FURTHER SEARCH IS MADE FOR    *
* //STEPLIB IN THE SAME STEP. THE OUTPUT RECORD WILL CONTAIN THE      *
* MEMBER (ENDEVOR PROCESSOR) NAME, PROGRAM NAME ON THE PGM= STATEMENT,*
* A COMPILER DESCRIPTOR, IF POSSIBLE, AND THE STEPLIB DSNAME. IF NO   *
* STEPLIB IS USED, THE LNKLST LIBRARY FOR THE PROGRAM WILL BE USED    *
* IF POSSIBLE.                                                        *
*                                                                     *
* THE OUTPUT1 FILE MUST HAVE RECFM=FB,LRECL=80, WHICH IS HARD-CODED.  *
*                                                                     *
* AUTHOR R THORNTON OCT 1986                                          *
***********************************************************************
*********************************************************************
*        SAVE REGISTERS, SET UP BASE REGS, CHAIN SAVE AREAS         *
*********************************************************************
         USING PROCSCAN,R3,R4
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)             SET UP SECOND
         LA    R4,1(R4)                    BASE REGISTER
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     OPENS                   BRANCH AROUND CONSTANTS
         DC    CL8'PROCSCAN'           PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
***********************************************************************
* INITIALIZATION: OPEN INPUT AND OUTPUT FILES. LOAD THE PGMTBL TABLE  *
* FROM THE COMPILRS FILE.                                             *
***********************************************************************
OPENS    OPEN  (OUTPUT1,OUTPUT,COMPILRS) OPEN FILES
         CALL  READDIR,OPEN            OPEN DIRECTORY FILE
         CALL  READVMEM,OPEN           OPEN MEMBER FILE
         LA    R12,PGMTBL              POINT TO TABLE FILE
         LA    R11,PGTBEND             POINT TO END OF TABLE
TBLOAD   GET   COMPILRS                READ A COMPILER RECORD
         CLI   0(R1),C'*'              COMMENT RECORD?
         BE    TBLOAD                  YES, GO READ AGAIN
         MVC   0(L'PGMTBL,R12),0(R1)   MOVE ENTRY TO TABLE
         LA    R12,L'PGMTBL(R12)       STEP TO NEXT ENTRY
         CR    R12,R11                 PAST END OF TABLE?
         BL    TBLOAD                  NO, CONTINUE LOADING
         WTO   'PROCSCAN: TOO MANY COMPILER ENTRIES, TABLE FULL',      X
               ROUTCDE=11
         ABEND 444,DUMP                TERMINATE IN ERROR
ENDCOMP  MVC   0(8,R12),=XL8'FFFFFFFFFFFFFFFF' SET TABLE STOPPER
***********************************************************************
* MAINLINE PROCESSING: LOCATE THE NEXT MEMBER IN THE INPUT PDS AND    *
* POSITION TO IT. READ RECORDS TO END OF MEMBER, REPEATING UNTIL      *
* THERE ARE NO MORE MEMBERS. FOR EACH RECORD READ, SCAN FOR PGM=.     *
* IF FOUND CHECK FOR ONE OF THE COMPILER PROGRAM NAMES: ASMA90, IEV90,*
* IFOX00, IGYCRCTL, CPXUPTSM, OR IKFCBL00. IF ANY OF THESE ARE FOUND, *
* SET THE FOUND SWITCH, SAVE THE MEMBER AND PROGRAM NAMES AND SWITCH  *
* TO SEARCH FOR //STEPLIB BEFORE THE NEXT EXEC STATEMENT. IF THAT IS  *
* FOUND, SAVE THE ASSOCIATED DSNAME. AT END OF MEMBER, IF THE FOUND   *
* SWITCH IS SET, BUILD AND WRITE AN OUTPUT RECORD.                    *
***********************************************************************
NEWMEM   MVC   OUTREC,BLANKS           CLEAR OUTPUT RECORD AREA
         MVI   SRCHSL,0                RESET STEPLIB SEARCH FLAG
         CALL  READDIR,(READ,DIRECTRY) READ NEXT DIRECTORY ENTRY
         CLI   MEMNAME,EOF             END OF FILE
         BE    EOJ                     YES, STOP RUN
         MVC   FINDNAM,MEMNAME         NAME TO FIND LIST
         CALL  READVMEM,FIND           LOCATE MEMBER
         CLI   FINDNAM,0               MEMBER FOUND
         BE    NEWMEM                  NO, TRY NEXT MEMBER
         MVC   OUTMEM,MEMNAME          MEMBER NAME TO OUTPUT RECORD
READMEM  CALL  READVMEM,(READ,MEMRECAD) READ NEXT RECORD IN MEMBER
         L     R11,MEMRECAD            GET RECORD ADDRESS
         CLI   MEMRECAD,EOF            IS IT EOF
         BE    ENDMEM                  YES, GO CHECK FOR OUTPUT
         LR    R12,R11                 COPY RECORD START ADDRESS
         AH    R12,0(R12)              COMPUTE END OF RECORD ADDRESS
         LA    R11,4(R11)              GET RECORD DATA ADDRESS - 1
FINDJCL  LR    R10,R12                 COMPUTE
         SR    R10,R11                    REMAINING
         SH    R10,H13                       LENGTH FOR EXECUTE
         BM    READMEM                 NO MORE TO SCAN, GO READ AGAIN
         EX    R10,EXSLSL              SCAN FOR JCL RECORD
         BZ    READMEM                 NONE FOUND, GO READ AGAIN
         LA    R11,2(R1)               POINT PAST THE //
         CLI   1(R1),C'/'              IS IT SLASH-SLASH?
         BNE   FINDJCL                 NO, CONTINUE // SEARCH
         CLI   0(R11),C'*'             JCL COMMENT RECORD?
         BE    READMEM                 YES, IGNORE IT
GOTJCL   CLI   SRCHSL,0                AM I LOOKING FOR STEPLIB?
         BNE   CHKSTLB                 YES
FINDEXEC LR    R10,R12                 COMPUTE
         SR    R10,R11                    REMAINING LENGTH
         SH    R10,H8                         FOR EXECUTE
         BM    READMEM                 NO MORE TO SCAN, GO READ AGAIN
         EX    R10,EXEX                SCAN FOR EXEC
         BZ    READMEM                 NONE FOUND, GO READ AGAIN
         LA    R11,1(R1)               STEP PAST THE X
         CLC   1(3,R1),=CL3'EC '       FOUND EXEC KEYWORD?
         BNE   FINDEXEC                NO, CONTINUE SCAN
         CLI   SRCHSL,1                AM I LOOKING FOR STEPLIB?
         BE    ENDMEM                  YES, NOT FOUND
GOTEXEC  LA    R11,3(R11)              STEP PAST EXEC
FINDPGM  LR    R10,R12                 COMPUTE
         SR    R10,R11                      REMAINING LENGTH
         SH    R10,H5                          FOR EXECUTE
         BM    READMEM                 NO MORE TO SCAN, GO READ AGAIN
         EX    R10,EXPG                SCAN FOR PGM=
         BZ    READMEM                 NONE FOUND, GO READ AGAIN
         LA    R11,1(R1)               STEP PAST THE P
         CLC   1(3,R1),=CL3'GM='       FOUND THE PGM= KEYWORD?
         BNE   FINDPGM                 NO, CONTINUE SCAN
         MVC   OUTPGM,BLANKS           YES, CLEAR PROGRAM NAME
         LA    R12,OUTPGM              YES, POINT TO OUTPUT PGMNAME
         LA    R1,4(R1)                POINT TO START OF PGM= NAME
         LA    R10,8                   MAX NAME LENGTH
         MVI   VALCHAR+C'.',X'00'      SET PERIOD AS INVALID
MVPGNM   TRT   0(1,R1),VALCHAR         VALID NAME CHARACTER?
         BZ    STPGLU                  NO, ALL MOVED
         MVC   0(1,R12),0(R1)          YES, MOVE CHARACTER TO NAME
         LA    R1,1(R1)                STEP TO NEXT CHAR
         LA    R12,1(R12)              STEP TO NEXT CHAR
         BCT   R10,MVPGNM              LOOP TO MOVE THE NAME
STPGLU   LA    R1,PGMTBL               POINT TO COMPILER PROGRAM TABLE
PGMLKUP  CLI   0(R1),X'FF'             END OF TABLE?
         BE    NOTCOMP                 YES, NOT A COMPILER PROGRAM
         CLC   OUTPGM,0(R1)            FOUND THE TABLE ENTRY?
         BE    ISCOMP                  YES
         LA    R1,L'PGMTBL(R1)         STEP TO NEXT ENTRY
         B     PGMLKUP                 LOOP THRU TABLE
NOTCOMP  MVC   OUTPGM,BLANKS           CLEAR PROGRAM NAME IN OUTPUT
         B     READMEM                 GO READ NEXT RECORD
ISCOMP   MVC   OUTCOMP(56),8(R1)       MOVE DESCRIPTOR, FLAG, DSNAME
         MVI   SRCHSL,1                SHOW SEARCH NOW FOR STEPLIB
         B     READMEM                 GO READ NEXT RECORD
CHKSTLB  CLI   SRCHSL,1                SEARCHING FOR STEPLIB?
         BNE   FINDDSN                 NO, FOR DSN=
         CLC   0(7,R11),=CL7'STEPLIB'  THIS A STEPLIB RECORD?
         BNE   FINDEXEC                NO
FINDDSN  LR    R10,R12                 COMPUTE
         SR    R10,R11                     REMAINING LENGTH
         BCTR  R10,0                           FOR EXECUTE
         BM    ENDMEM                  NO MORE TO SCAN, NO DSN= FOUND
         EX    R10,EXDS                SCAN FOR DSN=
         BNZ   SPTD                    NONE FOUND, NO DSN= IN RECORD
         CLI   SRCHSL,2                SEARCHING FOR DSNAME?
         BE    ENDMEM                  YES, WASN'T FOUND
         MVI   SRCHSL,2                SHOW SEARCH NOW FOR DSN
         B     READMEM                 GO READ AGAIN
SPTD     LA    R11,1(R11)              STEP PAST THE D
         CLC   1(3,R1),=CL3'SN='       FOUND THE DSN= KEYWORD?
         BNE   FINDDSN                 NO, CONTINUE SCAN
         MVC   OUTFLAG,C'*'            SHOW STEPLIB FOUND
         MVC   OUTDSN,BLANKS           YES, CLEAR DSNAME
         LA    R12,OUTDSN              POINT TO OUTPUT DSNAME
         LA    R1,4(R1)                POINT TO START OF DSN= NAME
         LA    R10,44                  MAX DSN= LENGTH
         MVI   VALCHAR+C'.',C'.'       SET PERIOD AS VALID
MVDSNM   TRT   0(1,R1),VALCHAR         VALID NAME CHARACTER?
         BZ    STDSLU                  NO, ALL MOVED
         MVC   0(1,R12),0(R1)          YES, MOVE CHARACTER TO NAME
         LA    R1,1(R1)                STEP TO NEXT CHAR
         LA    R12,1(R12)              STEP TO NEXT CHAR
         BCT   R10,MVDSNM              LOOP TO MOVE THE NAME
STDSLU   LA    R1,PGMTBL               POINT TO TABLE
DSNSRCH  CLI   0(R1),X'FF'             END OF TABLE?
         BE    NODSN                   YES
         CLC   OUTDSN,20(R1)           FOUND DSNAME IN TABLE?
         BNE   DSNSTEP                 NO
         CLC   OUTPGM,0(R1)            FOR THIS PROGRAM?
         BE    ATDSN                   YES
DSNSTEP  LA    R1,L'PGMTBL(R1)         STEP TO NEXT ENTRY
         B     DSNSRCH                 LOOP THRU TABLE
NODSN    MVI   OUTFLAG,C'?'            SHOW DSN UNKNOWN
         MVC   OUTCOMP,=CL11'?'        SHOW COMPILER UNKNOWN
         B     ENDMEM                  GO WRITE OUTPUT RECORD
ATDSN    MVC   OUTCOMP(12),8(R1)       MOVE DESCRIP, FLAG
ENDMEM   CLI   OUTPGM,C' '             WAS A COMPILE STEP FOUND?
         BE    NEWMEM                  NO, THEN WE HAVE NO OUTPUT
         PUT   OUTPUT1,OUTREC          WRITE OUTPUT RECORD
         B     NEWMEM                  GO GET NEXT RECORD
EXSLSL   TRT   0(1,R11),TRTSLSL        EXECUTED TRANSLATE
EXEX     TRT   0(1,R11),TRTXEC         EXECUTED TRANSLATE
EXPG     TRT   0(1,R11),TRTPGM         EXECUTED TRANSLATE
EXDS     TRT   0(1,R11),TRTDSN         EXECUTED TRANSLATE
***********************************************************************
*        END OF INPUT FILE AND END OF JOB                             *
***********************************************************************
EOJ      CLOSE (OUTPUT1,,COMPILRS)     CLOSE FILES
         L     R13,4(R13)              GET CALLER'S SAVE ADDRESS
         LM    R14,R12,12(R13)         GET CALLER'S REGISTERS
         SR    R15,R15                 ZERO RETURN CODE
         BR    R14                     RETURN TO CALLER
***********************************************************************
*        STORAGE AND FILE AREAS                                       *
***********************************************************************
MEMRECAD DC    A(0)                    ADDRESS OF MEMBER RECORD
BLANKS   DC    CL137' '                CONSTANT BLANKS
EOF      EQU   X'FF'                   EOF INDICATOR
H13      DC    H'13'                   CONSTANT 13
H8       DC    H'8'                    CONSTANT 8
H5       DC    H'5'                    CONSTANT 5
SRCHSL   DC    X'00'                   SEARCHING FOR STEPLIB FLAG
*
OPEN     DC    CL9'OINPUT1'            OPEN PARAMETER LIST
READ     DC    C'R'                    READ PARAMETER
*
DIRECTRY DS    0CL11                   DIRECTORY DATA
MEMNAME  DS    CL8                     MEMBER NAME
MEMTTR   DS    XL3                     TTR OF FIRST BLOCK
*
FIND     DS    0CL10                   FIND MEMBER PARAMETER LIST
         DC    C'FN'                   FIND BY NAME
FINDNAM  DS    CL8                     NAME TO BE FOUND
*
OUTREC   DS    0CL80                   OUTPUT RECORD
OUTMEM   DC    CL8' '                     MEMBER NAME
OUTPGM   DC    CL8' '                     PROGRAM NAME FROM PGM=
OUTCOMP  DC    CL11' '                    COMPILER DESCRIPTOR
OUTFLAG  DC    CL1' '                     FLAG IF STEPLIB FOUND
OUTDSN   DC    CL44' '                    LIBRARY CONTAINING COMPILER
         DC    CL8' '
*
COMPILRS DCB   DSORG=PS,MACRF=GL,DDNAME=COMPILRS,EODAD=ENDCOMP,        X
               RECFM=FB,LRECL=80
*
OUTPUT1  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT1,                       X
               RECFM=FB,LRECL=80
*
*        TRT SCANNING TABLE TO FIND JCL RECORD
TRTSLSL  DC    256X'00'
         ORG   TRTSLSL+C'/'
         DC    C'/'
         ORG
*
*        TRT SCANNING TABLE TO FIND EXEC STATEMENT
TRTXEC   DC    256X'00'
         ORG   TRTXEC+C'X'
         DC    C'X'
         ORG
*
*        TRT SCANNING TABLE TO FIND PGM=
TRTPGM   DC    256X'00'
         ORG   TRTPGM+C'P'
         DC    C'P'
         ORG
*
*        TRT SCANNING TABLE TO FIND DSN=
TRTDSN   DC    256X'00'
         ORG   TRTDSN+C'D'
         DC    C'D'
         ORG
*
*        TRT SCANNING TABLE TO FIND VALID NAME CHARACTERS
VALCHAR  DC    256X'00'
         ORG   VALCHAR+C'#'
         DC    C'#'
         ORG   VALCHAR+C'@'
         DC    C'@'
         ORG   VALCHAR+C'$'
         DC    C'$'
         ORG   VALCHAR+C'.'
         DC    C'.'
         ORG   VALCHAR+C'A'
         DC    C'ABCDEFGHI'
         ORG   VALCHAR+C'J'
         DC    C'JKLMNOPQR'
         ORG   VALCHAR+C'S'
         DC    C'STUVWXYZ'
         ORG   VALCHAR+C'0'
         DC    C'0123456789'
         ORG
         LTORG
*
***********************************************************************
* PGMTBL ENTRY FORMAT:                                                *
* COL 01-08 PROGRAM NAME FOR THE COMPILER                             *
* COL 09-19 DESCRIPTIVE IDENTIFIER FOR THE COMPILER                   *
* COL   20  FLAG: BLANK IF THE FOLLOWING DSNAME IS LINKLISTED, * MEANS*
*           THE DSNAME MUST BE PROVIDED BY A STEPLIB DD               *
* COL 21-64 DSNAME OF THE LIBRARY CONTAINING THE COMPILER             *
***********************************************************************
PGMTBL   DS    50CL64                 PROGRAM NAME TABLE
PGTBEND  DC    XL8'FFFFFFFFFFFFFFFF'    END OF TABLE
*********************************************************************
*             REGISTER EQUATES                                      *
*********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
