         TITLE '*** TAPEHEAD:                          ***'
TAPEHEAD CSECT
*********************************************************************
* READS AND DISPLAYS TAPE HEADER INFORMATION. THE PARM FIELD OF THE *
* EXECUTE STATEMENT CONTAINS A NUMBER BETWEEN 1 AND 99 TO SPECIFY   *
* THE NUMBER OF INPUT TAPES.                                        *
*                                                                   *
* A TAPE DATASET IS DYNAMICALLY ALLOCATED AS 1,BLP, AND THE LABEL   *
* FILE IS OPENED. THE VOL1, HDR1, AND HDR2 RECORDS ARE READ AND USED*
* TO FORMAT A PRINT LINE. THE PROCESS IS REPEATED AS MANY TIMES AS  *
* SPECIFIED IN THE EXEC STATEMENT PARM FIELD.                       *
*                                                                   *
* R THORNTON OCT 1999                                               *
*********************************************************************
*
*********************************************************************
*        SAVE REGISTERS, SET UP BASE REGS, CHAIN SAVE AREAS         *
*********************************************************************
         USING TAPEHEAD,R3,R4
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)             SET UP SECOND
         LA    R4,1(R4)                    BASE REGISTER
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     BEGIN                   BRANCH AROUND CONSTANTS
         DC    CL8'TAPEHEAD'           PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
BEGIN    DS    0H                      BEGIN PROCESSING
*********************************************************************
*        PROCESS PARM FIELD                                         *
*********************************************************************
         L     R2,0(R1)                GET PARM FIELD ADDR
         CLC   0(2,R2),H0              ANY PARM DATA?
         BE    OPENS                   NO, CONTINUE
         CLC   0(2,R2),H2              VALID PARM LENGTH?
         BH    BADPARM                 NO, CONTINUE
         BL    PARM1BYT                ONE-BYTE PARM?
         B     PARM2BYT                NO, 2-BYTES
BADPARM  WTO   'TAPEHEAD: INVALID PARM ON EXEC STATEMENT',ROUTCDE=11
         ABEND 111,DUMP
PARM1BYT MVC   PARMDATA+1(1),2(R2)     SAVE PARM DATA
         B     TESTPARM                CONTINUE
PARM2BYT MVC   PARMDATA,2(R2)          SAVE PARM DATA
TESTPARM MVZ   TESTZ,PARMDATA          MOVE ZONES FOR TEST
         CLC   TESTZ,ZEROS             IS IT NUMERIC?
         BNE   BADPARM                 NO, ERROR
         PACK  LOOPS,PARMDATA          NUMBER TAPES TO REPORT ON
*********************************************************************
*        OPEN FILES, PRINT HEADING                                  *
*********************************************************************
OPENS    OPEN  (SYSPRINT,OUTPUT,SYSERRS,OUTPUT) OPEN PRINT FILES
         BAS   R9,HEADING              PRINT FIRST HEADING
*********************************************************************
*             MAINLINE ROUTINE                                      *
*********************************************************************
MAINLINE LA    R0,PARM1                CLEAR
         LA    R1,PARMSEND-PARM1           PARM
         SR    R15,R15                         FIELDS
         MVCL  R0,R14                             TO ZEROS
         MVC   PRMDDNAM,=CL8'SYSTAPE'  MOVE IN DD NAME
         MVC   PRMDSNAM,=CL44'TAPE.HEADER.LABEL' MOVE IN DSNAME
         MVC   PRMSTATS,=H'1'          DISP=(OLD,
         MVC   PRMNDISP,=H'8'                  KEEP,
         MVC   PRMCDISP,=H'8'                     KEEP)
         MVC   PRMUNIT,=CL8'671'       UNIT=CART
         MVC   PRMRECFM,=X'0080'       RECFM=F
         MVC   PRMLRECL,=H'80'         LRECL=80
         MVC   PRMBLKSZ,=H'80'         BLKSIZE=80
         MVC   PRMVLSER(4),=CL4'TAPE'  BUILD
         UNPK  PRMVLSER+4(2),COUNT       VOLUME
         OI    PRMVLSER+5,C'0'             SERIAL
         AP    COUNT,P1                INCREMENT COUNTER
         MVC   PRMDSSEQ,=X'0001'       LABEL=(1,
         MVC   PRMLABEL,=X'0010'                BLP)
         MVC   PRMDSORG,=X'4000'       DSORG=PS
         MVC   PRMEXPDT,=C'98000'      EXPDT=98000
         MVI   REQCODE,C'A'            REQUEST ALLOCATION.
         CALL  ALLOCDYN,(PARM1,PARM2)  ALLOCATE THE DATASET
         CLC   RETCODE,=C'00'          ANY ERROR?
         BE    GOODALOC                NO
         MVC   PRT(23),=CL23'***** ERROR ALLOCATING ' FORMAT ERROR
         MVC   PRT+23(6),PRMVLSER      VOLSER TO PRINT
         BAS   R9,PRINT                GO PRINT
         MVC   PRT(23),=CL23'***** ERROR ALLOCATING ' FORMAT ERROR
         MVC   PRT+23(6),PRMVLSER      VOLSER TO PRINT
         BAS   R9,ERRORS               GO PRINT
         MVC   PRT(19),=CL19'***** ERROR CODE = '
         MVC   PRT+19(4),ERRRET        MOVE ERROR RETURN CODE
         MVC   PRT+23(17),=CL17', ERROR MESSAGE: '
         MVC   PRT+40(71),ERRMSG       MOVE ERROR MESSAGE
         BAS   R9,ERRORS               GO PRINT
         MVC   PRT(18),=CL18'***** INFO CODE = '
         MVC   PRT+18(4),INFORET       INFO CODE
         MVC   PRT+22(16),=CL16', INFO MESSAGE: '
         MVC   PRT+38(71),INFOMSG      INFO MESSAGE
         BAS   R9,ERRORS               GO PRINT
         B     CHKFINI                 GO SEE IF ANY MORE
GOODALOC OPEN  TADCB                   TRY TO OPEN TAPE FILE
*        OI    TADCB+44,X'0C'          NEVER USE IOS ERROR RECOVERY
         TM    TADCB+48,X'10'          DID IT OPEN OK?
         BO    GOODOPEN                YES
         MVC   PRT(20),=CL20'***** ERROR OPENING ' FORMAT ERROR
         MVC   PRT+20(6),PRMVLSER      VOLSER TO PRINT
         BAS   R9,ERRORS               GO PRINT
GOODOPEN MVC   READCCW+1(3),=AL3(VOL1) SET READ CCW ADDRESS
         BAS   R9,EXCPREAD             GO READ FIRST TAPE FILE RECORD
         MVC   V1ECB,TAECB             SAVE ECB
         MVC   V1CSW,TACSW             SAVE CSW
         MVC   V1CCW,READCCW           SAVE CCW
         CLI   EXCPERR,1               ANY ERROR?
         BNE   CHKVOL1                 NOS
         MVC   PRT(35),=CL35'***** I/O ERROR IN HEADER FILE FOR '
         MVC   PRT+35(6),PRMVLSER      MOVE VOLSER
         BAS   R9,PRINT                GO PRINT
         B     MAINLINE                GO READ AGAIN
CHKVOL1  CLC   VOL1ID,=CL4'VOL1'       GOT A VOL1 RECORD?
         BNE   BADRECS                 NO
         MVC   READCCW+1(3),=AL3(HDR1) SET READ CCW ADDRESS
         BAS   R9,EXCPREAD             GO READ NEXT TAPE FILE RECORD
         MVC   H1ECB,TAECB             SAVE ECB
         MVC   H1CSW,TACSW             SAVE CSW
         MVC   H1CCW,READCCW           SAVE CCW
         CLI   EXCPERR,1               ANY ERROR?
         BE    BADRECS                 YES
         CLC   HDR1ID,=CL4'HDR1'       GOT A HDR1 RECORD?
         BNE   BADRECS                 NO
         MVC   READCCW+1(3),=AL3(HDR2) SET READ CCW ADDRESS
         BAS   R9,EXCPREAD             GO READ NEXT TAPE FILE RECORD
         MVC   H2ECB,TAECB             SAVE ECB
         MVC   H2CSW,TACSW             SAVE CSW
         MVC   H2CCW,READCCW           SAVE CCW
         CLI   EXCPERR,1               ANY ERROR?
         BE    BADRECS                 YES
         CLC   HDR2ID,=CL4'HDR2'       GOT A HDR2 RECORD?
         BE    GOODRECS                ALL GOOD RECORDS
BADRECS  MVC   PRT(41),=CL41'***** INVALID RECORDS IN HEADER FILE FOR '
         MVC   PRT+41(6),PRMVLSER      MOVE VOLSER
         BAS   R9,ERRORS               GO PRINT
         BAS   R9,EXCPDUMP             GO DUMP THE EXCP AREAS
         B     CLOSTAPE                GO CLOSE TAPE FILE
GOODRECS MVC   PVOLSER,V1VOLSER        VOLSER
         MVC   PDSN,H1DSN              DSNAME LAST 17 CHARS
         MVC   PDSSER,H1DSSER          DATASET SERIAL NBR
         MVC   PVOLSEQ,H1VOLSEQ        VOLUME SEQUENCE NBR
         MVC   PDSSEQ,H1DSSEQ          DATASET SEQ NBR
         MVC   PGENNO,H1GENNO          GENERATION NBR
         MVC   PVER,H1VER              VERSION
         CLC   PGENNO(7),BLANKS        ANY GENERATION/VERSION?
         BE    MVCRDT                  NO
         MVI   PV,C'V'                 YES, MOVE DELIMITER
MVCRDT   MVC   PCREDT,H1CREDT          CREATION DATE
         MVC   PEXPDT,H1EXPDT          EXPIRATION DATE
         MVC   PSEC,H1SEC              SECURITY CODE
         MVC   PBLKCT,H1BLKCT          BLOCK COUNT
         MVC   PRECFM,H2RECFM          RECFM
         MVC   PBLKSIZ,H2BLKSIZ        BLKSIZE
         MVC   PLRECL,H2LRECL          LRECL
         MVC   PDEN,H2DEN              DENSITY
         MVC   PJOB,H2JOB              JOB/JOBSTEP INFO
         MVC   PTRTCH,H2TRTCH          TAPE RECORDING TECHNIQUE
         MVC   PCNTRL,H2CNTRL          CONTROL CHARACTER
         MVC   PBKATR,H2BKATR          BLOCK ATTRIBUTE
         BAS   R9,PRINT                PRINT THE DATA LINE
CLOSTAPE CLOSE TADCB                   CLOSE THE TAPE FILE
CHKFINI  SP    LOOPS,P1                DECREMENT LOOP COUNTER
         BP    MAINLINE                LOOP UNTIL ZERO
         B     EOJ                     THEN QUIT
***********************************************************************
*        READ NEXT RECORD FROM THE INPUT TAPE.                        *
***********************************************************************
EXCPREAD ST    R9,ER9                  SAVE RETURN ADDRESS
         MVI   EXCPERR,0               RESET INDICATOR
         XC    TAECB,TAECB             CLEAR ECB PRIOR TO EXCP
         EXCP  TAIOB                   ISSUE EXCP FOR NEXT BLOCK
         WAIT  ECB=TAECB               AWAIT COMPLETION
         CLI   TAECB,X'7F'             GOOD READ?
         BE    EXXIT                   YES, EXIT
         CLI   TAECB,X'41'             HARD I/O ERROR INDICATED?
         BNE   DOHARD                  YES
         TM    TAUNST,1                IS IT AN EOF RECORD?
         BZ    DOHARD                  NO
ATEOF    MVC   PRT(39),=CL39'***** PREMATURE EOF ON HEADER FILE FOR '
         MVC   PRT+41(6),PRMVLSER      MOVE VOLSER
         BAS   R9,ERRORS               GO PRINT
         MVI   EXCPERR,1               AT EOF: SET ERROR FLAG
         BAS   R9,EXCPDUMP             GO DUMP EXCP AREAS
         B     EXXIT                   EXIT
DOHARD   MVC   PRT(29),=CL29'***** HARD I/O ERROR READING '
         MVC   PRT+29(6),PRMVLSER      MOVE VOLSER
         BAS   R9,ERRORS               GO PRINT
         MVI   EXCPERR,1               AT EOF: SET ERROR FLAG
         BAS   R9,EXCPDUMP             GO DUMP EXCP AREAS
         B     EXXIT                   EXIT
         MVI   EXCPERR,1               HARD I/O ERROR: SET ERROR FLAG
EXXIT    L     R9,ER9                  GET RETURN ADDRESS
         BR    R9                      EXIT
*********************************************************************
*             DUMP ROUTINE FOR EXCP ERRORS                          *
*********************************************************************
EXCPDUMP ST    R9,ED9                  SAVE RETURN ADDRESS
         MVC   PRT(8),=CL8'ECB'        IDENTIFY AREA
         MVC   START,=A(TAECB)         DUMP START ADDRESS
         MVC   LENGTH,F4               DUMP AREA LENGTH
         BAS   R9,DUMP                 GO DUMP THE ECB
         MVC   PRT(8),=CL8'IOB'        IDENTIFY AREA
         MVC   START,=A(TAIOB)         DUMP START ADDRESS
         MVC   LENGTH,=A(TADCB-TAIOB)  DUMP AREA LENGTH
         BAS   R9,DUMP                 GO DUMP THE IOB
         MVC   PRT(8),=CL8'DCB'        IDENTIFY AREA
         MVC   START,=A(TADCB)         DUMP START ADDRESS
         MVC   LENGTH,=A(READCCW-TADCB) DUMP AREA LENGTH
         BAS   R9,DUMP                 GO DUMP THE DCB
         MVC   PRT(8),=CL8'CCW'        IDENTIFY AREA
         MVC   START,=A(READCCW)       DUMP START ADDRESS
         MVC   LENGTH,F8               DUMP AREA LENGTH
         BAS   R9,DUMP                 GO DUMP THE CCW
         MVC   PRT(8),=CL8'IOAREA'     IDENTIFY AREA
         MVC   START,READCCW           DUMP START ADDRESS
         MVI   START,0                 CLEAR HIGH ORDER BYTE
         MVC   LENGTH,F80              DUMP AREA LENGTH
         BAS   R9,DUMP                 GO DUMP THE IOAREA
EDXIT    L     R9,ED9                  GET RETURN ADDRESS
         BR    R9                      RETURN
*********************************************************************
*             DUMP MEMORY AREA                                      *
*********************************************************************
DUMP     ST    R9,D9                   SAVE RETURN ADDRESS
         L     R12,START               POINT TO AREA TO BE DUMPED
NEXLINE  L     R11,LENGTH              POINT TO AREA LENGTH
         LA    R10,PRT+9               POINT TO START OF PRINT AREA
         XC    START,START             CLEAR START ADDRESS
         XC    LENGTH,LENGTH           CLEAR LENGTH
         CH    R11,H60                 OVER 60 BYTES TO PRINT?
         BNH   DSTRT                   NO
         LA    R1,R12+60               COMPUTE NEXT
         ST    R1,START                     START ADDRESS
         L     R1,LENGTH               COMPUTE NEXT
         SH    R1,H60                       LENGTH
         ST    R1,LENGTH               STORE REMAINING LENGTH
DSTRT    UNPK  0(3,R10),0(2,R12)       UNPACK TO MAKE PRINTABLE
         MVI   2(R10),C' '             CLEAR TRASH
         TR    0(2,R10),TRCHAR-C'0'    MAKE PRINTABLE
         LA    R10,2(R10)              STEP TO NEXT PRINT LOCATION
         LA    R12,1(R12)              STEP TO NEXT DUMP AREA BYTE
         BCT   R11,DSTRT               LOOP TO DUMP THE AREA
         BAS   R9,ERRORS               GO PRINT
         L     R12,START               ANY MORE TO DUMP?
         BNZ   NEXLINE                 YES
DXIT     L     R9,D9                   GET RETURN ADDRESS
         BR    R9                      RETURN
*********************************************************************
*             ERROR MESSAGE ROUTINE                                 *
*********************************************************************
ERRORS   PUT   SYSERRS,PRTLINE         WRITE PRINT LINE
         MVC   PRTLINE,BLANKS          CLEAR PRINT LINE
         MVI   RC,8                    SET RETURN CODE TO 8
         BR    R9                      RETURN
*********************************************************************
*             PRINT SUBROUTINE                                      *
*********************************************************************
PRINT    PUT   SYSPRINT,PRTLINE        WRITE PRINT LINE
         AP    LINECT,P1               INCREMENT LINE COUNTER
         MVC   PRTLINE,BLANKS          CLEAR PRINT LINE
         CP    LINECT,ENDPAGE          PAST END OF PAGE?
         BNHR  R9                      NO, RETURN
*********************************************************************
*             HEADING SUBROUTINE                                    *
*********************************************************************
HEADING  ST    R9,H9                   SAVE RETURN ADDRESS
         ZAP   LINECT,P0               RESET LINE COUNTER
         AP    PAGECT,P1               INCREMENT PAGE COUNTER
         MVC   PAGENBR,PAGEDIT         PAGE NUMBER
         ED    PAGENBR,PAGECT              TO HEADER LINE
         MVC   PRTLINE,HEADER1         PRINT HEADER
         BAS   R9,PRINT                    LINE 1
         MVC   PRTLINE,HEADER2         PRINT HEADER
         BAS   R9,PRINT                    LINE 2
         MVI   PCC,C'0'                DOUBLE SPACE NEXT DATA LINE
         L     R9,H9                   GET RETURN ADDRESS
         BR    R9                      RETURN
*********************************************************************
*             END OF JOB                                            *
*********************************************************************
EOJ      CLOSE (SYSPRINT,,SYSERRS)     CLOSE PRINT FILES
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGS
         LA    R15,0                   SET RETURN CODE
RC       EQU   *-1                     RETURN CODE
         BR    R14                     RETURN
*********************************************************************
*        STORAGE AND FILE AREAS                                     *
*********************************************************************
*
DBLWD    DS    D                       DOUBLEWORD WORK AREA
H9       DS    A                       HEADING RETURN ADDRESS
ER9      DS    A                       EXCPREAD RETURN ADDRESS
D9       DS    A                       RETURN ADDRESS FOR DUMP
ED9      DS    A                       RETURN ADDRESS FOR EXCPDUMP
START    DS    A                       DUMP AREA START ADDRESS
LENGTH   DS    F                       DUMP AREA LENGTH
F4       DC    F'4'                    CONSTANT 4
F8       DC    F'8'                    CONSTANT 8
F80      DC    F'80'                   CONSTANT 80
H0       DC    H'0'                    HEX ZERO
H2       DC    H'2'                    HEX TWO
H60      DC    H'60'                   CONSTANT 60
P0       DC    P'0'                    PACKED 0
P1       DC    P'1'                    PACKED 1
LINECT   DS    PL2                     LINE COUNTER
PAGECT   DC    PL3'0'                  PAGE COUNTER
ENDPAGE  DC    P'57'                   MAX LINES PER PAGE
PAGEDIT  DC    XL7'4020206B202020'     EDIT MASK FOR PAGE NBR
COUNT    DC    PL2'1'                  VOLSER COUNTER
TRCHAR   DC    CL16'0123456789ABCDEF'  TRANSLATE TBL TO MAKE PRINTABLE
LOOPS    DC    PL2'1'                  NUMBER TIMES TO LOOP
PARMDATA DC    CL2'00'                 PARM DATA FROM EXEC
TESTZ    DC    CL2'00'                 ZONE TESTING FIELD
ZEROS    DC    CL2'00'                 ZONE TEST FIELD
BLANKS   DC    CL133' '                BLANKS
EXCPERR  DC    X'00'                   EXCP ERROR FLAG
*
HEADER1  DS    0CL133                  HEADER LINE 1
         DC    CL1'1'                  CARRIAGE CONTROL
         DC    CL47' '
         DC    CL37'       TAPE HEADER LABEL DATA        '
         DC    CL37' '
         DC    CL4'PAGE'
PAGENBR  DS    CL7                     PAGE NUMBER
*
HEADER2  DS    0CL133                  HEADER LINE 2
         DC    CL1'0'                  CARRIAGE CONTROL
         DC    CL6'VOLSER'               VOLSER
         DC    CL1' '
         DC    CL17'DSNAME (LAST 17)'    LAST 17 CHARS OF DSNAME
         DC    CL1' '
         DC    CL6'DSSR'                 DATASET SERIAL NUMBER
         DC    CL1' '
         DC    CL4'VLSQ'                 VOLUME SEQUENCE NBR
         DC    CL1' '
         DC    CL4'DSSQ'                 DATASET SEQUENCE NBR
         DC    CL1' '
         DC    CL4'GGGG'                 GENERATION NBR
         DC    CL1'V'
         DC    CL2'NN'                   VERSION NBR
         DC    CL1' '
         DC    CL6'CREDT'                CREATION DATE
         DC    CL1' '
         DC    CL6'EXPDT'                EXPIRATION DATE
         DC    CL2' S'
         DC    CL1'E'                    SECURITY CODE
         DC    CL2'C '
         DC    CL6'BLKCNT'               BLOCK COUNT
         DC    CL2' R'
         DC    CL1'E'                    RECFM
         DC    CL1'C'                    BLOCK ATTRIBUTE
         DC    CL1'F'                    CONTROL
         DC    CL2'M '
         DC    CL5'BLKSI'                BLKSIZE
         DC    CL1' '
         DC    CL5'LRECL'                LRECL
         DC    CL2' D'
         DC    CL1'E'                    DENSITY
         DC    CL3'N P'
         DC    CL1'O'                    DATASET POSITION
         DC    CL2'S '
         DC    CL17'JOB/JOBSTEP INFO'    JOB/JOBSTEP INFO
         DC    CL1' '
         DC    CL2'TR'                   TAPE RECORDING TECHNIQUE
         DC    CL11' '
*
PRTLINE  DS    0CL133                  PRINT LINE
PCC      DS    CL1                     CARRIAGE CONTROL
PRT      DS    0CL132                  PRINT DATA
PVOLSER  DS    CL6                       VOLSER
         DS    CL1
PDSN     DS    CL17                      LAST 17 CHARS OF DSNAME
         DS    CL1
PDSSER   DS    CL6                       DATASET SERIAL NUMBER
         DS    CL1
PVOLSEQ  DS    CL4                       VOLUME SEQUENCE NBR
         DS    CL1
PDSSEQ   DS    CL4                       DATASET SEQUENCE NBR
         DS    CL1
PGENNO   DS    CL4                       GENERATION NBR
PV       DS    CL1
PVER     DS    CL2                       VERSION NBR
         DS    CL1
PCREDT   DS    CL6                       CREATION DATE
         DS    CL1
PEXPDT   DS    CL6                       EXPIRATION DATE
         DS    CL2
PSEC     DS    CL1                       SECURITY CODE
         DS    CL2
PBLKCT   DS    CL6                       BLOCK COUNT
         DS    CL2
PRECFM   DS    CL1                       RECFM
PBKATR   DS    CL1                       BLOCK ATTRIBUTE
PCNTRL   DS    CL1                       CONTROL
         DS    CL2
PBLKSIZ  DS    CL5                       BLKSIZE
         DS    CL1
PLRECL   DS    CL5                       LRECL
         DS    CL2
PDEN     DS    CL1                       DENSITY
         DS    CL3
PDSPOS   DS    CL1                       DATASET POSITION
         DS    CL2
PJOB     DS    CL17                      JOB/JOBSTEP INFO
         DS    CL1
PTRTCH   DS    CL2                       TAPE RECORDING TECHNIQUE
         DS    CL11
*
V1ECB    DS    F                       ECB AFTER VOL1 EXCP
V1CSW    DS    XL8                     CSW AFTER VOL1 EXCP
V1CCW    DS    XL8                     CCW USED FOR VOL1 EXCP
VOL1     DS    0CL80                   VOL1 RECORD
VOL1ID   DS    CL4                        "VOL1"
V1VOLSER DS    CL6                        VOLUME SERIAL
         DS    CL1
V1VTOCP  DS    XL10                       VTOC POINTER (DASD ONLY)
         DS    CL10
         DS    CL10
V1OWNER  DS    CL10                       OWNER NAME & ADDRESS CODE
         DS    CL29
*
H1ECB    DS    F                       ECB AFTER HDR1 EXCP
H1CSW    DS    XL8                     CSW AFTER HDR1 EXCP
H1CCW    DS    XL8                     CCW USED FOR HDR1 EXCP
HDR1     DS    0CL80                   HDR1 RECORD
HDR1ID   DS    CL4                        "HDR1"
H1DSN    DS    CL17                       LAST 17 CHARACTERS OF DSNAME
H1DSSER  DS    CL6                        DATASET SERIAL NUMBER
H1VOLSEQ DS    CL4                        VOLUME SEQUENCE
H1DSSEQ  DS    CL4                        DATASET SEQUENCE NUMBER
H1GENNO  DS    CL4                        GENERATION NUMBER
H1VER    DS    CL2                        VERSION NUMBER
H1CREDT  DS    CL6                        CREATION DATE
H1EXPDT  DS    CL6                        EXPIRATION DATE
H1SEC    DS    CL1                        DATASET SECURITY
H1BLKCT  DS    CL6                        BLOCK COUNT
H1SYSCOD DS    CL13                       SYSTEM CODE
         DS    CL7
*
H2ECB    DS    F                       ECB AFTER HDR2 EXCP
H2CSW    DS    XL8                     CSW AFTER HDR2 EXCP
H2CCW    DS    XL8                     CCW USED FOR HDR2 EXCP
HDR2     DS    0CL80                   HDR2 RECORD
HDR2ID   DS    CL4                        "HDR2"
H2RECFM  DS    CL1                        RECORD FORMAT
H2BLKSIZ DS    CL5                        BLKSIZE
H2LRECL  DS    CL5                        LRECL
H2DEN    DS    CL1                        DENSITY
H2DSPOS  DS    CL1                        DATASET POSITION
H2JOB    DS    CL17                       JOB/JOBSTEP INFO
H2TRTCH  DS    CL2                        TAPE RECORDING TECHNIQUE
H2CNTRL  DS    CL1                        CONTROL CHARACTER
         DS    CL1
H2BKATR  DS    CL1                        BLOCK ATTRIBUTE
         DS    CL8
H2CHKPT  DS    CL1                        CHECKPOINT DATASET
         DS    CL32
*
PARM1    DS    0C                      1ST PARAMETER DESCRIPTION
PRMDDNAM DS    CL8                     DDNAME TXT
PRMDSNAM DS    CL44                    DSN=TXT
PRMMEMBR DS    CL8                     MEMBER NAME/GDG GEN TXT
PRMSTATS DS    XL2                     DISP=STATUS NUM: 1=OLD,2=MOD,
*                                                  4=NEW,8=SHR
PRMNDISP DS    XL2                     DISP=NORMAL NUM: 8=KEEP,
*                                         1=UNCATLG,2=CATLG,4=DELETE
PRMCDISP DS    XL2                     DISP=CONDITIONAL NUM:
*                                         SAME AS PRMNDISP
PRMUNIT  DS    CL8                     UNIT= TXT
PRMUNCNT DS    XL2                     UNIT COUNT NUM
PRMVLSER DS    6CL6                    VOL=SER= TXT (1-6)
PRMLABEL DS    XL2                     LABEL= NUM:01=NL,02=SL,10=BLP
PRMDSSEQ DS    XL2                     DATASET SEQUENCE NUM (TAPE)
PRMCLOSE DS    CL1                     FREE=CLOSE >0
PRMRETPD DS    XL2                     RETPD= NUM
PRMRECFM DS    XL2                     RECFM=: HEX SUM OK
*                                      80=FIXED, 40=VARIABLE,
*                                      C0=UNDEFINED, 10=BLOCKED,
*                                      04=ASA CONTROL CHARACTERS,
*                                      02=MACHINE CONTROL CHARACTERS,
*                                      08=STANDARD(F) OR SPANNED(V)
*                                      20=VRBL ASCII(D) OR TRK OFLO(T)
PRMLRECL DS    XL2                     LRECL= NUM
PRMBLKSZ DS    XL2                     BLKSIZE= NUM
PRMDEN   DS    XL2                     DEN= NUM: 03=200,43=556,
*                                             83=800,C3=1600,D3=6250
PRMBUFNO DS    XL2                     BUFNO= NUM
PRMKYLEN DS    XL2                     KEYLEN= NUM
PRMDSORG DS    XL2                     DSORG= NUM:
*                                      0008=VSAM, 0080=GS, 0200=PO,
*                                      0300=POU, 2000=DA, 2100=DAU,
*                                      4000=PS, 4100=PSU
PRMSPACE DS    CL1                     SPACE= TYPE TXT:
*                                      C=CYL, T=TRK
PRMPRIME DS    XL4                     PRIMARY SPACE AMOUNT NUM
PRMSECND DS    XL4                     SECONDARY SPACE AMOUNT NUM
PRMRLSE  DS    CL1                     RLSE >0
PRMDIR   DS    XL4                     DIRECTORY BLOCKS NUM
PRMEX100 DS    CL2                     EXPDT= CENTURY TXT
PRMEXPDT DS    CL5                     EXPDT= YYDDD TXT
PRMBLKLN DS    XL4                     SPACE AVERAGE BLOCKSIZE NUM
PRMSPFRM DS    XL2                     SPACE FORM NUM: 2=ALX,
*                                                  4=MXIG, 8=CONTIG
PRMROUND DS    CL1                     ROUND >0
PRMPRIVT DS    CL1                     PRIVATE >0
PRMVLSEQ DS    XL2                     VOLUME SEQUENCE NUM
PRMVLCNT DS    XL2                     VOLUME COUNT NUM
PRMVLRDS DS    CL44                    VOL=REF= DSNAME TXT
PRMPARAL DS    CL1                     PARALLEL MOUNT REQUEST >0
PRMSPGNM DS    CL8                     SYSOUT PROGRAM NAME TXT
PRMSFMNO DS    CL4                     SYSOUT FORM NUMBER TXT
PRMOUTLM DS    XL4                     OUTLIM FOR SYSOUT NUM
PRMCOPYS DS    XL2                     COPIES= NUM
PRMPASPR DS    XL2                     PASSWORD PROTECTION NUM:
*                                            10=PWREAD, 30=NOPWREAD
PRMINOUT DS    XL2                     INPUT/OUTPUT ONLY NUM:
*                                      40=OUTPUT-ONLY, 80=INPUT-ONLY
PRMFCBIM DS    CL4                     FCB= TXT
PRMFCBAV DS    XL2                     FCB ALIGN/VERIFY NUM:
*                                           4=VERIFY, 8=ALIGN
PRMTERM  DS    CL1                     TERM=TS >0
PRMUCS   DS    CL4                     UCS= TXT
PRMUFOLD DS    CL1                     UCS FOLD >0
PRMUVRFY DS    CL1                     UCS VERIFY REQUEST >0
PRMDCBDS DS    CL44                    DCB MODEL DSNAME TXT
PRMDCBDD DS    CL26                    DCB DDNAME BACKREFERENCE TXT
PRMEROPT DS    XL2                     EROPT= NUM: 10=T, 20=ABE,
*                                                  40=SKP, 80=ACC
PRMNCP   DS    XL2                     NCP= NUM
PRMOPTCD DS    XL2                     OPTCD= SUM OK: 1=R,J; 2=T;
*                                             4=Z; 8=A,Q; 10=F,H,O;
*                                             20=C,E; 40=B,U; 80=W
PRMPRTSP DS    XL2                     PRINTER SPACING NUM: 1=NO SPACE
*                                          9=SINGLE SPACED, 11=DOUBLE
*                                          SPACED, 19=TRIPLE SPACED
PRMTRTCH DS    XL2                     7-TRACK TAPE NUM: 4=NON-COMPACT,
*                                          8=COMPACTION, 13=C, 23=E,
*                                          2B=ET, 3B=T
PRMPASSW DS    CL32                    PASSWORD VALUE TXT
PRMDIAGN DS    CL1                     DIAGNS=TRACE >0
PRMSUSER DS    CL8                     SYSOUT DEST NODE NAME TXT
PRMSHOLD DS    CL1                     HOLD=YES >0
PRMUSRID DS    CL8                     SYSOUT DEST USERID TXT
PRMBURST DS    XL2                     BURST= NUM: 2=BURST/STACK/TRIM
*                                                  4=CONTINUOUS
PRMCHARS DS    4CL4                    CHARS= NAMES TXT (0-4)
PRMCOPYG DS    8XL2                    SYSOUT COPY GROUPS (0-8)
PRMFFORM DS    CL4                     FLASH= FORM OVERLAY NAME TXT
PRMFCNT  DS    XL2                     FLASH OVERLAY COUNT NUM
PRMMMOD  DS    CL4                     MODIFY= MODULE NAME TXT
PRMMTRC  DS    XL2                     MODIFY TRC NUM: 0=1ST CAT,
*                                       1=2ND CAT, 2=3RD CAT, 3=4TH CAT
PRMDEFER DS    CL1                     DEFER MOUNT REQUEST >0
PRMOUTPT DS    8CL26                   OUTPUT= REFERENCES TXT (0-8)
PRMCNTL  DS    CL26                    CNTL STATEMENT REFERENCE TXT
PRMSTCL  DS    CL8                     STORCLAS= TXT
PRMMGCL  DS    CL8                     MGMTCLAS= TXT
PRMDACL  DS    CL8                     DATACLAS= TXT
PRMRECO  DS    XL2                     RECORG=NUM: 8=KS,4=ES,2=RR,1=LS
PRMKEYO  DS    XL2                     KEYOFF= NUM
PRMREFD  DS    CL26                    REFDD= DDNAME REFERENCE TXT
PRMLIKE  DS    CL44                    LIKE= DSNAME REFERENCE TXT
PRMAVGR  DS    XL2                     AVGREC= NUM: 80=SINGLE RECS
*                                        40=THOUSANDS ,20=MILLIONS
PRMDSNT  DS    XL2                     DSNTYPE= NUM: 80=PDSE, 40=PDS
*
PARM2    DS    0C                      2ND PARAMETER DESCRIPTION
REQCODE  DS    CL1                     REQUEST CODE, A=ALLOC, V=VOLSER
RETCODE  DS    CL2                     ALLOCDYN RETURN CODE
ERRRET   DS    CL4                     ERROR RETURN CODE
ERRMSG   DS    CL71                    ERROR REASON MESSAGE
INFORET  DS    CL4                     INFO RETURN CODE
INFOMSG  DS    CL71                    INFORMATION REASON MESSAGE
PARMSEND EQU   *                       END OF ALLOCDYN PARMS
*********************************************************************
*             DCB'S                                                 *
*********************************************************************
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FBA,LRECL=133
SYSERRS  DCB   DSORG=PS,MACRF=PM,DDNAME=SYSERRS,                       X
               RECFM=FBA,LRECL=133
***********************************************************************
*        EXCP DATA AREAS                                              *
***********************************************************************
*                       *** INPUT/OUTPUT BLOCK FOR TAPE USING EXCP
TAECB    DS    F                       EVENT CONTROL BLOCK
TAIOB    DS    0XL32                   IOB START, 32 BYTES
TAFLAGS  DC    X'42'                   COMMAND CHAIN + UNRELATED
         DC    X'00'                   SYSTEM FLAGS BYTE
TAUCSNS  DC    XL2'00'                 FIRST 2 SENSE BYTES AFTER UNT CH
*                                   *** TAPE ***
*                                      BYTE 1 -
*                                        BIT 0 = COMMAND REJECT
*                                        BIT 3 = EQUIPMENT CHECK
*                                        BIT 4 = DATA CHECK
*                                        BIT 5 = OVERRUN
*                                        BIT 6 = WORD COUNT ZERO
*                                        BIT 7 = CONVERTER CHECK
*                                      BYTE 2 -
*                                        BIT 0 = NOISE RECORD
*                                        BITS 1-2 , 01 = NO T.U.
*                                                   01 = NOT READY
*                                                   10 = RDY, NOT RWND
*                                                   11 = RDY, REWINDING
*                                        BIT 4 = AT LOAD POINT
*                                        BIT 5 = IN WRITE STATUS
*                                        BIT 6 = FILE PROTECTED
*                                        BIT 7 = T.U. NOT COMATABLE
TAECBCC  DS    0XL1                    ECB COMPLETION CODE
*                                        7F = GOOD I/O COMPLETION
*                                        41 = PERM I/O ERROR, CSW 0/GOO
*                                        44 = INTERCEPTED NO CSW
*                                        OTHER - HARD ERRORS
TAECBAD  DC    A(TAECB)                ECB ADDRESS
TACSW    DS    0XL8                    CHANNEL STATUS WORD
TANXCCW  DC    A(0)                    ADDR OF LAST EXEC COMM + 8
TAUNST   DC    XL1'00'              *** UNIT STATUS BYTE
*                                      BIT 0 = ATTENTION
*                                      BIT 1 = STATUS MODIFIER
*                                      BIT 2 = CONTROL UNIT END
*                                      BIT 3 = BUSY
*                                      BIT 4 = CHANNEL END
*                                      BIT 5 = DEVICE END
*                                      BIT 6 = UNIT CHECK (ERROR)
*                                      BIT 7 = UNIT EXCEPTION (EOF)
TACHST   DC    XL1'00'              *** CHANNEL STATUS BYTE
*                                      BIT 0 = PCI
*                                      BIT 1 = WRONG LENGTH RECORD
*                                      BIT 2 = CHANNEL PROGRAM CHECK
*                                      BIT 3 = PROTECTION CHECK
*                                      BIT 4 = CHANNEL DATA CHECK
*                                      BIT 5 = CHANNEL CONTROL CHECK
*                                      BIT 6 = INTERFACE CONTROL CHK
*                                      BIT 7 = CHAINING CHECK
TARESID  DC    H'0'                    RESIDUAL COUNT
TASIOCC  DS    0XL1                    COND CODE AFTER SIO COMMAND
TACCWAD  DC    A(READCCW)              ADDRESS OF CHANNEL PROGRAM
TADCBAD  DC    A(TADCB)                ADDRESS OF DCB
         DC    A(0)                    SYSTEM RESTART FIELD
TABLKINC DC    H'1'                    DCB BLOCK COUNT INCREMENT
TARET    DC    H'0'                    NBR RETRIES DURING ERRECOV
*
TADCB    DCB   DDNAME=SYSTAPE,MACRF=(E)
READCCW  CCW   X'02',VOL1,X'00',80 READ NEXT HEADER LABEL RECORD
         LTORG
TAPEHEAD CSECT
*********************************************************************
*             REGISTER EQUATES                                      *
*********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
