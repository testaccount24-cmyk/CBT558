         TITLE '***** LSTVTOC2 - DATA SET ALLOCATION LISTING *****'
LSTVTOC2 SVLNK R6,R7
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* THIS PROGRAM READS THE SORTED VTOC FILE CREATED BY RUX1020 AND SORTED
* IN DSNAME-INITIAL VOLUME-VOLUMESEQUENCE-SEQUENCE ORDER BY RUX1021.
* THE FILE ORDER WILL BE (1) ALL FORMAT 4 DSCB'S, (2) ALL FORMAT 5 DSCB
* (3) ALL FORMAT 6 DSCB'S, (4) DATA SET DSCB'S IN DSNAME ORDER. WITHIN
* EACH DATA SET, THE DSCB'S ARE GROUPED BY VOLUME, IN VOL SEQ ORDER.
* FOR EACH VOLUME, THE DSCB'S ARE IN FORMAT 2, FORMAT 1, FORMAT 3 ORDER
* ALL DSCB'S FOR A DATA SET ARE READ, AND APPLICABLE DATA IS STRIPPED
* THEN THE DATA SET CHARACTERISTICS AND SPACE UTILIZATION IS PRINTED.
* AN OUTPUT FILE IS WRITTEN WHICH CONTAINS ONE RECORD PER EXTENT WITH
* DATA SET NAME AND EXTENT INFORMATION.
* AUTHOR R. THORNTON FEB, 1973
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* APRIL,1983    J.SCHNELLMANN
* MODIFIED TO SUPPORT 3380 DISK DRIVES
* ADDED CODE TO INDICATE VSAM DSORG
* MODIFIED OUTPUT FILE TO INCLUDE SECOND BYTE OF DSORG INFORMATION.
* MODIFIED CALCTRC ROUTINE TO GIVE A MORE ACCURATE COUNT OF TOTAL
* RECORDS.  TOTAL RECORDS IS BASED ON THE NUMBER OF BLOCKS WRITTEN
* AND THE NUMBER OF RECORDS PER BLOCK SO THE COUNT MAY BE GREATER
* THAN THE ACTUAL NUMBER OF RECORDS ON THE FILE WHEN THE LAST BLOCK
* WRITTEN DOES NOT CONTAIN THE MAXIMUM NUMBER OF RECORDS.
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*
         OPEN  (PRINT1,OUTPUT,OUTPUT1,OUTPUT,INPUT1) OPEN FILES
         BAL   R9,HEADING              PRINT FIRST HEADING
*
*
*
NEWDS    EQU   *                       *** NEW DATA SET PROCESSING ***
         ZAP   COUNTBL,=P'0'           BEGIN COUNTER TBL CLEAR
         MVC   COUNTBL+5(75),COUNTBL   FINISH CLEARING
         LA    R4,XTNTFLD              GET EXTENT TABLE ADDRESS
         USING XTDESCR,R4
         LA    R1,256                  LOOP COUNTER FOR 256 ENTRIES
CLRXTNT  MVI   XTTYPE,0                CLEAR EXTENT ENTRY
         LA    R4,L'XTNTRY(R4)         STEP TO NEXT ENTRY
         BCT   R1,CLRXTNT              LOOP THRU 256 ENTRUES
         LA    R4,XTNTFLD              GET BEGIN EXTENT TABLE ADDRESS
         MVI   FMT2RCVD,0              SET FORMAT 2 RECVD SWITCH OFF
         MVI   DSPROG,0                INDICATE NO DATA SET IN PROGRESS
         NOP   CHECKF1                 FIRST TIME SWITCH
         MVI   *-3,C'0'                RESET FIRST TIME SWITCH
F1SRCH   GET   INPUT1,VTOCREC          READ NEXT RECORD
CHECKF1  LA    R5,DSCB                 GET ADDRESS OF DSCB
         MVI   PRTCC,C'0'              SET PRINT FOR DOUBLE SPACE
         USING DSCBFMT1,R5
         CLI   DS1FMTID,C'1'           IS IT A FORMAT 1
         BE    SAVFMT1                 YES
         CLI   DS1FMTID,C'2'           IS IT A FORMAT 2
         BE    CKFMT2ST                YES
         CLI   DS1FMTID,C'4'           IS IT A FORMAT 4
         BNE   CHECKF5                 NO
         MVC   OUTDSN,VTOCNAME         DSNAME TO OUTPUT RECORD
         USING DSCBFMT4,R5
         MVC   OUTEXT(10),DS4VTOCE     VTOC EXTENT TO OUTPUT
         MVC   OUTEXT+10(6),VOLSER     VOL SER TO OUTPUT REC
         MVC   OUTEXT+18(2),=X'0000'   CLEAR TRACKS UNUSED FIELD
         MVC   WK1,DS4VTOCE+2          EXTENT LIMITS TO WORK
         LH    R1,WK1+4                UPPER CYLINDER NBR
         SH    R1,WK1                  SUBTRACT LOWER CYLINDER NO
         MH    R1,=H'19'               MULTIPLY BY 19 TRKS/CYL
         AH    R1,WK1+6                ADD UPPER HEAD NBR
         SH    R1,WK1+2                SUBTRACT LOWER HEAD NBR
         LA    R1,1(R1)                ADD 1 FOR NBR TRKS
         STH   R1,WK1                  STORE TRKS IN EXTENT
         MVC   HDEVCON,DEVCON          SAVE DEVICE CONSTANTS
         MVC   OUTEXT+16(2),WK1        MOVE TO OUTPUT RECD
         BAL   R9,FORMOUT              GO FORMAT OUTPUT RECORD
         B     F1SRCH                  GO GET NEXT DSCB
         USING DSCBFMT1,R5
CHECKF5  CLI   DS1FMTID,C'5'           IS IT FORMAT 5
         BNE   CHECKF6                 NO
         MVC   OUTDSN,AVAILNM          FORMAT 5 NAME
         MVC   OUTEXT+10(6),VOLSER     VOL SER TO OUTPUT
         MVC   OUTEXT(2),=X'0000'      ZEROS TO TYPE, SEQ
         LR    R12,R5                  GET VTOC RECD ADDR
         USING DSCBFMT5,R12
         MVC   DS5FMTID(90),DS5MAVET   MAKE ALL EXTENTS CONTIGUOUS
         MVI   DS5PTRDS-1,X'FF'        SET END OF RECORD INDICATOR
CK5XT    CLC   DS5AVTRK(5),=5X'00'     ANY EXTENT GIVEN
         BE    F1SRCH                  NO, GO GET NEXT RECORD
         CLI   DS5AVTRK,X'FF'          END OF RECORD
         BE    F1SRCH                  YES
         SR    R10,R10                 CLEAR FOR DIVIDE
         MVC   WK1(2),DS5AVTRK         MOVE REL TRACK TO WORK
         LH    R11,WK1                 PICK UP REL TRK FOR DIVIDE
         LH    R8,TRKCYL               GET TRACKS PER CYLINDER
         DR    R10,R8                  DIVIDE BY TRKS/CYL
         STM   R10,R11,WK1             STORE REMAINDER AND QUOTIENT
         MVC   OUTEXT+2(2),WK1+6       QUOTIENT = BEGIN CYLINDER
         MVC   OUTEXT+4(2),WK1+2       REMAINDER = BEGIN HEAD
         MVC   WK1(2),DS5AVCYL         MOVE TOTAL CYLINDERS TO ALIGN
         AH    R11,WK1                 ADD TO BEGIN CYLINDER
         MVC   WK1+1(1),DS5AVTKS       MOVE ADDITIONAL TRACKS
         MVI   WK1,0                   SET LEADING BYTE TO ZERO
         AH    R10,WK1                 ADD TO END HEAD NBR
         BCTR  R10,R0                  SUBTRACT 1 FOR RELATIVE NBR
         LTR   R10,R10                 TEST NBR TRACKS NEG
         BNM   CKOV19                  NOT NEGATIVE, CONTINUE
         LH    R10,TRKCYL              GET TRACKS PER CYLINDER
         BCTR  R10,R0                  SUBTRACT 1 FOR RELATIVE
         BCTR  R11,R0                  AND SUBTRACT 1 FROM CYLINDERS
CKOV19   CH    R10,TRKCYL              OVER ONE CYLINDER EXTRA
         BL    STVTEND                 NO
         LA    R11,1(R11)              ADD 1 CYLINDER
         SH    R10,TRKCYL              SUBTRACT TRACKS PER CYLINDER
         B     CKOV19                  GO CHECK AGAIN
STVTEND  STH   R10,WK1                 STORE TO ALIGN
         MVC   OUTEXT+8(2),WK1         ENDING HEAD TO OUTPUT
         STH   R11,WK1                 STORE TO ALIGN
         MVC   OUTEXT+6(2),WK1         END CYL TO OUTPUT RECD
         MVC   WK1(2),DS5AVCYL         MOVE NBR CYLINDERS TO ALIGN
         LH    R1,WK1                  GET NBR CYL IN EXTENT
         MH    R1,TRKCYL               MULTIPLY BY TRKS/CYL
         MVC   WK1+1(1),DS5AVTKS       MOVE TRKS TO ALIGN
         MVI   WK1,0                   SET FIRST BYTE 0
         AH    R1,WK1                  ADD NBR TRKS
         STH   R1,WK1                  STORE TO ALIGN
         MVC   OUTEXT+16(2),WK1        MOVE NBR TRKS IN EXTENT
         MVC   OUTEXT+18(2),WK1        MOVE NBR UNUSED TRKS IN EXTENT
         MVC   HTRKCYL,TRKCYL          SAVE TRACKS PER CYLINDER
         MVC   HCYLVOL,CYLVOL          SAVE CYLINDERS PER VOLUME
         MVC   HBYTRK,BYTRK            SAVE BYTES PER TRACK
         BAL   R9,FORMOUT              GO FORMAT OUTPUT RECORD
         LA    R12,5(R12)              STEP TO NEXT EXTENT
         B     CK5XT                   GO FORMAT NEXT AVAIL EXTNT
         DROP  R12
         USING DSCBFMT1,R5
CHECKF6  CLI   DS1FMTID,C'6'           IS IT FORMAT 6
         BE    F1SRCH                  YES, IGNORE
         MVC   PRT(39),=C'*** UNIDENTIFIED OR OUT OF SEQUENCE ***'
         MVC   PRT+40(60),VTOCREC      RECORD TO PRINT
         BAL   R9,PRINT                GO PRINT ERROR
         B     F1SRCH                  AND GO GET NEXT DSCB
CKFMT2ST CLI   FMT2RCVD,0              WAS A FORMAT 2 RECEIVED ALREADY
         BE    STORFMT2                NO, GO STORE IT
         MVC   PRT(32),=C'*** EXTRANEOUS FORMAT 2 DSCB ***'
         MVC   PRT+32(60),HOLDFMT2     STORED FORMAT 2 TO PRINT
         BAL   R9,PRINT                PRINT ERROR
STORFMT2 MVC   HOLDFMT2,VTOCREC        STORE FORMAT 2 DSCB
         MVI   FMT2RCVD,1              INDICATE FORMAT 2 RECEIVED
         B     F1SRCH                  GO READ NEXT DSCB
SAVFMT1  MVC   HOLDFMT1,DSCB           DSCB TO HOLD
         MVC   HDEVCON,DEVCON          SAVE DEVICE CONSTANTS
ST1XTNTS MVI   DSPROG,1                INDICATE DATA SET IN PROGRESS
         MVI   FMT3OK,1                INDICATE FORMAT 3 IS O.K.
         MVC   LASTVOL,VOLSEQ          HOLD VOL SEQ NO.
         LA    R1,3                    NUMBER OF EXTENTS TO MOVE
         LA    R2,DS1EXT1              ADDRESS OF FIRST EXTENT
MOVXTNTS MVC   XTNTRY(10),0(R2)        MOVE EXTENT TO TABLE
         MVC   XTVOLSER,VOLSER         VOL SER TO EXTENT ENTRY
         MVC   XTVSEQ,DS1VOLSQ         MOVE VOLUME SEQUENCE
         XC    XTALLOC(6),XTALLOC      CLEAR END OF ENTRY
         CLI   XTTYPE,0                EXTENT UNUSED
         BE    RD13                    YES, QUIT
         LA    R4,L'XTNTRY(R4)         STEP TO NEXT EXTENT ENTRY
         LA    R2,10(R2)               STEP TO NEXT DSCB EXTENT
         BCT   R1,MOVXTNTS             LOOP THRU DSCB EXTENTS
RD13     GET   INPUT1,VTOCREC          READ NEXT RECORD
         CLI   DS1FMTID,C'1'           IS IT A FORMAT 1
         BNE   CKFMT3                  NO, GO CHECK IF FORMAT 3
         CLC   DS1DSNAM,HOLDFMT1       SAME DATA SET NAME
         BE    CKVOLSQ                 YES, GO CHECK SEQUENCE
ENDDS    BAL   R9,EDFMT                END OF DATA SET, GO FORMAT
         B     NEWDS                   GO BEGIN NEW DATA SET
CKVOLSQ  LH    R1,VOLSEQ               GET THIS FORMAT 1 VOL SEQ
         BCTR  R1,R0                   SUBTRACT 1
         CH    R1,LASTVOL              IS THIS THE NEXT VOLUME
         BE    ST1XTNTS                YES, GO STORE IT'S EXTENTS
         BL    ENDDS                   LOWER, NEW DATA SET
         MVC   PRT(22),=C'*** MISSING VOLUME FOR'
         MVC   PRT+22(44),DSNAME       DATA SET NAME TO PRINT
         BAL   R9,PRINT                GO PRINT ERROR
         B     ST1XTNTS                GO STORE EXTENTS
CKFMT3   CLI   DS1FMTID,C'3'           IS IT A FORMAT 3 SSCB
         BNE   ENDDS                   NO, MUST BE NEW DATA SET
         CLI   FMT3OK,1                IS FORMAT 3 O.K.
         BE    STFMT3                  YES, GO STORE EXTENTS
         MVC   PRT(31),=C'*** EXTRANEOUS FORMAT 3 DSCB ***'
         MVC   PRT+31(60),VTOCREC      DSCB TO ERROR MEASAGE
         BAL   R9,PRINT                PRINT ERROR
         B     RD13                    GO GET NEXT DSCB
STFMT3   MVI   FMT3OK,0                INDICATE FORMAT 3 NOT O.K.
         USING DSCBFMT3,R5
         MVC   DS3FMTID(90),DS3EXT5    MAKE ALL EXTENTS CONTIGUOUS
         LA    R1,13                   GET NUMBER OF EXTENTS
         LA    R2,DS3EXT1              GET FIRST DSCB EXTENT ADDRESS
         B     MOVXTNTS                GO MOVE EXTENTS TO TABLE
*
*
*
EDFMT    EQU   *                       *** FINAL EDIT AND FORMAT FOR PR
         USING DSCBFMT1,R5
         ST    R9,EF9                  SAVE RETURN ADDRESS
         LA    R5,HOLDFMT1             GET FORMAT 1 DSCB ADDRESS
         SR    R1,R1                   CLEAR REGISTER       JES 4/83
         ICM   R1,3,HBYTRK             GET BYTES PER TRACK  JES 4/83
         CVD   R1,WK2                  CONVERT TO PACKED
         ZAP   PBYTRK,WK2              SAVE BYTES PER TRACK
         LH    R1,HKBLC                GET KEYED BLOCK CONSTANT
         CVD   R1,WK2                  CONVERT TO PACKED
         ZAP   IBG,WK2                 STORE AS INTER-BLOCK GAP SIZE
         LH    R1,HNKBLC               GET UNKEYED DECREMENT
         CVD   R1,WK2                  CONVERT TO PACKED
         SP    IBG,WK2                 COMPUTE INTER-BLOCK GAP SIZE
         ZAP   KG,WK2                  SAVE KEYED BLOCK GAP SIZE
         MVC   WK1(2),DS1RKP           MOVE RKP TO ALIGN
         LH    R1,WK1                  PICK UP REL KEY POSITION
         CVD   R1,WK1                  CONVERT TO PACKED
         ZAP   RKP,WK1                 STORE REL KEY POS.
         MVC   WK1(4),DS1SCAL-1        MOVE SECNDRY ALLOC TO ALIGN
         L     R1,WK1                  PICK UP SECNDRY ALLOC
         LA    R1,0(R1)                CLEAR HIGH ORDER BYTE
         CVD   R1,WK1                  CONVERT TO PACKED
         ZAP   SECALL,WK1              STORE SECONDARY ALLOCATION
         LA    R4,XTNTFLD              GET ADDRESS OF EXTENT TABLE
CALCTX   CLI   XTTYPE,0                UNUSED EXTENT
         BE    TSTANY                  YES, STOP
         LH    R1,XTHICC               GET LAST CYLINDER IN EXTENT
         SH    R1,XTLOCC               SUBTRACT BEGINNING CYLINDER
         MH    R1,HTRKCYL              TIMES TRK/CYL
         AH    R1,XTHIHH               ADD ENDING HEAD NBR
         SH    R1,XTLOHH               SUBTRACT BEGINNING HEAD NBR
         LA    R1,1(R1)                ADD IN LAST TRACK
         STH   R1,XTALLOC              STORE NBR TRACKS IN EXTENT
         CVD   R1,WK1                  CONVERT TO PACKED
         AP    TKSUSED,WK1             ADD TRKS ALLOCATED TO TOTAL
         LA    R4,L'XTNTRY(R4)         STEP TO NEXT EXTENT ENTRY
         B     CALCTX                  GO CHECK NEXT EXTENT
TSTANY   ZAP   TKSUSED,TKSUSED         ANY TRACKS USED
         BZ    EXEF                    NO, DON'T PRINT IT
TSTISAM  TM    DS1DSORG,X'80'          WAS IT AN ISAM FILE
         BNO   GETBKSZ                 NO
         CLI   FMT2RCVD,1              WAS A FORMAT 2 DSCB STORED
         BE    ISAM                    YES
GETBKSZ  LH    R1,DS1BLKL              GET FORMAT 1 BLKSIZE
         CVD   R1,WK1                  CONVERT TO PACKED
         ZAP   BLKSIZE,WK1             SAVE BLOCK SIZE
         ZAP   WK3,WK1                 SAVE IT IN WORK 3
         BZ    XTONE                   NO BLOCKSIZE
         AP    WK1,IBG                 ADD INTER BLOCK GAP SIZE
         CLI   DS1KEYL,0               ANY KEY RECORD
         BE    GETRKSZ                 NO
         SR    R1,R1                   CLEAR WORK REG
         IC    R1,DS1KEYL              PIC UP KEY LENGTH
         CVD   R1,WK2                  CONVERT TO PACKED
         ZAP   KEYLEN,WK2              SAVE KEY LENGTH
         AP    WK1,WK2                 ADD KEY LENGTH
         AP    WK1,KG                  ADD KEY GAP SIZE
GETRKSZ  ZAP   WK2,PBYTRK              BYTES PER TRACK
         DP    WK2,WK1+5(3)            BYTES PER TRACK/BYTES PER BLOCK
         ZAP   BLKTRK,WK2(5)           STORE BLOCKS PER TRACK
         BNZ   MAXBYT                  NOT ZERO, OK
         AP    BLKTRK,=P'1'            SET BLOCKS/TRK TO 1
MAXBYT   ZAP   PCTUSE,=P'9999'         SET MAX PERCENT
         ZAP   WK1,KEYLEN              GET KEY LENGTH
         AP    WK1,BLKSIZE             ADD BLKSIZE, USEFUL BYTES/BLK
         MP    WK1,BLKTRK              CALC MAX USEFUL BYTES/TRK
         ZAP   WK2,PBYTRK              MAX BYTES PER TRACK
         SP    WK2,WK1                 MAX AVAIL - BYTES USED
         BM    XTONE                   NEGATIVE, CAN'T CALCULATE
         ZAP   WK1(6),PBYTRK           MAX BYTES PER TRACK
         SP    WK1(6),WK2+5(3)         BYTES PER TRK - UNUSED BYTES
         NI    WK1+5,X'F0'             CLEAR PREVIOUS SIGN
         MVI   WK1+6,0                 SET NEXT BYTE ZERO
         MVI   WK1+7,X'0C'             SET SIGN
         ZAP   WK2,PBYTRK              MAX BYTES PER TRACK
         DP    WK1,WK2+5(3)            BYTES USED PER TRK/MAX BYTES TRK
         ZAP   PCTUSE,WK1(5)           STORE PERCENT TRK UTILIZATION
XTONE    LA    R4,XTNTFLD              GET FIRST EXTENT ADDR
         MVC   WK1+1(3),DS1LSTAR       MOVE TO ALIGN
         L     R1,WK1                  PICK UP REL TTR OF LAST RECD
         LA    R1,0(R1)                CLEAR HIGH ORDER BYTE
         LTR   R1,R1                   IS IT ZERO
         BZ    QUESMK                  YES, CAN'T CALCULATE
         SRL   R1,8                    SHIFT OUT R
         LA    R1,1(R1)                ADD 1 FOR LAST TRACK USED
         CVD   R1,WK2                  CONVERT REL TRKS TO PACKED
         ZAP   TRKUSED,WK2             SAVE NBR TRKS USED
USELOOP  CLI   XTTYPE,0                EXTENT IS UNUSED
         BE    CKALLUS                 YES, GO CHECK
         CH    R1,XTALLOC              REMAINING TRACKS : EXTENT
         BNL   USDALL                  ALL THIS EXTENT USED
         STH   R1,XTUNUS               SET REMAINING TRKS IN UNUSED
         LH    R1,XTALLOC              GET TRKS IN EXTENT
         SH    R1,XTUNUS               SUBTRACT REMAINING
         STH   R1,XTUNUS               STORE UNUSED TRKS
         SR    R1,R1                   REMAINING TRKS = 0
STEP1    LA    R4,L'XTNTRY(R4)         STEP TO NEXT EXTENT
         B     USELOOP                 CONTINUE LOOP
USDALL   MVC   XTUNUS,=H'00'           ALL USED, ZERO UNUSED
         SH    R1,XTALLOC              SUBTRACT EXTENT FROM REMAINING
         B     STEP1                   GO TO NEXT EXTENT
CKALLUS  LTR   R1,R1                   WERE ALL TRACKS DISTRIBUTED
         BZ    CALCTRC                 YES, CONTINUE
         MVC   PRT(39),=C'*** LAST TTR DOES NOT MATCH EXTENTS ***'
         MVC   PRT+39(60),HOLDFMT1     FMT1 DSCB TO ERROR MSG
         BAL   R9,PRINT                GO PRINT ERROR
         B     CALCTRC                 GO CALCULATE NBR RECORDS
QUESMK   CLI   XTTYPE,0                UNUSED EXTENT
         BE    CALCTRC                 YES, STOP
         MVI   XTUNUS,C'?'             UNABLE TO CALCULATE UNUSED SPACE
         LA    R4,L'XTNTRY(R4)         STEP TO NEXT EXTENT
         B     QUESMK                  GO SET NEXT EXTENT
CALCTRC  ZAP   WK3,WK3                 BLOCKSIZE IS ZERO
         BZ    FORMAT                  YES, CAN'T CALCULATE
         LH    R1,DS1LRECL             GET LOGICAL RECORD LENGTH
         LTR   R1,R1                   LRECL IS ZERO
         BZ    FORMAT                  YES, CAN'T CALCULATE
         CVD   R1,WK1                  CONVERT LRECL TO PACKED
         ZAP   LRECL,WK1               SAVE LOGICAL RECORD LENGTH
         DP    WK3,WK1+3(5)            DIVIDE BLKSIZE BY LRECL
         ZAP   BLKFCTR,WK3(3)          SAVE BLOCKING FACTOR
         TM    DS1RECFM,X'40'    IS IT VARIABLE?             JES 4/83
         BO    FORMAT            YES, SKIP RECORD COUNT      JES 4/83
         CLC   DS1LSTAR,=3X'00'  ANY LAST BLOCK ADDR GIVEN
         BE    FORMAT            NO, CAN'T CALCULATE NBR RECDS
         ZAP   WK3,BLKTRK        GET BLOCKS/TRACK            JES 4/83
         MP    WK3,TRKUSED       MULT BY NBR OF TRACKS USED  JES 4/83
         SP    WK3,BLKTRK        SUB NBR BLOCKS IN LAST TRK  JES 4/83
         SR    R1,R1             CLEAR WORK REGISTER
         IC    R1,DS1LSTAR+2     BLOCK NBR, LAST BLK WRITTEN
         CVD   R1,WK1            CONVERT TO PACKED
         AP    WK3,WK1           ADD BLOCKS WRITTEN ON LAST TRACK
         MP    WK3,BLKFCTR       MULT BY RECORDS/BLOCK       JES 4/83
         ZAP   NRECDS,WK3        SAVE TOTAL NBR RECORDS
         B     FORMAT                  GO TO FORMAT
*
ISAM     LA    R4,XTNTFLD              GET FIRST EXTENT ADDRESS
         LA    R1,1                    SET FIRST EXTENT NBR
SETPRIM  CLI   XTTYPE,0                EXTENT IS UNUSED
         BE    BEGNDX                  YES, FINISHED
         TM    XTTYPE,1                IS IT PRIME DATA
         BNO   STEPRIM                 NO, IGNORE
         STC   R1,XTSEQ                SET EXTENT NBR
         LA    R1,1(R1)                INCREMENT EXTENT NBR
STEPRIM  LA    R4,L'XTNTRY(R4)         STEP TO NEXT EXTENT
         B     SETPRIM                 GO SET NEXT PRIME EXTENT
*
BEGNDX   LA    R4,XTNTFLD              GET ADDRESS OF FIRST EXTENT
SETNDX   CLI   XTTYPE,0                UNUSED EXTENT
         BE    BEGOV                   YES, GO TO INDEP OFLO
         TM    XTTYPE,4                IS IT AN INDEX EXTENT
         BNO   STEPNDX                 NO, IGNORE
         STC   R1,XTSEQ                STORE EXTENT NBR
         LA    R1,1(R1)                INCREMENT EXTENT NBR
STEPNDX  LA    R4,L'XTNTRY(R4)         STEP TO NEXT EXTENT
         B     SETNDX                  GO SET NEXT INDEX EXTENT
BEGOV    LA    R4,XTNTFLD              GET ADDR OF 1ST EXTENT
SETOV    CLI   XTTYPE,0                UNUSED EXTENT
         BE    ISORT                   YES, GO SORT EXTENTS
         TM    XTTYPE,2                IS IT AN INDEP OFLO EXTENT
         BNO   STEPOV                  NO, IGNORE
         STC   R1,XTSEQ                STORE EXTENT NBR
         LA    R1,1(R1)                INCREMENT EXTENT NBR
STEPOV   LA    R4,L'XTNTRY(R4)         STEP TO NEXT E TENT
         B     SETOV                   GO CHECK NEXT EXTENT
ISORT    LA    R4,XTNTFLD              GET ADDR OF 1ST EXTENT
CKSRTND  CLI   XTTYPE,0                UNUSED EXTENT
         BE    CLRUNUS                 YES, GO CLEAR UNUSED
         LA    R1,L'XTNTRY(R4)         SCAN REG TO NEXT EXTENT ADDR
PASSEND  CLI   0(R1),0                 UNUSED EXTENT
         BE    STEPSRT                 YES, GO START NEXT PASS
         CLC   XTSEQ,1(R1)             FIRST EXTENT LOWER
         BL    NEXPASS                 YES, GO TO NEXT
         MVC   XTHOLD,XTNTRY           MOVE FIRST TO HOLD
         MVC   XTNTRY,0(R1)            MOVE SECOND TO FIRST LOC
         MVC   0(L'XTNTRY,R1),XTHOLD   MOVE FIRST TO SECOND LOCATION
NEXPASS  LA    R1,L'XTNTRY(R1)         STEP SCAN REG TO NEXT EXTENT
         B     PASSEND                 GO CHECK EXTENT
STEPSRT  LA    R4,L'XTNTRY(R4)         STEP FIRST POINTER TO NEXT XTNT
         B     CKSRTND                 GO CHECK END
CLRUNUS  LA    R4,XTNTFLD              GET ADDRESS OF 1ST EXTENT
PRIMSCAN TM    XTTYPE,1                IS IT A PRIME DATA EXTENT
         BO    CKLPRAD                 YES, CHECK IF LAST ONE USED
MISEXT   MVC   PRT(22),=C'*** MISSING EXTENTS ***'
         MVC   PRT+22(60),HOLDFMT1     FORMAT 1 DSCB TO PRINT
         BAL   R9,PRINT                PRINT ERROR
ERXTNT   LA    R4,XTNTFLD              ADDR OF 1ST EXTENT
         USING XTDESCR,R4
ERCKND   CLI   XTTYPE,0                UNUSED EXTENT
         BE    EXEF                    YES, ALL THRU
         MVC   OUTDSN,DS1DSNAM         DSNAME TO OUTPUT RECORD
         MVC   OUTEXT,XTNTRY           EXTENT ENTRY FOR FORMAT
         BAL   R9,FORMOUT              GO FORMAT OUTPUT
         LA    R4,L'XTNTRY(R4)         STEP TO NEXT EXTENT
         B     ERCKND                  LOOP THRU EXTENTS
CKLPRAD  CLC   DS2LPRAD(1),XTSEQ       EXTENT NBR SAME
         BE    CALPUN                  YES, GO CALCULATE UNUSED SPACE
         MVC   XTUNUS,=H'00'           SET UNUSED SPACE TO ZERO
         LA    R4,L'XTNTRY(R4)         STEP TO NEXT EXTENT
         B     PRIMSCAN                GO FINISH PRIME
CALPUN   LH    R1,XTHICC               GET EXTENT HIGH CYLINDER
         SH    R1,DS2LPRAD+3           SUBTRACT LAST PRIME RECD CYL
         MH    R1,HTRKCYL              MULTIPLY BY TRKS/CYL
         AH    R1,XTHIHH               ADD EXTENT HIGH HEAD NBR
         SH    R1,DS2LPRAD+5           SUBTRACT LAST PRIME RECD HEAD NB
         LA    R1,1(R1)                ADD 1
         STH   R1,XTUNUS               STORE UNUSED SPACE
PUNUS    LA    R4,L'XTNTRY(R4)         STEP TO NEXT EXTENT
         TM    XTTYPE,1                IS IT A PRIME DATA EXTENT
         BZ    INDXSCAN                NO, GO TO INDEX EXTENTS
         MVC   XTUNUS,XTALLOC          NO ALLOCATED SPACE USED
         B     PUNUS                   GO SET NEXT EXTENT
INDXSCAN CLI   DS2CYLAD,0              CYL INDEX ADDR IN FMT 2 DSCB
         BNE   TSTXND                  YES, CONTINUE
         MVC   DS2CYLAD,DS2ADHIN       MOVE IN ADDR OF HIGH LEV INDEX
TSTXND   CLC   DS2LCYAD,=5X'00'        CYL INDEX END ADDR GIVEN
         BNE   CALNDX                  YES, GO CALCULATE SIZE
         LA    R1,1                    SET INDEX SIZE TO 1 TRACK
         B     APPNDX                  GO CHECK INDEX EXTENTS
CALNDX   LH    R1,DS2LCYAD             GET ENDING CYL INDEX CYLINDER
         MVC   WK1(2),DS2CYLAD+3       MOVE BEGIN CYL ADDR TO ALIGN
         SH    R1,WK1                  SUBTRACT BEGIN CYL NBR
         MH    R1,HTRKCYL              MULTIPLY BY TRKS/CYL
         AH    R1,DS2LCYAD+2           ADD ENDING HEAD NBR
         MVC   WK1(2),DS2CYLAD+5       MOVE BEGIN CYL NBR TO ALIGN
         SH    R1,WK1                  SUBTRACT BEGIN CYL NBR
         LA    R1,1(R1)                ADD 1
APPNDX   SR    R2,R2                   CLEAR WORK REG
         IC    R2,DS2CYLAD             PICK UP CYL INDEX EXTENT SEQ
         LTR   R2,R2                   ANY EXTENT GIVEN
         BZ    IXALLOC                 NO
         BCTR  R2,R0                   SUBTRACT 1 FROM EXT SEQ
         MH    R2,=Y(XTEND-XTNTRY)     MULTIPLY BY EXTENT FIELD LENGTH
         LA    R2,XTNTFLD(R2)          CALCULATE EXTENT ADDRESS
         DROP  R4
         USING XTDESCR,R2
         TM    XTTYPE,4                IS IT AN INDEX EXTENT
         BO    SETIXES                 YES, GO CALCULATE SPACE
         CLI   XTTYPE,0                IS IT AN UNUSED EXTENT
         BE    MISEXT                  YES, ERROR
         OI    XTTYPE,4                INDICATE INDEX ALSO
         LH    R0,XTUNUS               GET PREV CALCULATED UNUSED SPACE
         SR    R0,R1                   SUBTRACT CYL INDEX SIZE
         BM    IXALLOC                 DON'T STORE IF NAGEATIVE
         STH   R0,XTUNUS               STORE CORRECTED UNUSED SPACE
         B     IXALLOC                 GO CALCULATE INDEX SPACE
         DROP  R2
         USING XTDESCR,R4
SETIXES  TM    XTTYPE,4                IS IT AN INDEX EXTENT
         BZ    MISEXT                  NO, ERROR
         CLC   XTSEQ,DS2CYLAD          SAME EXTENT NBR
         BE    CALXSIZ                 YES, GO CALCULATE
         MVC   XTUNUS,=H'0'            NO, SET UNUSED SPACE TO ZERO
         LA    R4,L'XTNTRY(R4)         STEP TO NEXT EXTENT
         B     SETIXES                 CONTINUE
CALXSIZ  STH   R1,XTUNUS               STORE SPACE USED
         LH    R1,XTALLOC              GET SPACE ALLOCATED
         SH    R1,XTUNUS               SUBTRACT SPACE USED
         STH   R1,XTUNUS               STORE UNUSED SPACE
IXUNUS   LA    R4,L'XTNTRY(R4)         STEP TO NEXT EXTENT
IXALLOC  TM    XTTYPE,4                IS IT AN INDEX EXTENT
         BZ    OFLOUSD                 NO, GO DO INDEP OFLO
         MVC   XTUNUS,XTALLOC          SET ALL ALLOCATED AS UNUSED
         B     IXUNUS                  CONTINUE
OFLOUSD  CLI   DS2LOVAD,0              ANY INDEP OFLO ADDRESS GIVEN
         BE    OFLOCLR                 NO, GO CLEAR EXTENTS
         SR    R2,R2                   CLEAR WORK REG
         IC    R2,DS2LOVAD             GET EXTENT SEQ FOR LAST OFLO
         BCTR  R2,R0                   SUBTRACT 1
         MH    R2,=Y(L'XTNTRY)         MULTIPLY BY EXTENT FIELD LENGTH
         LA    R2,XTNTFLD(R2)          CALCULATE ADDRESS OF EXTENT
         DROP  R4
         USING XTDESCR,R2
         CLI   XTTYPE,0                IS IT AN UNUSED EXTENT
         BE    MISEXT                  YES, ERROR
         TM    XTTYPE,2                IS IT AN INDEP OFLO EXTENT
         BO    SETOFLO                 YES, GO CALCULATE SPACE
         OI    XTTYPE,2                INDICATE OFLO EXTENT
         B     OFLOCLR                 GO SET UNUSED SPACE
         DROP  R2
         USING XTDESCR,R4
SETOFLO  CLC   XTSEQ,DS2LOVAD          SAME EXTENT NBR
         BE    CALOVF                  YES, GO CALCULATE
         MVC   XTUNUS,=H'0'            SET UNUSED SPACE TO AERO
         LA    R4,L'XTNTRY(R4)         STEP TO NEXT EXTENT
         B     SETOFLO                 CONTINUE
CALOVF   LH    R1,XTHICC               GET ENDING CYLINDER IN EXTENT
         MVC   WK1(2),DS2LOVAD+3       MOVE LAST CYL NBR TO ALIGN
         SH    R1,WK1                  SUBTRACT CYL OF LAST OFLO REC
         MH    R1,HTRKCYL              MULTIPLY BY TRKS/CYL
         AH    R1,XTHIHH               ADD ENDING HEADNBR
         MVC   WK1(2),DS2LOVAD+5       MOVE LAST HEAD NBR TO ALIGN
         SH    R1,WK1                  SUBTRACT HEAD NBR OF LAST RECD
         LA    R1,1(R1)                ADD 1
         STH   R1,XTUNUS               STORE UNUSED SPACE
STEPOVF  LA    R4,L'XTNTRY(R4)         STEP TO NEXT EXTENT
OFLOCLR  CLI   XTTYPE,0                UNUSED EXTENT
         BE    CALCOTHR                YES, FINISHED
         MVC   XTUNUS,XTALLOC          SET UNUSED SPACE TO THAT ALLOCAT
         B     STEPOVF                 CONTINUE
CALCOTHR LH    R1,DS1BLKL              GET BLOCK LENGTH
         CVD   R1,WK1                  CONVERT TO PACKED
         ZAP   BLKSIZE,WK1             STORE BLOCK SIZE
         LH    R1,DS1LRECL             GET LOGICAL RECORD LENGTH
         CVD   R1,WK2                  CONVERT TO PACKED
         ZAP   LRECL,WK2               STORE LRECL
         ZAP   LRECL,LRECL             LOGICAL RECD LENGTH IS ZERO
         BZ    NBRECDS                 YES, CAN'T CALCULATE BLKFCTR
         DP    WK1,WK2+5(3)            DIVIDE BLKSIZE BY LRECL
         ZAP   BLKFCTR,WK1(5)          STORE QUOTIENT = BLOCKING FACTOR
NBRECDS  MVC   WK1(4),DS2PRCTR         MOVE NBR RECDS TO ALIGN
         L     R1,WK1                  PICK UP NBR RECORDS
         CVD   R1,WK1                  CONVERT TO PACKED
         LH    R1,DS2OVRCT             GET NBR OFLO RECORDS
         CVD   R1,WK2                  CONVERT TO PACKED
         AP    WK1,WK2                 SUM = TOTAL RECORDS IN FILE
         ZAP   NRECDS,WK1              STORE TOTAL NUMBER RECORDS
         SR    R1,R1                   CLEAR WORK REG
         IC    R1,DS1KEYL              PICK UP KEY LENGTH
         CVD   R1,WK1                  CONVERT TO PACKED
         ZAP   KEYLEN,WK1              STORE KEY LENGTH
         AP    WK1,BLKSIZE             SUM KEYL + BLKSIZE
         AP    WK1,IBG                 ADD INTERBLK GAP SIZE
         AP    WK1,KG                  ADD KEY GAP SIZE
         ZAP   WK2,PBYTRK              BYTES PER TRACK
         DP    WK2,WK1+5(3)            DIVIDE TOTAL/TRK BY RECD SIZE
         ZAP   BLKTRK,WK2(5)           SAVE NBR RECDS PER TRACK
         BNZ   CLCUS                   NOT ZERO, OK
         AP    BLKTRK,=P'1'            SET BLOCKS/TRK TO 1
CLCUS    ZAP   PCTUSE,=P'9999'         SET MAX PERCENT
         ZAP   WK1,KEYLEN              GET KEY LENGTH
         AP    WK1,BLKSIZE             ADD BLKSIZE, USEFUL BYTES/BLK
         MP    WK1,BLKTRK              CALC MAX USEFUL BYTES/TRK
         ZAP   WK2,PBYTRK              MAX BYTES PER TRACK
         SP    WK2,WK1                 MAX AVAIL - BYTES USED
         BM    CLRG1                   NEGATIVE, CAN'T CALCULATE
         ZAP   WK1(6),PBYTRK           MAX BYTES PER TRACK
         SP    WK1(6),WK2+5(3)         SUBTRACT UNUSED BYTES
         NI    WK1+5,X'F0'             CLEAR PREVIOUS SIGN
         MVI   WK1+6,0                 NEXT 2 DIGITS 0
         MVI   WK1+7,X'0C'             LAST BYTE ZERO AND SIGN
         ZAP   WK2,PBYTRK              GET MAX BYTES PER TRACK
         DP    WK1,WK2+5(3)            BYTES USED X 1000 / TRK SIZE
         ZAP   PCTUSE,WK1(5)           STORE AS PERCENT TRK USE
CLRG1    SR    R1,R1                   CLEAR WORK REG
         IC    R1,DS2CYLOV             PICK UP NBR OVFLO TRKS/CYL
         CVD   R1,WK1                  CONVERT TO PACKED
         ZAP   CYLOV,WK1               STORE OFLO TRKS/CYL
         LH    R1,DS2NOBYT             GET NBR BYTES FOR INDEX
         CVD   R1,WK1                  CONVERT TO PACKED
         ZAP   CORIX,WK1               STORE NBR BYTES FOR INDEX
         SR    R1,R1                   CLEAR WORK REG
         IC    R1,DS2NOLEV             PICK UP NBR INDEX LEVELS
         CVD   R1,WK1                  CONVERT TO PACKED
         ZAP   NBRIX,WK1               STORE NBR INDEX LEVELS
         LH    R1,DS2OVRCT             GET NBR OFLO RECORDS
         CVD   R1,WK1                  CONVERT TO PACKED
         ZAP   OVRECS,WK1              STORE NBR OFLO RECDS
         LH    R1,DS2RORG1             GET NBR FULL CYL OFLO AREAS
         CVD   R1,WK1                  CONVERT TO PACKED
         ZAP   FULCOV,WK1              STORE NBR FULL CYL OFLO AREAS
         LH    R1,DS2RORG2             GET OFLO TRKS REMAINING
         CVD   R1,WK1                  CONVRT TO PACKED
         ZAP   OVTKS,WK1               STORE NBR OFLO TRKS REMAINING
FORMAT   MVC   PRT(44),HOLDFMT1        DATA SET NAME TO PRINT
         LA    R4,XTNTFLD              GET FIRST EXTENT ADDRESS
         BAL   R9,FMTEXT               GO FORMAT EXTENT
         MVC   PRT+5(8),=C'DSORG=PS'   DSORG LITERAL
         TM    DS1DSORG,X'40'          IS IT PS
         BO    CKRECFM                 YES
         MVC   PRT+11(2),=C'IS'        INDICATE ISAM
         TM    DS1DSORG,X'80'          IS IT ISAM
         BO    CKRECFM                 YES
         MVC   PRT+11(2),=C'DA'        INDICATE DIRECT ORG
         TM    DS1DSORG,X'20'          IS IT DIRECT
         BO    CKRECFM                 YES
         MVC   PRT+11(2),=C'PO'        INDICATE PARTITIONED
         TM    DS1DSORG,X'02'          IS IT PARTITIONED
         BO    CKRECFM                 YES
         MVC   PRT+11(2),=C'VS'        INDICATE VSAM     JES 4/83
         TM    DS1DSORG+1,X'08'        IS IT VSAM        JES 4/83
         BO    CKRECFM                 YES               JES 4/83
         MVC   PRT+11(2),=C'??'        UNKNOWN ORGANIZATION
CKRECFM  MVC   PRT+15(7),=C'RECFM=U'   RECFM LITERAL
         TM    DS1RECFM,X'C0'          IS IT UNDEFINED
         BO    CKBLKD                  YES
         MVI   PRT+21,C'F'             INDICATE FIXED
         TM    DS1RECFM,X'80'          IS IT FIXED
         BO    CKBLKD                  YES
         MVI   PRT+21,C'V'             INDICATE VARIABLE
         TM    DS1RECFM,X'40'          IS IT VARIABLE
         BO    CKBLKD                  YES
         MVI   PRT+21,C'?'             INDICATE UNIDENTIFIED RECFM
CKBLKD   LA    R1,PRT+22               GET BEGIN PRINT ADDRESS
         TM    DS1RECFM,X'10'          IS IT BLOCKED
         BZ    CKSVAL                  NO
         MVI   0(R1),C'B'              INDICATE BLOCKED
         LA    R1,1(R1)                STEP TO NEXT PRINT POS
CKSVAL   TM    DS1RECFM,X'08'          IS IT S
         BZ    CKCTLCH                 NO
         MVI   0(R1),C'S'              INDICATE STANDARD OR SPANNED
         LA    R1,1(R1)                STEP TO NEXT PRT POS
CKCTLCH  TM    DS1RECFM,X'04'          IS IT ASA CTL CHARACTERS
         BZ    CKMCTCH                 NO
         MVI   0(R1),C'A'              INDICATE ASA CONTROL CHAR
         B     UPBY2                   GO INCREMENT
CKMCTCH  TM    DS1RECFM,X'04'          IS IT MACHINE CONTROL CHAR
         BZ    UPBY2                   NO
         MVI   0(R1),C'M'              INDICATE MACHINE CTL CHAR
UPBY2    LA    R10,2(R1)               REG 10 HAS PRINT ADDRESS
         LA    R11,COUNTBL             REG 11 HAS COUNTER TBL ADDR
         LA    R12,LITLTBL             REG 12 HAS LITERAL TBL ADDR
CKENDED  CLI   0(R12),X'FF'            END OF LITERAL PRINT
         BE    ENDLITS                 YES
         CLI   0(R12),C'%'             IS IT % USE
         BNE   CKALLOC                 NO
         MVC   EDWRK,PCTED             PERCENT EDIT MASK
         ED    EDWRK+5(7),2(R11)       EDIT PERCENT USE
         BZ    NXTMVCT                 ZERO, DON'T PRINT
         B     CALCLEN                 GO CALCULATE LENG
CKALLOC  CLC   0(5,R12),=C'ALLOC'      IS IT ALLOC LITERAL
         BNE   STDEDIT                 GO DO STANDARD EDIT
         MVC   SECATYP,=C'CYL'         INDIC SECONDARY ALLOC IN CYL
         SH    R11,=H'5'               BACKUP CTR ADDR, NOT USED
         TM    DS1SCALO,X'C0'          IS IT IN CYL
         BO    CALCLEN                 YES
         MVC   SECATYP,=C'TRK'         INDICATE TRK ALLOC
         TM    DS1SCALO,X'80'          IS IT IN TRACKS
         BO    CALCLEN                 YES
         MVC   SECATYP,=C'BLK'         INDICATE ALLOC IN BLOCKS
         TM    DS1SCALO,X'40'          IS IT IN BLOCKS
         BO    CALCLEN                 YES
         B     NXTMVCT                 IGNORE, NO TYPE GIVEN
STDEDIT  MVC   EDWRK,NORMED            NORMAL EDIT MASK
         ED    EDWRK,0(R11)            EDIT COUNTER
         BNZ   CALCLEN                 NO, GO CALCULATE LENG
         TM    DS1DSORG,X'80'          IS IT ISAM
         BZ    NXTMVCT                 NO
         CLC   0(3,R12),=C'RKP'        IS THE LITERAL RKP
         BNE   NXTMVCT                 NO
         MVI   EDWRK+11,C'0'           ENSURE ZERO PRINTS
CALCLEN  LA    R1,9                    MAX LITERAL LENGTH
         LA    R2,9(R12)               GET END OF LITERAL ADDRESS
RHELIT   CLI   0(R2),C' '              RHE FOUND
         BNE   STMVLN                  YES
         BCTR  R1,R0                   BACK UP 1
         BCT   R2,RHELIT               BACK UP 1 AND REPEAT
STMVLN   STC   R1,LITMV+1              LENGTH IN LTERAL MOVE INSTR
         LA    R1,1(R1)                ADD 1 FOR LENGTH
         STH   R1,LITLEN               SAVE LENGTH
         LA    R1,10                   MAX LENGTH OF COUNTER
         LA    R2,EDWRK+1              GET LEFTHAND ADDRESS OF EDIT
         CLC   0(5,R12),=C'ALLOC'      IS THE LITERAL ALLOC
         BNE   LHECTR                  NO
         LA    R2,SECATYP              GET ADDR OF 2ND LITRL
         LA    R1,2                    LENGTH OF 2ND OPERAND
         B     STCTLN                  GO DO MOVES
LHECTR   CLI   0(R2),C' '              POSITION IS BLANK
         BNE   STCTLN                  NO, LEFT END FOUND
         LA    R2,1(R2)                STEP TO NEXT CTR POS
         BCT   R1,LHECTR               SUBTRACT 1 AND BRACNH
STCTLN   STC   R1,CTRMV+1              STORE LENG CODE IN MOVE INSTR
         STH   R1,CTRLEN               SAVE LENGTH TO MAVE
         ST    R2,CTRLHE               SAVE LHE ADDRESS
         AH    R1,LITLEN               ADD LITERAL LENGTH
         LA    R1,0(R1,R10)            CALCULATE END OF PRINT TO USE
         C     R1,ENDLIT               EXCEEDS SPACE AVAILABLE
         BNH   LITMV                   NO, GO MOVE TO PRINT
         BAL   R9,FMTEXT               EXCEEDS, FORMAT NEXT EXTENT AND
         LA    R10,PRT+5               RESET PRINT ADDRESS
LITMV    MVC   0(1,R10),0(R12)         MOVE LITERAL TO PRINT
         L     R2,CTRLHE               GET LHE ADDRESS OF COUNTER
         AH    R10,LITLEN              ADD LITERAL LENGTH TO PRINT ADDR
CTRMV    MVC   0(1,R10),0(R2)          MOVE COUNTER TO PRINT
         AH    R10,CTRLEN              ADD COUNTER LENGTH TO PRINT ADDR
         LA    R10,3(R10)              STEP TO NEXT AVAIL PRT LOC
NXTMVCT  LA    R11,5(R11)              STEP TO NEXT COUNTER
         LA    R12,10(R12)             STEP TO NEXT LITERAL
         B     CKENDED                 GO CHECK END
ENDLITS  BAL   R9,FMTEXT               GO FORMAT EXTENT AND PRINT
         CLI   XTTYPE,0                AT UNUSED EXTENT
         BNE   ENDLITS                 NO GO OUTPUT NEXT
         MVI   PRTCC,C'0'              SET PRT FOR DBL SPACE
EXEF     L     R9,EF9                  GET RETURN ADDRESS
         BR    R9                      RETURN TO CALLER
*
*
*
FMTEXT   EQU   *                       *** FORMAT EXTENTS AND PRINT ***
         ST    R9,FM9                  SAVE RETURN ADDR
         CLI   XTTYPE,0                IS IT AN UNUSED EXTENT
         BE    EXPRNT                  YES, GO PRINT
         MVC   PRT+62(6),XTVOLSER      VOLUME SERIAL NBR TO PRT
         LH    R1,XTVSEQ               GET VOLUME SEQ NBR
         CVD   R1,WK1                  CONVERT TO PACKED
         MVC   PRT+70(6),=X'402020202021'
         ED    PRT+70(6),WK1+5         EDIT VOL SEQ TO PRINT
         NI    XTTYPE,X'07'            CLEAR ALL BUT PRIM/OFLO/INDX
         SR    R1,R1                   CLEAR WORK REG
         IC    R1,XTTYPE               PICK UP EXTENT TYPE
         MH    R1,=H'10'               MULTIPLY BY LITERAL LENGTH
         LA    R1,XTYTBL(R1)           GET ADDRESS OF LIERAL
         MVC   PRT+78(10),0(R1)        EXTENT DESCR LITERAL TO PRT
         SR    R1,R1                   CLEAR WORK REG
         IC    R1,XTSEQ                PICK UP EXTENT SEQ NBR
         CVD   R1,WK1                  CONVERT TO PACKED
         UNPK  PRT+90(2),WK1+6(2)      UNPACK INTO PRINT
         OI    PRT+91,C'0'             CLEAR SIGN
         LH    R1,XTLOCC               GET LOW CYLINDER NBR
         CVD   R1,WK1                  CONVERT TO PACKED
         UNPK  PRT+95(3),WK1+6(2)      UNPACK TO PRINT
         OI    PRT+97,C'0'             CLEAR SIGN
         MVI   PRT+98,C'-'             HYPHEN
         LH    R1,XTLOHH               GET LOWER HEAD NBR
         CVD   R1,WK1                  CONVERT TO PACKED
         UNPK  PRT+99(2),WK1+6(2)      UNPACK TO PRINT
         OI    PRT+100,C'0'            CLEAR SIGN
         LH    R1,XTHICC               GET UPPER CYLINDER NBR
         CVD   R1,WK1                  CONVERT TO PACKED
         UNPK  PRT+103(3),WK1+6(2)     UNPACK TO PRINT
         OI    PRT+105,C'0'            CLEAR SIGN
         MVI   PRT+106,C'-'            HYPHEN TO PRINT
         LH    R1,XTHIHH               GET UPPER HEAD NBR
         CVD   R1,WK1                  CONVERT TO PACKED
         UNPK  PRT+107(2),WK1+6(2)     UNPACK TO PRINT
         OI    PRT+108,C'0'            CLEAR SIGN
         LH    R1,XTALLOC              GET NBR TRACKS ALLOCATED
         CVD   R1,WK1                  CONVERT TO PACKED
         LH    R1,HTRKCYL              GET TRACKS PER CYLINDER
         CVD   R1,WK2                  CONVERT TO PACKED
         DP    WK1,WK2+6(2)            DIVIDE BY TRKS/CYL
         MVC   PRT+110(8),=X'4020206B2020204B'
         ED    PRT+110(7),WK1+3        EDIT NBR CYLINDERS
         UNPK  PRT+118(2),WK1+6(2)     UNPK REMAINDER = TRKS
         OI    PRT+119,C'0'            CLEAR SIGN
         CLI   XTUNUS,C'?'             UNABLE TO CALCULATE
         BNE   PRTUNUS                 NO
         MVC   PRT+124(7),=C'UNKNOWN'  PRINT LITERAL
         B     FMTOUT                  GO FINISH
PRTUNUS  LH    R1,XTUNUS               GET AMOUNT NOT USED
         CVD   R1,WK1                  CONVERT TO PACKED
         DP    WK1,WK2+6(2)            DIVIDE BY TRKS/CYL
         MVC   PRT+122(8),=X'4020206B2020204B'
         ED    PRT+122(7),WK1+3        EDIT UNUSED CYLINDERS
         UNPK  PRT+130(2),WK1+6(2)     UNPACK TRKS REM TO PRT
         OI    PRT+131,C'0'            CLEAR SIGN
FMTOUT   MVC   OUTDSN,DS1DSNAM         DSNAME TO OUTPUT RECORD
         MVC   OUTEXT,XTNTRY           EXTENT INFO TO OUTPUT
         BAL   R9,FORMOUT              GO FORMAT OUTPUT RECD
         LA    R4,L'XTNTRY(R4)         STEP TO NEXT EXTENT
EXPRNT   BAL   R9,PRINT                GO PRINT THE LINE
         MVI   PRTCC,C' '              SET UP PRINT SINGLE SPACING
         L     R9,FM9                  RESTORE RETURN ADDRESS
         BR    R9                      RETURN TO ALLER
*
*
*
FORMOUT  EQU   *                       *** FORMAT OUTPUT RECORD ***
         MVC   OUTRECFM,DS1RECFM       RECFM BYTE TO OUTPUT
         MVC   OUTDSORG,DS1DSORG       DSORG TO OUTPUT
         MVC   OUTALLOC,DS1SCALO       TYPE SPACE ALLOCATION
         MVC   DEVCONST,HDEVCON        DEVICE CONSTANTS TO OUTPUT
         PUT   OUTPUT1,OUTREC          WRITE OUTPUT RECD
         BR    R9                      RETURN
*
*
*
*
*
*
PRINT    EQU   *                       *** PRINT ROUTINE ***
         ST    R9,PR9                  SAVE RETURN ADDRESS
         PUT   PRINT1,PRTLINE          WRITE PRINT LINE
         AP    LINECT,=P'1'            ADD 1 TO LINE COUNTER
         CLI   PRTCC,C' '              SINGLE SPACED
         BE    CLRPRT                  YES
         AP    LINECT,=P'1'            ADD ANOTHER 1
         CLI   PRTCC,C'0'              DOUBLE SPACED
         BE    SETSNGL                 YES
         AP    LINECT,=P'1'            ADD THIRD TIME
SETSNGL  MVI   PRTCC,C' '              RESET CARRIAGE CTL TO SINGLE SP
CLRPRT   MVC   PRT,PRTCC               CLEAR PRINT LINE
         MVI   PRTCC,C'0'              SET PRINT FOR DOUBLE SPACE
         CP    LINECT,=P'56'           END OF PAGE
         BNH   EXPRT                   NO
         BAL   R9,HEADING              YES, DO HEADING
EXPRT    L     R9,PR9                  RESTORE RETURN ADDRESS
         BR    R9                      RETURN TO CALLER
*
*
*
HEADING  EQU   *                       *** HEADING ROUTINE ***
         AP    PAGE,=P'1'              ADD 1 TO PAGE NBR
         MVC   HDGPAG,=X'40202020'     EDIT WORD TO HEAD PAGE
         ED    HDGPAG,PAGE             EDIT PAGE NUMBER
         ZAP   LINECT,=P'3'            RESET LINE COUNTER
         MVC   PRTLINE,HDG1            HEADING TO PRINT
         PUT   PRINT1,PRTLINE          PRINT THE HEADING
         MVC   PRTLINE,HDG2            MOVE SECOND HEADING LINE
         PUT   PRINT1,PRTLINE          PRINT THE LINE
         MVI   PRTCC,C' '              RESET CARRIAGE CONTROL
         MVC   PRT,PRTCC               CLEAR PRINT LINE
         MVI   PRTCC,C'0'              SET SPACING FOR DOUBLE SPACE
         BR    R9                      RETURN TO CALLER
*
*
*
EOJ      EQU   *                       *** END OF JOB ***
         CLI   DSPROG,0                ANY DATA SET IN PROGRESS
         BE    EOJ1                    NO, CONTINUE
         BAL   R9,EDFMT                EDIT AND PRINT
EOJ1     EQU   *
         MVC   PRTLINE(30),=C'-*** END OF LSTVTOC2 LISTING ***'
         BAL   R9,PRINT                PRINT LAST LINE
         CLOSE (INPUT1,,OUTPUT1,,PRINT1) CLOSE FILES
         L     R13,4(R13)              GET CALLER'S SAVE AREA ADDR
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGISTERS
         SR    R15,R15                 SET RETURN CODE = 0
         BR    R14                     RETURN TO CALLER
*
*
*
*
*
*                       *** DATA, FILE, AND WORK AREAS ***
*
*
XTDESCR  DSECT ,                       *** XTNTFLD DESCRIPTION ***
XTNTRY   DS    0XL22                   ENTENT TABLE ENTRY
XTTYPE   DS    XL1                     EXTENT TYPE 00-UNUSED, 01-DATA,
*                                      02-OFLO, 04-INDEX, 40-LABEL,
*                                      80-SHARED, 81-DATA
XTSEQ    DS    XL1                     EXTENT SEQUENCE
XTLOCC   DS    H                       EXTENT LOWER CYLINDER ADDR
XTLOHH   DS    H                       EXTENT LOWER HEAD NBR
XTHICC   DS    H                       EXTENT UPPER CYLINDER
XTHIHH   DS    H                       EXTENT UPPER HEAD NBR
XTVOLSER DS    CL6                     VOL SER
XTALLOC  DS    H                       TRACKS ALLOCATED
XTUNUS   DS    H                       TRACKS NOT USED
XTVSEQ   DS    XL2                     VOLUME SEQUENCE
XTEND    EQU   *
LSTVTOC2 CSECT
*
*
*
OUTREC   DS    0CL160                  *** OUTPUT RECORD ***
OUTDSN   DS    CL44                    DSNAME
OUTEXT   DS    XL22                    EXTENT INFO
OUTRECFM DS    XL1                     RECFM
OUTDSORG DS    XL2                     DSORG            JES 4/83
OUTALLOC DS    XL1                     SPACE ALLOCATION TYPE
DEVCONST DS    0XL10                   DEVICE CONSTANTS
CYLSVOL  DS    H                       CYLINDERS PER VOLUME
TRKSCYL  DS    H                       TRACKS PER CYLINDER
BYTSTRK  DS    H                       BYTES PER TRACK
KBLCT    DS    H                       KEYED BLOCK CONSTANT
NKBLCT   DS    H                       NON-KEYED BLOCK DECREMENT
COUNTBL  DS    0CL5                    TABLE OF COUNTERS AND VALUS
LRECL    DS    PL5                     LOGICAL RECORD LENFTH
BLKSIZE  DS    PL5                     BLOCK SIZE
KEYLEN   DS    PL5                     KEY LENGTH
RKP      DS    PL5                     REL KEY POSITION
CYLOV    DS    PL5                     OFLO TRACKS/CYL
CORIX    DS    PL5                     NBR BYTES TO HOLD HIGH INDEX
NBRIX    DS    PL5                     NUMBER INDEX LEVELS
OVRECS   DS    PL5                     NBR OFLO RECORDS
FULCOV   DS    PL5                     NBR FULL CYL OFLO AREAS
BLKFCTR  DS    PL5                     BLOCKING FACTOR
BLKTRK   DS    PL5                     BLOCKS PER TRACK
SECALL   DS    PL5                     SECONDARY ALLOCATION QTY
NRECDS   DS    PL5                     NUMBER RECORDS IN FILE
PCTUSE   DS    PL5                     PERCENT TRACK UTILIZATION
OVTKS    DS    PL5                     REMAINING OFLO TRACKS
TKSUSED  DS    PL5                     TOTAL TRACKS USED BY DATASET
         DC    X'FF'
LITLTBL  DS    0CL10                   TABLE OF LITERALS
         DC    CL10'LRECL='
         DC    CL10'BLKSIZE='
         DC    CL10'KEYL='
         DC    CL10'RKP='
         DC    CL10'CYLOFLO='
         DC    CL10'CORINDX='
         DC    CL10'NBRINDX='
         DC    CL10'OFLORECS='
         DC    CL10'FULLCYLOF='
         DC    CL10'REC/BLK='
         DC    CL10'BLK/TRK='
         DC    CL10'SECDRY='
         DC    CL10'ALLOC='
         DC    CL10'TOTRECS='
         DC    CL10'% TRK USE='
         DC    CL10'OFLOTRKS='
         DC    CL10'TOTL TRKS='
         DC    X'FF'
XTYTBL   DS    0CL10                   LITERAL TABLE FOR EXTENT TYPE
         DC    CL10'  UNKNOWN'
         DC    CL10'   PRIME'
         DC    CL10'     OFLO'
         DC    CL10'  PRIM/OFLO'
         DC    CL10'     INDX'
         DC    CL10' PRIM/INDX'
         DC    CL10' OFLO/INDX'
         DC    CL10'PRM/OFL/IX'
VTOCNAME DC    CL44'*** VTOC ***'
AVAILNM  DC    CL44'*** UNALLOCATED EXTENT ***'
CTRLEN   DS    H                       LENGTH OF COUNTER - 1
LITLEN   DS    H                       LENTH OF LITERAL - 1
LASTVOL  DC    H'00'                   VOL SEQ OF LAST VOLUME RCVD
XTHOLD   DS    CL(XTEND-XTNTRY)        HOLD AREA DURING SORT
EDWRK    DS    CL12                    NUMERIC EDIT WORK AREA
SECATYP  DS    CL3                     SECONDARY ALLOCATION TYPE LITRL
PCTED    DC    X'4040404040402020214B2020'
NORMED   DC    X'402020206B2020206B202021'
DSPROG   DS    XL1                     DATA SET IN PROGRESS INDIC
FMT2RCVD DS    XL1                     FORMAT 2 DSCB RECEIVED INDIC
FMT3OK   DS    XL1                     FORMAT 3 DSCB INDICATOR
LINECT   DC    PL2'0'
TRKUSED  DS    PL5                     TRACKS USED
PAGE     DC    PL2'0'
PBYTRK   DS    PL3                     BYTES PER TRACK
IBG      DS    PL3                     INTER-BLOCK GAP SIZE
KG       DS    PL3                     KEYED BLOCK GAP
CTRLHE   DS    F                       ADDR OF LEFTMOST POS OF COUNTER
ENDLIT   DC    A(PRT+60)               RHE OF PRINT FOR LITERALS
FM9      DS    F                       RETURN ADDRESS FOR FORMAT
PR9      DS    F
EF9      DS    F
WK1      DS    D                       WORK
WK2      DS    D                       WORK
WK3      DS    D                       WORK
*
*
*
         DS    0F
VTOCREC  DS    0CL210                  *** VTOC RECORD ***
DSNAME   DS    CL44                    DATA SET NAME
INITVOL  DS    CL6                     FIRST VOL SER IN DATA SET
VOLSEQ   DS    XL2                     VOL SEQUENCE
SEQ      DS    XL1                     DSCB SEQUENCE 0-FMT2, 1-FMT1, 2-
*                                      FMT3
VOLSER   DS    CL6                     VOL SER THIS VOLUME
         DS    X'00'
DEVCON   DS    0XL10                   DEVICE CONSTANTS
CYLVOL   DS    H                       CYLINDERS PER VOLUME
TRKCYL   DS    H                       TRACKS PER CYLINDER
BYTRK    DS    H                       BYTES PER TRACK
KBLC     DS    H                       KEYED BLOCK CONSTANT
NKBLC    DS    H                       NON-KEYED BLOCK DECREMENT
DSCB     DS    CL140                   DATA SET CONTROL BLOCK
         DSCBDEF FMT2=NO
*
*
*
PRTLINE  DS    0CL133                  *** PRINT LIN E***
PRTCC    DS    CL1                     CARRIAGE CONTROL - ASA
PRT      DS    CL133                   PRINT LINE
HDG1     DS    0CL133                  FIRST HEADING LINE
         DC    CL51'1LSTVTOC2'
         DC    CL74'*** DATA SET ALLOCATION LIST ***'
         DC    CL4'PAGE'
HDGPAG   DS    CL4                     PAGE NUMBER TO PRINT
HDG2     DS    0CL133                  SECOND HEADING LINE
         DC    CL14'0'
         DC    CL33'DATA SET NAME AND CHARACTERISTICS'
         DC    CL16' '
         DC    CL20'VOLSER  VOLSEQ'
         DC    CL23'TYPE   EXTM   BEGIN'
         DC    CL27'END   CYL ALLOC  CYL UNUSED'
*
*
*
         DS    0F
HOLDFMT2 DS    0CL210                  *** HOLD AREA FOR FORMAT 2 DSCB
F2DSN    DS    CL44                    DATA SET NAME
F2VOL    DS    CL6                     VOL SER OF 1ST VOLUME
F2VSQ    DS    XL2                     VOL SEQ NBR
F2SEQ    DS    XL1                     ALWAYS 0
F2VOLSR  DS    CL6                     VOLUME SERIAL NBR, THIS VOL
         DS    X'00'
F2CYLVOL DS    H
F2TRKCYL DS    H
F2BYTRK  DS    H
F2KBLC   DS    H                       KEYED BLOCK CONSTANT
F2NKBLC  DS    H                       NON-KEYED BLOCK DECREMENT
         DSCBDEF FMT1=NO,FMT3=NO,FMT4=NO,FMT6=NO,DSECT=NO,FMT5=NO
         DS    0F
HOLDFMT1 DS    XL140                   *** HOLD AREA FOR FORMAT 1 DSCB
HDEVCON  DS    0XL10                   DEVICE CONSTANTS
HCYLVOL  DS    H                       CYLINDERS PER VOLUME
HTRKCYL  DS    H                       HOLD TRACKS PER CYLINDER
HBYTRK   DS    H                       BYTES PER TRACK
HKBLC    DS    H                       KEYED BLOCK CONSTANT
HNKBLC   DS    H                       NON-KEYED BLOCK DECREMENT
         LTORG
INPUT1   DCB   DSORG=PS,MACRF=GM,DDNAME=INPUT1,RECFM=FB,EODAD=EOJ
PRINT1   DCB   DSORG=PS,MACRF=PM,RECFM=FBA,LRECL=133,BLKSIZE=133,      X
               DDNAME=PRINT1
OUTPUT1  DCB   DSORG=PS,MACRF=PM,RECFM=FB,DDNAME=OUTPUT1
         DS    0F
XTNTFLD  DS    256XL22                 *** EXTENT TABLE AREA
         END
