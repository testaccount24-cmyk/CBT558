         TITLE 'FIND SUBROUTINE CALLS'
FINDSUBR SVLNK R3
* THIS PROGRAM READS THE DIRECTORY ENTRIES OF AN INPUT PDS
* USING THE SUBROUTINE READDIR, ISSUES A FIND MACRO USING THE
* TTR OF THE MEMBER, AND READS THE LOAD MODULE. THE CESD RECORDS
* ARE PROCESSED TO FIND ALL EXTERNAL REFERENCES. PROCESSING
* STOPS FOR A MEMBER WHEN THE FIRST CONTROL RECORD IS READ.
* THE OUTPUT FILE CONTAINS ONE RECORD PER MEMBER FOR EACH
* EXTERNAL REFERENCE, WITH CALLING AND CALLED MODULE NAMES.
*
*
* AUTHOR R. THORNTON FEB 1974
*
*
         OPEN  (OUTPUT1,OUTPUT,INPUT1) OPEN FILES
         CALL  READDIR,OPEN            OPEN DIRECTORY FILE
READDIR  CALL  READDIR,(READ,DIRENTRY) READ DIRECTORY ENTRY
         ST    R1,DIRADDR              SAVE DIRECTORY ADDRESS
         MVC   EPADDR,27(R1)           SAVE LINKEDITOR ASSIGNED EP ADDR
         CLI   DIRENTRY,X'FF'          IS IT EOF
         BNE   FINDMEM                 NO
         CLOSE (OUTPUT1,,INPUT1)       YES, CLOSE FILES
         CALL  READDIR,CLOSE           CLOSE DIRECTORY FILE
         L     R13,4(R13)              GET CALLERS SAVE ADDR
         LM    R14,R12,12(R13)         RESTORE HIS REGISTERS
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN TO CALLER
*
*
*
FINDMEM  EQU   *                       *** FIND THE MEMBER ***
         MVC   CALLER,DIRNAME          MEMBER NAME TO OUTPUT RECORD
         FIND  INPUT1,DIRTTR,C         FIND THE MEMBER
         LTR   R15,R15                 FOUND O.K.
         BZ    READMEM                 YES
         DC    H'0'                    ERROR IN FIND, ABEND
*
*
*
READMEM  READ  DECB,SF,INPUT1,INREC,248 READ LOAD MODULE RECORD
         CHECK DECB                    WAIT FOR COMPLETION
         CLI   RECDID,X'20'            IS IT A CESD RECORD
         BE    GETSIZE                 YES, GO PROCESS
         TM    RECDID,X'01'            IS IT A CONTROL RECORD
         BO    READDIR                 YES, GO GET NEXT MEMBER
         B     READMEM                 NO, READ NEXT LOAD MODULE RECORD
GETSIZE  LA    R5,ESDATA               GET ADDR OF 1ST ESD ENTRY
         LH    R2,COUNT                GET LENGTH OF ESD DATA
         SRL   R2,4                    DIVIDE BY 16 BYTES PER ENTRY
CKTYPE   MVC   ESDTYPE,8(R5)           SAVE ESD TYPE BYTE
         NI    ESDTYPE,X'0F'           CLEAR THE SUBCLASS BITS
         CLI   ESDTYPE,X'00'           THIS A CSECT ENTRY?
         BE    GOODEXT                 YES, USE IT
         CLI   ESDTYPE,X'02'           THIS AN EXTERNAL REFERENCE?
         BE    GOODEXT                 YES, USE IT
         CLI   ESDTYPE,X'03'           THIS A LABEL REFERENCE?
         BE    GOODEXT                 YES, USE IT
         CLI   ESDTYPE,X'04'           THIS IS PRIVATE CODE?
         BE    GOODEXT                 YES, USE IT
         CLI   ESDTYPE,X'05'           THIS IS A COMMON?
         BE    NEXTESD                 YES, SKIP IT
         CLI   ESDTYPE,X'06'           THIS IS A PSEUDO REGISTER?
         BE    NEXTESD                 YES, SKIP IT
         CLI   ESDTYPE,X'07'           THIS IS A NULL ENTRY?
         BE    NEXTESD                 YES, SKIP IT
         B     NEXTESD                 SKIP ANYTHING ELSE
GOODEXT  CLC   EPADDR,9(R5)            THIS THE MODULE ENTRY POINT?
         BE    NEXTESD                 YES, NOT A CALL
         MVC   SUBRTN,0(R5)            EXTERNAL SYMBOL TO OUTPUT
         PUT   OUTPUT1,OUTREC          WRITE OUTPUT
NEXTESD  BCT   R2,STEPESD              LOOP THRU RECORD
         B     READMEM                 AT END GO READ AGAIN
STEPESD  LA    R5,16(R5)              STEP TO NEXT ESD ENTRY
         B     CKTYPE                  CONTINUE PROCESSING
*
*
*
OPEN     DC    CL9'OINPUT1'            OPEN PARAMETER LIST
READ     DC    C'R'                    READ PARAMETER
CLOSE    DC    C'C'                    CLOSE PARAMETER
DIRENTRY DS    0CL11                   *** DIRECTORY ENTRY FROM READDIR
DIRNAME  DS    CL8                     MEMBER NAME
DIRTTR   DS    XL3                     TTR OF MEMBER ON LIBRARY
         DC    X'00'
ESDTYPE  DS    XL1                     ESD TYPE BITS
EPADDR   DS    XL3                     LINKEDITOR ASSIGNED E.P. ADDRESS
DIRADDR  DS    F                       DIRECTORY ADDRESS
*
*
*
OUTREC   DS    0CL16                   *** OUTPUT RECORD ***
CALLER   DS    CL8                     CALLING MODULE NAME
SUBRTN   DS    CL8                     CALLED SUBROUTINE NAME
*
*
*
         DS    0H
INREC    DS    0CL248                  *** LOAD MODULE RECORD ***
RECDID   DS    XL1                     RECORD ID: (IN HEX)
*                20=CESD RECORD, 40=SYM RECORD, 10=SCATTER TRANSLATION,
*                01=CONTROL RECORD, 05=CONTROL RECORD BEFORE LAST TEXT
*                RECORD OF OVERLAY SEGMENT, 0D=CONTROL RECORD BEFORE
*                LAST TEXT RECORD OF MODULE (EOM), 02=RLD RECORD,
*                06=LAST RECORD OF SEGMENT, 0E=LAST RECORD OF MODULE
*                03=CONTROL AND RLD RECORD (FOLLOWED BY TEXT RECORD),
*                07=CONTROL AND RLD RECORD FOLLOWED BY LAST TEXT
*                RECORD OF SEGMENT (EOS), 0F=CONTROL AND RLD RECORD
*                FOLLOWED BY LAST TEXT RECORD OF MODULE (EOM),
*                80=CSECT IDENTIFICATION RECORD
         DS    XL3                     RESERVED, ZEROS
ESDID1   DS    XL2                     ESD ID OF 1ST ESD ITEM
COUNT    DS    CL2                     NBR BYTES OF ESD DATA
ESDATA   DS    0CL16                   *** ESD DATA ELEMENT ***
SYMBOL   DS    CL8                     EXTERNAL NAME (ZEROS IF NULL)
TYPE     DS    XL1                     SYMBOL TYPE: (X MAY BE ANY BITS)
*                X0=SD, X3=LR, X4=PC, X5=CM, X6=PR,
*                07=NULL, X2=ER, XA=WX, 1X=DELETE,
*                1X=REPLACE, 2X=INSERT, 4X=CHAIN, 8X=MAP
ADDRESS  DS    XL3                     ADDRESS OF SYMBOL IN MODULE. ZER
SEGNO    DS    XL1                     SEGMENT NBR IN WHICH SYMBOL APPE
*                                        ZERO FOR ER WX NULL
LENGTH   DS    0XL3                    LENGTH IF SD PC CM OR PR
*                                        ZERO IF WX ER NULL
*                                        X'06'=NEVER CALL
ID       DS    XL2                     ID IF TYPE IS LR
         DS    XL1
         DS    14CL16                  ROOM FOR 14 ADDITIONAL ESD ENTRI
*
*
*
OUTPUT1  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT1,                       X
               RECFM=FB,LRECL=16
INPUT1   DCB   DSORG=PO,MACRF=R,DDNAME=INPUT1,EODAD=READDIR,           X
               RECFM=U
         END
