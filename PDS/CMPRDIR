         PRINT NOGEN
CMPRDIR  SVLNK R3
**********************************************************************
* COMPARES THE MEMBER NAMES IN THE DIRECTORIES OF THE TWO PDS'S      *
* SPECIFIED BY THE INPUT1 AND INPUT2 DD STATEMENTS. WHEN IDENTICAL   *
* MEMBER NAMES ARE FOUND THE NAME IS WRITTEN TO THE OUTBOTH FILE LEFT*
* JUSTIFIED IN AN 80-BYTE RECORD. IF A MEMBER IS NOT COMMON TO BOTH  *
* DIRECTORIES, IT IS WRITTEN TO EITHER THE OUT1ONLY OR OUT2ONLY FILE *
* DEPENDING ON WHETHER IT IS FOUND IN THE INPUT1 FILE ONLY OR IN THE *
* INPUT2 FILE ONLY.                                                  *
* THIS PROGRAM CAN BE USED TO AID IN LOCATION OF THOSE MODULES FOR   *
* A PRODUCT THAT HAVE BEEN COPIED INTO SYSTEM LIBRARIES SUCH AS      *
*    SYS1.LINKLIB                                                    *
*    SYS1.LPALIB                                                     *
*    SYS1.SYSX.HNET.LPALIB                                           *
*    SYS1.SYSX.HNET.LINKLIB                                          *
* AUTHOR R THORNTON 12/2/91                                          *
**********************************************************************
         OPEN  (INPUT1,,INPUT2)         OPEN INPUT FILES
         OPEN  (OUTBOTH,OUTPUT,OUT1ONLY,OUTPUT,OUT2ONLY,OUTPUT) OUTPUT
**********************************************************************
*   MAINLINE: COMPARE DIRECTORIES, WRITING  COMMON MEMBER NAMES      *
**********************************************************************
MAINLINE CLI   READ1,1                 SHOULD INPUT1 DIRECTORY BE READ?
         BNE   MLCHK2                  NO
         MVI   READ1,0                 RESET INPUT1 READ INDICATOR
         BAL   R9,READDIR1             READ INPUT1 DIRECTORY ENTRY
         CLI   MEMNAME1,EOF            END OF INPUT1 DIRECTORY?
         BNE   MLCHK2                  NO, CONTINUE
         CLI   MEMNAME2,EOF            ALSO END OF INPUT2 DIRECTORY?
         BE    EOJ                     YES
MLCHK2   CLI   READ2,1                 SHOULD INPUT2 DIRECTORY BE READ?
         BNE   MLCOMPR                 NO
         MVI   READ2,0                 RESET INPUT2 READ INDICATOR
         BAL   R9,READDIR2             READ INPUT2 DIRECTORY ENTRY
         CLI   MEMNAME2,EOF            END OF INPUT2 DIRECTORY?
         BNE   MLCOMPR                 NO, CONTINUE
         CLI   MEMNAME1,EOF            ALSO END OF INPUT1 DIRECTORY?
MLCOMPR  CLC   MEMNAME1,MEMNAME2       MEMBER NAMES THE SAME?
         BE    MLCOMMON                YES
         BL    ML1LOW                  NO, AND INPUT1 MEMBER NAME LOW
         MVI   READ2,1                 INPUT2 LOW, INDICATE READ
         MVC   OUTMEMBR,MEMNAME2       MEMBER NAME TO OUTPUT
         PUT   OUT2ONLY,OUTREC         WRITE OUTPUT RECORD
         B     MAINLINE                AND CONTINUE
ML1LOW   MVI   READ1,1                 INPUT1 LOW, INDICATE READ
         MVC   OUTMEMBR,MEMNAME1       MEMBER NAME TO OUTPUT
         PUT   OUT1ONLY,OUTREC         WRITE OUTPUT RECORD
         B     MAINLINE                AND CONTINUE
MLCOMMON MVI   READ1,1                 INDICATE INPUT1 READ
         MVI   READ2,1                 INDICATE INPUT2 READ
         MVC   OUTMEMBR,MEMNAME2       MEMBER NAME TO OUTPUT
         PUT   OUTBOTH,OUTREC          WRITE OUTPUT RECORD
         B     MAINLINE                AND CONTINUE
**********************************************************************
*   READ NEXT DIRECTORY ENTRY FROM INPUT1                            *
**********************************************************************
READDIR1 LH    R12,REMBYT1             GET NBR BYTES REMAINING IN BLOCK
         CH    R12,ELEVEN              ANY MORE ENTRIES IN BLOCK
         BNL   GETADR1                 YES
NEXREC1  GET   INPUT1                  READ DIRECTORY BLOCK
         LR    R12,R1                  GET BLOCK ADDRESS
         MVC   REMBYT1,0(R12)          MOVE NBR BYTES IN BLOCK
         CLC   REMBYT1,ZERO            ANY BYTES IN BLOCK
         BE    EOF1                    NO, EOF
         LA    R12,2(R12)              STEP PAST BLOCK SIZE FIELD
         ST    R12,RECADDR1            STORE RECORD ADDRESS
GETADR1  L     R12,RECADDR1            GET NEXT ENTRY ADDRESS
         MVC   DIRECT1,0(R12)          MOVE MEMBER ENTRY TO CALLER
         NI    11(R12),CLRBITS         CLEAR ALIAS, TTR BITS
         SR    R11,R11                 CLEAR WORK REG
         IC    R11,11(R12)             GET NBR USER HALFWORDS
         SLL   R11,1                   MULTIPLY BY 2
         LA    R11,12(R11)             CALCULATE RECORD LENGTH
         LH    R12,REMBYT1             GET NBR BYTES REMAINING
         SR    R12,R11                 SUBTRACT THIS ENTRY LENGTH
         BP    STREM1                  ANY LEFT
         SR    R12,R12                 NO, SET TO ZERO
STREM1   STH   R12,REMBYT1             STORE REMAINING BYTES
         A     R11,RECADDR1            CALCULATE NEXT ENTRY ADDRESS
         ST    R11,RECADDR1            STORE NEXT ENTRY ADDRESS
         BR    R9                      GO BACK TO CALLER
EOF1     MVI   MEMNAME1,X'FF'          SET EOF FLAG
         BR    R9                      GO BACK TO CALLER
**********************************************************************
*   READ NEXT DIRECTORY ENTRY FROM INPUT2                            *
**********************************************************************
READDIR2 LH    R12,REMBYT2             GET NBR BYTES REMAINING IN BLOCK
         CH    R12,ELEVEN              ANY MORE ENTRIES IN BLOCK
         BNL   GETADR2                 YES
NEXREC2  GET   INPUT2                  READ DIRECTORY BLOCK
         LR    R12,R1                  GET BLOCK ADDRESS
         MVC   REMBYT2,0(R12)          MOVE NBR BYTES IN BLOCK
         CLC   REMBYT2,ZERO            ANY BYTES IN BLOCK
         BE    EOF2                    NO, EOF
         LA    R12,2(R12)              STEP PAST BLOCK SIZE FIELD
         ST    R12,RECADDR2            STORE RECORD ADDRESS
GETADR2  L     R12,RECADDR2            GET NEXT ENTRY ADDRESS
         MVC   DIRECT2,0(R12)          MOVE MEMBER ENTRY TO CALLER
         NI    11(R12),CLRBITS         CLEAR ALIAS, TTR BITS
         SR    R11,R11                 CLEAR WORK REG
         IC    R11,11(R12)             GET NBR USER HALFWORDS
         SLL   R11,1                   MULTIPLY BY 2
         LA    R11,12(R11)             CALCULATE RECORD LENGTH
         LH    R12,REMBYT2             GET NBR BYTES REMAINING
         SR    R12,R11                 SUBTRACT THIS ENTRY LENGTH
         BP    STREM2                  ANY LEFT
         SR    R12,R12                 NO, SET TO ZERO
STREM2   STH   R12,REMBYT2             STORE REMAINING BYTES
         A     R11,RECADDR2            CALCULATE NEXT ENTRY ADDRESS
         ST    R11,RECADDR2            STORE NEXT ENTRY ADDRESS
         BR    R9                      GO BACK TO CALLER
EOF2     MVI   MEMNAME2,X'FF'          SET EOF FLAG
         BR    R9                      GO BACK TO CALLER
**********************************************************************
*   END OF JOB                                                       *
**********************************************************************
EOJ      CLOSE (OUTBOTH,,OUT1ONLY,,OUT2ONLY,,INPUT1,,INPUT2) CLOSES
         L     R13,4(R13)              GET CALLER'S SAVE ADDRESS
         LM    R14,R12,12(R13)         GET CALLER'S REGISTERS
         SR    R15,R15                 ZERO RETURN CODE
         BR    R14                     RETURN TO CALLER
**********************************************************************
*   DATA, FILE, AND STORAGE AREAS                                    *
**********************************************************************
ELEVEN   DC    H'11'
ZERO     DC    H'0'
CLRBITS  EQU   X'1F'
READ     DC    C'R'                    READ PARAMETER
EOF      EQU   X'FF'
*
OUTREC   DS    0CL80                   OUTPUT RECORD
OUTMEMBR DS    CL8                     COMMON MEMBER NAME
         DC    CL72' '
*
REMBYT1  DC    H'0'                    BYTES REMAINING IN BLOCK
RECADDR1 DS    F
OPEN1    DC    CL9'OINPUT1'            OPEN INPUT1 PARAMETER LIST
READ1    DC    X'01'                   READ INPUT1 INDICATOR
DIRECT1  DS    0CL11                   DIRECTORY DATA
MEMNAME1 DS    CL8                     MEMBER NAME
MEMTTR1  DS    XL3                     TTR OF FIRST BLOCK
*
REMBYT2  DC    H'0'                    BYTES REMAINING IN BLOCK
RECADDR2 DS    F
OPEN2    DC    CL9'OINPUT2'            OPEN INPUT2 PARAMETER LIST
READ2    DC    X'01'                   READ INPUT2 INDICATOR
DIRECT2  DS    0CL11                   DIRECTORY DATA
MEMNAME2 DS    CL8                     MEMBER NAME
MEMTTR2  DS    XL3                     TTR OF FIRST BLOCK
*
OUTBOTH  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTBOTH,                       X
               RECFM=FB,LRECL=80
OUT1ONLY DCB   DSORG=PS,MACRF=PM,DDNAME=OUT1ONLY,                      X
               RECFM=FB,LRECL=80
OUT2ONLY DCB   DSORG=PS,MACRF=PM,DDNAME=OUT2ONLY,                      X
               RECFM=FB,LRECL=80
INPUT1   DCB   DSORG=PS,MACRF=GL,DDNAME=INPUT1,                        X
               RECFM=F,LRECL=256,BLKSIZE=256,EODAD=EOF
INPUT2   DCB   DSORG=PS,MACRF=GL,DDNAME=INPUT2,                        X
               RECFM=F,LRECL=256,BLKSIZE=256,EODAD=EOF
         END
