      TITLE '*** FILES: STRIPS THE LIST OF ALL DATASETS FILE ***'
FILES CSECT
***********************************************************************
* READS THE FILE WRITTEN DAILY FOR RIGGEN CONSULTING THAT CONTAINS AN *
* ENTRY FOR EVERY DATASET ON EVERY ONLINE DASD VOLUME. THE PROGRAM    *
* SHOULD BE SPECIALIZED FOR EACH USE. ITS PRINCIPAL VALUE LIES IN     *
* PROVIDING A SKELETON CONTAINING THE FILE DEFINITION AND AN OUTPUT   *
* FILE TO CONTAIN THE STRIPPED RECORDS.                               *
*                                                                     *
* USE THE JCL IN BC0THOR.PDS.JCL(FILES) WHICH INCLUDES AN ALLOCATION  *
* FOR THE FILE: CIM.PRD.DMS.DASD.DATA(0)                              *
*                                                                     *
* PRESENTLY: WRITE AN OUTPUT RECORD FOR EVERY NON-TSO PDS HAVING      *
*            RECFM=FB,LRECL=80.                                       *
* OUTPUT RECORD CONTAINS DSNAME, VOLSER, DSORG, RECFM, LRECL, AND     *
*            BLKSIZE.                                                 *
*                                                                     *
* AUTHOR R THORNTON JUN 1999                                          *
***********************************************************************
*
***********************************************************************
*        SAVE REGISTERS, SET UP BASE REGS, CHAIN SAVE AREAS           *
***********************************************************************
         USING FILES,R3,R4
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)             SET UP SECOND
         LA    R4,1(R4)                    BASE REGISTER
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     OPENS                   BRANCH AROUND CONSTANTS
         DC    CL8'FILES'              PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
***********************************************************************
*        OPEN FILES                                                   *
***********************************************************************
OPENS    OPEN  (PRINT1,OUTPUT,OUTPUT1,OUTPUT,INPUT1)  OPEN FILES
***********************************************************************
*             MAINLINE ROUTINE                                        *
***********************************************************************
MAINLINE BAS   R9,GETIN                READ INPUT RECORD
         CLC   DSORG,=CL3'PO '         IS IT A PDS?
         BNE   MAINLINE                NO, DROP IT
         CLC   RECFM,=CL5'FB  '        FIXED-BLOCKED RECORDS?
         BNE   MAINLINE                NO, DROP IT
         CLC   LRECL,=CL5'   80'       LRECL=80?
         BNE   MAINLINE                NO, DROP IT
*        CLC   DSNAME(3),=CL3'BC0'     TSO USER DATASET?
*        BE    MAINLINE                YES, DROP IT
*        CLC   DSNAME(4),=CL4'USER'    TSO USER DATASET?
*        BE    MAINLINE                YES, DROP IT
*        CLC   DSNAME(3),=CL3'CB0'     TSO USER DATASET?
*        BE    MAINLINE                YES, DROP IT
*        CLI   DSNAME,C'H'             DSNAME STARTS WITH H?
*        BE    TESTMORE                YES, TEST FOR FOLLOWING NUMERICS
*        CLI   DSNAME,C'T'             DSNAME STARTS WITH T?
*        BE    TESTMORE                YES, TEST FOR FOLLOWING NUMERICS
*        CLI   DSNAME,C'P'             DSNAME STARTS WITH P?
*        BE    TESTMORE                YES, TEST FOR FOLLOWING NUMERICS
*        B     WRITEIT                 GO WRITE TO OUTPUT
*TESTMORE CLI   DSNAME+1,C'0'           SECOND BYTE OF NAME NUMERIC?
*        BL    WRITEIT                 NO, GO WRITE TO OUTPUT
*        CLI   DSNAME+1,C'9'           SECOND BYTE OF NAME NUMERIC?
*        BH    WRITEIT                 NO, GO WRITE TO OUTPUT
*        CLI   DSNAME+2,C'0'           THIRD BYTE OF NAME NUMERIC?
*        BL    WRITEIT                 NO, GO WRITE TO OUTPUT
*        CLI   DSNAME+2,C'9'           THIRD BYTE OF NAME NUMERIC?
*        BH    WRITEIT                 NO, GO WRITE TO OUTPUT
*        B     MAINLINE                LETTER-NUMBER-NUMBER, DROP IT
         LA    R9,DSNAME               POINT TO DSNAME
SRCHPFS  TRT   0(44,R9),TRTTBL         SEARCH FOR A 'P'
         BZ    MAINLINE                NOT FOUND
         C     R1,=A(DSNAME+41)        AT END OF DSNAME?
         BH    MAINLINE                YES
         CLC   0(3,R1),=CL3'PFS'       DSNAME CONTAINS 'PFS'?
         BE    WRITEIT                 YES
         LA    R9,1(R1)                POINT PAST THIS 'P'
         B     SRCHPFS                 CONTINUE SEARCH FOR 'PFS'
TRTTBL   DC    256X'00'                SCAN TABLE
         ORG   TRTTBL+C'P'             STOP ON C'P'
         DC    C'P'
         ORG
WRITEIT  MVC   ODSNAME,DSNAME          MOVE DSNAME
         MVC   OVOLSER,VOLSER          MOVE VOLSER
         MVC   ODSORG,DSORG            MOVE DSORG
         MVC   ORECFM,RECFM            MOVE RECFM
         MVC   OLRECL,LRECL            MOVE LRECL
         MVC   OBLKSIZE,BLKSIZE        MOVE BLKSIZE
         BAS   R9,PUTOUT               WRITE OUTPUT RECORD
         B     MAINLINE                LOOP THROUGH INPUT FILE
***********************************************************************
*             READ INPUT FILE SUBROUTINE                              *
***********************************************************************
GETIN    GET   INPUT1,INREC            READ NEXT RECORD
         AP    INPCOUNT,P1             INCREMENT COUNTER
         BR    R9                      RETURN TO CALLER
***********************************************************************
*             WRITE RECORD TO OUTPUT FILE SUBROUTINE                  *
***********************************************************************
PUTOUT   PUT   OUTPUT1,OUTREC          WRITE THE RECORD
         MVC   OUTREC,BLANKS           CLEAR FOR NEXT RECORD
         AP    OUTCOUNT,P1             INCREMENT COUNTER
         BR    R9                      RETURN TO CALLER
***********************************************************************
*             PRINT SUBROUTINE                                        *
***********************************************************************
PRINT    PUT   PRINT1,PRTLINE          WRITE PRINT LINE
         MVC   PRTLINE,BLANKS          CLEAR PRINT LINE
         BR    R9                      NO, RETURN
***********************************************************************
*             END OF JOB                                              *
***********************************************************************
EOJ      MVC   PRT(12),TOTLEDIT        EDIT MASK
         ED    PRT(12),INPCOUNT        EDIT INPUT COUNTER
         MVC   PRT+13(12),=CL12'RECORDS READ' IDENTIFY COUNT
         BAS   R9,PRINT                PRINT COUNT
         MVC   PRT(12),TOTLEDIT        EDIT MASK
         ED    PRT(12),OUTCOUNT        EDIT OUTPUT COUNTER
         MVC   PRT+13(15),=CL15'RECORDS WRITTEN' IDENTIFY COUNT
         BAS   R9,PRINT                PRINT COUNT
         CLOSE (OUTPUT1,,PRINT1,,INPUT1) CLOSE FILES
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         L     R14,12(R13)             RESTORE RETURN REG: R14
         L     R15,RETCODE             SET RETURN CODE
         LM    R0,R12,20(R13)          RESTORE CALLER'S REGS 0-12
         BR    R14                     RETURN
***********************************************************************
*        STORAGE AND FILE AREAS                                       *
***********************************************************************
*
DBLWD    DS    D                       DOUBLEWORD WORK AREA
RETCODE  DS    F                       RETURN CODE
H0       DC    H'0'                    HEX ZERO
P0       DC    P'0'                    PACKED 0
P1       DC    P'1'                    PACKED 1
HIVALUS  DC    XL8'FFFFFFFFFFFFFFFF'   HIGH-VALUES
INPCOUNT DC    PL5'0'                  INPUT RECORD COUNTER
OUTCOUNT DC    PL5'0'                  OUTPUT RECORD COUNTER
TOTLEDIT DC    XL12'402020206B2020206B202120' EDIT MASK FOR TOTAL
BLANKS   DC    CL133' '                BLANKS
TSTNUM   DC    CL4'0000'               NUMERIC TEST AREA
ZEROS    DC    CL4'0000'               NUMERIC TEST CONSTANT
*
PRTLINE  DS    0CL133                  PRINT LINE
PCC      DS    CL1                     CARRIAGE CONTROL
PRT      DS    0CL132                  PRINT DATA
         DS    CL132
*
OUTREC   DS    0CL80                    OUTPUT RECORD
ODSNAME  DC    CL44' '                    DSNAME
         DC    CL1' '
OVOLSER  DC    CL6' '                     VOLUME SERIAL
         DC    CL1' '
ODSORG   DC    CL3' '                     DSORG
         DC    CL1' '
ORECFM   DC    CL3' '                     RECFM
         DC    CL1' '
OLRECL   DC    CL5' '                     LRECL
         DC    CL1' '
OBLKSIZE DC    CL5' '                     BLKSIZE
         DC    CL9' '
*
INREC    DS    0CL156                   INPUT RECORD
DSNAME   DS    CL44                       DSNAME (OR ****VTOC, ETC)
         DS    CL1
VOLSER   DS    CL6                        VOLUME SERIAL
         DS    CL1
UADR     DS    CL4                        UNIT ADDRESS (4 HEX DIGITS)
         DS    CL2
TRVOL    DS    CL5                        TRACKS PER VOLUME (LDG BLKS)
         DS    CL1
CTLGD    DS    CL3                        CATALOGED INDIC: YES, ERR,
*                                           NO, BLANK
         DS    CL1
DSORG    DS    CL3                        DATASET ORGANIZATION: PO,
*                                           PS, EF (VSAM), **, DA, POE,
*                                           PSU, IAM, BLANKS
         DS    CL1
RECFM    DS    CL5                        RECORD FORMAT: BLANKS, **,
*                                           F, FA, FB, FM, FS, FBA,
*                                           FBM, FBS, U, V, VA, VB,
*                                           VBA, VBM, VBS, VS
         DS    CL1
BLKSIZE  DS    CL5                        BLOCK SIZE (LEADING BLANKS)
         DS    CL1
LRECL    DS    CL5                        LOGICAL RECORD LENGTH (LD BK)
         DS    CL1
PRIALLOC DS    CL8                        PRIMARY ALLOCATION (LD BLKS)
         DS    CL1
SECALLOC DS    CL8                        SECONDARY ALLOCATION (LD BLK)
         DS    CL1
ALLOC    DS    CL6                        ACTUAL ALLOCATION (LEAD BLKS)
         DS    CL1
FREE     DS    CL6                        TOTAL FREE SPACE (LEAD BLKS)
         DS    CL1
PCTFREE  DS    CL3                        PERCENT FREE SPACE (LD BKS)
         DS    CL1
EXT      DS    CL3                        NUMBER EXTENTS (LEADING BLKS)
         DS    CL1
CRDATE   DS    CL8                        CREATION DATE YYYY.DDD
         DS    CL1
EXPDATE  DS    CL8                        EXPIRATION DATE YYYY.DDD
         DS    CL1
LRDATE   DS    CL8                        LAST REFERENCED DATE YYYY.DDD
*
***********************************************************************
*             DCB'S                                                   *
***********************************************************************
OUTPUT1  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT1,                       X
               RECFM=FB,LRECL=80
PRINT1   DCB   DSORG=PS,MACRF=PM,DDNAME=PRINT1,                        X
               RECFM=FBA,LRECL=133
INPUT1   DCB   DSORG=PS,MACRF=GM,DDNAME=INPUT1,EODAD=EOJ,              X
               RECFM=FB,LRECL=156
         LTORG
FILES CSECT
***********************************************************************
*             REGISTER EQUATES                                        *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
