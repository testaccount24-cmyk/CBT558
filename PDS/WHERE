         PRINT NOGEN
         TITLE '*****WHERE: LOCATES MODULES/ADDRESSES *****'
WHERE SVLNK R3,R4
*
***********************************************************************
* USER PROVIDES A MODULE NAME OR STORAGE ADDRESS IN THE PARM FIELD    *
* OR AS 80-BYTE RECORDS IN THE SYSIN FILE. THE COMMON SYSTEM AREAS    *
* ARE SEARCHED TO LOCATE THE MODULE OR ADDRESS, AND INFORMATION ABOUT *
* IT IS PRINTED TO THE SYSPRINT FILE.                                 *
* AUTHOR R THORNTON OCT 1990                                          *
***********************************************************************
*
***********************************************************************
* INITIALIZATION: OPEN FILES AND PRINT FIRST PAGE HEADING             *
***********************************************************************
*
         L     R2,0(R1)                POINT TO PARM DATA
         OPEN  (SYSPRINT,OUTPUT)       OPEN PRINT FILE
         LH    R12,0(R2)               GET PARM LENGTH
         LTR   R12,R12                 ANY PARM DATA?
         BZ    OPENIN                  NO
         MVI   SWITCH,C'P'             INDICATE EXEC PARM USED
         BCTR  R12,0                   COMPUTE PARM LENGTH CODE
         EX    R12,MOVPARM             MOVE PARM DATA
         B     GOMAIN                  CONTINUE
MOVPARM  MVC   COMMAND(1),2(R2)        EXECUTED MOVE
OPENIN   OPEN  SYSIN                   OPEN SYSIN FILE
         BAS   R9,GETIN                READ SYSIN RECORD
         MVI   SWITCH,C'S'             INDICATE SYSIN FILE USED
GOMAIN   LA    R12,MAINLINE            POINT TO MAINLINE
         O     R12,HIBITON             TURN ON 31-BIT ADDRESS BIT
         BSM   0,R12                   GO TO MAINLINE IN 31-BIT MODE
NOCOMND  LA    R12,LEGEND              POINT TO LEGEND LINE TABLE
CKLEGND  CLI   0(R12),X'FF'            END OF LEGEND LINES?
         BE    EOJ                     YES
         MVC   PRT,0(R12)              LEGEND LINE TO PRINT AREA
         BAS   R9,PRINT                GO WRITE LEGEND LINE
         LA    R12,L'LEGEND(R12)       STEP TO NEXT ENTRY
         B     CKLEGND                 LOOP TO PRINT LEGEND
*
***********************************************************************
* MAINLINE PROCESSING: TEST FOR HEX ADDRESS OR CHARACTER MODULE NAME  *
* IN 1ST 8 BYTES OF COMMAND INPUT. IF HEX, CONVERT TO REAL HEX ADDRESS*
* OTHERWISE ASSUME MEMBER NAME GIVEN. SEARCH COMMON DIRECTORY ENTRIES *
* FOR THE MODULE NAME/ADDRESS.                                        *
***********************************************************************
*
MAINLINE CLC   COMMAND(5),=CL5'*MAP*'  VIRTUAL STORAGE MAP REQUESTED?
         BE    DOMAP                   YES
         XC    ADDRESS,ADDRESS         CLEAR ADDRESS AREA TO BLANKS
         MVC   NAME,BLANKS             CLEAR NAME TO BLANKS
         TRT   COMMAND(8),TESTHEX      IS INPUT COMMAND ALL HEX?
         BNZ   NOTHEX                  NO
         MVC   CNVTWORK,COMMAND        MOVE HEX TO CONVERT
         TR    CNVTWORK,TRREAL         TRANSLATE CHARS TO HEX
         PACK  ADDRESS(5),CNVTWORK(9)  PACK TO MAKE REAL
         NI    ADDRESS,B'01111111'     TURN OFF HIGH ORDER BIT
NOTHEX   CLI   COMMAND,C'A'            1ST BYTE IS ALFA?
         BL    STRTSRCH                NO
         CLI   COMMAND,C'Z'            1ST BYTE IS ALFA?
         BH    STRTSRCH                NO
         MVC   NAME,COMMAND            YES, MOVE TO NAME FIELD
STRTSRCH L     R1,16                   POINT TO CVT
         SR    R12,R12                 CLEAR LPDE POINTER
         ICM   R12,7,361(R1)           POINT TO 1ST LPDE (CVTLPDIR)
         USING LPDE,R12
GETLPDE  LA    R12,0(R12)              CLEAR HI-ORDER
         CLI   LPDENAME,0              ANY MORE LPDE'S?
         BE    DOCDES                  NO
         CLC   NAME,LPDENAME           FOUND MATCHING LPDE?
         BE    GOTLPDE                 YES
         CLC   LPDEMJP,XZROS           THIS A MAJOR LPDE?
         BNE   ADVLPDE                 NO, SKIP IT
         L     R11,LPDEXTAD            GET LOAD POINT ADDRESS
         LA    R11,0(R11)              CLEAR HI ORDER
         C     R11,ADDRESS             ADDRESS  AT OR ABOVE LD PT?
         BH    ADVLPDE                 NO
         A     R11,LPDEXTLN            COMPUTE END OF MODULE ADDR+1
         BCTR  R11,0                   BACK UP 1
         C     R11,ADDRESS             ADDRESS IN THIS MODULE?
         BL    ADVLPDE                 NO
GOTLPDE  BAS   R9,FORMLPDE             GO FORMAT LPDE
ADVLPDE  LA    R12,LPDELENG(R12)       POINT TO NEXT LPDE
         B     GETLPDE                 CONTINUE LPDE SEARCH
         DROP  R12
DOCDES   L     R1,16                   POINT TO CVT
         L     R12,188(R1)             GET CVTQLPAQ
         L     R12,0(R12)              POINT TO 1ST CDE
         LA    R12,0(R12)              CLEAR HIGH ORDER
         USING CDE,R12
GETCDE   LA    R12,0(R12)              CLEAR HI-ORDER
         LTR   R12,R12                 ANY MORE CDE'S?
         BE    DONUC                   NO
         SR    R11,R11                 CLEAR XTLST POINTER
         CLC   NAME,CDNAME             FOUND MATCHING CDE?
         BE    GOTCDE                  YES
         TM    CDATTR,X'04'            THIS A MINOR CDE?
         BO    ADVCDE                  YES, SKIP IT
         L     R11,CDXLMJP             POINT TO XTLST
         USING XTLST,R11
         L     R10,XTLMSBAD            GET LOAD POINT ADDRESS
         LA    R10,0(R10)              CLEAR HI ORDER
         C     R10,ADDRESS             ADDRESS  AT OR ABOVE LD PT?
         BH    ADVCDE                  NO
         SR    R14,R14                 CLEAR FOR INSERT
         ICM   R14,7,XTLMSBLN          GET MODULE LENGTH
         AR    R10,R14                 COMPUTE END OF MODULE ADDR+1
         BCTR  R10,0                   BACK UP 1
         C     R10,ADDRESS             ADDRESS IN THIS MODULE?
         BL    ADVCDE                  NO
GOTCDE   BAS   R9,FORMCDE              YES
ADVCDE   L     R12,CDCHAIN             POINT TO NEXT LPDE
         B     GETCDE                  CONTINUE CDE SEARCH
         DROP  R11
         DROP  R12
DONUC    L     R1,16                   POINT TO CVT
         L     R12,1200(R1)            GET CVTNUCMP
         USING NUCMP,R12
         L     R10,NUCMADDR            GET POINTER TO END OF LIST
         LA    R10,0(R10)              CLEAR HIGH-ORDER
         LA    R12,L'NUCMENT(R12)      POINT PAST 1ST NUCMAP ENTRY
GETNUC   CR    R12,R10                 ANY MORE ENTRIES?
         BNL   TSTFND                  NO
         TM    NUCMFLAG,X'10'          THIS A CSECT ENTRY?
         BZ    NUCNAME                 NO
         ST    R12,NUCSADR             YES, SAVE ITS ADDRESS
NUCNAME  CLC   NAME,NUCMNAME           FOUND THE SPECIFIED NAME?
         BE    DONUCL                  YES
         CLC   NUCMADDR,=X'00000000'   VALID EPA ADDRESS?
         BE    STEPNUC                 NO
         CLC   ADDRESS,NUCMADDR        FOUND THE SPECIFIED ADDRESS?
         BL    STEPNUC                 NO
         SR    R1,R1                   CLEAR FOR INSERT
         ICM   R1,7,NUCMLEN            GET CSECT LENGTH
         A     R1,NUCMADDR             ADD STARTING ADDRESS
         C     R1,ADDRESS              FOUND SPECIFIED ADDRESS?
         BL    STEPNUC                 NO
DONUCL   BAS   R9,GOTNUC               YES
STEPNUC  LA    R12,L'NUCMENT(R12)      NO, STEP TO NEXT ENTRY
         B     GETNUC                  CONTINUE SEARCH
         DROP  R12
TSTFND   CLI   FNDSW,1                 ANY FOUND?
         BE    TESTS                   YES
         MVC   PRT,NOTFDMSG            MESSAGE TO PRINT
         BAS   R9,PRINT                PRINT MESSAGE
TESTS    CLI   SWITCH,C'S'             COMMANDS FROM SYSIN?
         BNE   NOCOMND                 NO, RETURN
         BAS   R9,GETIN                READ NEXT COMMAND
         B     MAINLINE                AND GO READ AGAIN
*
***********************************************************************
*        FOUND A CDE, WHOSE ADDRESS IS IN R12                         *
***********************************************************************
*
         USING CDE,R12
FORMCDE  ST    R9,FC9                  SAVE RETURN ADDRESS
         ST    R12,FC12                SAVE CDE ADDRESS
         MVI   FNDSW,1                 SHOW FOUND
FORMNXCD ST    R12,HEXWORK             CONVERT
         UNPK  CDE1ADR,HEXWORK(5)        CDE ADDRESS
         TR    CDE1ADR,TRCHAR-240          TO PRINTABLE
         MVI   CDE1ADR+8,C' '          CLEAR OUT TRASH
         MVC   CDE1NAME,CDNAME         MOVE MODULE NAME TO PRINT
         UNPK  CDE1EPAD,CDENTPT(5)       CDE ADDRESS
         TR    CDE1EPAD,TRCHAR-240         TO PRINTABLE
         MVI   CDE1EPAD+8,C' '         CLEAR OUT TRASH
         MVC   PRT,CDE1                CDE LINE 1 TO PRT
         BAS   R9,PRINT                PRINT LINE 1
         TM    CDATTR,X'04'            IS THIS A MINOR CDE?
         BZ    GOTMAJOR                NO
         MVC   CDE2NAME,CDNAME         CDE NAME TO PRINT
         L     R12,CDXLMJP             POINT TO MAJOR CDE
         MVC   CDE2MAJR,CDNAME         MAJOR NAME TO PRINT
         MVC   PRT,CDE2                ALIAS LINE TO PRINT
         BAS   R9,PRINT                PRINT ALIAS LINE
         B     FORMNXCD                GO PRINT MAJOR CDE INFO
GOTMAJOR L     R11,CDXLMJP             POINT TO XTLST
         USING XTLST,R11
         UNPK  CDE3LDPT,XTLMSBAD(5)      LOAD POINT ADDRESS
         TR    CDE3LDPT,TRCHAR-240         TO PRINTABLE
         MVI   CDE3LDPT+8,C' '         CLEAR OUT TRASH
         MVC   HEXWORK,XTLMSBLA        CONVERT
         NI    HEXWORK,X'7F'             MODULE
         UNPK  CDE3LENG,HEXWORK(5)         LENGTH
         TR    CDE3LENG,TRCHAR-240           TO PRINTABLE
         MVI   CDE3LENG+8,C' '         CLEAR OUT TRASH
         L     R1,XTLMSBAD             PICK UP LOAD POINT ADDRESS
         LA    R1,0(R1)                CLEAR HIGH ORDER
         L     R2,XTLMSBLA             PICK UP LENGTH
         LA    R2,0(R2)                CLEAR HIGH ORDER
         AR    R1,R2                   COMPUTE MODULE END ADDRESS
         BCTR  R1,0                    BACK UP TO LAST BYTE
         ST    R1,HEXWORK              STORE MODULE END ADDRESS
         UNPK  CDE3ENDA,HEXWORK(5)       LOAD POINT ADDRESS
         TR    CDE3ENDA,TRCHAR-240         TO PRINTABLE
         MVI   CDE3ENDA+8,C' '         CLEAR OUT TRASH
         MVC   PRT,CDE3                ALIAS LINE TO PRINT
         BAS   R9,PRINT                PRINT LAST LINE
         BAS   R9,PRINT                PRINT BLANK SEPARATOR LINE
FCXIT    L     R12,FC12                GET ORIGINAL CDE ADDRESS
         L     R9,FC9                  GET RETURN ADDRESS
         BR    R9                      RETURN
         DROP  R12
         DROP  R11
*
***********************************************************************
*        FOUND AN LPDE (ADDRESS IS IN R12)                            *
***********************************************************************
*
         USING LPDE,R12
FORMLPDE ST    R9,FL9                  SAVE RETURN ADDRESS
         ST    R12,FL12                SAVE LPDE ADDRESS
         MVI   FNDSW,1                 SHOW FOUND
FORMNXLP ST    R12,HEXWORK             CONVERT
         UNPK  LPDE1ADR,HEXWORK(5)       LPDE ADDRESS
         TR    LPDE1ADR,TRCHAR-240         TO PRINTABLE
         MVI   LPDE1ADR+8,C' '         CLEAR OUT TRASH
         MVC   LPDE1NAM,LPDENAME       MOVE MODULE NAME TO PRINT
         UNPK  LPDE1EPA,LPDENTP(5)       E.P. ADDRESS
         TR    LPDE1EPA,TRCHAR-240         TO PRINTABLE
         MVI   LPDE1EPA+8,C' '         CLEAR OUT TRASH
         MVC   PRT,LPDE1               LPDE LINE 1 TO PRT
         BAS   R9,PRINT                PRINT LINE 1
         CLC   LPDEMJP,XZROS           IS THIS A MINOR LPDE?
         BZ    GOTMAJR                 NO
         MVC   LPDE2NAM,LPDENAME       LPDE NAME TO PRINT
         L     R12,LPDEMJP             POINT TO MAJOR LPDE
         MVC   LPDE2MJR,LPDENAME       MAJOR NAME TO PRINT
         MVC   PRT,LPDE2               ALIAS LINE TO PRINT
         BAS   R9,PRINT                PRINT ALIAS LINE
         B     FORMNXLP                GO PRINT MAJOR LPDE INFO
GOTMAJR  UNPK  LPDE3LDP,LPDEXTAD(5)      LOAD POINT ADDRESS
         TR    LPDE3LDP,TRCHAR-240         TO PRINTABLE
         MVI   LPDE3LDP+8,C' '         CLEAR OUT TRASH
         MVC   HEXWORK,LPDEXTLN        CONVERT
         NI    HEXWORK,X'7F'             MODULE
         UNPK  LPDE3LNG,HEXWORK(5)         LENGTH
         TR    LPDE3LNG,TRCHAR-240           TO PRINTABLE
         MVI   LPDE3LNG+8,C' '         CLEAR OUT TRASH
         L     R1,LPDEXTAD             PICK UP LOAD POINT ADDRESS
         LA    R1,0(R1)                CLEAR HIGH ORDER
         L     R2,LPDEXTLN             PICK UP LENGTH
         LA    R2,0(R2)                CLEAR HIGH ORDER
         AR    R1,R2                   COMPUTE MODULE END ADDRESS
         BCTR  R1,0                    BACK UP TO LAST BYTE
         ST    R1,HEXWORK              STORE MODULE END ADDRESS
         UNPK  LPDE3END,HEXWORK(5)       LOAD POINT ADDRESS
         TR    LPDE3END,TRCHAR-240         TO PRINTABLE
         MVI   LPDE3END+8,C' '         CLEAR OUT TRASH
         MVC   PRT,LPDE3               LAST LINE TO PRINT
         BAS   R9,PRINT                PRINT LAST LINE
         BAS   R9,PRINT                PRINT BLANK SEPARATOR LINE
FLXIT    L     R12,FL12                GET ORIGINAL LPDE ADDRESS
         L     R9,FL9                  GET RETURN ADDRESS
         BR    R9                      RETURN
         DROP  R12
*
***********************************************************************
*        FOUND A NUCMENT (ADDRESS IS IN REGISTER 12)                  *
***********************************************************************
*
         USING NUCMENT,R12
GOTNUC   ST    R9,GN9                  SAVE RETURN ADDRESS
         ST    R12,GN12                SAVE NUCMENT ADDRESS
         MVI   FNDSW,1                 SHOW FOUND
FORMNUCM L     R12,NUCSADR             POINT TO THE LAST NUCMAP CSECT
         MVC   NUCMNAM1,NUCMNAME       MOVE NUCLEUS CSECT NAME
         UNPK  NUCM1EPA,NUCMADDR(5)      E.P. ADDRESS
         TR    NUCM1EPA,TRCHAR-240         TO PRINTABLE
         MVI   NUCM1EPA+8,C' '         CLEAR OUT TRASH
         L     R1,NUCMADDR             PICK UP LOAD POINT ADDRESS
         LA    R1,0(R1)                CLEAR HIGH ORDER
         SR    R2,R2                   CLEAR FOR INSERT
         ICM   R2,7,NUCMLEN            PICK UP LENGTH
         AR    R1,R2                   COMPUTE MODULE END ADDRESS
         BCTR  R1,0                    BACK UP TO LAST BYTE
         ST    R1,HEXWORK              STORE MODULE END ADDRESS
         UNPK  NUCM1END,HEXWORK(5)       LOAD POINT ADDRESS
         TR    NUCM1END,TRCHAR-240         TO PRINTABLE
         MVI   NUCM1END+8,C' '         CLEAR OUT TRASH
         MVC   PRT,NUCM1               NUCMAP LINE 1 TO PRT
         BAS   R9,PRINT                PRINT LINE 1
         L     R12,GN12                POINT TO CURRENT NUCMAP ENTRY
         TM    NUCMFLAG,X'10'          IS IT THE CSECT ENTRY?
         BO    GNXIT                   YES, ALL THRU
         MVC   NUCMNAM2,NUCMNAME       NO, MOVE ENTRY POINT NAME
         UNPK  NUCM2EPA,NUCMADDR(5)      E.P. ADDRESS
         TR    NUCM2EPA,TRCHAR-240         TO PRINTABLE
         MVI   NUCM2EPA+8,C' '         CLEAR OUT TRASH
         MVC   PRT,NUCM2               LAST LINE TO PRINT
         BAS   R9,PRINT                PRINT LAST LINE
         BAS   R9,PRINT                PRINT BLANK SEPARATOR LINE
         L     R12,GN12                RESTORE NUCMENT ADDRESS
GNXIT    L     R9,GN9                  GET RETURN ADDRESS
         BR    R9                      RETURN
         DROP  R12
*
***********************************************************************
*        PRINT VIRTUAL STORAGE MAP                                    *
***********************************************************************
*
DOMAP    MVI   FNDSW,1                 SHOW FOUND
         L     R12,16                  R12 = @ CVT
         L     R11,560(R12)            R11 = @ GDA
         L     R10,1196(R12)           R10 = @ STORAGE MAP EXTENSION
M1       MVC   MAP1ST,BLANKS           PVT START IS ZERO
         MVI   MAP1ST+8,C'-'           DELIMIT ADDRESSES
         L     R1,108(R11)             GDACSA
         BCTR  R1,0                    SUBTRACT 1 FOR PVT END
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP1END,HEXWORK(5)      CONVERT CSA-1 ADDRESS
         TR    MAP1END,TRCHAR-240         TO PRINTABLE
         MVI   MAP1END+8,C' '          CLEAN OUT TRASH
M2       L     R1,108(R11)             GDACSA
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP2ST,HEXWORK(5)       CONVERT CSA ADDRESS
         TR    MAP2ST,TRCHAR-240          TO PRINTABLE
         MVI   MAP2ST+8,C'-'           DELIMIT ADDRESSES
         L     R1,8(R10)               CVTMLPAS
         BCTR  R1,0                    CVTMLPAS-1 = CSA END ADDR
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP2END,HEXWORK(5)      CONVERT CSA END ADDRESS
         TR    MAP2END,TRCHAR-240         TO PRINTABLE
         MVI   MAP2END+8,C' '          CLEAN OUT TRASH
M3       L     R1,8(R10)               CVTMLPAS
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP3ST,HEXWORK(5)       CONVERT MLPA START ADDRESS
         TR    MAP3ST,TRCHAR-240          TO PRINTABLE
         MVI   MAP3ST+8,C'-'           DELIMIT ADDRESSES
         L     R1,12(R10)              CVTMLPAE
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP3END,HEXWORK(5)      CONVERT MLPA END ADDRESS
         TR    MAP3END,TRCHAR-240         TO PRINTABLE
         MVI   MAP3END+8,C' '          CLEAN OUT TRASH
M4       L     R1,16(R10)              CVTFLPAS
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP4ST,HEXWORK(5)       CONVERT FLPA START ADDRESS
         TR    MAP4ST,TRCHAR-240          TO PRINTABLE
         MVI   MAP4ST+8,C'-'           DELIMIT ADDRESSES
         L     R1,20(R10)              CVTFLPAE
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP4END,HEXWORK(5)      CONVERT FLPA END ADDRESS
         TR    MAP4END,TRCHAR-240         TO PRINTABLE
         MVI   MAP4END+8,C' '          CLEAN OUT TRASH
M5       L     R1,24(R10)              CVTPLPAS
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP5ST,HEXWORK(5)       CONVERT PLPA START ADDRESS
         TR    MAP5ST,TRCHAR-240          TO PRINTABLE
         MVI   MAP5ST+8,C'-'           DELIMIT ADDRESSES
         L     R1,28(R10)              CVTPLPAE
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP5END,HEXWORK(5)      CONVERT PLPA END ADDRESS
         TR    MAP5END,TRCHAR-240         TO PRINTABLE
         MVI   MAP5END+8,C' '          CLEAN OUT TRASH
M6       L     R1,144(R11)             GDASQA
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP6ST,HEXWORK(5)       CONVERT SQA START ADDRESS
         TR    MAP6ST,TRCHAR-240          TO PRINTABLE
         MVI   MAP6ST+8,C'-'           DELIMIT ADDRESSES
         L     R1,32(R10)              CVTRWNS
         BCTR  R1,0                    RWNS-1 = SQA END ADDRESS
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP6END,HEXWORK(5)      CONVERT SQA END ADDRESS
         TR    MAP6END,TRCHAR-240         TO PRINTABLE
         MVI   MAP6END+8,C' '          CLEAN OUT TRASH
M7       L     R1,32(R10)              CVTRWNS
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP7ST,HEXWORK(5)       CONVERT R/W NUC START ADDRESS
         TR    MAP7ST,TRCHAR-240          TO PRINTABLE
         MVI   MAP7ST+8,C'-'           DELIMIT ADDRESSES
         L     R1,36(R10)              CVTRWNE
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP7END,HEXWORK(5)      CONVERT R/W NUC END ADDRESS
         TR    MAP7END,TRCHAR-240         TO PRINTABLE
         MVI   MAP7END+8,C' '          CLEAN OUT TRASH
M8       L     R1,40(R10)              CVTRONS
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP8ST,HEXWORK(5)       CONVERT R/O NUC START ADDRESS
         TR    MAP8ST,TRCHAR-240          TO PRINTABLE
         MVI   MAP8ST+8,C'-'           DELIMIT ADDRESSES
         L     R1,44(R10)              CVTRONE
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP8END,HEXWORK(5)      CONVERT R/O NUC END ADDRESS
         TR    MAP8END,TRCHAR-240         TO PRINTABLE
         MVI   MAP8END+8,C' '          CLEAN OUT TRASH
M9       L     R1,48(R10)              CVTERWNS
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP9ST,HEXWORK(5)       CONVERT R/O E-NUC START ADDRESS
         TR    MAP9ST,TRCHAR-240          TO PRINTABLE
         MVI   MAP9ST+8,C'-'           DELIMIT ADDRESSES
         L     R1,52(R10)              CVTERWNE
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP9END,HEXWORK(5)      CONVERT R/O E-NUC END ADDRESS
         TR    MAP9END,TRCHAR-240         TO PRINTABLE
         MVI   MAP9END+8,C' '          CLEAN OUT TRASH
M10      L     R1,152(R11)             GDAESQA
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP10ST,HEXWORK(5)      CONVERT E-SQA START ADDRESS
         TR    MAP10ST,TRCHAR-240         TO PRINTABLE
         MVI   MAP10ST+8,C'-'          DELIMIT ADDRESSES
         L     R1,56(R10)              CVTEPLPS
         BCTR  R1,0                    E-PLPA -1 IS E-SQA END
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP10END,HEXWORK(5)     CONVERT E-SQA END ADDRESS
         TR    MAP10END,TRCHAR-240        TO PRINTABLE
         MVI   MAP10END+8,C' '         CLEAN OUT TRASH
M11      L     R1,56(R10)              CVTEPLPS
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP11ST,HEXWORK(5)      CONVERT E-PLPA START ADDRESS
         TR    MAP11ST,TRCHAR-240         TO PRINTABLE
         MVI   MAP11ST+8,C'-'          DELIMIT ADDRESSES
         L     R1,60(R10)              CVTEPLPE
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP11END,HEXWORK(5)     CONVERT E-PLPA END ADDRESS
         TR    MAP11END,TRCHAR-240        TO PRINTABLE
         MVI   MAP11END+8,C' '         CLEAN OUT TRASH
M12      L     R1,64(R10)              CVTEFLPS
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP12ST,HEXWORK(5)      CONVERT E-FLPA START ADDRESS
         TR    MAP12ST,TRCHAR-240         TO PRINTABLE
         MVI   MAP12ST+8,C'-'          DELIMIT ADDRESSES
         L     R1,68(R10)              CVTEFLPE
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP12END,HEXWORK(5)     CONVERT E-FLPA END ADDRESS
         TR    MAP12END,TRCHAR-240        TO PRINTABLE
         MVI   MAP12END+8,C' '         CLEAN OUT TRASH
M13      L     R1,72(R10)              CVTEMLPS
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP13ST,HEXWORK(5)      CONVERT E-MLPA START ADDRESS
         TR    MAP13ST,TRCHAR-240         TO PRINTABLE
         MVI   MAP13ST+8,C'-'          DELIMIT ADDRESSES
         L     R1,76(R10)              CVTEMLPE
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP13END,HEXWORK(5)     CONVERT E-MLPA END ADDRESS
         TR    MAP13END,TRCHAR-240        TO PRINTABLE
         MVI   MAP13END+8,C' '         CLEAN OUT TRASH
M14      L     R1,124(R11)             GDAECSA
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP14ST,HEXWORK(5)      CONVERT E-CSA START ADDRESS
         TR    MAP14ST,TRCHAR-240         TO PRINTABLE
         MVI   MAP14ST+8,C'-'          DELIMIT ADDRESSES
         L     R1,168(R11)             GDAEPVT
         BCTR  R1,0                    GDAEPVT-1 = E-CSA END ADDRESS
         ST    R1,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP14END,HEXWORK(5)     CONVERT E-CSA END ADDRESS
         TR    MAP14END,TRCHAR-240        TO PRINTABLE
         MVI   MAP14END+8,C' '         CLEAN OUT TRASH
M15      L     R2,168(R11)             GDAEPVT
         ST    R2,HEXWORK              SAVE FOR CONVERSION
         NI    HEXWORK,X'7F'           CLEAR HI BIT
         UNPK  MAP15ST,HEXWORK(5)      CONVERT E-PVT START ADDRESS
         TR    MAP15ST,TRCHAR-240         TO PRINTABLE
         MVI   MAP15ST+8,C'-'          DELIMIT ADDRESSES
         MVC   MAP15END,BLANKS         NO END ADDRESS
         MVI   MAP15END+8,C' '         CLEAN OUT TRASH
         LA    R12,MAPLINES            POINT TO MAPLINES AREA
CKEND    CLI   0(R12),X'FF'            ALL PRINTED?
         BE    TSTFND                  YES, ALL THROUGH
         MVC   PRT,0(R12)              NO, MOVE LINE TO PRINT AREA
         BAS   R9,PRINT                AND PRINT IT
         LA    R12,L'MAPLINES(R12)     ADVANCE TO NEXT LINE
         B     CKEND                   LOOP TO PRINT ALL LINES
*
***********************************************************************
*        READ NEXT SYSIN COMMAND                                      *
***********************************************************************
*
GETIN    LA    R1,GETIN1               POINT TO GETIN1
         N     R1,HIBITOF              TURN OFF 31-BIT ADDRESS BIT
         BSM   0,R1                    GO TO GETIN1 IN 24-BIT MODE
GETIN1   GET   SYSIN,COMMAND           READ NEXT COMMAND
         CLC   COMMAND(4),=C'END '     TIME TO QUIT?
         BE    NOCOMND                 YES
         O     R9,HIBITON              TURN ON 31-BIT ADDRESS BIT
         BSM   0,R9                    EXIT IN 31-BIT MODE
*
*
***********************************************************************
*        PRINT A LINE                                                 *
***********************************************************************
*
PRINT    LA    R1,PRINT1               POINT TO PRINT1
         N     R1,HIBITOF              TURN OFF 31-BIT ADDRESS BIT
         BSM   0,R1                    GO TO PRINT1 IN 24-BIT MODE
PRINT1   PUT   SYSPRINT,PRTLINE        WRITE PRINT LINE
         MVI   PCC,C' '                SET SINGLE SPACING
         MVC   PRT,PCC                 FINISH CLEARING LINE
         O     R9,HIBITON              TURN ON 31-BIT ADDRESS BIT
         BSM   0,R9                    EXIT IN 31-BIT MODE
*
***********************************************************************
*        END OF INPUT FILE AND END OF JOB                             *
***********************************************************************
*
EOJ      LA    R1,EOJ1                 POINT TO EOJ1
         N     R1,HIBITOF              TURN OFF 31-BIT ADDRESS BIT
         BSM   0,R1                    GO TO EOJ1 IN 24-BIT MODE
EOJ1     CLI   SWITCH,C'P'             PARM DATA INPUT?
         BE    CLOSPR                  YES
         CLOSE SYSIN                   CLOSE SYSIN FILE
CLOSPR   CLOSE SYSPRINT                CLOSE PRINT FILE
         L     R13,4(R13)              GET CALLER'S SAVE ADDRESS
         LM    R14,R12,12(R13)         GET CALLER'S REGISTERS
         SR    R15,R15                 ZERO RETURN CODE
         BR    R14                     RETURN TO CALLER
*
***********************************************************************
*        STORAGE AND FILE AREAS                                       *
***********************************************************************
*
FL9      DS    A                       FORMLPDE RETURN ADDRESS
FL12     DS    A                       FORMLPDE LPDE ADDRESS
FC9      DS    A                       FORMCDE RETURN ADDRESS
FC12     DS    A                       FORMCDE CDE ADDRESS
GN9      DS    A                       GOTNUC RETURN ADDRESS
GN12     DS    A                       GOTNUC NUCMENT ADDRESS
NUCSADR  DS    F                       ADDRESS OF NUCMAP CSECT ENTRY
XZROS    DC    F'0'                    CONSTANT ZEROS
HIBITON  DC    X'80000000'             HIGH BIT ON CONSTANT
HIBITOF  DC    X'7FFFFFFF'             HIGH BIT OFF CONSTANT
HEXWORK  DS    F,XL1                   HEX VALUE TO BE CONVERTED
CHARWORK DS    CL8,XL1                 PRINTABLE HEX VALUE
ADDRESS  DC    A(0),XL1'0'             ADDRESS
BLANKS   DC    CL8' '                  BLANKS
NAME     DC    CL8' '                  MODULE NAME
SWITCH   DC    C' '                    INPUT SWITCH S=SYSIN, P=PARM
FNDSW    DC    X'00'                   FOUND SWITCH 01=FOUND
CNVTWORK DS    CL8
*
PRTLINE  DS    0CL133                  PRINT LINE
PCC      DC    CL1' '                  CARR CTL BYTE
PRT      DS    0CL132
         DC    CL132' '
*
COMMAND  DC    CL80' '                 INPUT COMMAND AREA
COMMEND  DC    A(COMMAND+71)           COMMAND END
*
TRCHAR   DC    CL16'0123456789ABCDEF'  CONVERT TO PRINTABLE HEX
*
TRREAL   DC    256X'00'                CONVERT TO REAL HEX
         ORG   TRREAL+C'A'
         DC    X'0A0B0C0D0E0F'
         ORG   TRREAL+C'0'
         DC    X'00010203040506070809'
         ORG
*
TESTHEX  DC    256X'FF'
         ORG   TESTHEX+C'A'
         DC    6X'00'
         ORG   TESTHEX+C'0'
         DC    10X'00'
         ORG
*
MAPLINES DS    0CL80
MAP1     DS    0CL80
         DC    CL10'PRIVATE'
MAP1ST   DS    CL9
MAP1END  DS    CL9
         DC    CL5' '
         DC    CL46'                       (, GDACSA-1)         '
         DC    CL1' '
MAP2     DS    0CL80
         DC    CL10'CSA'
MAP2ST   DS    CL9
MAP2END  DS    CL9
         DC    CL5' '
         DC    CL46'                       (GDACSA, CVTMLPAS-1)  '
         DC    CL1' '
MAP3     DS    0CL80
         DC    CL10'MLPA'
MAP3ST   DS    CL9
MAP3END  DS    CL9
         DC    CL5' '
         DC    CL46'                       (CVTMLPAS, CVTMLPAE)  '
         DC    CL1' '
MAP4     DS    0CL80
         DC    CL10'FLPA'
MAP4ST   DS    CL9
MAP4END  DS    CL9
         DC    CL5' '
         DC    CL46'                       (CVTFLPAS, CVTFLPAE)  '
         DC    CL1' '
MAP5     DS    0CL80
         DC    CL10'PLPA'
MAP5ST   DS    CL9
MAP5END  DS    CL9
         DC    CL5' '
         DC    CL46'                       (GDASQA, CVTRWNS-1)   '
         DC    CL1' '
MAP6     DS    0CL80
         DC    CL10'SQA'
MAP6ST   DS    CL9
MAP6END  DS    CL9
         DC    CL5' '
         DC    CL46'                       (CVTPLPAS, CVTPLPAE)  '
         DC    CL1' '
MAP7     DS    0CL80
         DC    CL10'R/W NUC'
MAP7ST   DS    CL9
MAP7END  DS    CL9
         DC    CL5' '
         DC    CL46'                       (CVTRWNS, CVTRWNE)    '
         DC    CL1' '
MAP8     DS    0CL80
         DC    CL10'R/O NUC'
MAP8ST   DS    CL9
MAP8END  DS    CL9
         DC    CL5' '
         DC    CL46'                       (CVTRONS, CVTRONE)    '
         DC    CL1' '
MAP9     DS    0CL80
         DC    CL10'R/W E-NUC'
MAP9ST   DS    CL9
MAP9END  DS    CL9
         DC    CL5' '
         DC    CL46'                       (GDAESQA, CVTEPLPS-1) '
         DC    CL1' '
MAP10    DS    0CL80
         DC    CL10'E-SQA'
MAP10ST  DS    CL9
MAP10END DS    CL9
         DC    CL5' '
         DC    CL46'                       (CVTERWNS, CVTERWNE)  '
         DC    CL1' '
MAP11    DS    0CL80
         DC    CL10'E-PLPA'
MAP11ST  DS    CL9
MAP11END DS    CL9
         DC    CL5' '
         DC    CL46'                       (CVTEPLPS, CVTEPLPE)  '
         DC    CL1' '
MAP12    DS    0CL80
         DC    CL10'E-FLPA'
MAP12ST  DS    CL9
MAP12END DS    CL9
         DC    CL5' '
         DC    CL46'                       (CVTEFLPS, CVTEFLPE)  '
         DC    CL1' '
MAP13    DS    0CL80
         DC    CL10'E-MLPA'
MAP13ST  DS    CL9
MAP13END DS    CL9
         DC    CL5' '
         DC    CL46'                       (CVTEMLPS, CVTEMLPE)  '
         DC    CL1' '
MAP14    DS    0CL80
         DC    CL10'E-CSA'
MAP14ST  DS    CL9
MAP14END DS    CL9
         DC    CL5' '
         DC    CL46'                       (GDAECSA, GDAEPVT-1)  '
         DC    CL1' '
MAP15    DS    0CL80
         DC    CL10'E-PVT'
MAP15ST  DS    CL9
MAP15END DS    CL9
         DC    CL5' '
         DC    CL46'                       (GDAEPVT,)            '
         DC    CL1' '
         DC    XL4'FFFFFFFF'           END OF MAP LINES
*
CDE1     DS    0CL80                   CDE RESPONSE LINE 1
         DC    CL7'CDE AT '
CDE1ADR  DS    CL9                     ADDRESS OF CDE FOUND
         DC    CL11'FOR MODULE '
CDE1NAME DS    CL8                     NAME OF MODULE FROM CDE
         DC    CL26' WITH ENTRY POINT ADDRESS '
CDE1EPAD DS    CL9                     ENTRY POINT ADDRESS
         DC    CL10' '
*
CDE2     DS    0CL80                   CDE RESPONSE LINE 2
CDE2NAME DS    CL8                     NAME FROM MINOR CDE
         DC    CL17' IS AN ALIAS FOR '
CDE2MAJR DS    CL8                     NAME FROM MAJOR CDE
         DC    CL47' '
*
CDE3     DS    0CL80                   CDE RESPONSE LINE 3
         DC    CL17'MODULE LOADED AT '
CDE3LDPT DS    CL9                     MODULE LOAD ADDRESS
         DC    CL7'AND IS '
CDE3LENG DS    CL9                     MODULE LENGTH
         DC    CL22'BYTES LONG, ENDING AT '
CDE3ENDA DS    CL9                     MODULE END ADDRESS
         DC    CL7' '
*
LPDE1    DS    0CL80                   LPDE RESPONSE LINE 1
         DC    CL8'LPDE AT '
LPDE1ADR DS    CL9                     ADDRESS OF LPDE FOUND
         DC    CL11'FOR MODULE '
LPDE1NAM DS    CL8                     NAME OF MODULE FROM LPDE
         DC    CL26' WITH ENTRY POINT ADDRESS '
LPDE1EPA DS    CL9                     ENTRY POINT ADDRESS
         DC    CL9' '
*
LPDE2    DS    0CL80                   LPDE RESPONSE LINE 2
LPDE2NAM DS    CL8                     NAME FROM MINOR LPDE
         DC    CL17' IS AN ALIAS FOR '
LPDE2MJR DS    CL8                     NAME FROM MAJOR LPDE
         DC    CL47' '
*
LPDE3    DS    0CL80                   LPDE RESPONSE LINE 3
         DC    CL17'MODULE LOADED AT '
LPDE3LDP DS    CL9                     MODULE LOAD ADDRESS
         DC    CL7'AND IS '
LPDE3LNG DS    CL9                     MODULE LENGTH
         DC    CL22'BYTES LONG, ENDING AT '
LPDE3END DS    CL9                     MODULE END ADDRESS
         DC    CL7' '
*
*
NUCM1    DS    0CL80                   NUCM RESPONSE LINE 1
         DC    CL14'NUCLEUS CSECT '
NUCMNAM1 DC    CL8' '
         DC    CL10' WITH EPA '
NUCM1EPA DS    CL9                     ENTRY POINT ADDRESS
         DC    CL8'ENDS AT '
NUCM1END DS    CL9                     MODULE END ADDRESS
         DC    CL22' '
*
NUCM2    DS    0CL80                   NUCM RESPONSE LINE 2
         DC    CL30'   NEARER ENTRY POINT NAME IS '
NUCMNAM2 DC    CL8' '
         DC    CL10' WITH EPA '
NUCM2EPA DS    CL9                     ENTRY POINT ADDRESS
         DC    CL23' '
*
LEGEND   DC    CL80'WHERE COMMAND CAN BE ENTERED IN THE PARM FIELD    '
         DC    CL80'OF THE EXEC STATEMENT, OR AS A RECORD IN THE      '
         DC    CL80'SYSIN FILE. VALID COMMANDS ARE:                   '
         DC    CL80'                                                  '
         DC    CL80'COL 1-8: MODULE NAME                              '
         DC    CL80'COL 1-8: HEX ADDRESS                              '
         DC    CL80'COL 1-5: *MAP*                                    '
         DC    CL80'COL 1-3: END                                      '
         DC    CL80'                                                  '
         DC    CL80'IF *MAP* IS ENTERED, A VIRTUAL STORAGE MAP IS     '
         DC    CL80'PRINTED TO THE SYSPRINT FILE. IF MODULE NAME OR   '
         DC    CL80'ADDRESS IS GIVEN, COMMON SYSTEM AREAS ARE SEARCHED'
         DC    CL80'FOR THE NAME OR ADDRESS, AND INFORMATION ABOUT THE'
         DC    CL80'MODULE IS PRINTED TO THE SYSPRINT FILE. THE END   '
         DC    CL80'COMMAND TERMINATES THE PROGRAM.                   '
         DC    X'FF'
*
NOTFDMSG DC    CL80'YOUR MODULE/ADDRESS NOT FOUND IN COMMON AREAS.    '
*
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=NOCOMND,           X
               RECFM=FB,LRECL=80
*
LPDE     DSECT ,                       DESCRIBE SOME LPDE FIELDS
LPDECHN  DS    A                       POINTER TO NEXT LPDE
         DS    F                       RESERVED
LPDENAME DS    CL8                     MODULE NAME
LPDENTP  DS    A                       RELOCATED ENTRY POINT ADDRESS
LPDEMJP  DS    A                       @ MAJOR LPDE OR ZERO
LPDEUSE  DS    H                       COUNT FIELD
LPDEATTB DS    XL1                     ATTRIBUTE FLAGS
LPDESP   DS    XL1                     ZERO
LPDEATTR DS    XL1                     ATTRIBUTE FLAGS
LPDEATT2 DS    XL1                     ATTRIBUTE FLAGS
         DS    H                       RESERVED
LPDEMJNM DS    0CL8                    MAJOR LPDE E.P. NAME OR
LPDEXTLN DS    F                       LENGTH OF MAIN STORAGE BLOCK
LPDEXTAD DS    F                       ADDRESS OF MAIN STORAGE BLOCK
LPDELENG EQU   *-LPDE                  LENGTH OF LPDE
*
CDE      DSECT ,                       DESCRIBE SOME CDE FIELDS
CDCHAIN  DS    A                       POINTER TO NEXT CDE
CDRRBP   DS    A                       @ RB OR ZERO
CDNAME   DS    CL8                     MODULE NAME
CDENTPT  DS    A                       RELOCATED ENTRY POINT ADDRESS
CDXLMJP  DS    A                       @ MAJOR CDE OR @ XTLIST
CDUSE    DS    H                       USE COUNT
CDATTRB  DS    XL1                     ATTRIBUTE FLAGS
CDSP     DS    XL1                     MODULE SUBPOOL ID
CDATTR   DS    XL1                     ATTRIBUTE FLAGS
CDATTR2  DS    XL1                     ATTRIBUTE FLAGS
         DS    H                       RESERVED
*
XTLST    DSECT ,                       DESCRIBE XTLST FIELDS
XTLLNTH  DS    F                       LENGTH OF EXTENT LIST (16)
XTLNRFAC DS    F                       NBR RELOC FACTORS (1)
XTLMSBLA DS    0A                      WORD REF FOR XTLMSBLN
         DS    XL1                     X'80'
XTLMSBLN DS    AL3                     LENGTH OF MAIN STORAGE BLOCK
XTLMSBAD DS    A                       ADDRESS OF MAIN STORAGE BLOCK
*
NUCMP    DSECT ,                       DESCRIBE NUCMP ENTRIES
NUCMENT  DS    0CL16                   16-BYTE ENTRIES
NUCMNAME DS    CL8                     CSECT/ENTRY POINT NAME
NUCMADDR DS    A                       ADDRESS OF ENTRY POINT
NUCMFLAG DS    XL1                     FLAGS: 10=CSECT, 08=RSECT,
*                                       04=RMODE (0=24BIT, 1=31BIT)
*                                       03=AMODE: 00=24BIT, 01=24BIT,
*                                                 02=31BIT, 03=ANY
NUCMLEN  DS    XL3                     CSECT LENGTH
WHERE    CSECT
         END
