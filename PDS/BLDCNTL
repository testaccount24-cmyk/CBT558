         TITLE '*** BLDCNTL: CREATE CONTROL CARD FILE FROM PARM ***'
BLDCNTL CSECT
*********************************************************************
* WRITES AN OUTPUT DATASET USING DATA FROM THE PARM PARAMETER ON    *
* THE JCL EXEC STATEMENT. THE DATA FROM THE PARM STATEMENT IS       *
* WRITTEN TO THE CONTROL FILE BEGINNING IN COLUMN 1 UP TO THE FIRST *
* SEMICOLON, OR END OF THE PARM DATA, WHICHEVER OCCURS FIRST. WHEN  *
* A SEMICOLON IS FOUND, IT IS USED TO IDENTIFY THE NEXT CONTROL     *
* STATEMENT, BUT IS NOT WRITTEN TO THE CONTROL FILE. SUBSEQUENT     *
* RECORDS BEGIN IN COLUMN 1 OF THE OUTPUT RECORD WITH THE DATA BYTE *
* FOLLOWING THE SEMICOLON AND CONTINUING TO THE END OR THE NEXT     *
* SEMICOLON. AS MANY RECORDS CAN BE WRITTEN AS CAN BE PUT INTO THE  *
* PARM DATA.                                                        *
* AUTHOR R THORNTON MAY 2001                                        *
*********************************************************************
*
*********************************************************************
*        SAVE REGISTERS, SET UP BASE REGS, CHAIN SAVE AREAS         *
*********************************************************************
         USING BLDCNTL,R3,R4
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)             SET UP SECOND
         LA    R4,1(R4)                    BASE REGISTER
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     START                   BRANCH AROUND CONSTANTS
         DC    CL8'BLDCNTL'            PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
START    DS    0H                      BEGIN PROCESSING
*********************************************************************
*        PROCESS PARM FIELD                                         *
*********************************************************************
         L     R2,0(R1)                GET PARM FIELD ADDR
         CLC   0(2,R2),H0              ANY PARM DATA?
         BNE   OPEN                    YES
BADPARM  WTO   'BLDCNTL: INVALID PARM ON EXEC STATEMENT',ROUTCDE=11
         ABEND 111,DUMP
OPEN     OPEN  (CONTROL,OUTPUT)        OPEN FILE
         LH    R10,0(R2)               GET PARM LENGTH
         LA    R10,2(R10,R2)           POINT TO END OF PARMS
         LA    R11,2(R2)               POINT TO 1ST BYTE OF PARM DATA
NEWCTL   MVC   CNTLRECD,BLANKS         CLEAR CONTROL RECORD
         LA    R12,CNTLRECD            POINT TO 1ST BYTE OF CNTL RECORD
CKEND    CLI   0(R11),C';'             FOUND ENDING SEMICOLON?
         BE    WRTRECD                 YES, GO WRITE THIS ONE
         CR    R11,R10                 PAST END OF PARM DATA?
         BNL   WRTRECD                 YES
         MVC   0(1,R12),0(R11)         MOVE A PARM DATA BYTE TO RECORD
         LA    R11,1(R11)              TO NEXT PARM DATA BYTE
         LA    R12,1(R12)              TO NEXT CONTROL RECORD COLUMN
         B     CKEND                   LOOP TO MOVE DATA
WRTRECD  PUT   CONTROL,CNTLRECD        WRITE DSNAME RECORD
         LA    R11,1(R11)              STEP PAST SEMICOLON
         CR    R11,R10                 STILL WITHIN PARM DATA?
         BL    NEWCTL                  YES, GO START NEW CONTROL RECD
         CLOSE CONTROL                 CLOSE FILE
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGS
         SR    R15,R15                 SET RETURN CODE TO ZERO
         BR    R14                     RETURN
*********************************************************************
*        STORAGE AND FILE AREAS                                     *
*********************************************************************
H0       DC    H'0'                    CONSTANT ZERO
CNTLRECD DS    CL256                   CONTROL RECORD
BLANKS   DC    CL256' '                BLANKS
*********************************************************************
*             DCB'S                                                 *
*********************************************************************
CONTROL  DCB   DSORG=PS,MACRF=PM,DDNAME=CONTROL,                       X
               RECFM=FB
         LTORG
BLDCNTL CSECT
*********************************************************************
*             REGISTER EQUATES                                      *
*********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
