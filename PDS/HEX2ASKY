         TITLE 'CONVERT HEX BYTE TO ASCII EQUIVALENT'
HEX2PDEC CSECT
******************************************************************
*ON ENTRY, TWO PARAMETER ADDRESSES ARE PASSED USING STANDARD     *
*SUBROUTINE LINKAGE CONVENTIONS. THE FIRST PARAMETER IS A ONE-   *
*BYTE FIELD CONTAINING A HEX VALUE.  THE SECOND PARAMETER IS A   *
*ONE-BYTE FIELD WHICH WILL CONTAIN THE ASCII EQUIVALENT OF THE   *
*FIRST PARAMETER ON RETURN TO THE CALLER. CONVERSION FROM THE    *
*HEX VALUE INPUT TO AN ASCII EQUIVALENT ON RETURN IS DONE IN     *
*ACCORDANCE WITH IBM MANUAL SC34-2222, "IBM INFORMATION NETWORK  *
*INFORMATION EXCHANGE INTERFACE SPECIFICATIONS", APPENDIX G.,    *
*"DATA CONTROL LAYER DATA TRANSLATION." EXAMPLE OF USE FROM A    *
*COBOL PROGRAM:                                                  *
*       .                                                        *
*   WORKING-STORAGE SECTION.                                     *
*       .                                                        *
*       .                                                        *
*          10 FIRST-PARM-HEX             PIC X.                  *
*          10 SECOND-PARM-ASCII          PIC X.                  *
*       .                                                        *
*       .                                                        *
*       .                                                        *
*   PROCEDURE DIVISION.                                          *
*       .                                                        *
*       .                                                        *
*       CALL 'HEX2ASKY' USING FIRST-PARM-HEX,                    *
*                             SECOND-PARM-ASCII.                 *
*       .                                                        *
*       .                                                        *
*                                                                *
*AUTHOR R. THORNTON  JAN, 1986                                   *
******************************************************************
*
*
         USING *,R15
         STM   R2,R3,28(R13)               SAVE WORK REGS
         L     R2,0(R1)                    POINT TO 1ST PARAMETER
         L     R3,4(R1)                    POINT TO 2ND PARAMETER
         MVC   0(1,R3),0(R2)               MOVE INPUT BYTE TO OUTPUT
         TR    0(1,R2),TRTBL               TRANSLATE OUTPUT TO ASCII
         LM    R2,R3,28(R13)               RESTORE WORK REGS
         SR    R15,R15                     SET RETURN CODE = 0
         BR    R14                         RETURN TO CALLER
R1       EQU   1
R2       EQU   2
R3       EQU   3
R13      EQU   13
R14      EQU   14
R15      EQU   15
TRTBL    DC    CL16'000102030405060708090A0B0C0D0E0F'
         DC    CL16'101112131415161718191A1B1C1D1E1F'
         DC    CL16'80818283848E878F88898A8B8C8D867F'
         DC    CL16'909197939495969C98999A9B9D859E92'
         DC    CL16'20A0A1A2A3A4A5A6A7A8D52E3C282B7C'
         DC    CL16'26A9AAABACADAEAFB0B121242A293B5E'
         DC    CL16'2D2FB2B3B4B5B6B7B8B9E52C255F3E3F'
         DC    CL16'BABBBCBDBEBFC0C1C2603A2340273D22'
         DC    CL16'C3616263646566676869C4C5C6C7C8C9'
         DC    CL16'CA6A6B6C6D6E6F707172CBCCCDCECFD0'
         DC    CL16'D174737475767778797AD2D3D45BD6D7'
         DC    CL16'D8D9DADBDCDDDEDFE0E1E2E3E45DE6E7'
         DC    CL16'7B414243444546474849E8E9EAEBECED'
         DC    CL16'7D4A4B4C4D4E4F505152EEEFF0F1F2F3'
         DC    CL16'5C9F535455565758595AF4F5F6F7F8F9'
         DC    CL16'30313233343536373839FAFBFCFDFEFF'
         END
