         TITLE 'PROVIDE DATE INFORMATION FROM 1/1/1900 TO 12/31/2099'
         PRINT NOGEN
GENLDAT2 SVLNK R3,,,SUB
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*   GENLDAT2 IS A MODIFICATION TO THE OLDER SUBROUTINE GENLDATE, WHICH*
* ONLY SUPPORTED DATES IN THE 1/1/1900 TO 12/31/1999 RANGE. IN ORDER  *
* TO SUPPORT MULTIPLE CENTURY DATE PROCESSING, THIS VERSION REQUIRES  *
* USE OF THE FULL 4-DIGIT YEAR, INCLUDING CENTURY. FOR THIS REASON,   *
* THE PARAMETER FIELD SIZES ARE MODIFIED TO ACCOMODATE THE 4-DIGIT    *
* YEAR.                                                               *
*                                                                     *
*   THIS SUBROUTINE PROVIDES A TABLE OF INFORMATION ON THE INCOMING   *
* DATE. INFORMATION INCLUDES DAY OF WEEK, HOLIDAY INDICATION, AND A   *
* FORMATTED FIELD CONTAINING THE DATE WITH LITERAL MONTH. THE INCOMING*
* DATE MAY BE GREGORIAN OR JULIAN. THE ROUTINE IS VALID FOR DATES FROM*
* JAN 1, 1900 THRU DEC 31, 2099.                                      *
*                                                                     *
* A SINGLE PARAMETER IS SUPPLIED, FORMATTED AS FOLLOWS:               *
*                  BYTE   1     DATE TYPE SET BY CALLER: J=JULIAN DATE*
*                               SUPPLIED, G=GREGORIAN DATE SUPPLIED.  *
*                  BYTE   2     ERROR INDICATOR. BLANK=SUCCESSFUL DATE*
*                               PROCESSING. E=ERROR IN DATE SUPPLIED. *
*                  BYTE   3     DAY OF WEEK INDICATOR: 1=MONDAY,      *
*                               2=TUESDAY, 3=WEDNESDAY, 4=THURSDAY,   *
*                               5=FRIDAY, 6=SATURDAY, 7=SUNDAY.       *
*                  BYTE   4     HOLIDAY INDICATOR: BLANK=NOT A HOLIDAY*
*                               1=NEW YEAR'S DAY, 2=(NOT USED),       *
*                               3=(NOT USED),  4=MEMORIAL DAY,        *
*                               5=INDEPENDENCE DAY, 6=LABOR DAY,      *
*                               7=THANKSGIVING DAY, 8=FRIDAY AFTER    *
*                               THANKSGIVING, 9=CHRISTMAS DAY         *
*                  BYTE   5     LEAP YEAR INDICATOR: 0=NOT LEAP YEAR, *
*                               1=LEAP YEAR                           *
*                  BYTES  6-9   JULIAN DATE. IF DATE TYPE=J, SUPPLIED *
*                               BY CALLER. IF NOT, THE JULIAN EQUIV-  *
*                               ALENT OF THE GREGORIAN DATE SUPPLIED  *
*                               WILL BE RETURNED. THIS IS AN UNSIGNED *
*                               PACKED DECIMAL FIELD WITH THE FORMAT  *
*                               YYYYDDDF                              *
*                  BYTES 10-17  GREGORIAN DATE. IF DATE TYPE=G, THIS  *
*                               IS SUPPLIED BY THE CALLER. IF NOT, THE*
*                               GREGORIAN EQUIVALENT OF THE JULIAN    *
*                               DATE SUPPLIED WILL BE RETURNED. THIS  *
*                               IS AN UNSIGNED ZONED DECIMAL FIELD    *
*                               WITH THE FORMAT MMDDYYYY              *
*                  BYTES 18-35  A LITERAL DATE, LEFT JUSTIFIED,       *
*                               IN AN 18-BYTE FIELD.                  *
*                               EXAMPLES ARE: JANUARY 16, 1979        *
*                                             MAY 9, 1982             *
*                  BYTES 36-43  JULIAN DATE WITH SLASH: YYYY/DDD.     *
*                  BYTES 44-53  GREGORIAN DATE WITH SLASHES:          *
*                               MM/DD/YYYY                            *
*                                                                     *
*  AUTHOR R. THORNTON  NOV 1990                                       *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                   MAINTENANCE CHANGES                               *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* AUG 1998 R THORNTON CORRECTED YEARTBL1 FOR YEARS 2001-2100 WHICH    *
*          WERE OFF BY 1 YEAR UNTIL 2097, AND BY 2 YEARS THEREAFTER.  *
* AUG 2000 R THORNTON ADDED TESTS FOR YEAR BETWEEN 1900 AND 2099 WITH *
*          ERROR RETURNED IF NOT..                                    *
* JAN 2001 R THORNTON: REMOVED GOOD FRIDAY AS A HOLIDAY.              *
*                                                                     *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         L     R5,0(R1)                GET PARM FIELD ADDRESS
         USING PARMFLD,R5
         MVI   DATERR,C' '             CLEAR ERROR INDICATOR
         MVI   HOLIDAY,C' '            CLEAR HOLIDAY INDICATOR
         MVC   LITDATE,BLANX           CLEAR LITERAL DATE AREA
         CLI   DATYP,C'J'              JULIAN DATE SUPPLIED?
         BNE   TRYY                    NO
         SR    R2,R2                   CLEAR R2
         TRT   JULDATE,VALPKDEC        TEST VALID PACKED DECIMAL
         BC    12,ERRDATE              ERROR IF NOT COMPLETE
         CH    R2,H4                   IS IT VALID?
         BNE   ERRDATE                 NO, ERROR
         CLC   JULDATE(2),=X'1900'        VALID YEAR?
         BL    ERRDATE                 NO, ERROR
         CLC   JULDATE(2),=X'2099'        VALID YEAR?
         BH    ERRDATE                 NO, ERROR
         UNPK  DBLWORD(7),JULDATE      UNPACK TO ZONED FORMAT
         OI    JULDATE+3,X'0F'         INSURE VALID SIGN
         MVC   GREGMDY+4(4),DBLWORD    YEAR TO GREGORIAN AREA
         MVC   GREGYMD(4),DBLWORD      YEAR TO GREGORIAN AREA
         BAL   R9,TBLUKUP              DO YEAR TABLE LOOKUPS
         ZAP   DBLWORD(2),JULDATE+2(2) JULIAN DAY TO WORK AREA
         CP    JULDATE+2(2),P0         IS JULIAN DAY VALID?
         BE    ERRDATE                 NO
         CP    JULDATE+2(2),P365       IS JULIAN DAY VALID?
         BNH   CKJLYR                  YES
         CLI   YRLPYR,C'1'             IS IT A LEAP YEAR?
         BNE   ERRDATE                 NO, ERROR
         CP    JULDATE+2(2),P366       IS DAY VALID?
         BH    ERRDATE                 NO
CKJLYR   CLI   YRLPYR,C'1'             IS IT A LEAP YEAR?
         BNE   NOTLYR                  NO
         CP    JULDATE+2(2),P60        IS IT FEBRUARY 29?
         BL    NOTLYR                  NO, BEFORE
         BH    ADJLYR                  NO, AFTER
         MVC   GREGMDY(4),=C'0229'     YES, SET GREG MDY DATE
         MVC   GREGYMD+4(4),=C'0229'   AND GREG YMD DATE
         B     DATCOMN                 CONTINUE LATER
ADJLYR   SP    DBLWORD(2),P1           BACK UP 1 DAY FOR LEAP YEAR
NOTLYR   LA    R1,GREGCV1              @ GREGORIAN CONVERSION
         LA    R2,1                    SET MONTH COUNTER TO 1
JSTSCH   CP    2(2,R1),DBLWORD(2)      NEXT ENTRY LOWER THAN THIS?
         BNL   GOTJMO                  NO, FOUND THE ENTRY
         LA    R1,2(R1)                NO, STEP TO NEXT ENTRY
         LA    R2,1(R2)                ADD 1 TO MONTH COUNTER
         B     JSTSCH                  CONTINUE SEARCH
GOTJMO   SP    DBLWORD(2),0(2,R1)      DEDUCT DAYS TO THIS POINT
         UNPK  GREGMDY+2(2),DBLWORD(2) DIFFERENCE IS GREGORIAN DAY
         OI    GREGMDY+3,C'0'          CLEAR SIGN
         CVD   R2,DBLWORD              CONVERT MONTH TO DECIMAL
         UNPK  GREGMDY(2),DBLWORD      UNPACK GREGORIAN MONTH
         OI    GREGMDY+1,C'0'          CLEAR SIGN
         MVC   GREGYMD+4(4),GREGMDY    MMDD TO YMD DATE
         B     DATCOMN                 CONTINUE LATER
TRYY     CLI   DATYP,C'Y'              GREGORIAN YMD DATE SUPPLIED?
         BNE   TRYG                    NO
         MVC   GREGMDY(4),GREGYMD+4    MMDD TO MDY DATE
         MVC   GREGMDY+4(4),GREGYMD    YYYY TO MDY DATE
         B     CHKMDY                  GO VALIDATE
TRYG     CLI   DATYP,C'G'              GREGORIAN MDY DATE SUPPLIED?
         BNE   ERRDATE                 NO, ERROR
         MVC   GREGYMD(4),GREGMDY+4    YYYY TO YMD DATE
         MVC   GREGYMD+4(4),GREGMDY    MMDD TO YMD DATE
CHKMDY   SR    R2,R2                   CLEAR FOR TRT
         TRT   GREGMDY,VALZONE         VALID ZONED DECIMAL DATE?
         BZ    CKVALDYR                YES
         BC    12,ERRDATE              ERROR IF INCOMPLETE
         CH    R2,H4                   VALID SIGN BYTE?
         BNE   ERRDATE                 NO, ERROR
         OI    GREGMDY+7,X'F0'         YES, FORCE 'F' SIGN
         OI    GREGYMD+7,X'F0'            ON BOTH GREGORIAN DATES
CKVALDYR CLC   GREGMDY+4(4),=CL4'1900' VALID YEAR?
         BL    ERRDATE                 NO, ERROR
         CLC   GREGMDY+4(4),=CL4'2099' VALID YEAR?
         BH    ERRDATE                 NO, ERROR
         CLC   GREGMDY+2(2),=C'01'     DAY LESS THAN 01?
         BL    ERRDATE                 YES, ERROR
         CLC   GREGMDY(2),=C'01'       MONTH LESS THAN 01?
         BL    ERRDATE                 YES, ERROR
         CLC   GREGMDY(2),=C'12'       MONTH GREATER THAN 12?
         BH    ERRDATE                 YES, ERROR
         BAL   R9,TBLUKUP              DO YEAR TABLE LOOKUPS
         PACK  DBLWORD,GREGMDY(2)      PACK MONTH
         CVB   R1,DBLWORD              CONVERT TO BINARY
         BCTR  R1,R0                   DEDUCT 1 FOR INDEX
         SLL   R1,1                    DOUBLE IT FOR OFFSET
         LA    R2,GRGVLDY(R1)          @ TABLE ENTRY
         CLC   GREGMDY+2(2),0(R2)      GREATER THAN DAYS IN MONTH
         BNH   CVTJUL                  NO, O.K.
         CLI   YRLPYR,C'1'             IS IT A LEAP YEAR?
         BNE   ERRDATE                 NO, ERROR
         CLC   GREGMDY(4),=C'0229'     IS IT FEB 29TH?
         BNE   ERRDATE                 NO, ERROR
CVTJUL   PACK  JULDATE(3),GREGMDY+4(5) PACK YEAR INTO JULIAN YEAR
         ZAP   JULDATE+2(2),P0         ZERO OUT JULIAN DAY FIELD
         LA    R1,GREGCV1(R1)          @ ACCUM DAYS PER MONTH TABLE
         AP    JULDATE,0(2,R1)         ADD DAYS TO 1ST OF MONTH
         CLI   YRLPYR,C'1'             IS IT A LEAP YEAR?
         BNE   ADDAY                   NO
         CP    0(2,R1),P31             PAST FEBRUARY?
         BNH   ADDAY                   NO
         AP    JULDATE,P1              YES, ADD 1 DAY
ADDAY    PACK  DBLWORD,GREGMDY+2(2)    PACK DAY OF MONTH
         AP    JULDATE,DBLWORD         ADD TO JULIAN DATE
         OI    JULDATE+3,X'0F'         CLEAR SIGN
DATCOMN  MVC   JULSLASH,=X'2120202061202020' EDIT WORD FOR JULIAN
         ED    JULSLASH,JULDATE        EDIT JULIAN DATE WITH SLASH
         MVC   GRGSLASH(2),GREGMDY     MONTH TO FORMATTED DATE
         MVI   GRGSLASH+2,C'/'         SLASH TO FORMATTED DATE
         MVC   GRGSLASH+3(2),GREGMDY+2 DAY TO FORMATTED DATE
         MVI   GRGSLASH+5,C'/'         SLASH TO FORMATTED DATE
         MVC   GRGSLASH+6(4),GREGMDY+4 YEAR TO FORMATTED DATE
         CLC   GREGMDY(4),=C'1231'     IS DATE DEC 31ST?
         BNE   CHKHOL                  NO
         CLI   NEWYR,1                 DEC 31ST IS NEW YEARS NEXT YEAR?
         BNE   CHKHOL                  NO
         MVI   HOLIDAY,C'1'            YES, SHOW NEW YEAR'S (OBSERVED)
         B     DAYWEEK                 CONTINUE LATER
CHKHOL   LA    R1,YRHOL                @ HOLIDAY TABLE
         LA    R2,8                    NBR TABLE ENTRIES
CPRHOL   CLC   GREGMDY(4),1(R1)        DATE IS SAME AS TABLE DATE?
         BE    ISHOL                   YES, IT'S A HOLIDAY
         LA    R1,L'YRHOL(R1)          TO NEXT TABLE ENTRY
         BCT   R2,CPRHOL               LOOP THRU HOLIDAY TABLE
         B     DAYWEEK                 NOT A HOLIDAY, CONTINUE LATER
ISHOL    MVC   HOLIDAY,0(R1)           MOVE HOLIDAY INDICATOR
DAYWEEK  PACK  DBLWORD,YRSTDAY         PACK STARTING DAY OF YEAR
         AP    DBLWORD,JULDATE+2(2)    ADD JULIAN DAY
         DP    DBLWORD,P7              DIVIDE BY 7
         UNPK  DAYWK,DBLWORD+7(1)      MOVE DAY TO OUTPUT RECD
         OI    DAYWK,C'0'              SET "F" ZONE
         CLI   DAYWK,C'0'              DAY IS 0
         BNE   FNDMNTH                 NO
         MVI   DAYWK,C'7'              YES, MOVE 7
FNDMNTH  PACK  DBLWORD,GREGMDY(2)      PACK MONTH
         CVB   R1,DBLWORD              CONVERT TO BINARY
         BCTR  R1,R0                   SUBTRACT 1 FOR INDEX
         MH    R1,H9                   MULTIPLY BY TABLE ENTRY SIZE
         LA    R1,JULMO(R1)            POINT TO MONTH NAME
         MVC   LITDATE(9),0(R1)        LITERAL MONTH
         LA    R1,LITDATE              @ LITERAL DATE
LITFBK   CLI   0(R1),C' '              FOUND BLANK
         BE    CKLD0                   YES
         LA    R1,1(R1)                STEP TO NEXT POSITION
         B     LITFBK                  CONTINUE SCAN
CKLD0    CLI   GREGMDY+2,C'0'          1ST POSITION OF DAY IS 0
         BE    SNGLDAY                 YES
         MVC   1(2,R1),GREGMDY+2       MOVE 2-BYTE DAY
         LA    R1,3(R1)                TO NEXT LITERAL POSITION
         B     FINLIT                  CONTINUE
SNGLDAY  MVC   1(1,R1),GREGMDY+3       MOVE SINGLE DIGIT DAY
         LA    R1,2(R1)                TO NEXT LITERAL POSITION
FINLIT   MVI   0(R1),C','              COMMA SEPARATOR
         MVC   2(4,R1),GREGMDY+4       YEAR TO LITERAL DATE
         PACK  DBLWORD,DAYWK           PACK DAY OF WEEK
         CVB   R1,DBLWORD              CONVERT TO BINARY
         BCTR  R1,0                    RELATIVIZE
         MH    R1,=H'9'                TIMES TABLE ENTRY LENGTH
         LA    R1,DWKTBL(R1)           POINT TO DAY NAME
         MVC   DAYLIT,0(R1)            DAY NAME TO PARM FIELD
         PACK  DBLWORD,GREGMDY(2)      PACK MONTH
         CVB   R1,DBLWORD              CONVERT TO BINARY
         BCTR  R1,0                    RELATIVIZE
         MH    R1,=H'9'                TIMES TABLE ENTRY LENGTH
         LA    R1,JULMO(R1)            POINT TO MONTH NAME
         MVC   MONTHLIT,0(R1)          DAY NAME TO PARM FIELD
*********************************************************************
*        RETURN TO CALLER                                           *
*********************************************************************
RETURN   L     R13,4(R13)              GET CTL PGM SAVE ADDRESS
         LM    R14,R12,12(R13)         RELOAD CTL PGM REGS
         SR    R15,R15                 ZERO RETURN CODE
         BR    R14                     RETURN TO CONTROL PROGRAM
ERRDATE  MVI   DATERR,C'E'             SHOW ERROR IN DATE
         B     RETURN                  AND RETURN
*********************************************************************
*        DO YEAR TABLE LOOKUPS                                      *
*********************************************************************
TBLUKUP  PACK  DBLWORD,GREGMDY+4(4)    PACK YEAR
         SP    DBLWORD,P1900           DEDUCT 1900
         CVB   R1,DBLWORD              CONVERT TO BINARY
         LA    R1,YEARTBL1(R1)         GET YEAR TABLE ENTRY
         MVI   NEWYR,0                 CLEAR NEW YEAR INDIC
         CLI   1(R1),6                 NEXT YEAR IS TYPE 06?
         BE    SETNYI                  YES
         CLI   1(R1),13                NEXT YEAR IS TYPE 13?
         BNE   PACKYT1                 NO
SETNYI   MVI   NEWYR,1                 SHOW DEC 31ST IS NEW YEARS
PACKYT1  SR    R2,R2                   CLEAR FOR INSERT
         IC    R2,0(R1)                PICK UP YEAR TYPE
         MH    R2,YT2LEN               MULTIPLY BY TABLE LENGTH
         LA    R1,YEARTBL2(R2)         POINT TO TABLE 2 ENTRY
         MVC   YEARDATA(YT2E2-YT2E1),0(R1) SAVE YEAR DATA
         MVC   YEARTYP,YRLPYR          SET LEAP YEAR INDICATOR
         BR    R9                      EXIT
*********************************************************************
*                  *** DATA, WORK, AND FILE AREAS ***               *
*********************************************************************
         DS    0H
YT2LEN   DC    AL2(YT2E2-YT2E1)        YEARTBL2 ENTRY LENGTH
GREGCV1  DC    PL2'0',PL2'31',PL2'59',PL2'90',PL2'120',PL2'151'
         DC    PL2'181',PL2'212',PL2'243',PL2'273',PL2'304',PL2'334'
         DC    PL2'999'
GRGVLDY  DC    C'312831303130313130313031'
NEWYR    DS    XL1                     1=DEC 31 THIS YEAR IS NEW YEARS
YEARDATA DS    0CL42
YRSTDAY  DS    CL1                     STARTING DAY OF YEAR
YRLPYR   DS    CL1                     1=LEAP YEAR
YRHOL    DS    8CL5                    HOLIDAY INDIC/DATES
CPRDAY   DS    PL2                     COMPARE DAY
BLANX    DC    CL20' '                 FIELD OF BLANKS
DBLWORD  DS    D                       DOUBLEWORD WORK AREA
P0       DC    P'0'                    CONSTANT 0
P1       DC    P'1'                    CONSTANT 1
P4       DC    P'4'                    CONSTANT 4
P7       DC    P'7'                    CONSTANT 7
P19      DC    P'19'                   CONSTANT 19
P31      DC    P'31'                   CONSTANT 31
P60      DC    P'60'                   CONSTANT 60
P96      DC    P'96'                   CONSTANT 96
P102     DC    P'102'                  CONSTANT 102
P365     DC    P'365'                  CONSTANT 365
P366     DC    P'366'                  CONSTANT 366
P1900    DC    P'1900'                 CONSTANT 1900
H4       DC    H'4'                    CONSTANT 4
H9       DC    H'9'                    CONSTANT 9
*********************************************************************
*        TABLE OF LITERAL MONTH NAMES                               *
*********************************************************************
JULMO    DC    CL9'JANUARY'
         DC    CL9'FEBRUARY'
         DC    CL9'MARCH'
         DC    CL9'APRIL'
         DC    CL9'MAY'
         DC    CL9'JUNE'
         DC    CL9'JULY'
         DC    CL9'AUGUST'
         DC    CL9'SEPTEMBER'
         DC    CL9'OCTOBER'
         DC    CL9'NOVEMBER'
         DC    CL9'DECEMBER'
*********************************************************************
*        TABLE OF LITERAL DAY-OF-WEEK NAMES                         *
*********************************************************************
DWKTBL   DC    CL9'MONDAY'
         DC    CL9'TUESDAY'
         DC    CL9'WEDNESDAY'
         DC    CL9'THURSDAY'
         DC    CL9'FRIDAY'
         DC    CL9'SATURDAY'
         DC    CL9'SUNDAY'
*********************************************************************
*YEARTBL1 CONTAINS 1-BYTE SUBSCRIPTS TO YEARTBL2. WHEN THE NEXT YEAR*
* IS 06 OR 0D, JAN 1ST NEXT YEAR FALLS ON SATURDAY, AND WILL BE     *
* OBSERVED ON DECEMBER 31ST OF THIS YEAR (THE PRECEDING FRIDAY).    *
*********************************************************************
YEARTBL1 DS    0C
         DC    X'080203040C0001020A05' 1900-1909
         DC    X'0600080304050D010203' 1910-1919
         DC    X'0B060001090405060702' 1920-1929
         DC    X'03040C0001020A050600' 1930-1939
         DC    X'080304050D0102030B06' 1940-1949
         DC    X'00010904050607020304' 1950-1959
         DC    X'0C0001020A0506000803' 1960-1969
         DC    X'04050D0102030B060001' 1970-1979
         DC    X'09040506070203040C00' 1980-1989
         DC    X'01020A05060008030405' 1990-1999
         DC    X'0D0102030B0600010904' 2000-2009
         DC    X'0506070203040C000102' 2010-2019
         DC    X'0A050600080304050D01' 2020-2029
         DC    X'02030B06000109040506' 2030-2039
         DC    X'070203040C0001020A05' 2040-2049
         DC    X'0600080304050D010203' 2050-2059
         DC    X'0B060001090405060702' 2060-2069
         DC    X'03040C0001020A050600' 2070-2079
         DC    X'080304050D0102030B06' 2080-2089
         DC    X'00010904050607020304' 2090-2099
         DC    X'05'                   2100
*********************************************************************
* YEARTBL2 CONTAINS DATA ABOUT THE YEAR: DAY OF WEEK FOR JANUARY 1ST*
*  LEAP YEAR INDICATOR, AND HOLIDAY DATES. FORMAT IS:               *
*     BYTE 1  : DAY OF WEEK FOR JANUARY 1ST, 0=MONDAY - 6=SUNDAY    *
*     BYTE 2  : LEAP YEAR INDICATOR, 1=LEAP YEAR ELSE ZERO.         *
*     BYTES 3-42: 8 HOLIDAY FIELDS OF 5 BYTES EACH. FORMAT OF EACH  *
*                 FIELD IS:                                         *
*                   BYTE 1 : HOLIDAY TYPE INDICATOR (SAME AS IN     *
*                            PARAMETER AREA                         *
*                   BYTES 2-5: MMDD DATE OF THE HOLIDAY             *
*********************************************************************
YEARTBL2 DS    0C
YT2E1    DC    C'6010102 0220405295070460904711238112491225'
YT2E2    DC    C'0010101 0219405285070460903711228112391225'
YT2E3    DC    C'1010101 0218405275070460902711288112991225'
YT2E4    DC    C'2010101 0217405265070460901711278112891225'
YT2E5    DC    C'3010101 0216405255070360907711268112791225'
YT2E6    DC    C'4010101 0215405315070560906711258112691224'
YT2E7    DC    C'5000000 0221405305070460905711248112591226'
YT2E8    DC    C'6110102 0220405285070460903711228112391225'
YT2E9    DC    C'0110101 0219405275070460902711288112991225'
YT2E10   DC    C'1110101 0218405265070460901711278112891225'
YT2E11   DC    C'2110101 0217405255070360907711268112791225'
YT2E12   DC    C'3110101 0216405315070560906711258112691224'
YT2E13   DC    C'4110101 0215405305070460905711248112591226'
YT2E14   DC    C'5100000 0221405295070460904711238112491225'
*********************************************************************
*        VALIDITY CHECKING TABLE FOR PACKED DECIMAL                 *
* A TRT IS USED TO SCAN A PACKED DECIMAL FIELD AGAINST THIS TABLE.  *
* IF THE FIELD IS VALID PACKED DECIMAL, THE SCAN WILL STOP ON THE   *
* LAST BYTE OF THE FIELD (COMPLETE), AND REGISTER 2 WILL CONTAIN 04 *
* IN ITS LOW ORDER BYTE.                                            *
*********************************************************************
VALPKDEC DC    XL16'00000000000000000000FFFF04FFFF04' 00-0F
         DC    XL16'00000000000000000000FFFF04FFFF04' 10-1F
         DC    XL16'00000000000000000000FFFF04FFFF04' 20-2F
         DC    XL16'00000000000000000000FFFF04FFFF04' 30-3F
         DC    XL16'00000000000000000000FFFF04FFFF04' 40-4F
         DC    XL16'00000000000000000000FFFF04FFFF04' 50-5F
         DC    XL16'00000000000000000000FFFF04FFFF04' 60-6F
         DC    XL16'00000000000000000000FFFF04FFFF04' 70-7F
         DC    XL16'00000000000000000000FFFF04FFFF04' 80-8F
         DC    XL16'00000000000000000000FFFF04FFFF04' 90-9F
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' A0-AF
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' B0-BF
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' C0-CF
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' D0-DF
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' E0-EF
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' F0-FF
*********************************************************************
*        VALIDITY CHECKING TABLE FOR ZONED DECIMAL                  *
* A TRT IS USED TO SCAN A ZONED DECIMAL FIELD AGAINST THIS TABLE.   *
* IF THE FIELD IS VALID ZONED DECIMAL, THE SCAN WILL COMPLETE WITH  *
* CONDITION 8 (ZERO).                                               *
*********************************************************************
VALZONE  DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 00-0F
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 10-1F
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 20-2F
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 30-3F
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 40-4F
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 50-5F
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 60-6F
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 70-7F
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 80-8F
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 90-9F
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' A0-AF
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' B0-BF
         DC    XL16'04040404040404040404FFFFFFFFFFFF' C0-CF
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' D0-DF
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' E0-EF
         DC    XL16'00000000000000000000FFFFFFFFFFFF' F0-FF
*********************************************************************
         PRINT GEN
PARMFLD  DSECT ,              PARAMETER AREA DESCRIPTION
         DATEPRM2
GENLDAT2 CSECT
         END
