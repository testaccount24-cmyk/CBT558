         TITLE '*** MRG4WAY: MERGE DATA FROM ONE FILE INTO ANOTHER ***'
***********************************************************************
* MERGE DATA FROM FOUR INPUT FILES BOTH SORTED ON COLUMNS 1-8         *
*  1) INPUT SORT KEYS IN COL 1-8, ALL FOUR FILES                      *
*  2) INPUT1 IS THE MASTER FILE ALL OF WHOSE RECORDS WILL BE OUTPUT.  *
*  3) INPUT2-4 RECORDS WILL BE WRITTEN TO THE OUTPUT FILE FOLLOWING   *
*     THE INITIAL INPUT1 RECORD AND ANY FOLLOWING COMMENTS.           *
*  4) WHEN INPUT2-4 RECORDS ARE WRITTEN, COLUMNS 2-8 WILL BE REPLACED *
*     BY BLANKS AND COLUMN 1 WILL BE '+'.                             *
*  5) UNMATCHED RECORDS FROM INPUT2-4 WILL BE PRINTED WITH A MESSAGE. *
*
* AUTHOR R THORNTON APR 2002                                          *
***********************************************************************
*
MRG4WAY SVLNK R3,R4
***********************************************************************
*        OPEN FILES                                                   *
***********************************************************************
OPENS    OPEN  (OUTPUT1,OUTPUT,PRINT1,OUTPUT) OPEN OUTPUT FILES
         OPEN  (INPUT1,,INPUT2,,INPUT3,,INPUT4) OPEN INPUT FILES
         BAS   R9,GETIN1               COPY UNTIL FIRST KEYED RECORD
         BAS   R9,GETIN2               READ FIRST INPUT2 RECORD
         BAS   R9,GETIN3               READ FIRST INPUT3 RECORD
         BAS   R9,GETIN4               READ FIRST INPUT4 RECORD
***********************************************************************
*             MAINLINE ROUTINE                                        *
***********************************************************************
MAINLINE MVC   SAVEKEY,REC1            SAVE THE RECORD KEY
         MVC   OUTREC,REC1             COPY INPUT1 RECORD TO OUTPUT
         BAS   R9,WRTOUT               WRITE OUTPUT1 RECORD
         BAS   R9,GETIN1               COPY UNTIL FIRST KEYED RECORD
MLCKIN2  CLC   SAVEKEY,REC2            SAME KEY IN INPUT2 RECORD?
         BL    MLCKIN3                 NO, INPUT1 RECORD LOW
         BH    ML2LOW                  NO, INPUT2 RECORD LOW
         MVC   OUTREC,REC2             COPY REC2 TO OUTPUT
         MVC   OUTREC(8),BLANKS        CLEAR COL 1-8
         MVI   OUTREC,C'+'             SET COL 1 TO '+'
         BAS   R9,WRTOUT               GO WRITE THE RECORD
         BAS   R9,GETIN2               READ NEXT INPUT2 RECORD
         B     MLCKIN2                 CONTINUE
ML2LOW   MVC   PRT,REC2                MOVE RECORD 2 TO PRINT LINE
         BAS   R9,PRINT                PRINT THE MISMATCHED RECORD
         BAS   R9,GETIN2               GET NEXT INPUT2 RECORD
         B     MLCKIN2                 CONTINUE
MLCKIN3  CLC   SAVEKEY,REC3            SAME KEY IN INPUT3 RECORD?
         BL    MLCKIN4                 NO, INPUT1 RECORD LOW
         BH    ML3LOW                  NO, INPUT3 RECORD LOW
         MVC   OUTREC,REC3             COPY REC3 TO OUTPUT
         MVC   OUTREC(8),BLANKS        CLEAR COL 1-8
         MVI   OUTREC,C'+'             SET COL 1 TO '+'
         BAS   R9,WRTOUT               GO WRITE THE RECORD
         BAS   R9,GETIN3               READ NEXT INPUT3 RECORD
         B     MLCKIN3                 CONTINUE
ML3LOW   MVC   PRT,REC3                MOVE RECORD 3 TO PRINT LINE
         BAS   R9,PRINT                PRINT THE MISMATCHED RECORD
         BAS   R9,GETIN3               GET NEXT INPUT3 RECORD
         B     MLCKIN3                 CONTINUE
MLCKIN4  CLC   SAVEKEY,REC4            SAME KEY IN INPUT4 RECORD?
         BL    MAINLINE                NO, INPUT1 RECORD LOW
         BH    ML4LOW                  NO, INPUT4 RECORD LOW
         MVC   OUTREC,REC4             COPY REC4 TO OUTPUT
         MVC   OUTREC(8),BLANKS        CLEAR COL 1-8
         MVI   OUTREC,C'+'             SET COL 1 TO '+'
         BAS   R9,WRTOUT               GO WRITE THE RECORD
         BAS   R9,GETIN4               READ NEXT INPUT4 RECORD
         B     MLCKIN4                 CONTINUE
ML4LOW   MVC   PRT,REC4                MOVE RECORD 4 TO PRINT LINE
         BAS   R9,PRINT                PRINT THE MISMATCHED RECORD
         BAS   R9,GETIN4               GET NEXT INPUT4 RECORD
         B     MLCKIN4                 CONTINUE
***********************************************************************
*        READ INPUT1 RECORD (MASTER): READS THE INPUT1 DATASET UNTIL  *
* A RECORD WITHOUT AN '*' OR '+' IN COLUMN 1 IS FOUND                 *
***********************************************************************
GETIN1   ST    R9,GI19                 SAVE RETURN ADDRESS
GI1GET   GET   INPUT1,REC1             READ INPUT1 RECORD
         CLI   REC1,C'*'               COMMENT?
         BE    GI1COPY                 YES
         CLI   REC1,C'+'               CONTINUATION?
         BE    GI1COPY                 YES
GI1XIT   L     R9,GI19                 GET RETURN ADDRESS
         BR    R9                      RETURN TO CALLER
GI1COPY  MVC   OUTREC,REC1             MOVE COMMENT/CONTIN TO OUTPUT
         BAS   R9,WRTOUT               WRITE IT TO OUTPUT
         B     GI1GET                  CONTINUE
GI19     DS    A(0)                    GETIN1 RETURN ADDRESS
***********************************************************************
*        READ INPUT2 RECORD                                           *
***********************************************************************
GETIN2   GET   INPUT2,REC2             READ INPUT2 RECORD
         BR    R9                      RETURN TO CALLER
EOF2     MVC   REC2(7),HIVAL           SET RECORD TO HEX FF'S
         CLC   REC1(7),REC2            BOTH AT END?
         BE    EOJ                     YES, END OF JOB
         BR    R9                      NO, RETURN
***********************************************************************
*        READ INPUT3 RECORD                                           *
***********************************************************************
GETIN3   GET   INPUT3,REC3             READ INPUT3 RECORD
         BR    R9                      RETURN TO CALLER
EOF3     MVC   REC3(7),HIVAL           SET RECORD TO HEX FF'S
         CLC   REC1(7),REC3            BOTH AT END?
         BE    EOJ                     YES, END OF JOB
         BR    R9                      NO, RETURN
***********************************************************************
*        READ INPUT4 RECORD                                           *
***********************************************************************
GETIN4   GET   INPUT4,REC4             READ INPUT4 RECORD
         BR    R9                      RETURN TO CALLER
EOF4     MVC   REC4(7),HIVAL           SET RECORD TO HEX FF'S
         CLC   REC1(7),REC4            BOTH AT END?
         BE    EOJ                     YES, END OF JOB
         BR    R9                      NO, RETURN
***********************************************************************
*             WRITE OUTPUT RECORD SUBROUTINE                          *
***********************************************************************
WRTOUT   PUT   OUTPUT1,OUTREC          WRITE OUTPUT1 RECORD
         BR    R9                      RETURN TO CALLER
***********************************************************************
*             WRITE PRINT LINE                                        *
***********************************************************************
PRINT    PUT   PRINT1,PRT              WRITE PRINT1 RECORD
         BR    R9                      RETURN TO CALLER
***********************************************************************
*             END OF JOB                                              *
***********************************************************************
EOJ      CLI   REC2,X'FF'              INPUT2 AT EOF?
         BE    EOJ3                    YES
         MVC   PRT,REC2                NO, COPY TO PRINT
         BAS   R9,PRINT                WRITE PRINT LINE
         BAS   R9,GETIN2               READ NEXT INPUT2 RECORD
         B     EOJ                     CONTINUE
EOJ3     CLI   REC3,X'FF'              INPUT3 AT EOF?
         BE    EOJ4                    YES
         MVC   PRT,REC3                NO, COPY TO PRINT
         BAS   R9,PRINT                WRITE PRINT LINE
         BAS   R9,GETIN3               READ NEXT INPUT3 RECORD
         B     EOJ3                    CONTINUE
EOJ4     CLI   REC4,X'FF'              INPUT4 AT EOF?
         BE    EOJ9                    YES
         MVC   PRT,REC4                NO, COPY TO PRINT
         BAS   R9,PRINT                WRITE PRINT LINE
         BAS   R9,GETIN4               READ NEXT INPUT4 RECORD
         B     EOJ4                    CONTINUE
EOJ9     CLOSE (OUTPUT1,,PRINT1,,INPUT1,,INPUT2,,INPUT3,,INPUT4) CLOSE
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         LM    R14,R12,12(R13)         RESTORE CALLER'S REGS
         SR    R15,R15                 CLEAR RETURN CODE
         BR    R14                     RETURN
***********************************************************************
*        STORAGE AND FILE AREAS                                       *
***********************************************************************
BLANKS   DC    CL107' '                BLANKS
HIVAL    DC    80X'FF'                 FIELD OF HEX FF'S
SAVEKEY  DC    CL8' '                  HOLD RECORD KEY
*
OUTREC   DC    CL80' '                 PRINT LINE
*
PRT      DC    CL80' '                 PRINT LINE
*
REC1     DS    CL80                    INPUT1 RECORD
*
REC2     DS    CL80                    INPUT2 RECORD
*
REC3     DS    CL80                    INPUT3 RECORD
*
REC4     DS    CL80                    INPUT4 RECORD
*
***********************************************************************
*             DCB'S                                                   *
***********************************************************************
OUTPUT1  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUT1,                       X
               RECFM=FB,LRECL=80
PRINT1   DCB   DSORG=PS,MACRF=PM,DDNAME=PRINT1,                        X
               RECFM=FB,LRECL=80
INPUT1   DCB   DSORG=PS,MACRF=GM,DDNAME=INPUT1,EODAD=EOJ,              X
               RECFM=FB,LRECL=80
INPUT2   DCB   DSORG=PS,MACRF=GM,DDNAME=INPUT2,EODAD=EOF2,             X
               RECFM=FB,LRECL=80
INPUT3   DCB   DSORG=PS,MACRF=GM,DDNAME=INPUT3,EODAD=EOF3,             X
               RECFM=FB,LRECL=80
INPUT4   DCB   DSORG=PS,MACRF=GM,DDNAME=INPUT4,EODAD=EOF4,             X
               RECFM=FB,LRECL=80
         LTORG
MRG4WAY  CSECT
         END
