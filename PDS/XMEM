         PRINT NOGEN
         TITLE '*****XMEM: CROSS MEMORY ACCESS *****'
XMEM SVLNK R3
***********************************************************************
* FETCHES DATA FROM ANOTHER ADDRESS SPACE USING STANDARD MACROS AND   *
* INSTRUCTIONS.                                                       *
*                                                                     *
* AUTHOR R THORNTON MAY 1990                                          *
***********************************************************************
         OPEN  (SYSPRINT,OUTPUT)       OPEN PRINT FILE
         ESTAE ABNDRTN                 ESTABLIST ESTAE ENVIRONMENT
         ST    R15,ESTAE15             SAVE RETURN CODE VALUE
         LTR   R15,R15                 ESTAE SET O.K?
         BZ    CKASCB                  YES
         WTO   'XMEM: ESTAE FAILED, ABENDING',ROUTCDE=11
         ABEND 111,DUMP                ABEND
CKASCB   L     R1,16                   POINT TO CVT (NUC < 16M)
         L     R1,556(R1)              POINT TO ASVT (SQA < 16M)
         CLC   ASIDNBR,518(R1)         VALID ASID NUMBER?
         BH    EOJ                     NO
         LH    R2,ASIDNBR              YES, GET ASID NUMBER
         SLL   R2,2                    MULTIPLY BY 4
         LA    R2,524(R1,R2)           POINT TO ASVT ENTRY
         TM    0(R2),X'80'             THIS ASID IN USE?
         BO    UNASSIGN                NO
         L     R2,0(R2)                YES, POINT TO ASCB (SQA < 16M)
         TM    102(R2),X'04'           SWAPPED OUT?
         BO    SWAPOUT                 YES
         MVC   SENDADDR,108(R2)        SEND ASXB (PVT LSQA ANY)
         BAL   R9,MOVEXMEM             GO GET ASXB FROM OTHER A.S.
         L     R1,RECVAREA+4           POINT TO 1ST TCB
SAVETCB  ST    R1,SENDADDR             SEND TCB (PVT LSQA ANY)
         LTR   R1,R1                   ANY TCB ADDRESS?
         BZ    INCRASID                NO, ALL THROUGH
         BAL   R9,MOVEXMEM             GO GET ASXB FROM OTHER A.S.
         MVC   NEXTTCB,RECVAREA+116    SAVE NEXT TCB POINTER
         MVC   SENDADDR,RECVAREA+12    SEND TIOT
         BAL   R9,MOVEXMEM             GO GET A TCB FROM OTHER A.S.
         MVC   PRT(8),RECVAREA         JOBNAME TO PRINT
         MVC   PRT+10(8),RECVAREA+8    STEPNAME TO PRINT
         MVC   PRT+18(8),RECVAREA+16   PROCSTEP NAME TO PRINT
         BAL   R9,PRINT                PRINT THE LINE
         L     R1,NEXTTCB              GET NEXT TCB POINTER
         B     SAVETCB                 GO PROCESS NEXT
UNASSIGN CLC   1(3,R2),=X'000000'      THIS END OF ASVT?
         BE    EOJ                     YES
         MVC   PRT(38),=C'____ IS AN UNASSIGNED ASID NUMBER'
         UNPK  PRT(5),ASIDNBR(3)       MAKE
         TR    PRT(4),TRCHAR-C'0'         ASID NUMBER
         MVI   PRT+4,C' '                    PRINTABLE
         BAL   R9,PRINT                PRINT MESSAGE
         B     INCRASID                CONTINUE
SWAPOUT  MVC   PRT(32),=C'ADDRESS SPACE FOR ASID ____ SWAPPED OUT'
         UNPK  PRT+23(5),ASIDNBR(3)    MAKE
         TR    PRT+23(4),TRCHAR-C'0'      ASID NUMBER
         MVI   PRT+27,C' '                   PRINTABLE
         BAL   R9,PRINT                PRINT MESSAGE
INCRASID LH    R1,ASIDNBR              PICK UP ASID NUMBER
         LA    R1,1(R1)                ADD 1
         STH   R1,ASIDNBR              UPDATE ASID NUMBER
         BAL   R9,PRINT                PRINT SEPARATOR LINE
         B     CKASCB                  CONTINUE
***********************************************************************
*        END OF INPUT FILE AND END OF JOB                             *
***********************************************************************
EOJ      CLOSE SYSPRINT                CLOSE FILES
         L     R13,4(R13)              GET CALLER'S SAVE ADDRESS
         LM    R14,R12,12(R13)         GET CALLER'S REGISTERS
         SR    R15,R15                 ZERO RETURN CODE
         BR    R14                     RETURN TO CALLER
***********************************************************************
*        ROUTINE TO PRINT A LINE                                      *
***********************************************************************
PRINT    PUT   SYSPRINT,PRT            PRINT A LINE
         MVC   PRT,BLANKS              CLEAR PRINT LINE
         STM   R0,R15,SAVEREGS         ????????TESTING???????????
         L     R1,NEXSAVAD             ????????TESTING???????????
         MVC   0(64,R1),SAVEREGS       ????????TESTING???????????
         MVC   64(16,R1),SEPRAT        ????????TESTING???????????
         C     R1,LASSAVAD             ????????TESTING???????????
         BNL   S0C1                    ????????TESTING???????????
         LA    R1,64(R1)               ????????TESTING???????????
         ST    R1,NEXSAVAD             ????????TESTING???????????
         B     PRTXIT                  ????????TESTING???????????
S0C1     DC    H'0'                    ????????TESTING???????????
NEXSAVAD DC    A(SAVTABL)              ????????TESTING???????????
LASSAVAD DC    A(SAVEEND)              ????????TESTING???????????
SAVTABL  DS    10XL80                  ????????TESTING???????????
SAVEEND  DS    0C                      ????????TESTING???????????
SEPRAT   DC    CL16'0123456789ABCDEF'  ????????TESTING???????????
SAVEREGS DS    16F                     ????????TESTING???????????
PRTXIT   BR    R9                      RETURN TO CALLER
***********************************************************************
* FETCH DATA FROM ANOTHER ADDRESS SPACE. CALLER MUST FIRST SET THE    *
* ASID OF THE OTHER ADDRESS SPACE IN ASIDNBR, THE LENGTH OF DATA TO   *
* BE MOVED IN MOVELENG, ADDRESS OF THE RECEIVING AREA IN RECVADDR     *
* AND DATA ADDRESS IN THE SECONDARY A.S. IN SENDADDR.                 *
***********************************************************************
MOVEXMEM STM   R9,R12,MXSAVE           SAVE REGS USED
         MODESET MODE=SUP,KEY=ZERO     STATE, KEY FOR CROSS MEMORY
         PRINT GEN
         AXRES AXLIST=AXLIST           RESERVE AN AUTH INDEX IN A.T.
         ST    R15,AXRES15             SAVE R15
         AXEXT ASID=ASIDNBR            GET AUTH TBL VALU FOR ASID IN R0
         ST    R15,AXEXT15             SAVE R15
         ST    R0,GOTAX                SAVE ASID'S AUTH INDEX
         AXSET AX=GOTAX                SET TO ASID'S AUTH INDEX
         ST    R15,AXSET15             SAVE R15
         L     R12,RECVADDR            POINT TO RECEIVING AREA
         L     R11,MOVELENG            GET AREA LENGTH
         L     R10,SENDADDR            GET ADDRESS IN SECONDARY A.S.
         LH    R1,ASIDNBR              GET ASID NBR
         SSAR  R1                      SET SECONDARY A.S. ID
         SR    R9,R9                   PROTECT KEY FOR SECONDARY
         LA    R8,256                  MOVE INCREMENT LENGTH
MXINCR   MVCP  0(R11,R12),0(R10),R9     MOVE MAX OF 256 BYTES
         BC    8,MXDONE                EXIT WHEN MOVE COMPLETE
         AR    R12,R8                  ADVANCE 256 BYTES IN RCV
         AR    R10,R8                  ADVANCE 256 BYTES IN SEND
         SR    R11,R8                  DEDUCT 256 FROM LENGTH
         B     MXINCR                  LOOP TO MOVE ALL BYTES
MXDONE   EPAR  R1                      EXTRACT PRIMARY ASID INTO R1
         SSAR  R1                      SET SECONDARY TO MY ASID
         AXFRE AXLIST=AXLIST           FREE THE GOTTEN AUTH INDEX
         PRINT NOGEN
         ST    R15,AXFRE15             SAVE R15
         MODESET MODE=PROB,KEY=NZERO   PROBLEM STATE, KEY
MXEXIT   LM    R9,R12,MXSAVE           RESTORE REGS
         BR    R9                      EXIT
***********************************************************************
*        ESTAE HANDLING ROUTINE                                       *
***********************************************************************
         USING *,R15
ABNDRTN  L     R3,XMEMBASE             GET BASE REG FOR XMEM
         DROP  R15
         USING XMEM,R3
         ST    R14,ESTAE14             SAVE RETURN ADDRESS
         ST    R1,ESTAE1               SAVE SDWA ADDRESS
         C     R0,F12                  WAS SDWA OBTAINED?
         BE    NOSDWA                  NO
         USING SDWA,R1
         MVC   PRT(22),=C'ASID ____ ABENDED AT +'
         ICM   R15,15,SDWAEC1+4        GET PSW ADDRESS
         N     R15,HIOFF               TURN OFF HIGH BIT
         S     R15,XMEMBASE            COMPUTE OFFSET
         ST    R15,DBLWD               MAKE
         UNPK  PRT+22(9),DBLWD(5)         OFFSET
         TR    PRT+22(8),TRCHAR-C'0'         PRINTABLE
         MVC   PRT+30(11),=C', CODE IS: '
         UNPK  PRT+41(9),SDWACMPC(5)   MAKE
         TR    PRT+41(8),TRCHAR-C'0'      COMPLETION CODE
         MVI   PRT+49,C' '                   PRINTABLE
         UNPK  PRT+5(5),ASIDNBR(3)     MAKE
         TR    PRT+5(4),TRCHAR-C'0'       ASID NUMBER
         MVI   PRT+9,C' '                    PRINTABLE
         BAL   R9,PRINT                PRINT MESSAGE
         L     R1,ESTAE1               RECOVER R1
         SETRP RC=4,RETREGS=YES,DUMP=NO,FRESDWA=YES,                   X
               REGS=(14,12),RETADDR=INCRASID
         DROP  R1
NOSDWA   MVC   PRT(41),=C'ASID ____ ABENDED WITH NO SDWA, CODE IS: '
         ST    R1,DBLWD                MAKE
         UNPK  PRT+41(9),DBLWD(5)         ABEND
         TR    PRT+41(8),TRCHAR-C'0'         CODE
         MVI   PRT+49,C' '                       PRINTABLE
ESTAERTN UNPK  PRT+5(5),ASIDNBR(3)     MAKE
         TR    PRT+5(4),TRCHAR-C'0'       ASID NUMBER
         MVI   PRT+9,C' '                    PRINTABLE
         BAL   R9,PRINT                PRINT MESSAGE
         L     R1,ESTAE1               RECOVER R1
         LA    R15,4                   INDICATE RETURN TO PROGRAM
         LA    R0,INCRASID             GIVE PROGRAM RETURN ADDRESS
         L     R14,ESTAE14             GET ESTAE RETURN ADDR
         BR    R14                     RETURN TO CONTROL PROGRAM
ESTAE1   DS    A                       ESTAE SDWA ADDRESS
ESTAE14  DS    A                       ESTAE RETURN ADDRESS
ESTAE15  DS    F                       RETURN CODE FROM ESTAE
F12      DC    F'12'                   CONSTANT 12
XMEMBASE DC    A(XMEM)                 BASE REG VALUE FOR XMEM
***********************************************************************
*        STORAGE AND FILE AREAS                                       *
***********************************************************************
DBLWD    DS    D
HIOFF    DC    X'7FFFFFFF'             TO TURN OFF HI BIT
NEXTTCB  DS    A                       ADDRESS OF NEXT TCB
MXSAVE   DS    4F                      REG SAVE FOR MOVEXMEM
AXRES15  DC    A(0)                    R15 AFTER AXRES
AXEXT15  DC    A(0)                    R15 AFTER AXEXT
AXSET15  DC    A(0)                    R15 AFTER AXSET
AXFRE15  DC    A(0)                    R15 AFTER AXFRE
RECVADDR DC    A(RECVAREA)             RECEIVING FIELD ADDRESS
MOVELENG DC    A(L'RECVAREA)           CROSS-MEMORY MOVE LENGTH
SENDADDR DC    A(0)                    SECONDARY A.S. ADDRESS
GOTAX    DC    A(0)                    AX GOTTEN FOR SECONDARY
ASIDNBR  DC    H'1'                    SECONDARY A.S. ASID DESIRED
AXLIST   DC    H'1'                    RETURN 1 AX VALUE
         DC    H'0'                    AX VALUE RETURNED BY AXRES
BLANKS   DC    CL80' '                 BLANKS
TRCHAR   DC    CL16'0123456789ABCDEF' MAKE HEX PRINTABLE
PRT      DC    CL80' '                 PRINT LINE
*
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FB,LRECL=80
         LTORG
         DS    0D
RECVAREA DS    CL512                   RECEIVING DATA AREA
         IHASDWA DSECT=YES
XMEM     CSECT
         END
