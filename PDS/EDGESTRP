         TITLE '*** EDGESTRP: PROCESS AN EDGE MACHINE FILE ***'
EDGESTRP CSECT
*********************************************************************
* READS A MACHINE FILE OUTPUT FROM AN EDGE ANALYZER RUN. THIS       *
* PROGRAM SHOULD BE REBUILT FOR EACH USE.                           *
*                                                                   *
* AUTHOR R THORNTON MAY 2001                                        *
*********************************************************************
*
*********************************************************************
*        SAVE REGISTERS, SET UP BASE REGS, CHAIN SAVE AREAS         *
*********************************************************************
         USING EDGESTRP,R3,R4
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)             SET UP SECOND
         LA    R4,1(R4)                    BASE REGISTER
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     START                   BRANCH AROUND CONSTANTS
         DC    CL8'EDGESTRP'           PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
START    DS    0H                      BEGIN PROCESSING
*********************************************************************
*        OPEN FILES                                                 *
*********************************************************************
OPENS    OPEN  (PRINT1,OUTPUT,MACHFILE) OPEN FILES
*********************************************************************
*             MAINLINE ROUTINE                                      *
*********************************************************************
MAINLINE BAS   R9,GETIN                READ INPUT RECORD
         MVC   OUTREC,MACHREC          COPY RECORD TO OUTPUT
         BAS   R9,PUTOUT               WRITE OUTPUT RECORD
         B     MAINLINE                LOOP THROUGH INPUT FILE
*********************************************************************
*             READ INPUT FILE SUBROUTINE                            *
*********************************************************************
GETIN    GET   MACHFILE,MACHREC        READ NEXT RECORD
         AP    INPCOUNT,P1             INCREMENT COUNTER
         BR    R9                      RETURN TO CALLER
*********************************************************************
*             PRINT SUBROUTINE                                      *
*********************************************************************
PRINT    PUT   PRINT1,PRTLINE          WRITE PRINT LINE
         MVC   PRTLINE,BLANKS          CLEAR PRINT LINE
         BR    R9                      EXIT
*********************************************************************
*             END OF JOB                                            *
*********************************************************************
EOJ      CLOSE (PRINT1,,MACHFILE) CLOSE FILES
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         L     R14,12(R13)             RESTORE RETURN REG: R14
         L     R15,RETCODE             SET RETURN CODE
         LM    R0,R12,20(R13)          RESTORE CALLER'S REGS 0-12
         BR    R14                     RETURN
*********************************************************************
*        STORAGE AND FILE AREAS                                     *
*********************************************************************
*
DBLWD    DS    D                       DOUBLEWORD WORK AREA
*
RETCODE  DS    F                       RETURN CODE
H0       DC    H'0'                    HEX ZERO
P0       DC    P'0'                    PACKED 0
P1       DC    P'1'                    PACKED 1
INPCOUNT DC    PL5'0'                  INPUT RECORD COUNTER
OUTCOUNT DC    PL5'0'                  OUTPUT RECORD COUNTER
BLANKS   DC    CL133' '                BLANKS
*
PRTLINE  DS    0CL133                  PRINT LINE
PCC      DS    CL1                     CARRIAGE CONTROL
PRT      DS    0CL132                  PRINT DATA
         DS    CL132
*
MACHREC  DS    0CL200         EDGE MACHINE RECORD
MRMEM    DS    CL8              MEMBER NAME
MRMAMODE DS    CL1              MEMBER AMODE
MRMRMODE DS    CL1              MEMBER RMODE
MRCSECT  DS    CL8              CSECT NAME
MRCOMPID DS    CL10             COMPILER ID FROM IDR
MRCOMPVM DS    CL4              COMPILER VERSION & MOD LEVEL
MRCOMPDT DS    CL5              COMPILE DATE YYDDD
MRCAMODE DS    CL1              CSECT AMODE: ' '=PRE-XA,
*                                 2=24, 3=31, A=ANY
MRCRMODE DS    CL1              CSECT RMODE: 2=PRE-XA OR 24, A=ANY
MRTYPE   DS    CL2              TYPE: AR=ASM, BA=BASIC, BG=DEBUG TOOL,
*                                 BS=BERKELEY SOCKET, CC=CICS INTF,
*                                 CE=C370 RUNTIME, CI=C370, CL=LATTICE
*                                 CM=COMMON SECTION, CR=COBOL RUNTIME,
*                                 CS=SAS-C, CP=C/C++ FOR OS390,
*                                 C2=COBOL2, C3=COB370-FOR MVS/VM-390,
*                                 DC=DCE, DI=DB2 INTF, EZ=EASYTRIEVE+,
*                                 FG=FORTRAN-G, FH=FORTRAN-H,
*                                 FR=FORTRAN RUNTIME, FV=VS-FORTRAN,
*                                 II=IMS INTF, IS=ISPF INTF,
*                                 LE=LE RUNTIME (ONLY POS. ID),
*                                 MV=MARK-V, NA=NOT COMPLETELY ANALY,
*                                 NR=NOT RECOGNIZED, PL=PL/I 390,
*                                 PM=PL/I MVS&VM, PR=PLI RUNTIME,
*                                 PV=VS PASCAL, P1=PL/I V1, P2=PL/I-V2,
*                                 RE=REXX, RT=LANG RUNTIME, SA=SNAPAID,
*                                 SC=COBOL SAMPLES, UR=USER RECOG ASM,
*                                 VO=VERY OLD COBOL, VS=OS/VS COBOL,
*                                 V4=ANS COBOL V4
MRTIMEDT DS    CL1              SYSTEM DATE REQUESTED USING: 0=NEITHER
*                                 1=ASM TIME MACRO, 2=ASM STCK, 3=BOTH,
*                                 4=COBOL 2/370 ACCEPT DATE/DAY/TIME,
*                                 9=COBOL 2/370 OTHER, ' ' /T NOT SPEC
MRLMATTR DS    CL1              LOAD MODULE ATTRIBUTES: 1=REUS,
*                                 2=RENT NOT REUS, 3=BOTH RENT & REUS,
*                                 8=OVERLAY DATA IS SUSPECT, ' ' NONE
MREPNAME DS    CL8              MODULE ENTRY POINT NAME
MRCSSIZE DS    ZL8              CSECT SIZE IN DECIMAL
MRUSRDAT DS    CL4              DATA FROM /U PARM VALUE
MRDATLKD DS    CL5              MODULE LINK DATE
MRSUPINF DS    CL10             COMPILER/RUNTIME ID, VVLL
MRC2DAT  DS    CL9              COMPILE DATE
MRC2TIM  DS    CL8              TIME COMPILED
MRC2ADV  DS    CL1              1=ADV, 0=NOADV
MRC2QUOT DS    CL1              1=APOST, 0=QUOTE
MRC22431 DS    CL1              1=DATA31, 0=DATA24
MRC2DECK DS    CL1              1=DECK, 0=NODECK
MRC2DUMP DS    CL1              1=DUMP, 0=NODUMP
MRC2DYNA DS    CL1              1=DYNAM, 0=NODYNAM
MRC2FAST DS    CL1              1=FASTSRT, 0=NOFASTSRT
MRC2FDUM DS    CL1              1=FDUMP, 0=NOFDUMP
MRC2LIB  DS    CL1              1=LIB, 0=NOLIB
MRC2LIST DS    CL1              1=LIST, 0=NOLIST
MRC2MAP  DS    CL1              1=MAP, 0=NOMAP
MRC2NUM  DS    CL1              1=NUM, 0=NONUM
MRC2OBJ  DS    CL1              1=OBJ, 0=NOOBJ
MRC2OFFS DS    CL1              1=OFFSET, 0=NOOFFSET
MRC2OPT  DS    CL1              COB2: 1=OPT, 0=NOOPT,
*                               COB3: 2=OPTFULL, 1=OPTSTD, 0=NOOPT
*                               CA-OPT-II: 9
MRC2STDD DS    C                1=OUTDD, 0=DD
MRC2PFD  DS    C                REL1-2: 1=PFDSGN, 0=NOPFDSGN
*                                  REL3: 2=NUMMIG, 1=NUMPFD, 0=NUMNPFD
MRC2RENT DS    C                1=RENT, 0=NORENT
MRC2RES  DS    C                1=RES, 0=NORES
MRC2SEQ  DS    C                1=SEQ, 0=NOSEQ
MRC2SIZE DS    C                1=SIZE(MAX), 0=SIZE(N)
MRC2SOUR DS    C                1=SOURCE, 0=NOSOURCE
MRC2SSRN DS    C                1=SSRANGE, 0=NOSSRANGE
MRC2TERM DS    C                1=TERM, 0=NOTERM
MRC2TEST DS    C                1=TEST, 0=NOTEST
MRC2TRUN DS    C                REL1-2: 1=TRUNC, 0=NOTRUNC
*                                  REL3: 2=TRUNC(BIN), 1=TRUNC(STD)
*                                    0=TRUNCOPT
MRC2RW   DS    C                   1=USERSPEC WORD
MRC2VBRE DS    C                   1=VBREF, 0=NOVBREF
MRC2XREF DS    C                   1=XREF, 0=NOXREF
MRC2ZWB  DS    C                   1=ZWB, 0=NOZWB
************************ FOLLOWING ARE REL 3 + ONLY ****************
MRC2CMP2 DS    C                   1=CMPR2, 0=NOCMPR2
MRC2NAME DS    C                   1=NAME, 0=NONAME
MRC2NMCL DS    C                   1=NMCLALT, 0=NMCLPRI
MRC2DBCS DS    C                   1=DBCS, 0=NODBCS
MRC2AWO  DS    C                   1=AWO, 0=NOAWO
MRC3EVE  DS    CL01                1=EVENT, 0=NOEVENT
MRC3CUR  DS    CL01                1=CURRENCY, 0=NOCURRENCY
MRC3RMOD DS    CL1                 1=RMODE(ANY), 0=RMODE(24)
MRC3PGMN DS    C                   2=PGM(LU), 1=PGM(LM), 0=PGM(COMPAT)
MRC3INTD DS    C                   1=LILIAN, 0=ANSI
MRC3CLAS DS    C                   0=PROGRAM, 1=CLASS
MRC3DATP DS    C                   1=DATEPROC, 0=NODATEPROC
MRCOBSM  DS    C                   1=SORT OR MERGE FOUND =1 ELSE 0
*                                     ALL COBOL COMPILED RES
MRCOBDC  DS    CL01                COBOL: 3=CALL LIT & DYN + CALL DTNM,
*                                    2=CALL DATANM, 1=CALL LIT & DYN
*                                  CAPEX OPT: 7=CALL LIT&DYN+CALL DTNM,
*                                    6=CALL DATANM, 5=CALL LIT&DYN
*                                  ASSEMBLER: 3=LINK + LOAD SVC'S FOUND,
*                                    2=LOAD SVC FOUND, 1=LINK SVC FOUND
*                                    0=NEITHER LOAD NOR LINK SVC FOUND
*********THE FOLLOWING FIELDS OS/VS COBOL VER 3 & 4
MROCSYMD DS    C                   1=SYMDUMP, 0=NOSYMDUMP
MROCFLOW DS    C                   1=FLOW, 0=NOFLOW
MROCSTAT DS    C                   1=STATE, 0=NOSTATE
MROCTEST DS    C                   1=TEST, 0=NOTEST
MROCRES  DS    C                   1=RES, 0=NORES
MROCENDJ DS    C                   1=ENDJOB, 0=NOENDJOB
MROCO370 DS    C                   1=OBJ370, 0=OBJ360
MROCCOPT DS    C                   1=OPT, 0=NOOPT
MROCCAOP DS    C                   1=CAPEX OPTIMIZED, 0=NO
MROCCDET DS    C                   1=CAPEX DTECT, 0=NO
*************FOLLOWING ARE OS/VS COBOL ONLY
MROCCOUN DS    C                   1=COUNT, 0=NOCOUNT
MROCTRAC DS    C                   1=TRACE, 0=NOTRACE
MROCLLVL DS    C                   2=LANGLEVEL(2), 1=LANGLEVEL(1)
MROCSYSO DS    C                   TAIL LETTER OF SYSOU DDNAME
MRC3TSTS DS    C                   1=SEPARATE, 0=NOSEPARATE
MRC3ARTH DS    C                   1=ARITH(NOEXTEND), 0=ARITH(EXTEND)
         DS    C                   RESERVED
******** PL/I V2 COMPILE TIME OPTIONS
MRP2MAIN DS    CL1                 1=OPTIONS (MAIN), 0=NOT MAIN
MRP2ORDE DS    CL1                 1=REORDER, 0=NOREORDER
MRP2EXEC DS    CL1                 1=EXECOPS, 0=NOEXECOPS
MRP2CMPA DS    CL1                 2=CMPAT(V2), 1=CMPAT(V1)
MRP2GRAP DS    CL1                 1=GRAPHIC, 0=NOCHGRAP
MRP2OPT  DS    CL1                 1=OPT, 0=NOOPT
MRP2INTE DS    CL1                 1=INTER, 0=NOINTER
MRP2FLOW DS    CL1                 1=FLOW, 0=NOFLOW
MRP2COUN DS    CL1                 1=COUNT, 0=NOCOUNT
MRP2TEST DS    CL1                 1=TEST, 0=NOTEST
MRP2SYST DS    CL1                 SYSTEM: 6=IMS, 5=CICS, 4=TSO, 3=MVS,
*                                          2=CMSTP, 1=CMS
******** THE FOLLOWING FIELD IS COMMON TO ALL PL/I
MRP2CSTY DS    CL1                 PLI CSECT TYPE: 4=CODE CSECT,
*                                    3=STATIC DATA CSECT, 2=EXTERNAL
*                                    DATA CSECT, 1=COMPILER GEN RUNTIME
         DS    CL28                RESERVED
MRYRWIND DS    CL4                 IF MLE (MRTYPE=C3) YEARWINDOW:
*                                    YYYY=FIXED, -0NN=SLIDING
*********************************************************************
*             DCB'S                                                 *
*********************************************************************
PRINT1   DCB   DSORG=PS,MACRF=PM,DDNAME=PRINT1,                        X
               RECFM=FBA,LRECL=133
MACHFILE DCB   DSORG=PS,MACRF=GM,DDNAME=MACHFILE,EODAD=EOJ,            X
               RECFM=FBA,LRECL=80
         LTORG
EDGESTRP CSECT
*********************************************************************
*             REGISTER EQUATES                                      *
*********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
