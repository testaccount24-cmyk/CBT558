         TITLE '*** COUNTREC: READ FILES, PRINT RECORD COUNTS ***'
COUNTREC CSECT
*********************************************************************
* READS THE SYSIN FILE TO OBTAIN A DATASET NAME. FOR EACH DSNAME,   *
* CHECK TO SEE IF IT IS CATALOGED. IF CATALOGED, DYNAMICALLY        *
* ALLOCATE IT TO DDNAME INPUT2. IF ALLOCATE IS SUCCESSFUL, OPEN     *
* THE SYSIN FILE FOR INPUT. IF OPEN IS SUCCESSFUL, INSURE THE       *
* DATASET IS DSORG=PS. IF IT IS, READ THE ENTIRE DATASET, COUNTING  *
* RECORDS UNTIL END OF FILE. AT END OF FILE PRINT A LINE TO THE     *
* SYSPRINT FILE GIVING THE DSNAME, FILE RECORD COUNT, AND INDICATE  *
* ANY ERRORS ENCOUNTERED.                                           *
*                                                                   *
* THE SYSIN DATASET MUST BE PHYSICALLY SEQUENTIAL WITH FIXED LENGTH *
* 80-BYTE RECORDS. IF COLUMN 1 CONTAINS AN ASTERISK, THE ENTIRE     *
* RECORD IS A COMMENT. DSNAME RECORDS CONTAIN A DSNAME LEFT         *
* WITH TRAILING SPACES IN COLUMNS 1-44. DATASETS NAMED IN THESE     *
* RECORDS MUST BE PHYSICALLY SEQUENTIAL AND MUST BE CATALOGED.      *
*                                                                   *
* AUTHOR R THORNTON AUG 1999                                        *
*********************************************************************
*
*********************************************************************
* SAVE CALLER'S REGS, SET UP BASE REGS, CHAIN SAVE AREAS            *
*********************************************************************
         USING COUNTREC,R3,R4
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)             SET UP SECOND
         LA    R4,1(R4)                    BASE REGISTER
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     OPENS                   BRANCH AROUND CONSTANTS
         DC    CL8'COUNTREC'           PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
*********************************************************************
* OPEN THE FILES FOR PROCESSING                                     *
*********************************************************************
OPENS    OPEN  (SYSPRINT,OUTPUT,SYSIN) OPEN FILES
*********************************************************************
* MAINLINE PROCESSING: READ THE NEXT SYSIN FILE RECORD. FOR EACH    *
* RECORD READ, PERFORM THE CHECK ROUTINE. IF NO ERRORS ARE FOUND    *
* BY THE CHECK ROUTINE, PERFORM THE COUNT ROUTINE. PRINT A LINE FOR *
* EACH SYSIN FILE RECORD SHOWING RESULTS OF PROCESSING. AFTER THE   *
* LAST RECORD IS PROCESSED IN THE SYSIN FILE GO TO EOJ.             *
*********************************************************************
MAINLINE CLI   ERROR,1                 ANY ERROR FOUND?
         BNE   MLGET                   NO
         MVI   SEVERR,1                YES, INDICATE SEVERE ERROR
         MVI   ERROR,0                 CLEAR ERROR INDICATOR
MLGET    BAS   R9,GETINREC             READ INPUT RECORD
         CLI   INREC,C'*'              COMMENT?
         BE    MLGET                   YES, IGNORE IT
         BAS   R9,ALLOCATE             NO, GO TRY TO ALLOCATE
         CLI   ERROR,1                 ANY ERROR?
         BE    MLPRT1                  YES, GO PRINT
         BAS   R9,OPENDSET             NO, GO TRY TO OPEN
         CLI   ERROR,1                 ANY ERROR?
         BE    MLPRT1                  YES, GO PRINT
         BAS   R9,COUNT                NO, GO COUNT RECORDS
MLPRT1   PUT   SYSPRINT,PRTLINE        PRINT RESULTS
         B     MAINLINE                YES, GO READ AGAIN
*********************************************************************
* READ NEXT RECORD FROM THE SYSIN FILE. CLEAR PRINT LINE FOR THIS   *
* RECORD. MOVE COL 1-72 TO LEFT SIDE OF PRINT LINE. IF NOT A COMMENT*
* CHECK FOR DSNAME(MEMNAME) AND IF MEMBER NAME FOUND, SEPARATE IT   *
* FROM THE DSNAME.                                                  *
*********************************************************************
GETINREC ST    R9,GI9                  SAVE RETURN ADDRESS
         GET   SYSIN,INREC             READ NEXT INPUT RECORD
         MVC   PRTLINE,BLANKS          CLEAR PRINT LINE
         MVC   PRTDSNAM,INREC          MOVE DSNAME TO PRINT LINE
         CLI   INREC,C'*'              COMMENT?
         BE    GIXIT                   YES
         MVC   INMEMBER,BLANKS         NO, CLEAR MEMBER NAME
         LA    R9,44                   MAX TO SCAN
         LA    R12,INREC               POINT TO COL 1
GILKLPN  CLI   0(R12),C'('             FOUND A LEFT PAREN?
         BE    GIATLEFT                YES
         LA    R12,1(R12)              NO, ADVANCE A BYTE
         BCT   R9,GILKLPN              LOOP THRU DSNAME
         B     GIXIT                   NO LEFT PAREN, EXIT
GIATLEFT LA    R9,8                    SET MAX TO MOVE
         MVI   0(R12),C' '             CLEAR LEFT PAREN
         LA    R12,1(R12)              STEP PAST LEFT PAREN
         LA    R11,INMEMBER            POINT TO IST BYTE OF MEMBER NAME
GICKRPN  CLI   0(R12),C')'             AT RIGHT PAREN?
         BE    GICLRRT                 YES
         MVC   0(1,R11),0(R12)         NO, MOVE A BYTE OF MEMBER NAME
         MVI   0(R12),C' '             CLEAR BYTE IN DSNAME
         LA    R11,1(R11)              ADVANCE 1 BYTE
         LA    R12,1(R12)              ADVANCE 1 BYTE
         BCT   R9,GICKRPN              LOOP TO MOVE MEMBER NAME
GICLRRT  MVI   0(R12),C' '             CLEAR RIGHT PAREN
GIXIT    L     R9,GI9                  GET RETURN ADDRESS
         BR    R9                      EXIT
*********************************************************************
* DYNAMICALLY ALLOCATE THE DATASET TO DDNAME=INPUT2                 *
*********************************************************************
ALLOCATE ST    R9,AC9                  SAVE RETURN ADDRESS
         TM    INPUT2+48,X'10'         IS INPUT2 OPEN?
         BZ    ACCLEAR                 NO
         CLOSE INPUT2                  YES, CLOSE IT
         FREEPOOL INPUT2               AND FREE BUFFER POOL
ACCLEAR  LA    R0,PARM1                  CLEAR
         LA    R1,PARMSEND-PARM1            PARM
         SR    R15,R15                         FIELDS
         MVCL  R0,R14                             TO ZEROS
         MVC   PRMDDNAM,DDNAME         MOVE IN DDNAME
         MVC   PRMDSNAM,INDSNAME       MOVE IN DSNAME
         CLC   INMEMBER,BLANKS         WAS MEMBER NAME GIVEN?
         BE    ACSTAT                  NO
         MVC   PRMMEMBR,INMEMBER       MOVE IN MEMBER/GEN
ACSTAT   MVC   PRMSTATS,=H'8'          DISP=SHR
         MVI   REQCODE,C'A'            REQUEST ALLOCATION.
         CALL  ALLOCDYN,(PARM1,PARM2)  ALLOCATE THE DATASET
         CLC   RETCODE,=C'00'          ANY ERROR?
         BE    ACXIT                   NO
         MVC   PRTMSG(34),=CL34'***UNABLE TO ALLOCATE THIS DATASET'
         MVI   ERROR,1                 INDICATE ERROR OCCURRED
         PUT   SYSPRINT,PRTLINE        PRINT ERROR MESSAGE
         MVC   PRTLINE,BLANKS          CLEAR PRINT LINE
         MVC   PRTMSG,ERRMSG           MOVE ERROR MESSAGE
         PUT   SYSPRINT,PRTLINE        WRITE ALLOCATION ERROR MESSAGE
         MVC   PRTMSG,INFOMSG          MOVE INFO MESSAGE
ACXIT    L     R9,AC9                  GET RETURN ADDRESS
         BR    R9                      EXIT
*********************************************************************
* OPEN THE DATASET FOR INPUT                                        *
*********************************************************************
OPENDSET ST    R9,OD9                  SAVE RETURN ADDRESS
         OPEN  INPUT2                  OPEN INPUT2 FILE
         TM    INPUT2+48,X'10'         DID IT OPEN SUCCESSFULLY?
         BO    ODXIT                   YES
         MVI   ERROR,1                 NO, INDICATE AN ERROR OCCURRED
         MVC   PRTMSG(25),=CL25'ERROR OPENING THE DATASET'
         B     ODXIT                   EXIT
ODXIT    L     R9,OD9                  GET RETURN ADDRESS
         BR    R9                      EXIT
*********************************************************************
* COUNT THE RECORDS IN THE DATASET                                  *
*********************************************************************
COUNT    ST    R9,CT9                  SAVE RETURN ADDRESS
         ZAP   COUNTER,P0              ADD 1 TO COUNTER
CTNEXT   GET   INPUT2                  NO, READ NEXT RECORD
         AP    COUNTER,P1              ADD 1 TO COUNTER
         B     CTNEXT                  LOOP TO COUNT ALL RECORDS
CTXIT    UNPK  PRTNBR,COUNTER          UNPACK COUNTER TO PRINT
         OI    PRTNBR+8,C'0'           CLEAR SIGN ON NUMBER
         CP    COUNTER,P0              ANY COUNT?
         BZ    CTXL9                   NO, JUST EXIT
         MVI   ANYCT,1                 YES, SET COUNT INDICATOR
CTXL9    L     R9,CT9                  GET RETURN ADDRESS
         BR    R9                      EXIT
*********************************************************************
*             END OF JOB                                            *
*********************************************************************
EOJ      CLOSE (SYSPRINT,,SYSIN)       CLOSE FILES
         LA    R15,8                   ASSUME RC=8
         CLI   SEVERR,1                ANY SEVERE ERROR?
         BE    EOJL13                  YES, RC=8 OK
         LA    R15,4                   ASSUME RC=4
         CLI   ANYCT,1                 ANY NON-ZERO RECORD COUNT?
         BE    EOJL13                  YES, RC=4 OK
         SR    R15,R15                 ELSE RC=0
EOJL13   L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         L     R14,12(R13)             RESTORE CALLER'S RETURN ADDRESS
         LM    R0,R12,20(R13)          RESTORE CALLER'S REGS
         BR    R14                     RETURN
*********************************************************************
*        STORAGE AND FILE AREAS                                     *
*********************************************************************
*
DBLWD    DS    D                       DOUBLEWORD WORK AREA
GI9      DS    A                       RETURN ADDRESS FOR GETINREC
AC9      DS    A                       RETURN ADDRESS FOR ALLOCATE
OD9      DS    A                       RETURN ADDRESS FOR OPENDSET
CT9      DS    A                       RETURN ADDRESS FOR COUNT
SAVER15  DC    A(0)                    SAVE AREA FOR R15
H1       DC    H'1'                    CONSTANT 1
SEVERR   DC    X'00'                   SEVERE ERROR INDICATOR
ANYCT    DC    X'00'                   ANY RECORD COUNT > 0
ERROR    DC    X'00'                   ERROR FOUND BYTE
DDNAME   DC    CL8'INPUT2'             DDNAME FOR INPUT2
BLANKS   DC    CL133' '                CONSTANT BLANKS
P0       DC    P'0'                    CONSTANT 0
P1       DC    P'1'                    CONSTANT 1
COUNTER  DC    PL4'0'                  RECORD COUNTER
*
INREC    DS    0CL80                   SYSIN RECORD
INDSNAME DS    CL44                       DSNAME
         DS    CL36
INMEMBER DS    CL8                        MEMBER NAME
*
PRTLINE  DS    0CL133                  SYSPRINT RECORD
PCC      DS    CL1                        CARRIAGE CONTROL BYTE
PRTDSNAM DS    CL44                       DSNAME FROM INREC COL 1-44
         DS    CL1
PRTNBR   DS    CL9                        NBR RECDS IN DATASET
         DS    CL10
PRTMSG   DS    CL68                       ERROR MESSAGES
*
PARM1    DS    0C                      1ST PARAMETER DESCRIPTION
PRMDDNAM DS    CL8                     DDNAME TXT
PRMDSNAM DS    CL44                    DSN=TXT
PRMMEMBR DS    CL8                     MEMBER NAME/GDG GEN TXT
PRMSTATS DS    XL2                     DISP=STATUS NUM: 1=OLD,2=MOD,
*                                                  4=NEW,8=SHR
PRMNDISP DS    XL2                     DISP=NORMAL NUM: 8=KEEP,
*                                         1=UNCATLG,2=CATLG,4=DELETE
PRMCDISP DS    XL2                     DISP=CONDITIONAL NUM:
*                                         SAME AS PRMNDISP
PRMUNIT  DS    CL8                     UNIT= TXT
PRMUNCNT DS    XL2                     UNIT COUNT NUM
PRMVLSER DS    6CL6                    VOL=SER= TXT (1-6)
PRMLABEL DS    XL2                     LABEL= NUM:01=NL,02=SL,10=BLP
PRMDSSEQ DS    XL2                     DATASET SEQUENCE NUM (TAPE)
PRMCLOSE DS    CL1                     FREE=CLOSE >0
PRMRETPD DS    XL2                     RETPD= NUM
PRMRECFM DS    XL2                     RECFM=: HEX SUM OK
*                                      80=FIXED, 40=VARIABLE,
*                                      C0=UNDEFINED, 10=BLOCKED,
*                                      04=ASA CONTROL CHARACTERS,
*                                      02=MACHINE CONTROL CHARACTERS,
*                                      08=STANDARD(F) OR SPANNED(V)
*                                      20=VRBL ASCII(D) OR TRK OFLO(T)
PRMLRECL DS    XL2                     LRECL= NUM
PRMBLKSZ DS    XL2                     BLKSIZE= NUM
PRMDEN   DS    XL2                     DEN= NUM: 03=200,43=556,
*                                             83=800,C3=1600,D3=6250
PRMBUFNO DS    XL2                     BUFNO= NUM
PRMKYLEN DS    XL2                     KEYLEN= NUM
PRMDSORG DS    XL2                     DSORG= NUM:
*                                      0008=VSAM, 0080=GS, 0200=PO,
*                                      0300=POU, 2000=DA, 2100=DAU,
*                                      4000=PS, 4100=PSU
PRMSPACE DS    CL1                     SPACE= TYPE TXT:
*                                      C=CYL, T=TRK
PRMPRIME DS    XL4                     PRIMARY SPACE AMOUNT NUM
PRMSECND DS    XL4                     SECONDARY SPACE AMOUNT NUM
PRMRLSE  DS    CL1                     RLSE >0
PRMDIR   DS    XL4                     DIRECTORY BLOCKS NUM
PRMEX100 DS    CL2                     EXPDT= CENTURY TXT
PRMEXPDT DS    CL5                     EXPDT= YYDDD TXT
PRMBLKLN DS    XL4                     SPACE AVERAGE BLOCKSIZE NUM
PRMSPFRM DS    XL2                     SPACE FORM NUM: 2=ALX,
*                                                  4=MXIG, 8=CONTIG
PRMROUND DS    CL1                     ROUND >0
PRMPRIVT DS    CL1                     PRIVATE >0
PRMVLSEQ DS    XL2                     VOLUME SEQUENCE NUM
PRMVLCNT DS    XL2                     VOLUME COUNT NUM
PRMVLRDS DS    CL44                    VOL=REF= DSNAME TXT
PRMPARAL DS    CL1                     PARALLEL MOUNT REQUEST >0
PRMSPGNM DS    CL8                     SYSOUT PROGRAM NAME TXT
PRMSFMNO DS    CL4                     SYSOUT FORM NUMBER TXT
PRMOUTLM DS    XL4                     OUTLIM FOR SYSOUT NUM
PRMCOPYS DS    XL2                     COPIES= NUM
PRMPASPR DS    XL2                     PASSWORD PROTECTION NUM:
*                                            10=PWREAD, 30=NOPWREAD
PRMINOUT DS    XL2                     INPUT/OUTPUT ONLY NUM:
*                                      40=OUTPUT-ONLY, 80=INPUT-ONLY
PRMFCBIM DS    CL4                     FCB= TXT
PRMFCBAV DS    XL2                     FCB ALIGN/VERIFY NUM:
*                                           4=VERIFY, 8=ALIGN
PRMTERM  DS    CL1                     TERM=TS >0
PRMUCS   DS    CL4                     UCS= TXT
PRMUFOLD DS    CL1                     UCS FOLD >0
PRMUVRFY DS    CL1                     UCS VERIFY REQUEST >0
PRMDCBDS DS    CL44                    DCB MODEL DSNAME TXT
PRMDCBDD DS    CL26                    DCB DDNAME BACKREFERENCE TXT
PRMEROPT DS    XL2                     EROPT= NUM: 10=T, 20=ABE,
*                                                  40=SKP, 80=ACC
PRMNCP   DS    XL2                     NCP= NUM
PRMOPTCD DS    XL2                     OPTCD= SUM OK: 1=R,J; 2=T;
*                                             4=Z; 8=A,Q; 10=F,H,O;
*                                             20=C,E; 40=B,U; 80=W
PRMPRTSP DS    XL2                     PRINTER SPACING NUM: 1=NO SPACE
*                                          9=SINGLE SPACED, 11=DOUBLE
*                                          SPACED, 19=TRIPLE SPACED
PRMTRTCH DS    XL2                     7-TRACK TAPE NUM: 4=NON-COMPACT,
*                                          8=COMPACTION, 13=C, 23=E,
*                                          2B=ET, 3B=T
PRMPASSW DS    CL32                    PASSWORD VALUE TXT
PRMDIAGN DS    CL1                     DIAGNS=TRACE >0
PRMSUSER DS    CL8                     SYSOUT DEST NODE NAME TXT
PRMSHOLD DS    CL1                     HOLD=YES >0
PRMUSRID DS    CL8                     SYSOUT DEST USERID TXT
PRMBURST DS    XL2                     BURST= NUM: 2=BURST/STACK/TRIM
*                                                  4=CONTINUOUS
PRMCHARS DS    4CL4                    CHARS= NAMES TXT (0-4)
PRMCOPYG DS    8XL2                    SYSOUT COPY GROUPS (0-8)
PRMFFORM DS    CL4                     FLASH= FORM OVERLAY NAME TXT
PRMFCNT  DS    XL2                     FLASH OVERLAY COUNT NUM
PRMMMOD  DS    CL4                     MODIFY= MODULE NAME TXT
PRMMTRC  DS    XL2                     MODIFY TRC NUM: 0=1ST CAT,
*                                       1=2ND CAT, 2=3RD CAT, 3=4TH CAT
PRMDEFER DS    CL1                     DEFER MOUNT REQUEST >0
PRMOUTPT DS    8CL26                   OUTPUT= REFERENCES TXT (0-8)
PRMCNTL  DS    CL26                    CNTL STATEMENT REFERENCE TXT
PRMSTCL  DS    CL8                     STORCLAS= TXT
PRMMGCL  DS    CL8                     MGMTCLAS= TXT
PRMDACL  DS    CL8                     DATACLAS= TXT
PRMRECO  DS    XL2                     RECORG=NUM: 8=KS,4=ES,2=RR,1=LS
PRMKEYO  DS    XL2                     KEYOFF= NUM
PRMREFD  DS    CL26                    REFDD= DDNAME REFERENCE TXT
PRMLIKE  DS    CL44                    LIKE= DSNAME REFERENCE TXT
PRMAVGR  DS    XL2                     AVGREC= NUM: 80=SINGLE RECS
*                                        40=THOUSANDS ,20=MILLIONS
PRMDSNT  DS    XL2                     DSNTYPE= NUM: 80=PDSE, 40=PDS
*
*
*
PARM2    DS    0C                      2ND PARAMETER DESCRIPTION
REQCODE  DS    CL1                     REQUEST CODE, A=ALLOC, V=VOLSER
RETCODE  DS    CL2                     ALLOCDYN RETURN CODE
ERRRET   DS    CL4                     ERROR RETURN CODE
ERRMSG   DS    CL71                    ERROR REASON MESSAGE
INFORET  DS    CL4                     INFO RETURN CODE
INFOMSG  DS    CL71                    INFORMATION REASON MESSAGE
PARMSEND EQU   *                       END OF ALLOCDYN PARMS
*
*********************************************************************
*             DCB'S                                                 *
*********************************************************************
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FBA,LRECL=133
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=EOJ,               X
               RECFM=FB,LRECL=80
INPUT2   DCB   DSORG=PS,MACRF=GL,DDNAME=INPUT2,EODAD=CTXIT
         LTORG
COUNTREC CSECT
*********************************************************************
*             REGISTER EQUATES                                      *
*********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         DCBD  DSORG=PS
         END
