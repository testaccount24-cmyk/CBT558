./ ADD NAME=$$RTINDX 0100-02135-02135-1219-00077-00077-00000-BC0THOR
//RUX1077U JOB (8T-THORNTO),THORNTON,CLASS=C,NOTIFY=USER02
// EXEC PRTPCH,PRT=Y,PUN=N,MEM=C,SEP=P,LIBRY='BCBS.MACLIB'
*             *** OPERATING SYSTEM CONTROL BLOCK DEFINITIONS ***
*
ABDA                  ABDUMP'S WORK AREA
ASCB                  ADDRESS SPACE CONTROL BLOCK
ASMWORK               AUX. STORAGE MANAGER'S WORK AREA
ASVT                  ADDRESS SPACE VECTOR TABLE
CVT                   COMMUNICATIONS VECTOR TABLE
DSCBDEF               DATASET CONTROL BLOCKS (ALL)
ECB                   EVENT CONTROL BLOCK
EXDADEB               DATA EXTENT BLOCK
IKJECBS               EVENT CONTROL BLOCK
IKJRCB                RESOURCE CONTROL BLOCK
IOB                   INPUT-OUTPUT BLOCK
JFCB                  JOB FILE CONTROL BLOCK
JFCBDEF               JOB FILE CONTROL BLOCK
LDA                   LOCAL DATA AREA
LOWCORE               LOW 4-K STORAGE DESCRIPTION (PSA)
PDSDIR                PARTITIONED DATASET DIRECTORY ENTRY
PVT                   PAGE VECTOR TABLE
RB                    REQUEST BLOCKS (ALL)
SCVT                  SECONDARY COMMUNICATIONS VECTOR TABLE
TCB                   TASK CONTROL BLOCK
TCT                   TIMING CONTROL TABLE
UCB                   UNIT CONTROL BLOCK
*
*          BLUE CROSS RECORD DESCRIPTIONS ***
*
BCCLAIM               CLAIM RECORD
BENIDXJ               BENEFIT INDEX RECORD
BENIDX                BENEFIT INDEX RECORD
BSCLAIM               BLUE SHIELD CLAIM RECORD
DOCMAST               DOCTOR MASTER RECORD
GRPMAST               GROUP MASTER RECORD
GRPMAST2              GROUP MASTER RECORD
HDWREC                HARDWARE RECORD
HOSMAST               HOSPITAL MASTER RECORD
MPACTIVE
MPRAW
PBASEMST              SUBSCRIBER BASE RECORD (PACKED)
PGRPMAS               GROUP MASTER RECORD (PACKED)
SBR0080
SMFRECS
UBASEMST              SUBSCRIBER BASE RECORD (UNPACKED)
*
*            *** SRB MACROS ***
*
SRBINST               INSTRUCTIONS FOR SRB MACROS BELOW
BCBLDSRB              BUILD THE SRB
BCGETRTN              GET STORAGE FOR SRB ROUTINE
BCSRBDEF              SRB CONTROL BLOCK DEFINITION
BCSRBENT              INITIALIZATION FOR SRB ROUTINE
BCSRBFRE              FREE SRB STORAGE
BCSRBPST              BRANCH ENTER POST
*
*            *** MISCELLANEOUS MACROS ***
*
BCE                   SIMULATE THE 1400 BCE INSTRUCTION
BCNE                  SIMULATE THE 1400 BCNE INSTRUCTION
BSYNAD                SYNAD ROUTINE FOR RANDOM ISAM
ENDASM                MEDICAREB MACRO/RHODE ISLAND SYSTEM
EXCPIOB               INPUT-OUTPUT BLOCK FOR EXCP PROCESSING
FCB                   CREATE IMAGELIB ENTRY FOR 3211 FCB
FINDPCT               COMPUTE PERCENTAGES
INITASM               MEDICAREB MACRO/RHODE ISLAND SYSTEM
MSORT                 INVOKE SORT
QSYNAD                SYNAD ROUTINE FOR SEQUENTIAL ISAM
REQU                  REGISTER EQUATES
RETLINK               RETURN (EXIT) FROM PROGRAM
SMODINST              INSTRUCTIONS FOR SMODE MACRO
SMODE                 SUPERVISOR STATE, PROTECT KEY 0 MACRO
SVLINK                PROGRAM INITIALIZATION (OLD)
SVLNK                 PROGRAM INITIALIZATION (CURRENT)
TPSYN                 SYNAD ROUTINE FOR RANDOM ISAM IN TELEPROCESSING
XREAD                 SIMULATE VCU'S XREAD MACRO
XPRNT                 SIMULATE VCU'S XPRNT MACRO
./ ADD NAME=ABDA     0100-02135-02135-1224-00142-00142-00000-VBCMACS
         MACRO
         ABDA
ABDA     DSECT ,                       *** ABDUMP'S WORK AREA ***
*                   *** CREATED BY IEAVAD01
*                   *** POINTED TO BY 2ND WORD OF RBEXSAVE IN
*                       SNAP'S SVRB
*                   *** LENGTH IS 468 BYTES
*
*
ABDTCB   DS    F                       @ TCB FOR TASK TO BE DISPLAYED
ABDCTCB  DS    F                       @ CURRENT TCB
ABDCRB   DS    F                       @ ABDUMP'S SVRB
ABDPARMS DS    0CL20                   COPY OF ABDUMP PARAM LIST
ABDPID   DS    XL1                     *USER SUPPLIED ID FOR DUMP
ABDFLAG  DS    XL1                     *FLAG BYTE
APFSNAP  EQU   X'80'                   **1=SVC DUMP, 0=SNAP REQUEST
APFVS2   EQU   X'40'                   **1=OS/VS2 REL 2
APFABEND EQU   X'10'                   **0=ABEND, 1=SNAP
APFID    EQU   X'08'                   **ID SPECIFIED
APFTCB   EQU   X'04'                   **TCB ADDRESS SEPCIFIED BY USER
APFSNAPP EQU   X'02'                   **STORAGE LIST PROVIDED
         DS    XL2                     *RESERVED
APFSDATA DS    XL1                     *SDATA OPTIONS
APFNUC   EQU   X'80'                   **DUMP PSA, NUCLEUS, LSQA, SQA
APFSQA   EQU   X'40'                   **DUMP SQA
APFLSQA  EQU   X'20'                   **DUMP LSQA
APFSWA   EQU   X'10'                   **DUMP SWA
APFTRACE EQU   X'08'                   **DUMP TRACE TABLES
APFSUPDA EQU   X'04'                   **DUMP CONTROL BLOCKS FOR TASK
APFQCB   EQU   X'02'                   **DUMP ENQ CTL BLKS FOR TASK
         DS    XL1                     *RESERVED
APFPDATA DS    XL1                     *PDATA OPTIONS
APFSAVE  EQU   X'80'                   **GIVE SAVE AREA TRACE
APFSAVE2 EQU   X'40'                   **0=DUMP SAVE AREA, 1=HEADINGS O
APFREGS  EQU   X'20'                   **DUMP REGS AT ENTRY
APFLPA   EQU   X'10'                   **DUMP ACTIVE LPA MODULES
APFJPA   EQU   X'08'                   **DUMP JPA MODULES
APFPSW   EQU   X'04'                   **DUMP PSW, ILC, INTERRUPT CODE
APFSPALL EQU   X'02'                   **DUMP ALL SUBPOOLS < 128
         DS    XL1                     *RESERVED
ABDPDCBP DS    F                       *@ DCB FOR DUMP DATASET
ABDPTCBP DS    F                       *@ TCB TO BE DISPLAYED
ABDSNAPP DS    F                       *@ SNAP LIST
ABDPARA  DS    F                       @ USER COPY OF PARAM LIST
ABDPHY   DS    H                       BUFFER DESCRIPTOR LENGTH
ABDSRC1  DS    H                       RESERVED
ABDLOG   DS    H                       RECORD DESCRIPTOR LENGTH
ABDSRC2  DS    H                       RESERVED
ABDLINEA DS    0CL121                  PRINT LINE
ABDCC    DS    CL1                     *CARRIAGE CONTROL BYTE
ABDLINE  DS    CL120                   *PRINT DATA
ABDPADC  DS    XL3                     RESERVED
ABDDECB  DS    F                       @ DCB IN SP 0 FOR SNAP
ABDSAVE  DS    F                       @ SAVE AREA FOR USE BY OUTPUT
ABDECB   DS    F                       ECB FOR ABDUMP DECB
ABDTYPE  DS    XL2                     TYPE OF I/O REQUEST
ABDLEN   DS    H                       LENGTH OF RECORD TO WRITE
ABDDCB   DS    F                       @ DCB FOR I/O
ABDPTR   DS    F                       @ BUFFER TO WRITE
ABDIOBP  DS    F                       @ IOB
ABDLCTR  DS    H                       LINE COUNTER
ABDPCTR  DS    H                       PAGE COUNTER
ABDPTRS  DS    0XL12                   BLOCKING BUFFER POINTERS
ABDPTRS1 DS    F                       *START OF BUFFER
ABDPTRS2 DS    F                       *NEXT AVAIL BYTE OF BUFFER
ABDPTRS3 DS    F                       *END OF BUFFER
ABDCB    DS    F                       @ CURRENT TRACE TABLE ENTRY
ABDFP    DS    F                       @ 1ST TRACE TABLE ENTRY
ABDLP    DS    F                       @ LAST TRACE TABLE ENTRY
ABDCP1   DS    F                       @ CURRENT TRACE TBL ENTRY
ABDUPRXT DS    F                       @ EXIT RTN IF UPR EXPECTED OR 0
ABDWORK1 DS    D                       DOUBLEWORD WORK AREA
ABDFLAG1 DS    XL1                     FLAG BYTE
ABDQCBHD EQU   X'80'                   *QCB HEADER PRINTED
ABDQCBMJ EQU   X'40'                   *MAJOR QCB PRINTED
ABDQCBMN EQU   X'20'                   *MINOR QCB PRINTED
ABDLSTHD EQU   X'10'                   *STRG LIST HEADER PRINTED
ABDSQSDM EQU   X'08'                   *SQS PRINTED
ABDSVCHD EQU   X'04'                   *SVC HEADING LINE PRINTED
ABDSPHD  EQU   X'02'                   *SUBPOOL HEADER PRINTED
ABDFLAG2 DS    XL1                     FLAG BYTE
ABDSUPER EQU   X'80'                   *DUMP SUPVR TRACE TABLE
ABDGTF   EQU   X'40'                   *DUMP GTF TRACE TABLE
ABDTRBIT EQU   X'20'                   *0=CORE FREED, 1=OBTAINED FOR SU
ABDTRNAV EQU   X'10'                   *SUPVR TRACE NOT AVAIL
ABDGTFCL EQU   X'08'                   *IEAVAD08 ENTERED FOR GTF
ABDSWAP  EQU   X'04'                   *USED BY IEAVAD0D
ABDSTAT  EQU   X'02'                   *SHOWS STATUS ISSUED
ABDLSQA  EQU   X'01'                   *IEAVAD0D ENTERED FOR SP229/230
ABDKEY   DS    XL1                     SAVE KEY FOR MODESET
ABDRES1  DS    XL1                     RESERVED
ABDWORK  DS    XL48                    GENERAL WORK AREA
ABDSSPAR DS    XL56                    WORK AREA FOR PARAM LISTS & FORM
ABDBPTR  DS    F                       @ CONTROL BLOCK TO FORMAT
ABDLLINE DS    F                       @ LAYOUT LINE
ABDLPTR  DS    F                       @ NEXT AVAIL BYTE OF ABDLINE
ABDFMTWK DS    CL9                     WORK AREA FOR FORMAT SUBRTN
ABDUPRF  DS    XL1                     UNDEFINED PAGE REFERENCE FLAGS
UPRFMAT  EQU   X'08'                   *UPR EXPECTED
UPRFMET  EQU   X'40'                   *UPR EXPECTED (FORMET)
UPRFMT20 EQU   X'20'                   *UPR EXPECTED (FORMAT 20 OR 22)
ABDUPRFN DS    XL1                     UPR ACTION REQUESTED BY FORMET
ABDUPRPM EQU   X'80'                   *PRINT MSG & CONTINUE
ABDUPRSL EQU   X'40'                   *SKIP LINE AND CONTINUE
ABDBLNKS DS    XL1                     BLANK CONTROL
ABDBLKN3 EQU   X'80'                   *3 SPACES BETWEEN FIELDS
         EQU   X'01'                   *BITS 4-7 SPACES BETWEEN FIELDS
ABDSTAD  DS    F                       LOC CTR FOR FORMAT20
ABDBLOCK DS    F                       @ BLOCK OF STRG TO DUMP
ABDLENTH DS    F                       NBR BYTES TO DUMP
ABDSIZE  DS    F                       BLOCK SIZE SAVE AREA
ABDIND   DS    H                       INDENT FACTOR FOR 1ST LINE
ABDIDENT DS    H                       NBR IDENTICAL LINES FOUND
ABDFWORK DS    F                       FORMET WORK CELL
ABDINCPL DS    H                       LENGTH OF INCOMPLETE LINE
ABDRES2  DS    H                       RESERVED
ABDUPRID DS    F                       RETURN @ FOR IDENTICAL LINES
ABDSTADS DS    F                       SAVE OLD ABDSTAD
ABSLCTSV DS    F                       SAVE LINES TO BE PRINTED
ABDBUFFS DS    0XL8
ABDBUFAD DS    F                       @ OUTPUT BUFFER
ABDBUFSL DS    F                       SIZE OF OUTPUT BUFFER
ABDGMA   DS    XL16                    AREA TO BLD CONDL GETMAIN LISTS
ABDAAREA DS    F                       POINTER TO GOTTEN STRG
ABDASIZE DS    F                       SIZE OF GOTTEN STRG
ABDPARA  DS    F                       @ ABDAAREA
ABDCDID  DS    XL2                     CODE AND SUBPOOL ID
         DS    XL2                     UNUSED
ABDSVCB  DS    F                       BASE REG FOR SVC 51
ABDRTRN  DS    F                       @ SVC 51
ESPARM   DS    0XL24                   ESTAE PARAM LIST
ESBSREG  DS    F                       *BASE REG FOR IEAVAD01
ESAUTOP  DS    F                       *@ AUTOMATIC DATA
EABDAREA DS    F                       *@ SNAP WORK AREA
EMODNAME DS    F                       *LAST 4 CHAR OF MODULE NAME
ERESTART DS    F                       *RESTART ADDR
ESTAEFLG DS    XL1                     *FLAG BYTE
ESUBSYT  EQU   X'80'                   **SUB-SYSTEM RTN IN CONTROL
ETCB     EQU   X'40'                   **TCB VALIDITY CHK IN PROG
EDCB     EQU   X'20'                   **DCB VALIDITY CHK IN PROG
         DS    XL3                     RESERVED
         MEND
./ ADD NAME=ASMWORK  0100-02135-02135-1224-00124-00124-00000-VBCMACS
         MACRO
         ASMWORK
         GBLC  &CSECT
         EJECT
ASMAREA  DSECT ,                       ASM PROMPTER WORK AREA
*
SAVEAREA DS    18F                     REGISTER SAVE AREA
SAVE1    DS    18F                     ASM1 REG SAVE AREA
*
*    ASSEMBLER OPTION BLOCK
*
OPTIONS  DS    0XL32
OPTLEN   DS    H                       OPTIONS LENGTH
OPTION   DS    CL30
*
*    ASSEMBLER DDNAME BLOCK
*
DDNAMES  DS    0XL98
DDLEN    DS    H                       LENGTH OF DDNAMES
         DS    3CL8                    RESERVED DDNAME AREAS
SYSLIB   DS    CL8                     SYSLIB DDNAME
SYSIN    DS    CL8                     SYSIN DDNAME
SYSPRINT DS    CL8                     SYSPRINT DDNAME
SYSPUNCH DS    CL8                     SYSPUNCH DDNAME
SYSUT1   DS    CL8                     SYSUT1 DDNAME
SYSUT2   DS    CL8                     SYSUT2 DDNAME
SYSUT3   DS    CL8                     SYSUT3 DDNAME
SYSGO    DS    CL8                     SYSGO DDNAME
SYSTERM  DS    CL8                     SYSTERM DDNAME
*
*
*    MISCELLANIOUS WORK AREAS
*
*
$RETURN  DS    A                       PERFORM RETURN REG SAVE AREA
$CPPL    DS    A                       ADDRESS OF CPPL
ECB      DS    F                       ECB FOR DYNAMIC ALLOCATION
*
*
*     DYNAMIC ALLOCATION CONTROL BLOCKS
*
*
         DS    0F
DAPLX    DS    XL20                    DAIR PARAMETER LIST
*
DA1C     DS    XL16                    TERMINAL ALLOCATE DAPB
*
DA0C     DS    XL20                    CONCATONATE DAPB
*
DA10     DS    XL16                    DECONCATONATE DAPB
*
DA28     DS    XL12                    MULTIPLE OPERATION DAPB
         DS    3XL4                    SPACE FOR MULTIPLE DAPB @S
*
DA08     DS    XL84                    ALLOCATE DATASET DAPB
         DS    3XL84                   EXTRA DA08 AREAS
*
DA34     DS    XL20                    BUILD ATTRIBUTE LIST DAPB
         DS    XL20                    ADDITIONAL DA34
*
DACB     DS    XL44                    ATTRIBUTE LIST
         DS    XL44                    EXTRA ATTRIBUTE LIST
*
DSNBUF   DS    0XL46                   DATA SET NAME BUFFER
DSNLEN   DS    H                       DATA SET NAME LENGTH
DSN      DS    CL44                    DATA SET NAME
*
*
*   PARAMETERS PASSED BY ASM. INCLUDED ARE:
*                      QUALIFIER FOR .LIST & .OBJ
*                      SYSIN DSNAME
*                      SYSIN MEMBER NAME
*                      SYSLIB DSNAMES
*
*
QUALIFY  DS    0XL9                    QUALIFIER FOR .LIST & .OBJ
QUALLEN  DS    X                       LENGTH OF QUALIFIER
QUAL     DS    CL8                     QUALIFIER
*
         DS    0H
DSNAMES  DS    0XL60                   SYSIN DSNAME AND @ SYSLIB BUFFER
$SYSLIB  DS    A(SYSLIBS)              @ SYSLIB BUFFERS
SYSININD DS    H                       APPLY USERID OR NOT
SYSINLEN DS    H                       LENGTH OF DSNAME
SYSINDSN DS    CL44                    SYSIN DSNAME
SYSINMEM DS    CL8                     MEMBER NAME
*
SYSLIBS  DS    0XL50                   SYSLIB DSNAMES BUFFERS
SYSLIBNM DS    H                       NUMBER OF SYSLIBS
SYSLIB1  DS    0XL48                   FIRST SYSLIB BUFFER
SYSLIBND DS    H                       APPLY USER ID OR NOT
SYSLIBLN DS    H                       LENGTH OF SYSLIB DSNAME
SYSLIBDS DS    CL44                    SYSLIB DSNAME
         DS    2CL48                   2 ADDITIONAL SYSLIB BUFFERS
*
*
*
DAIRWK1  DS    A                       WORKAREA FOR DAIRFAIL
DAIRWK2  DS    A                       WORKAREA FOR DAIRFAIL
DAIRWK3  DS    A                       WORKAREA FOR DAIRFAIL
*
DAIRFAIL DS    XL24                    DAIR FAIL PARAMETER LIST
DAIRBUF  DS    XL512                   DAIR FAIL BUF AREA
*
*
*
PUTMES   DS    XL12                    PUTLINE PARAMETER BLOCK
IOPLX    DS    XL16                    PUTLINE PARAMETER LIST
*
*
*
DDNAME   DS    CL8                     DDNAME FOR ERROR MESSAGE
*
*
*
OLD      DS    0F                      OUTPUTLINE DESCRIPTOR
OLDNUM   DS    XL4                     NUMBER OF OUTPUT SEQMENTS
OLDSEG1  DS    XL4                     ADDRESS OF 1ST SEGMENT
OLDSEG2  DS    XL4                     ADDRESS OF 2ND SEGMENT
*
*
*
&CSECT   CSECT
         MEND
./ ADD NAME=BCBLDSRB 0100-02135-02135-1224-00048-00048-00000-VBCMACS
         MACRO
&NAME    BCBLDSRB &TGTASCB=,&SP=228,&SRBBASE=
&NAME    L     R0,=A(SRBEND-SRBDSECT)  GET SRB LENGTH
         ICM   R0,8,=AL1(&SP)          SET SUBPOOL
         BAL   R1,*+4                  INDICATE GETMAIN
         SVC   10                      GET STRG FOR SRB
         USING SRBDSECT,R1
         LA    R14,SRBDSECT            @ SRB
         L     R15,=A(SRBEND-SRBDSECT) GET SRB LENGTH
K&SYSNDX CH    R15,=H'256'             OVER 256 BYTES TO CLEAR
         BH    X&SYSNDX                YES
         BCTR  R15,0                   REMAINING LENGTH CODE
         EX    R15,C&SYSNDX            NO, CLEAR REMAINDER
         B     B&SYSNDX                AND CONTINUE
C&SYSNDX XC    0(1,R14),0(R14)         CLEAR TO BINARY 0
X&SYSNDX XC    0(256,R14),0(R14)       CLEAR 256 BYTES
         LA    R14,256(R14)            STEP OVER 256 BYTES
         SH    R15,=H'256'             DEDUCT 256 BYTES
         LTR   R15,R15                 ANY BYTES LEFT
         BNZ   K&SYSNDX                YES
B&SYSNDX L     R0,=A(SRBEND-SRBDSECT)  GET SRB LENGTH
         ST    R0,SRBSPLV              STORE SRB LENGTH
         MVI   SRBSPLV,&SP             STORE SRB SUB-POOL
         MVC   SRBID,=CL4'SRB '        SET SRB IDENTIFIER
         AIF   (T'&TGTASCB EQ 'O').REQID
         ST    &TGTASCB,SRBASCB        SET TARGET ASCB
.REQID   L     R15,16                  GET CVT ADDRESS
         MVC   SRBPOST,CVT0PT01-CVTMAP(R15) @ BRCH ENTRY TO POST TO SRB
         L     R15,0(R15)              @ NEW-OLD WORDS
         MVC   SRBPTCB,4(R15)          @ REQUESTOR'S TCB TO SRB
         MVC   SRBPR13,12(R15)         @ REQUESTOR'S ASCB TO SRB
         L     R15,12(R15)             PICK UP ACSB ADDRESS
         MVC   SRBPASID,36(R15)        REQUESTOR'S ASID TO SRB
         LA    R15,SRBECB              @ ECB FOR SYNCHRONIZATION
         ST    R15,SRBPR11             @ ECB TO SRB
         OI    SRBPR11,X'80'           SHOW CROSS MEMORY POST
         AIF   (T'&SRBBASE EQ 'O').NOBASE
         ST    R1,SRBPARM              SET PARM ADDR TO SRB ADDR
         LR    &SRBBASE,R1             SET UP SRB BASE REG
         AGO   .BASET
.NOBASE  LR    R2,R1                   SAVE SRB ADDRESS
         DROP  R1
.BASET   ANOP
         AIF   (T'&SRBBASE EQ 'O').XIT
         DROP  R1
         USING SRBDSECT,&SRBBASE
.XIT     MEXIT
         MEND
./ ADD NAME=BCBSASCB 0100-02135-02135-1224-00091-00091-00000-VBCMACS
         MACRO
         BCBSASCB
ASCB     DSECT ,                       ADDRESS SPACE CONTROL BLOCK
ASCBEGIN DS    0D                      BEGINNING OF ASCB
ASCBASCB DS    CL4                     ACRONYM IN EBCDIC -ASCB-
ASCBFWDP DS    A                       @ OF NEXT ASCB ON ASCB READY Q
ASCBBWDP DS    A                       @ OF PREVIOUS ASCB ON READY Q
ASCBLOCK DS    F                       LOCAL LOCK
ASCBIOSP DS    A                       POINTER TO IPIB
ASCBFSLQ DS    A                       PTR TO 1ST SRB ON LOCK SUSPEND Q
ASCBLSLQ DS    A                       PTR TO LAST SRB ON LOCK SUSPND Q
ASCBSPL  DS    A                       POINTER TO SPL
ASCBCPUS DS    F                       NBR CPU'S ACTIVE IN THIS MEMORY
ASCBASID DS    H                       ADDRESS SPACE IDENTIFIER
ASCBSEQN DS    H                       DISPATCHING SEQUENCE NBR
ASCBIOSM DS    H                       I/O SERVICE MEASURE
ASCBRV07 DS    FL1                     RESERVED
ASCBDP   DS    FL1                     DISPATCHING PRIORITY
ASCBSTOR DS    A                       CONTROL REG 1 IMAGE
ASCBLDA  DS    A                       POINTER TO LOCAL DATA AREA
ASCBRSM  DS    A                       @ OF RSM'S CONTROL BLOCK HEADER
ASCBCSCB DS    A                       ADDRESS OF CSCB
ASCBTSB  DS    A                       ADDRESS OF TSB
ASCBEJST DS    D                       ELAPSED JOB STEP TIMING UNSIGNED
ASCBEWST DS    D                       TIME OF DAY WHEN CONTROL LOST
ASCBJSTL DS    F                       CPU TIME LIMIT FOR THE JOB STEP
ASCBECB  DS    F                       RCT'S WORK ECB
ASCBUBET DS    F                       TIME STAMP WHEN USER BECOMES REA
ASCBQSVC DS    F                       CPID FOR SVRB QUICKCELL
ASCBDUMP DS    A                       SVC DUMP'S ECB POINTER
ASCBFW1  DS    0F                      CS LABEL
ASCBAFFN DS    H                       CPU AFFINITY INDICATOR
ASCBRCTF DS    B                       FLAGS FOR RCT
ASCBTMNO EQU   X'80'                   QUIESCING, QUIESCED, OR RESTORIN
ASCBFRS  EQU   X'40'                   RESTORE REQUEST
ASCBFQU  EQU   X'20'                   QUIESCE REQUEST
ASCBRV08 EQU   X'10',,C'X'             RESERVED
ASCBWAIT EQU   X'08'                   LONG WAIT INDICATOR
ASCBOUT  EQU   X'04'                   ADDRESS SPACE CONSIDERED SWAPPED
ASCBTMLW EQU   X'02'                   MEMORY IS IN A LONG WAIT
ASCBRF01 EQU   X'01',,C'X'             RESERVED
ASCBFLG1 DS    B                       FLAG FIELD
ASCBTOFF EQU   X'80'                   NO STEP TIMING
ASCBCMSH EQU   X'40'                   CMS LOCK HELD
ASCBS3S  EQU   X'20'                   INVOKE STAGE 3 EXIT EFFECTOR
ASCBTERM EQU   X'10'                   ADDRESS SPACE TERMINATING NORMAL
ASCBABNT EQU   X'08'                   ADDRESS SPACE TERMINATING ABNORM
ASCBSTND EQU   X'04'                   TCB'S NON-DISPATCHABLE
ASCBTYP1 EQU   X'02'                   TYPE 1 SVC HAS CONTROL
ASCBNSWP EQU   X'01'                   NON-SWAPPABLE, OR V=R
ASCBTMCH DS    F                       TERMINATION QUEUE CHAIN
ASCBASXB DS    A                       POINTER TO ASXB
ASCBSWCT DS    H                       NBR TIMES MEMORY IN SHORT WAIT
ASCBDSP1 DS    B                       NON-DISPATCHABILITY FLAGS
ASCBNOQ  EQU   X'80'                   ASCB NOT ON ASCB DISPATCHING QUE
ASCBFAIL EQU   X'40'                   NON-DISPATCHABLE DUE TO FAILURE
ASCBFLG2 DS    B                       FLAG BYTE
ASCBXMPT EQU   X'80'                   EXEMPT FROM SYSTEM NON-DISP
ASCBPXMT EQU   X'40'                   PERM EXEMPT FROM SYS NON-DISP
ASCBCEXT EQU   X'20'                   CANCEL TIMER EXTENSION
ASCBS2S  EQU   X'10'                   FOR LOCK MANAGER
ASCBSNQS EQU   X'08'                   STATUS STOP NON-QUIESC LVL SRB'S
ASCBSSRB DS    H                       COUNT OF STATUS STOP SRB'S
ASCBSRBS DS    H                       NBR SRB'S DISPATCHED IN MEMORY
ASCBVSC  DS    H                       ALLOC AUX SLOT COUNT VAM
ASCBNVSC DS    H                       ALLOC AUX SLOT COUNT NON-VAM
ASCBTCBS DS    F                       NUMBER OF READY TCB'S
ASCBCMSF DS    A                       @ NEXT ASCB ON CMS SUSPEND Q
ASCBCMSB DS    A                       @ PREV ASCB ON CMS SUSPEND Q
ASCBQECB DS    F                       QUIESCE ECB
ASCBMECB DS    F                       MEMORY CREATE/DELETE ECB
ASCBOUCB DS    A                       @ SRM USER CONTROL BLOCK(OUCB)
ASCBOUXB DS    A                       @ OUXB
ASCBFMCT DS    H                       ALLOCATED PAGE FRAME COUNT
ASCBRS01 DS    H                       RESERVED FOR FUTURE USE
ASCBXMPQ DS    A                       POINTER TO XMPOST SRB QUEUE
ASCBIQEA DS    A                       PTR TO IQE FOR ATCAM ASYNCH
ASCBRTWA DS    A                       PTR TO LAST RTM2 WORK AREA
ASCBMCC  DS    CL4                     COMPL CODE ON ABTERM
ASCBJBNI DS    A                       JOBNAME FIELD INITIATED PGMS
ASCBJBNS DS    A                       PTR TO JOBNAME FOR START/LOGON
ASCBLGCB DS    A                       ADDRESS OF LGCB CHAIN
ASCBVGTT DS    A                       ADDRESS OF VGTT
ASCBPCTT DS    A                       ADDRESS OF PCTT
ASCBRS12 DS    H                       RESERVED FOR FUTURE USE
ASCBSMCT DS    FL1                     NBR STEP MUST COMPLETE REQUESTS
ASCBRS14 DS    B                       RESERVED FOR FUTURE USE
ASCBSWTL DS    F                       STEP WAIT TIME LIMIT
ASCBSRBT DS    D                       ACCUMULATED SRB TIME
ASCBEND  DS    0D                      END OF ASCB
         MEND
./ ADD NAME=BCBSHCT  0100-02135-02135-1224-00377-00377-00000-VBCMACS
         MACRO -- BCBSHCT -- HASP COMMUNICATION TABLE DSECT
         BCBSHCT
HCTDSECT DSECT                     HASP COMMUNICATION TABLE DSECT
$VERSION DS    CL8'JES2 4.1'       HASP VERSION
$HASPMAP DS    A                   HASP MODULE DIRECTORY ADDRESS
$PTFMAP  DS    A                   HASP MAINTENANCE RECORD ADDRESS
*                             ENTRIES TO HASP DISPATCHER
$WAIT    B     0                   $WAIT SAVE=NO FOR AN EVENT
$WAITS   B     0                   $WAIT SAVE=YES FOR AN EVENT
$WAITR   B     0                   $WAIT FOR A RESOURCE
$POST    B     0                   POST SPECIFIC EVENT ENTRY
*                             ENTRIES TO HASP BUFFER SERVICES
$GETBUF  DS    A                   ENTRY TO HASP BUFFER 'GET' RTN
$FREEBUF DS    A                   ENTRY TO HASP BUFFER 'FREE' RTN
*                             ENTRIES TO HASP UNIT SERVICES
$GETUNIT B     0                   ENTRY TO HASP UNIT 'GET' ROUTINE
$FREUNIT B     0                   ENTRY TO HASP UNIT 'FREE' ROUTINE
$DYNADDR DS    A                   DYNAMIC ALLOCATE/UNALLOCATE
*                             ENTRIES TO MISCELLANEOUS SERVICE ROUTINES
$XMPOST  DS    A                   ENTRY TO BR ENTRY XM POST ROUTINE
$JCAN    DS    A                   ENTRY TO JOB CANCEL ROUTINE
$BFRBLD  DS    A                   ENTRY TO BUFFER BUILD ROUTINE
$VFL     DS    A                   ENTRY TO VFL INSTR SIMULATION RTN
         DS    A                   RESERVED
*                             ENTRIES TO HASP JOB QUEUE SERVICES
$QADD    B     0                   ENTRY TO HASP JQE 'ADD' ROUTINE
$QGET    B     0                   ENTRY TO HASP JQE 'GET' ROUTINE
$QPUT    B     0                   ENTRY TO HASP JQE 'PUT' ROUTINE
$QREM    B     0                   ENTRY TO HASP JQE 'REMOVE' ROUTINE
$QLOC    B     0                   ENTRY TO HASP JQE 'LOCATE' ROUTINE
$QCKPT   B     0                   ENTRY TO JQE 'CHECKPOINT' ROUTINE
$QMOD    B     0                   ENTRY TO JQE 'MODIFY' ROUTINE
$QSUSE   B     0                   ENTRY TO REQUEST QUEUES SAVE=NO
$QSUSES  B     0                   ENTRY TO REQUEST QUEUES SAVE=YES
*                             ENTRIES TO JCT CONTROL SERVICES
$JCTRDR  DS    A                   ENTRY TO JCT READ ROUTINE
$JCTWTR  DS    A                   ENTRY TO JCT WRITE ROUTINE
$JCTFRE  DS    A                   ENTRY TO JCT FREE ROUTINE
*                             ENTRIES TO HASP JOB OUTPUT TABLE SERVICES
$JOECKPA DS    A                   ENTRY TO TYPE=A JOE CKPT ROUTINE
$JOEOFFA DS    A                   ENTRY TO TYPE=D JOE CKPT ROUTINE
$JOEADD  DS    A                   ENTRY TO JOE ADD ROUTINE
$JOEBLD  DS    A                   ENTRY TO JOE BUILD ROUTINE
$JOECAN  DS    A                   ENTRY TO JOE CANCEL ROUTIN
$JOEGET  DS    A                   ENTRY TO JOE GET ROUTINE
$JOEPUT  DS    A                   ENTRY TO JOE PUT ROUTINE
$JOEREM  DS    A                   ENTRY TO JOE REMOVE ROUTIN
         DS    A                   RESERVED
*                             ENTRIES TO DIRECT ACCESS SPACE SERVICES
$TRACK   DS    A                   ENTRY TO TRACK ALLOCATION ROUTINE
$PURGER  B     0                   ENTRY TO TRACK PURGE ROUTINE
*                             ENTRIES TO HASP CONSOLE SERVICES
$WTO     DS    A                   ENTRY TO $WTO ROUTINE
$WTOC    DS    A                   ENTRY TO $WTO WITH CMB ROUTINE
$$WTO    DS    A                   ENTRY TO $$WTO/$$WTOR ROUTINE
$DOM     DS    A                   ENTRY TO HASP DOM ROUTINE
$GETCMB  DS    A                   ENTRY TO GET CMB ROUTINE
$FRECMB  DS    A                   ENTRY TO FREE CMB ROUTINE
*                             ENTRIES TO HASP INPUT/OUTPUT SERVICES
$EXCP    DS    A                   ENTRY TO HASP I/O SUPERVISOR
$EXTP    DS    A                   ENTRY TO RTAM SERVICE ROUTINES
*                             ENTRIES TO HASP SMF BUFFER SERVICES
$QUESMFB B     0                   ENTRY TO QUEUE SMF BUFFER
$GETSMFB B     0                   ENTRY TO 'GET' SMF BUFFER
*                             ENTRIES TO HASP INTERVAL TIMER SERVICES
$STIMERA DS    A                   ENTRY TO HASP SET TIMER RTN
$TTIMERA DS    A                   ENTRY TO HASP TEST TIMER RTN
*                             ENTRIES TO HASP ERROR SERVICES
$IOERROR DS    A                   ENTRY TO I/O ERROR LOGGING RTN
$ERROR   DS    A                   ENTRY TO CATASTROPHIC ERROR RTN
$DISTERR DS    A                   ENTRY TO DISASTROUS ERROR RTN
*                             ENTRIES TO CELL AND LOCK SERVICES
$GETCEL  DS    A                   ENTRY TO GET CELL ROUTINE
$FRECEL  DS    A                   ENTRY TO FREE CELL ROUTINE
$GETLOK  DS    A                   ENTRY TO GET LOCK ROUTINE
$FRELOK  DS    A                   ENTRY TO FREE LOCK ROUTINE
*                            ENTRIES TO VIRTUAL PAGE SERVICES
$PGRLSE  DS    A                   ENTRY TO PAGE RELEASE ROUTINE
$PGFREE  DS    A                   ENTRY TO PAGE FREE ROUTINE
$PGFIX   DS    A                   ENTRY TO PAGE FIX ROUTINE
*                             HASP SUB-TASK CONTROL BLOCKS
$DAWTER  DS    0F
$WTOTCBA DS    A                   $WTO SUB-TASK TCB ADDRESS
$WTOPECB DS    A                   $WTO SUB-TASK TERMINATION ECB
$WTOECB  DS    A                   $WTO SUB-TASK WORK ECB
$DAWTRLN EQU   *-$DAWTER           SIZE OF DAUGHTER TASK ELEMENT
$CNVTCBA DS    A                   CONVERSION SUB-TASK TCB ADDRESS
$PCNVECB DS    A                   CONVERSION SUB-TASK TERMINATION ECB
$CNVECB  DS    A                   CONVERSION SUB-TASK WORK ECB
$SMFTCBA DS    A                   ACCT SUB-TASK TCB ADDRESS
$PSMFECB DS    A                   ACCT SUB-TASK TERMINATION ECB
$ACCTECB DS    A                   ACCT SUB-TASK WORK ECB
$IMAGTCB DS    A                   IMAGE LOAD SUB-TASK TCB ADDRESS
$PIMGECB DS    A                   IMAGE LOAD SUB-TASK TERMINATION ECB
$IMAGECB DS    A                   IMAGE LOAD SUB-TASK WORK ECB
$SNATCBA DS    A                   SNA SUB-TASK TCB ADDRESS
$PSNAECB DS    A                   SNA SUB-TASK TERMINATION ECB
$SNAECB  DS    A                   SNA SUB-TASK WORK ECB
$DYNTCBA DS    A                   ALLOC SUB-TASK TCB ADDRESS
$PDYNECB DS    A                   ALLOC SUB-TASK TERM ECB
$DYNECB  DS    A                   ALLOC SUB-TASK WORK ECB
$DAWTERS EQU   (*-$DAWTER)/$DAWTRLN  NUMBER OF DAUGHTER TASK ELEMENTS
         DS    A                   RESERVED
*                             HASP CONTROL BLOCK DIRECTORY
$SSVT    DS    A                   ADDRESS OF SUBSYSTEM VECTOR TABLE
$HASPTCB DS    A                   ADDRESS OF HASP TASK CONTROL BLOCK
$HASPECB DS    A                   ADDRESS OF HASP EVENT CONTROL BLK
$HASCB   DS    A                   ADDRESS OF HASP ASCB
$HASPDCB DS    A                   ADDRESS OF HASP DIRECT ACCESS DCB
$DADEBAD DS    A                   ADDRESS OF HASP DIRECT ACCESS DEB
$JOBQBUF DS    A                   ADDRESS OF HASP JOB QUEUE BUFFER
$TEDADDR DS    A                   ADDRESS OF 1ST EXTENT DATA TABLE
$PCEORG  DS    A                   ADDRESS OF 1ST HASP PCE
$PCELAST DS    A                   ADDRESS OF FINAL PCE
$BFRMAP  DS    A                   ADDRESS OF HASP BUFFER POOL MAP
$TPBFMAP DS    A                   ADDRESS OF HASP RJE BFR POOL MAP
$PGBFMAP DS    A                   ADDRESS OF HASP PG BFR POOL MAP
$PPBFMAP DS    A                   ADDRESS OF HASP PP BFR POOL MAP
$DCTPOOL DS    A                   ADDRESS OF 1ST HASP DCT
$RDRDCT  DS    A                   ADDRESS OF 1ST LOCAL READER DCT
$PRTDCT  DS    A                   ADDRESS OF 1ST LOCAL PRINTER DCT
$PUNDCT  DS    A                   ADDRESS OF 1ST LOCAL PUNCH DCT
$LNEDCT  DS    A                   ADDRESS OF 1ST RJE LINE DCT
$LOGNDCT DS    A                   ADDRESS OF LOGON DCT
$XEQDCT  DS    A                   ADDRESS OF REQUEST JOBID DCT
         DS    A                   RESERVED
$INRDCT  DS    A                   ADDRESS OF 1ST INTERNAL RDR DCT
         DS    A                   RESERVED
$SMFFREE DS    A                   ADDRESS OF 1ST FREE SMF BUFFER
$SMFBUSY DS    A                   ADDR OF SMF BUFFER QUEUED FOR I/O
$#JCTQ   DS    A                   ADDRESS OF RESIDENT JCT QUEUE
$JOBQPTR DS    A                   ADDRESS OF HASP JOB QUEUE ORIGIN
$CKPTIOB DS    A                   ADDRESS OF CHECKPOINT IOB
$CKPTR1  DS    A                   ADDRESS OF ACTUAL CKPT AREA
$CKPR1RD DS    A                   ADDRESS OF CKPT R1 READ-IN
         DS    A                   RESERVED
$RQSE    DS    A                   ADDRESS OF OUR QSE (INPUT)
$JBQREAD DS    A                   ADDRESS OF JOBQ READ-IN
$JOTREAD DS    A                   ADDRESS OF JOT READ-IN
$QSE1    DS    A                   ADDRESS OF 1ST HASP QSE
$QSECTLB DS    2AL2                OFFSET OF QSE CTLB; RSV
         DS    A                   RESERVED
$TGMAP   DS    A                   ADDRESS OF MASTER TRACK GROUP MAP
         DS    A                   RESERVED
         DS    A                   RESERVED
$RATABLE DS    A                   ADDRESS OF REMOTE ATTRIBUTE TABLE
$RMTSON  DS    A                   ADDRESS OF REMOTE SIGN-ON TABLE
$ICETRAY DS    A                   ADDRESS OF 1ST FREE ICE
$CPTPOOL DS    A                   ADDRESS OF FIRST HASP CPT
         DS    A                   RESERVED FOR FUTURE USE
$MSPOOLQ DS    A                   ADDR OF REMOTE MSG SPOOLING QUES
$MCONMSG DS    A                   ADDR OF REMOTE CONSOLE MSG QUEUE
         DS    A                   RESERVED
$DACKPT  DS    A                   ADDRESS OF DA CKPT FOR WARM START
$RTIMTAB DS    A                   ADDR OF ESTIMATED TIME PRIO TABLE
$XPRITAB DS    A                   ADDR OF OUTPUT PRIORITY TABLE
$AQSE    DS    A                   XS$POST BITS + ADR THIS SYS'S QSE
$ESYSQSE DS    A                   ADDRESS OF $ESYS QSE
$OQUEUE  DS    A                   ADDRESS OF $O REQUEST QUEUE
         DS    2A                  RESERVED
$ACTABLE DS    A                   ADDRESS OF AUTOMATIC COMMAND TBL
$PITABLE DS    A                   ADDRESS OF HASP PARTITION INFO TABLE
$JOTABLE DS    A                   ADDRESS OF HASP JOT ORIGIN
$TQEQUE  DS    A                   ADDRESS OF HASP TIMER Q ELEMENT Q
$ASYNCQ  DS    A                   ADDRESS OF ASYNC I/O COMPLETION QUE
$ASYPCIQ DS    A                   ADDR OF ASYNC PCIE EXECUTION QUE
$RJECHEQ DS    A                   ADDRESS OF RJE I/O COMPLETION QUE
$VLOGQUE DS    A                   VTAM OPEN/CLOSE ACB SUBTASK QUEUE
$JOBCTLB DS    A                   ADDR OF JOB QUEUE CKPT CTL BYTES
$JOTCTLB DS    A                   ADDR OF JOT CHECKPOINT CTL BYTES
$CATABLE DS    A                   ADDRESS OF CLASS ATTRIBUTE TABLE
$CCAREA  DS    A                   ADDRESS OF CELL CONTROL AREA
$CSAREA  DS    A                   ADDRESS OF CONSOLE SERVICE AREA
$BUSYRQ  DS    A                   ADDRESS OF REMOTE CONSOLE BUSY QUEUE
$BUSYQUE DS    A                   ADDRESS OF COMM TASK INPUT QUEUE
$CONWKQ  DS    A                   ADDRESS OF COMM TASK WORK QUEUE
$COMMQUE DS    A                   ADDRESS OF COMMAND PROCESSOR WORK Q
$DOMQUE  DS    A                   ADDRESS OF CMBS AWAITING ACTION
$DOMQUEA DS    A                   ADDRESS OF CMBS DESTINED FOR $DOMQUE
$WCOMRES DS    A                   ADDRESS OF CMBS RESERVED FOR COMM
$MWORK   DS    A                   ADDRESS OF RTAM GENERAL WORK AREA
*                             HASP CONFIGURATION CONSTRAINTS
$NUMRDRS DS    AL1                 NUMBER OF READERS
$NUMPRTS DS    AL1                 NUMBER OF PRINTERS
$NUMPUNS DS    AL1                 NUMBER OF PUNCHES
$NUMINRS DS    AL1                 NUMBER OF INTERNAL READERS
$NUMTPRD DS    AL2                 NUMBER OF REMOTE INPUT PROCESSORS
$NUMTPPR DS    AL2                 NUMBER OF REMOTE PRINT PROCESSORS
$NUMTPPU DS    AL2                 NUMBER OF REMOTE PUNCH PROCESSORS
$NUMLNES DS    AL2                 NUMBER OF REMOTE LINE ADAPTERS
$NUMLOGS DS    AL2                 NUMBER OF LOGON DCTS
$NUMCPTS DS    AL2                 NUMBER OF CPTS
         DS    AL2                 RESERVED
*                             HASP OPERATING CONSTRAINTS
         DS    AL4                 RESERVED
$PRIRATE DS    AL2                 PRIORITY AGING RATE
$PRIHIGH DS    AL1                 PRIORITY AGING UPPER LIMIT
$PRILOW  DS    AL1                 PRIORITY AGING LOWER LIMIT
$BLBTGBA DS    AL1                 HEURISTIC NUMBER OF TG'S PER TGB
$BLBFLAG DS    AL1                 BLOB/UNBLOB FLAG BYTE
$SYNCTOL DS    A                   TOD CLOCK SYNC ERROR TOLERANCE
$CKPTIME DS    A                   SYSTEM CHECKPOINT INTERVAL
$DELAYTM DS    A                   MODEL 20 DELAY TIME
$WARNTIM DS    F                   SHARED QUEUES LOCKOUT WARN TIME
$MINHOLD DS    F                   SHARED QUEUES MINIMUM HOLD TIME
$MINDORM DS    F                   SHARED QUEUES MIN DORMANT TIME
$MAXDORM DS    F                   SHARED QUEUES MAX DORMANT TIME
         DS    XL8                 RESERVED
$OPTSTAT DS    AL1                 HASP INITIALIZATION OPTIONS
$RUNOPTS DS    AL1                 HASP RUN OPTIONS
$PRTOPTS DS    AL1                 HASP PRINT/PUNCH OPTIONS
$RJEOPTS DS    AL1                 HASP REMOTE JOB ENTRY OPTIONS
$RJOBOPT DS    AL1                 JOB CARD SCAN OPTION
$OUTPOPT DS    AL1                 OUTPUT EXCESSION OPTION
$NUMTGBE DS    AL1                 MAXIMUM NUMBER OF TG'S PER TGB
$LINECT  DS    AL1                 MAXIMUM LINES PER PAGE
$ESTIME  DS    AL2                 ESTIMATED MINUTES OF EXEC TIME
$ESTLNCT DS    AL2                 ESTIMATED THOUSANDS OF PRT LINES
$ESTPUN  DS    A                   ESTIMATED CARDS TO BE PUNCHED
$OUTXS   DS    A                   OUTPUT EXCESSION MSG INCREMENT
$WAITIME DS    AL2                 TERMINAL POLLING TIME IN SECONDS
$TGWARN  DS    AL1                 $TRACK PERCENT THRESHOLD
$TIMEXS  DS    AL1                 TIME EXCESSION MESSAGE INCREMENT
*                             HASP INTERNAL CONSTRAINTS
$DSNPRFX DS    CL8                 PREFIX FOR HASPACE AND HASPCKPT
$XBATCHN DS    CL5                 XEQ BATCHING JOBNAMES PREFIX
$CCOMCHR DS    CL1                 HASP COMMAND ID CHAR (OS INPUT)
$RCOMCHR DS    CL1                 HASP COMMAND ID CHAR (RDR/RMT)
$BSPACE  DS    XL1                 CONSOLE BACKSPACE CHARACTER
$STDFORM DS    CL4                 STANDARD FORMS ID
$PRTFCB  DS    CL4                 STANDARD FCB IMAGE ID
$PRTUCS  DS    CL4                 STANDARD UCS IMAGE ID
$NIPFCB  DS    CL4                 3800 INSTALLATION FCB DEFAULT
$NIPUCS  DS    CL4                 3800 INSTALLATION UCS DEFAULT
$NUMBUF  DS    AL2                 HASP BUFFER COUNT
$NUMTPBF DS    AL2                 HASP RJE BUFFER COUNT
$TPBFSIZ DS    AL2                 HASP RJE BUFFER SIZE
$MLBFSIZ DS    AL2                 HASP MULTI-LEAVING BUFFER SIZE
$BFSZBSC DS    AL2                 HASP BSC RJE BUFFER SIZE
$BFSZSNA DS    AL2                 HASP SNA RJE BUFFER SIZE
$MAXSESS DS    H                   MAXIMUM NUMBER OF SESSIONS
$NUMCMBS DS    AL2                 HASP CONSOLE MESSAGE BUFFERS
$NUMSMFB DS    AL1                 NUMBER OF HASP SMF BUFFERS
$NOPRCCW DS    AL1                 MAXIMUM CCW'S USED BY PRINT
$NOPUCCW DS    AL1                 MAXIMUM CCW'S USED BY PUNCH
$PRIDCT  DS    AL1                 LINES ON LOCAL PRINT SEP PAGE
$TPIDCT  DS    AL1                 LINES ON REMOTE PRINT SEP PAGE
$NUMCLAS DS    AL1                 MAXIMUM CLASSES PER PRINT/PUNCH
$BSPGCT  DS    AL1                 PAGES BETWEEN BSP TABLE ENTRIES
$BSPNTE  DS    AL1                 BSP TABLE ENTRIES
$BSPSIZ  DS    AL2                 BSP TABLE SIZE
$#JCTQCT DS    AL2                 ENTRIES IN RESIDENT JCT QUEUE
$JCOPYLM DS    AL1                 OUTPUT JOB COPY LIMIT
$MAXCLAS DS    AL1                 MAXIMUM JOB CLASSES PER INIT
$HTDIST  DS    AL2                 2770/2780 HORIZONTAL TAB SPACING
$NUMACE  DS    AL2                 NUMBER OF AUTOMATIC CMD ELEMENTS
$MAXPART DS    AL2                 MAXIMUM ACTIVE BATCH INITIATORS
*                             MISCELLANEOUS HASP CONTROL FIELDS
$REGSAVE DS    16A                 NON-REENTRANT REGISTER SAVE AREA
$MSAVE   DS    5A                  RTAM NON-REENTRANT REG SAVE AREA
         DS    A                   RESERVED FOR FUTURE USE
$POSTSAV DS    3D                  SAVE AREA FOR $POST
$CSAVREG DS    8D                  SAVE AREA FOR CONSOLE SERVICE
$BLANKS  DS    CL8                 8 CHARACTERS OF BLANKS
$ZEROS   DS    D                   8 CHARACTERS OF HEX ZERO
$HEXTRAN EQU   *-C'0'              HEXIDECIMAL-TO-EBCDIC
         DS    CL16                TRANSLATE TABLE
$SIDTIME DS    D                   TOD OF LAST CKPT FOR THIS SYSTEM
$SID     DS    CL4                 SYSTEM ID (SMF) FOR THIS SYSTEM
$RELEASE DS    AL2                 OS/VS2 RELEASE NUMBER
$LEVEL   DS    AL2                 OS/VS2 RELEASE LEVEL
         DS    A                   RESERVED
$SYSID   DS    0AL2                SYSTEM IDENTIFICATION
$OWNSYS  DS    AL1                 SYSTEM IDENTIFICATION
$SIDBUSY DS    AL1                 QUALIFIER
$SIDAFF  DS    AL1                 SYSTEM ID FOR AFFINITY TESTS
$STATUS  DS    AL1                 HASP SYSTEM STATUS
$IOTPDDB DS    A                   OFFSET WITHIN IOT OF 1ST PDDB
$CYLMAPL DS    A                   DIRECT ACCESS ALLOCATION MAP LEN
$CKPTR1L DS    A                   LENGTH OF CKPT RECORD 1
$JOBQSIZ DS    A                   SIZE OF HASP JOB QUEUE
$JOBRECL DS    A                   SIZE OF JOB QUEUE RECORD
$JOBRECN DS    AL2                 NUMBER OF JOB QUEUE RECORDS
$JOBCTLL DS    AL2                 LENGTH OF JOB QUEUE CKPT CTL AREA
$JOTSIZE DS    A                   SIZE OF HASP JOT
$JOTRECL DS    A                   SIZE OF JOT RECORD
$JOTRECN DS    AL2                 NUMBER OF JOT RECORDS
$JOTCTLL DS    AL2                 LENGTH OF JOT CKPT CTL AREA
         DS    A                   RESERVED
         DS    AL2                 RESERVED
         DS    AL2                 RESERVED
         DS    AL2                 RESERVED
$QSEL    DS    AL2                 LENGTH OF QSES
$BUFLENG DS    AL2                 HASP IN-CORE BUFFER SIZE
$SONWORK DS    AL2                 SIGN-ON WORK SPACE
$ACTIVE  DS    AL1                 COUNT OF ACTIVE FUNCTIONS
$ABENDSA DS    AL3                 ERROR EXIT REGISTER SAVE ADDRESS
$EXCPCT  DS    AL2                 ACTIVE HASP I/O COUNT
$WTRWTCT DS    AL1                 EXTERNAL WRITERS WAITING ON JOT
$MAXCMCT DS    AL1                 MAXIMUM CONSOLE MESSAGE COUNT
$NEWNEWS DS    A                   ADDR OF JES2-NEWS TEXT BLOCK
*                             HASP SPECIAL PROCESSORS
$COMMPCE DS    A                   HASP COMMAND PROCESSOR PCE ADDR
$PSOPCE  DS    A                   PROCESS SYSOUT PROCESSOR PCE ADDR
$EXECPCE DS    A                   EXECUTION PROCESSOR PCE ADDR
$JCLPCE  DS    A                   JCL CONVERSION PROCESSOR PCE ADDR
$ASYNCP  DS    A                   ASYNCH I/O PROCESSOR PCE ADDR
$XTIMPCE DS    A                   TIME EXCESSION PROCESSOR PCE ADDR
$TIMEPCE DS    A                   TIMER PROCESSOR PCE ADDR
         DS    A                   RESERVED
$MLLMPCE DS    A                   LINE MANAGER PROCESSOR PCE ADDR
$MCONPCE DS    A                   REMOTE CONSOLE PROCESSOR PCE ADDR
$OUTPCE  DS    A                   OUTPUT PROCESSOR PCE ADDR
$HOLDPCE DS    A                   HOLD QUEUE PROCESSOR PCE ADDR
$PRGPCE  DS    A                   PURGE PROCESSOR PCE ADDR
$WARMPCE DS    A                   WARM START PROCESSOR PCE ADDR
$CKPTPCE DS    A                   CHECKPOINT PROCESSOR PCE ADDR
$PRAGPCE DS    A                   PRIORITY AGING PROCESSOR PCE ADDR
         DS    A                   RESERVED
*                             PROCESSOR DISPATCHING CONTROL
$CURPCE  DS    A                   ADDRESS OF CURRENT PCE (IF ANY)
$HASPECF DS    XL2                 MASTER EVENT CONTROL FIELD
MHASPECF DS    AL2                 LINE MANAGER EVENT CONTROL FIELD
*                             PROCESSOR QUEUES
$EWQALOC DS    2A                  PCES WAITING FOR ALLOC
$EWQIMAG DS    2A                  PCES WAITING FOR IMAGE LOAD
$EWQBUF  DS    2A                  PCES WAITING FOR A BUFFER
$EWQJOT  DS    2A                  PCES WAITING FOR JOT
$EWQTRAK DS    2A                  PCES WAITING FOR A TRACK
$EWQJOB  DS    2A                  PCES WAITING FOR A JOB
$EWQUNIT DS    2A                  PCES WAITING FOR A UNIT
$EWQCKPT DS    2A                  PCES WAITING FOR CHECKPOINT
$EWQCMB  DS    2A                  PCES WAITING FOR A CMB
$EWQSMF  DS    2A                  PCES WAITING FOR A SMF BUFFER
$EWQCKPW DS    2A                  CHECKPOINT PROCESSOR WAITING WORK
$EWQABIT DS    2A                  PCES WAITING FOR ANY POST
$READY   DS    2A                  PCES READY FOR DISPATCH
***********************************************************************
*  ALL VARIABLES LOCATED IN THIS AREA WILL BE REGULARLY CHECKPOINTED  *
*  BY HASP AND WILL BE RESTORED ON ANY WARM START.....                *
$SAVEBEG DS    0F                  BEGINNING OF SAVE AREA             *
         DS    XL8                 RESERVED FOR FUTURE USE            *
$CKPUSER DS    XL8                 CHECKPOINTED USER FIELD            *
$UNSPUNQ DS    XL4                 MTTR OF SPIN IOTS WAITING FOR JOT  *
$NEWSIOT DS    XL4                 MTTR OF JES2-NEWS IOT, OR ZERO     *
$NEWSTTR DS    XL4                 MTTR OF JES2-NEWS DS, OR ZERO      *
$JQFREE  DS    AL2                 OFFSET/4 OF FIRST FREE JQE         *
$JQHEADS DS    47AL2               HEADS OF ACTIVE JOB QUEUE CHAINS   *
$JQTYPES EQU   (*-$JQHEADS)/2      NUMBER OF JOB QUEUES               *
$DATAKEY DS    F                   MASTER PERIPHERAL DATA SET KEY     *
$JOBNO   DS    H                   HASP JOB NUMBER                    *
$STCNO   DS    H                   STARTED TASK NUMBER                *
$TSUNO   DS    H                   TIME-SHARING USER NUMBER           *
         DS    6H                  RESERVED                           *
$HASPID  DS    CL4'JES2'           CHECKPOINT RECORD IDENTIFICATION   *
$CHKPT   DS    CL6                 CHECKPOINT VOLUME SERIAL NUMBER    *
         DS    CL6                 RESERVED FOR FUTURE USE            *
$SPOOL   DS    CL6'SPOOL1'         PRIMARY SPOOL VOLUME               *
$BUFSIZE DS    AL2                 HASP BUFFER SIZE                   *
$MAXJOBS DS    AL2                 MAXIMUM NUMBER OF JOBS IN SYSTEM   *
$NUMJOES DS    AL2                 NUMBER OF JOB OUTPUT ELEMENTS      *
$MINJOES DS    AL2                 MINIMUM NUMBER OF FREE JOES        *
$NUMRJE  DS    AL2                 NUMBER OF REMOTE TERMINALS         *
$NUMTGV  DS    AL2                 NUMBER OF TRACK GROUPS PER VOLUME  *
$QSENO   DS    AL2                 NUMBER OF MEMBERS IN THIS NODE     *
$NUMDA   DS    AL1                 NUMBER OF DIRECT ACCESS MODULES    *
$SPOLMSG DS    AL1                 MSG SPOOL BUFFERS FOR EACH REMOTE  *
         DS    AL2                 RESERVED                           *
$RECINCR DS    AL1                 RECORD ALTERNATION PARAMETER       *
$TCELSIZ DS    AL1                 NBR OF BUFFERS IN A TRAKCELL       *
         DS    XL6                 RESERVED FOR FUTURE USE            *
$PARMVER EQU   $SPOOL,*-$SPOOL     CHECKPOINT VERIFICATION FIELDS     *
$SAVEEND EQU   *                   END OF SAVE AREA                   *
$SAVELEN EQU   $SAVEEND-$SAVEBEG   LENGTH OF SAVE AREA                *
***********************************************************************
&SYSECT  CSECT                     END OF HCT DSECT
         MEND
./ ADD NAME=BCBSJCT  0100-02135-02135-1224-00135-00135-00000-VBCMACS
         MACRO
         BCBSJCT
JCTDSECT DSECT                     JOB CONTROL TABLE DSECT
         DS    CL88                BUFFER CONTROL INFORMATION
JCTSTART EQU   *                   START OF DATA WRITTEN TO SPOOL
JCTID    DS    CL4                 JCT IDENTIFIER
JCTLENG  DS    AL2                 LENGTH OF JCT INCLUDING PREFIX
JCTFLAG1 DS    B                   FLAGS 1 ---
JCT1CKPT EQU   X'80'               REWRITE THIS JCT
JCTBURST EQU   X'40'               JOB OUTPUT BURST OPTION
JCTJTFLG DS    BL1                 JOB TERM FLAGS
JCTJTJF  EQU   X'80'               JOB FAILED
JCTJTCF  EQU   X'40'               JOB FAILED DUE TO CC
JCTJTABD EQU   X'20'               JCTABEND WAS ON
JCTJBKEY DS    XL4                 JOB IDENTIFIER KEY
JCTSPIOT DS    XL4                 TRACK ADDRESS OF 1ST SPIN IOT
JCTIOT   DS    XL4                 TRACK ADDRESS OF 1ST REGULAR IOT
JCTHQT   DS    XL4                 TRACK ADDRESS OF 1ST HQT
JCTOCTTR DS    XL4                 TRACK ADDRESS OF OCR TABLE
JCTJQE   DS    F                   OFFSET OF HASP JOB QUEUE ENTRY
JCTPDDBK DS    H                   PERIPHERAL DATA SET KEY
JCTPDDBO DS    H                   DATA SET KEY FOR 1ST OUTPUT PDDB
JCTCNVRC DS    F                   RETURN CODE FROM JCL CONVERTER
JCTCOK   EQU   0                   JCL CONVERTED WITHOUT ERROR
JCTCJCL  EQU   4                   JCL ERROR DETECTED BY CONVERTER
JCTCIO   EQU   8                   I/O ERROR DETECTED BY CONVERTER
JCTCDUPL EQU   JCTCJCL             DUPLICATE LOGON EXECUTING
JCTCABND EQU   36                  UNRECOVERABLE ERROR IN CONVERSION
JCTJLOGC DS    F                   RESUME TRACK FOR LOG DATA SET
JCTMSGSC DS    F                   RESUME TRACK FOR MSG DATA SET
         DS    2X                  RESERVED
JCTPRTY  DS    CL2                 /*PRIORITY OR JOB CARD 'PRTY='
JCTJSSTP DS    H                   JOB SELECT RESTART STEP (SSRQSTEP)
JCTHQRCT DS    H                   HOLD QUEUE RECORD COUNT
JCTJSFLG DS    B                   JOB SELECT FLAGS (SSRQFLG1)
JCTSMFLG DS    BL1                 SMF FLAGS
JCTNOUSO EQU   X'20'               DO NOT TAKE IEFUSO SMF EXIT
JCTNOTY6 EQU   X'04'               DO NOT PRODUCE TYPE 6 SMF RECORD
JCTNOUJP EQU   X'02'               DO NOT TAKE IEFUJP SMF EXIT
JCTNOT26 EQU   X'01'               DO NOT PRODUCE TYPE 26 SMF RECORD
JCTPURGE DS    0X                  START OF SMF PURGE RECORD
JCTJOBFL DS    BL1                 HASP JOB FLAGS
JCTBATCH EQU   X'80'               BACKGROUND BATCH JOB
JCTTSUJB EQU   X'40'               FOREGROUND TIME SHARING USER
JCTSTCJB EQU   X'20'               SYSTEM TASK
JCTNOJNL EQU   X'10'               NO JOURNAL OPTION
JCTNOUPT EQU   X'08'               NO OUTPUT OPTION
JCTTSCAN EQU   X'04'               TYPRUN=SCAN WAS SPECIFIED
JCTTCOPY EQU   X'02'               TYPRUN=COPY WAS SPECIFIED
JCTRSTRT EQU   X'01'               ALLOW WARM START RE-QUEUE TO XEQ
JCTJBOPT DS    BL1                 HASP JOB OPTIONS
JCTPRICD EQU   X'80'               /*PRIORITY CARD OR
*                                    JOB CARD 'PRTY=' PRESENT
JCTSETUP EQU   X'40'               /*SETUP CARD(S) PRESENT
JCTTHOLD EQU   X'20'               TYPERUN=HOLD WAS SPECIFIED
JCTNOLOG EQU   X'10'               NO JOB LOG OPTION
JCTXBACH EQU   X'08'               EXECUTION BATCHING JOB
JCTINRDR EQU   X'04'               JOB WAS ENTERED ON INTERNAL READER
JCTRERUN EQU   X'02'               JOB WAS RE-RUN
JCTQHELD EQU   X'01'               RESERVED FOR CAT AND SMF RECORDS
JCTJOBID DS    CL8                 HASP ASSIGNED JOB IDENTIFICATION
JCTJNAME DS    CL8                 JOB NAME FROM JOB CARD
JCTPNAME DS    CL20                PROGRAMMER'S NAME FROM JOB CARD
JCTMCLAS DS    C                   MSGCLASS FROM JOB CARD
JCTJCLAS DS    C                   JOB CLASS FROM JOB CARD
JCTIPRIO DS    X                   HASP INITIAL JOB SELECTION PRIORITY
JCTPRIO  DS    X                   HASP EXECUTION SELECTION PRIORITY
JCTIOPRI DS    X                   HASP INITIAL OUTPUT SELECTION PRIO
JCTOPRIO DS    X                   HASP OUTPUT SELECTION PRIORITY
JCTROUTE DS    XL2                 INPUT ROUTE CODE
JCTINDEV DS    CL8                 HASP INPUT DEVICE NAME
JCTACCTN DS    CL4                 JOB ACCOUNTING NUMBER FROM JOB CARD
JCTROOMN DS    CL4                 PROGRAMMER'S ROOM NUMBER
JCTETIME DS    F                   ESTIMATED EXECUTION TIME
JCTESTLN DS    F                   ESTIMATED OUTPUT LINES
JCTESTPU DS    F                   ESTIMATED PUNCHED OUTPUT
JCTFORMS DS    CL4                 JOB OUTPUT FORMS
         DS    X                   RESERVED
JCTCPYCT DS    X                   JOB PRINT COPY COUNT
         DS    X                   RESERVED
JCTLINCT DS    X                   LINES PER PAGE
JCTPROUT DS    XL2                 JOB PRINT ROUTE CODE
JCTPUOUT DS    XL2                 JOB PUNCH ROUTE CODE
JCTPROCN DS    CL8                 PROCEDURE DDNAME
JCTPASS  DS    CL8                 CURRENT PASSWORD
JCTNUPAS DS    CL8                 NEW PASSWORD
JCTCNVON DS    F                   TIME ON JCL CONVERSION PROCESSOR
JCTCDTON DS    F                   DATE ON JCL CONVERSION PROCESSOR
JCTCNVOF DS    F                   TIME OFF JCL CONVERSION PROCESSOR
JCTCDTOF DS    F                   DATE OFF JCL CONVERSION PROCESSOR
JCTXEQON DS    F                   TIME ON EXECUTION PROCESSOR
JCTXDTON DS    F                   DATE ON EXECUTION PROCESSOR
JCTXEQOF DS    F                   TIME OFF EXECUTION PROCESSOR
JCTXDTOF DS    F                   DATE OFF EXECUTION PROCESSOR
JCTOUTON DS    F                   TIME ON OUTPUT PROCESSOR
JCTODTON DS    F                   DATE ON OUTPUT PROCESSOR
JCTOUTOF DS    F                   TIME OFF OUTPUT PROCESSOR
JCTODTOF DS    F                   DATE OFF OUTPUT PROCESSOR
JCTCARDS DS    F                   TOTAL NUMBER OF INPUT CARDS
JCTLINES DS    F                   GENERATED OUTPUT LINES
JCTPUNCH DS    F                   GENERATED PUNCHED OUTPUT
JCTRDSID DS    CL4                 INPUT PROCESSOR SYSTEM ID
JCTCVSID DS    CL4                 CONVERSION PROCESSOR SYSTEM ID
JCTEXSID DS    CL4                 EXECUTION PROCESSOR SYSTEM ID
JCTOTSID DS    CL4                 OUTPUT PROCESSOR SYSTEM ID
JCTESOUT DS    F                   ESTIMATED OUTPUT (LINES+CARDS)
JCTXOUT  DS    F                   GENERATED OUTPUT RECORDS
JCTTSUID DS    CL7                 TIME SHARING USERID FOR NOTIFY
JCTTSUAF DS    BL1                 INPUT QUESYSAF FOR NOTIFY
JCTPSN1  DS    CL8                 STEP NAME FROM EXEC STEP
JCTPSN2  DS    CL8                 STEP NAME OF CALLING STEP
JCTWORK  DS    XL144               144-BYTE WORK AREA
JCTJMRST EQU   *                   START OF JMR AREA
JCTJMRJN DS    CL8                 JMR JOB NAME
JCTRDRON DS    F                   TIME ON INPUT PROCESSOR
JCTRDTON DS    F                   DATE ON INPUT PROCESSOR
JCTCPUID DS    XL4                 JMR CPU IDENTIFICATION
JCTUSEID DS    CL8                 JMR USER IDENTIFICATION
JCTSTEP  DS    X                   CURRENT STEP NUMBER
JCTINDC  DS    BL1                 JMR SMF OPTIONS
JCTJTCC  DS    0XL2,X              CONDITION CODE
JCTCLASS DS    X                   JOB CLASS
JCTUCOM  DS    F                   JMR USER COMMUNICATION AREA
JCTUJVP  DS    F                   JMR ADDRESS OF USER EXIT ROUTINE
JCTRDROF DS    F                   TIME OFF INPUT PROCESSOR
JCTRDTOF DS    F                   DATE OFF INPUT PROCESSOR
JCTJOBIN DS    F                   JMR JOB SYSIN COUNT
JCTRDR   DS    XL2                 READER DEVICE TYPE AND CLASS
JCTJMOPT DS    BL1                 JMR SMF OPTIONS
JCTJMRUX EQU   X'20'               IF ON, TAKE USER EXITS FOR SMF
         DS    X                   RESERVED
JCTJMRND DS    0F                  END OF JMR
JCTJMR   EQU   JCTJMRST,*-JCTJMRST REFERENCE FOR ENTIRE JMR AREA
JCTEND   EQU   *                   END OF JOB CONTROL TABLE
         MEND
./ ADD NAME=BCBSJQE  0100-02135-02135-1224-00050-00050-00000-VBCMACS
         MACRO
         BCBSJQE
JQEDSECT DSECT                     HASP JOB QUEUE ENTRY DSECT
JQE      EQU   JQEDSECT            ALTERNATE NAME FOR JQE DSECT
JQEPRIO  DS    FL1                 JOB PRIORITY
JQETYPE  DS    BL1                 LOGICAL QUEUE TYPE
QUECLASS EQU   X'7F'               CLASS OF JOB QUEUED FOR EXECUTION
*                                  IF ZEROES, JOB IS ON CONVERTER
*                                  QUEUE
$DUMMY   EQU   X'80'               RESERVED QUEUE
$XEQ     EQU   X'40'               OS EXECUTION QUEUE
*                                  WAITING IF JQEFLAGS HAS ALL
*                                  QUEBUSY BITS OFF
$INPUT   EQU   X'20'               INPUT QUEUE
$XMIT    EQU   X'10'               TRANSMISSION QUEUE
$SETUP   EQU   X'08'               SETUP QUEUE
$RECEIVE EQU   X'04'               SYSOUT RECEIVER QUEUE
$OUTPUT  EQU   X'02'               OUTPUT QUEUE
*                                  WAITING IF JQEFLAGS HAS ALL
*                                  QUEBUSY BITS OFF
$HARDCPY EQU   X'01'               OUTPUT IN-PROGRESS QUEUE
$PURGE   EQU   X'00'               PURGE QUEUE
JQEJOBNO DS    H                   HASP JOB NUMBER
JQEFLAGS DS    BL1                 JOB QUEUE FLAGS
QUEHOLDA EQU   X'80'               HOLD ALL JOBS
QUEHOLD1 EQU   X'40'               HOLD SINGLE JOB
QUEHOLD2 EQU   X'20'               HOLD FOR DUPLICATE JOB NAME
QUEPURGE EQU   X'10'               JOB IS TO BE PURGED
QUEOPCAN EQU   X'08'               OPERATOR ISSUED $C OR $P JOB
QUEBUSY  EQU   X'07'               JQE BUSY SYSTEM ID
JQEFLAG2 DS    BL1                 MORE JOB QUEUE FLAGS
QUEINIT  EQU   X'80'               JOB IS INITIATOR OR SYSTEM LOG
QUEINDAF EQU   X'80'               JOB HAS INDEPENDENT MODE AFFINITY
QUESYSAF EQU   X'7F'               SYSTEM AFFINITY OF JOB
JQECHAIN DS    H                   OFFSET/4 OF NEXT JOB QUE ELEMENT
JQETRAK  DS    XL4                 TRACK ADDRESS OF JOB CONTROL TABLE
JQEDEVID DS    0XL2                DEVICE IDENTITY (SEE DCTDEVID)
JQEPRTRT DS    XL2                 PRINT ROUTE
JQEPUNRT DS    XL2                 PUNCH ROUTE
JQEJOECT DS    H                   JOB OUTPUT ELEMENT COUNT
JQEHLDCT DS    0H,X                HELD DATA SET COUNT (BITS 0-11)
JQEHQLOK DS    BL1                 HOLD QUEUE LOCK (BITS 4-7)
JQEHLDDS EQU   B'00001000'         JOB HAS HELD 3540 DATASETS  @Y30O
JQEJNAME DS    CL8                 JOB NAME FROM JOB CARD
JQEJBDEP DS    0C AREA FOR PRE-REQ JOBNAMES                      BCV001
JQEHJOB1 DS    CL8 DEPENDENT JOBNAME 1                           BCV001
JQEHJOB2 DS    CL8 DEPENDENT JOBNAME 2                           BCV001
         DS    0F                  INSURE FULL-WORD BOUNDARY
JQELNGTH EQU   *-JQEDSECT          LENGTH OF JOB QUEUE ENTRY
         MEND
./ ADD NAME=BCBSMCT  0100-02135-02135-1224-00105-00105-00000-VBCMACS
         MACRO
         BCBSMCT
*
***********************************************************************
*        MVS STORAGE MANAGEMENT CONTROL TABLE (MCT) DEFINITION
*
*                    - 248 BYTES -
***********************************************************************
*
MCT      DSECT ,
MCTMCT   DS    CL4                     ACRONYM IN EBCDIC "MCT "
*              MCT CONSTANTS
MCCMS100 DS    XL4                     SQA SHORTAGE MSG ADDR
MCCMS101 DS    XL4                     CRITICAL SQA SHORTAGE MSG ADDR
MCCMS102 DS    XL4                     SQA SHORTAGE RELIEVED MSG ADDR
MCCMS200 DS    XL4                     AUX STORAGE MSG ADDR
MCCMS201 DS    XL4                     CRITICAL AUX STORAGE SHORTAGE MS
MCCMS202 DS    XL4                     AUX STORAGE RELIEVED MSG ADDR
MCCMS203 DS    XL4                     AUX STORAGE USER MSG ADDR
MCCMS400 DS    XL4                     FIX PAGE SHORTAGE MSG ADDR
MCCMS401 DS    XL4                     CRITICAL FIX PAGE SHORTAGE MSG A
MCCMS402 DS    XL4                     FIX PAGE SHORTAGE RELIEVED MSG A
MCCMS403 DS    XL4                     FIX PAGE USER MSG ADDR
MCCMS500 DS    XL4                     SWAP IN FAIL USER MSG ADDR
MCCMS501 DS    XL4                     PTR O SWAP IN MSG
*                STORAGE CONTROL CONSTANTS
MCCPLUS  DS    XL2                     AVAIL FRAME Q DELTA FOR STEALING
MCCSTLCT DS    XL2                     NBR PAGES TO STEAL FM EACH ADDRS
         DS    XL2                     RESERVED
MCCSIPRT DS    XL2                     TIME BETWEEN PAGE-IN RATE CALCUL
*                STORAGE LOAD BALANCER CONSTANTS
MCCSBSIG DS    XL2                     MIN SIG USER FRAME THRESH
MCCSBAF1 DS    XL2                     STC AVERAGING FACTOR
MCCSBAF2 DS    XL2                     MCCSBAF1+1D WEIGHTED SVCE RATE
MCCSBSTH DS    XL2                     HIGH STC IMBALANCE THRESHOLD
MCCSBSTL DS    XL2                     LOW STC IMBALANCE THRESH
MCCSBATH DS    XL2                     HIGH AFC THRESHOLD
MCCSBATL DS    XL2                     LOW AFC THRESHOLD
MCCSBSCF DS    XL2                     STOR CONTENTION SCALOR
MCCSBFCF DS    XL2                     FRAME COUNT SCALOR
MCCSBMXR DS    XL2                     MAX REC VAL
MCCSBMNR DS    XL2                     MIN REC VAL
         DS    XL2                     RESERVED
MCCSBMIN DS    XL4                     MIN INTVL FOR COMPUTING STC AVG
MCCSBMSW DS    XL4                     MIN INTVL TO PRESERVE REC VAL TO
MCCSBETH DS    XL4                     EXEC TIME THRESH FOR SIGNIFICANT
*              AUX STORAGE MONITORING CONSTANTS
MCCASMT1 DS    XL2                     1ST AUX SHORTAGE THRESH
MCCASMT2 DS    XL2                     2ND AUX SHORTAGE THRESH
MCCEND   EQU   *                       END OF MCT CONSTANTS
*              STORAGE CONTROL CONSTANTS
MCVSIFLG DS    XL1                     STORAGE ISOLATION FLAG
         DS    XL1                     RESERVED
MCVTWSS  DS    XL2                     TARGET WSS FOR COMMON
MCVSIWL  DS    XL2                     CMN LOW WSS TARGET
MCVSIWH  DS    XL2                     CMN HI WSS TARGET
MCVSIPL  DS    XL2                     CMN LOW PAGE-IN RATE
MCVSIPH  DS    XL2                     CMN HIGH PAGE-IN RATE
MCVSIBP  DS    XL4                     CMN BASE PAGE-IN CNT
MCVSIBT  DS    XL4                     CMN BASE TIME FOR PAGE-IN RATE C
MCVSIPR  DS    XL2                     CMN RECENT PAGEIN RATE
MCVFMCT  DS    XL2                     CMN EFFECTIVE FMCT
MCVSTCRI DS    XL2                     HIGHEST SYSTEM UIC
MCVFRCNT DS    XL2                     NBR PAGES NEEDED TO BE STOLEN BY
MCVAVQC  DS    XL4                     COUNT OF AVQLOWS
*               STORAGE LOAD BALANCER VARIABLES
MCVSBCTR DS    XL2                     STOR CONT SAMPLE COUNT
MCVSBSCA DS    XL2                     SHORT TERM STC AVE
MCVSBLTS DS    XL2                     LONG TERM STC AVE
MCVSBFQA DS    XL2                     AVAIL FRAME Q AVE
MCVSBRVF DS    XL2                     STOR CONT FACTOR FOR LOAD BAL RE
MCVSBSIG DS    XL2                     SIG USER THRESHOLD
MCVSBBT  DS    XL4                     BASE TOD FOR AVE STEAL CRI
MCVSBSCC DS    XL4                     STEAL CRI ACCM
MCVSBFQC DS    XL4                     AVAIL FRAME Q ACCUM
MCVSBIMT DS    XL4                     TOD OF LAST STOR IMBAL
*             MEMORY CONTROL FLAGS
MCTSFLGS DS    XL1                     FLAGS MOD UNDER SALLOC LOCK
MCTOFLGS DS    XL2                     FLAGS MOD UNDER SRM LOCK
         DS    XL1                     RESERVED
MCCUICTR DS    XL4                     PR9 UIC TRIM NUMBER
*              TIME INTERVALS FOR PR1 INVOCATION
MCCUICBD DS    XL4                     UIC LIMIT BEFORE ADJUSTING
         DS    XL4                     RESERVED
MCCPR1IN DS    XL4                     INITIAL RMEPINT FOR PR1
MCCINTMX DS    XL4                     MAX PR1 INTERVAL
         DS    XL1                     RESERVED
MCCINTB  DS    XL15                    COUNT INTERVAL TABLE
MCVINC   DS    XL4                     PR1 INTERVAL
MCVCURCT DS    XL4                     PR1 COUNT
MCVMAXCT DS    XL4                     MAXIMUM COUNT
MCCSIWDL DS    XL2                     % OF WSS TWSS TO BE LOWERED BY
MCCSIWDI DS    XL2                     % OF WSS TWSS TO BE INCR BY
MCCSIETH DS    XL4                     EXEC TIME THRESH FOR PAGE RATE C
MCCSBMXF DS    XL2                     STOR LD FACTOR
MCCSBRND DS    XL2                     ROUND FACTOR FOR LD BAL CALC
MCCSBMNC DS    XL2                     MIN NBR USERS TO ADJ SIG USER TH
MCCSBSGP DS    XL2                     TARG % OF SIG USERS
MCCSBINP DS    XL2                     % TO INCR SIG USER THRESH
MCCSBDEP DS    XL2                     % TO DECR SIG USER THRESH
         DS    XL8                     RESERVED
MCCAFCLO DS    XL2                     AVAIL FRAME Q LOW THRESHOLD
MCCAFCOK DS    XL2                     AVAIL FRAME Q O.K. THRESHOLD
MCTEND   EQU   *                       END OF MCT
         MEND
./ ADD NAME=BCBSOUCB 0100-02135-02135-1224-00168-00168-00000-VBCMACS
         MACRO
         BCBSOUCB
*
***********************************************************************
*
*        MVS USER CONTROL BLOCK DEFINITION
*
***********************************************************************
*
OUCB     DSECT
OUCBNAME DS    CL4                     BLOCK IDENTIFICATION: "OUCB"
OUCBFWD  DS    A                       SWAP CHAIN FORWARD POINTER
OUCBBCK  DS    A                       SWAP CHAIN BCKWARD POINTER
OUCBTMA  DS    F                       TIME OF LAST ANALYSIS
OUCBQFL  DS    XL1                     SWAPPABILITY TRANSITION FLAGS
OUCBGOO  EQU   X'80'                   TRANSITIONING OUT OF CORE
OUCBGOI  EQU   X'40'                   TRANSITIONING INTO CORE
OUCBGOB  EQU   X'20'                   TRANSITIONING BETWEEN STATES
OUCBQSFL EQU   X'10'                   QSCEFL RECURSION FLAG
OUCBOFF  EQU   X'08'                   REQUESTING ENTER WAIT STATE
OUCBOUT  EQU   X'04'                   REQUESTING ENTER OUT STATE
OUCBLSW  EQU   X'02'                   LOGICALLY SWAPPED
OUCBDLYB EQU   X'01'                   DELAYED BY RTO ON OUT QUEUE
OUCBSFL  DS    XL1                     SWAPOUT CONTINUATION FLAGS
OUCBNSW  EQU   X'80'                   NON-SWAPPABLE STATUS
OUCBCTI  EQU   X'40'                   CTL INHIBITS QUIESCE
OUCBBIB  EQU   X'20'                   BRING IN FOR CANCEL
OUCBINV  EQU   X'10'                   =1 IF OUCB IS INVALID
OUCBNSWI EQU   X'08'                   PREVENT SWAP IN
OUCBPVL  EQU   X'04'                   PRIVILEGED PROGRAM RUNNING
OUCBENQ  EQU   X'02'                   ENQ RESIDENT STATUS
OUCBSCN  EQU   X'01'                   SWAP CHAIN TERMINATION MARK
OUCBYFL  DS    XL1                     USER TYPE FLAGS
OUCBPSTE EQU   X'80'                   POST ERROR @ZA07127
OUCBSTT  EQU   X'40'                   START CREATED USER
OUCBLOG  EQU   X'20'                   LOGON CREATED USER
OUCBMNT  EQU   X'10'                   MOUNT CREATED USER
OUCBPSTR EQU   X'08'                   IF POST ERROR, RECOVER
OUCBAXS  EQU   X'04'                   AUX SHORTAGE FORCED SWAP
OUCBDTA  EQU   X'02'                   DATA ACCUMULATION IMPACTED
OUCBFXS  EQU   X'01'                   FIXED STORAGE FORCED SWAP
OUCBAFL  DS    XL1                     ALGORITHM STATUS FLAGS
OUCBSDPS EQU   X'80'                   DPRTY IS SPECIFIED ON JCL
OUCBAPG  EQU   X'40'                   APG ALGORITHM APPLICABLE
OUCBREPT EQU   X'20'                   RPGNS ARE PRESENT
OUCBCPL  EQU   X'10'                   SIGNIFICANT CPU USER FLAG
OUCBJSR  EQU   X'08'                   JOBSELECT RECEIVED
OUCBIDPS EQU   X'04'                   INITIAL PROC HAS DPRTY
OUCBNWT  EQU   X'02'                   MSO DETECTED NONSWAPPABLE WAIT
OUCBASW  EQU   X'01'                   AUTHORIZED FOR DONTSWAP
OUCBTFL  DS    XL1                     TRANSACTION STATUS FLAGS
OUCBATR  EQU   X'80'                   TRANSACTION IN EXISTENCE
OUCBSTR  EQU   X'40'                   TRANSACTION START PENDING
OUCBNTR  EQU   X'20'                   TRANSACTION STOP PENDING
OUCBRTR  EQU   X'10'                   TRANSACTION RESUME PENDING
OUCBPCH  EQU   X'08'                   PERF GRP PERIOD CHANGE PENDING
OUCBMAR  EQU   X'04'                   ACTIVITY RECORDING SUBTRACT FLAG
OUCBINP  EQU   X'02'                   INITIATOR ATTACH PENDING
OUCBINC  EQU   X'01'                   INITIATOR ATTACH CURRENT
OUCBEFL  DS    XL1                     EVENT STATUS FALGS
OUCBLWT  EQU   X'80'                   LONG WAIT STATUS
OUCBTRM  EQU   X'40'                   TERMINAL WAIT STATUS
OUCBOWT  EQU   X'20'                   OUTPUT TERMINAL WAIT
OUCBCIM  EQU   X'10'                   COMPOSITE INPUT MESSAGE
OUCBNQF  EQU   X'08'                   ENQHOLD EVENT PROCESSED
OUCBQSS  EQU   X'04'                   QSCEST EVENT PROCESSED
OUCBQSC  EQU   X'02'                   QSCECMP EVENT PROCESSED
OUCBMWT  EQU   X'01'                   MSO DETECTED WAIT STATUS
OUCBNQC  DS    XL1                     NO. OF OUTSTANDING ENQHOLDS
OUCBUFL  DS    XL1                     USER TYPE FLAGS
OUCBJSFS EQU   X'80'                   JOB SELECT DELAYED
OUCBJSAS EQU   X'40'                   JOB SELECT DELAYED
OUCBRSWP EQU   X'20'                   REQSWAP IN PROGRESS
OUCBTSWP EQU   X'10'                   TRANSWAP IN PROGRESS
OUCBTSWC EQU   X'08'                   TRANSWAP COMPLETE
OUCBSI   EQU   X'04'                   STORAGE ISOL CONTROL ACTIVE
OUCBSBSU EQU   X'02'                   SIGNIFICANT STORAGE USER
OUCBSBET EQU   X'01'                   SIG STORE CHK EX TIME PASSED
OUCBLFL  DS    XL1                     ALGORITHM STATUS FLAGS
OUCBCTB  EQU   X'40'                   CPU LOAD BAL APPLICABLE
OUCBITB  EQU   X'20'                   I/O LOAD BAL APPLICABLE
OUCBSTB  EQU   X'10'                   STORAGE LOAD BAL APPL
OUCBRFL  DS    XL1                     MORE USER FLAGS
OUCBCSFS EQU   X'80'                   SWAP IN FAIL DEFER BIT USER WTG
OUCBCSFM EQU   X'40'                   SWAP IN MESSAGE REQUIRED
OUCBNDP  DS    XL1                     NEW ASCB DISPATCHING PRIORITY
OUCBTNDP DS    XL1                     NEW TS DISPATCHING PRIORITY
         DS    XL1                     RESERVED
OUCBIAC  DS    XL1                     INITIATOR ATTACH COUNT
OUCBIDP  DS    XL1                     INITIAL PROC'S DISP PRTY
OUCBPGP  DS    XL1                     CURRENT WPGP OFFSET IN WPGD
OUCBWMG  DS    F                       WPGD OFFSET IN WPGD TABLE
         DS    H                       RESERVED
OUCBDMO  DS    H                       OFFSET INTO DOMAIN TABLE
OUCBDMN  DS    XL1                     DOMAIN NUMBER
OUCBSRC  DS    XL1                     SWAP OUT REASON CODE
OUCBSWC  DS    H                       TRANSACTION SWAP COUNT
OUCBASCB DS    A                       ASCB ADDRESS
OUCBIMCB DS    A                       IMCB ADDRESS
OUCBTMW  DS    F                       WLM INTERVAL START TIME
OUCBWMS  DS    F                       INTERVAL SERVICE ACCUMULATOR
OUCBCPU  DS    F                       INTERVAL CPU SERVICE ACCUM
OUCBIOC  DS    F                       INTERVAL I/O SERVICE ACCUM
OUCBMSO  DS    F                       INTERVAL MSO SERVICE ACCUM
OUCBTMS  DS    F                       TIME OF LAST SWAP ACTION
OUCBTMO  DS    F                       TRANSACTION START TIME
OUCBPSO  DS    H                       PAGES SWAPPED AT LAST SWAP-OUT
OUCBWSS  DS    H                       WORKING SET SIZE AT SWAP-IN
OUCBACT  DS    A                       ACTION QUEUE FORWARD POINTER
OUCBCSW  DS    0F                      COMPARE AND SWAP FIELD NAME
OUCBACN  DS    XL2                     DEFERRED ACTION FLAGS
OUCBCFL  DS    XL1                     MULTIPROCESS CONDITION FLAGS
OUCBRDY  EQU   X'80'                   USERRDY EVENT RECEIVED
OUCBRSM  EQU   X'40'                   RSM SERVICE OUTSTANDING
OUCBDFSW EQU   X'20'                   SWAP IN FAIL SPCL PROC PVT THRSH
OUCBCMRV DS    F                       COMPOSITE RECOM VALUE
OUCBWMR  DS    F                       WLM RECOMMENDATION VALUE
OUCBIRV  DS    H                       IOM RECOMMENDATION VALUE
OUCBCRV  DS    H                       CPM RECOMMENDATION VALUE
OUCBIOR  DS    H                       I/O USAGE PROFILE
OUCBTWSS DS    H                       TARGET WORKING SET SIZE
OUCBIOSM DS    F                       SMF EXCP COUNT
OUCBDSPC DS    XL1                     CURRENT DISPATCHING CONTROL
OUCBMTW  EQU   X'80'                   CURRENT CONTROL IS MTW
OUCBROT  EQU   X'40'                   CURRENT CONTROL IS ROTATE
OUCBTS   EQU   X'20'                   CURRENT CTL IS TIME SLICING
OUCBDSPN DS    XL1                     NEW DISPATCHING CONTROL
OUCBNMTW EQU   X'80'                   NEW CONTROL IS MTW
OUCBNROT EQU   X'40'                   NEW CONTROL IS ROTATE
OUCBNTS  EQU   X'20'                   NEW CONTROL IS TIME SLICING
OUCBNTSP DS    H                       NUM OF ADD'L TRANSWAPS PENDING
OUCBPSS  DS    2F                      CPU PAGE SECONDS
OUCBPS1  EQU   OUCBPSS                 HIGH WORD PAGE SECONDS
OUCBPS2  EQU   OUCBPSS+4               LOW WORD PAGE SECONDS
OUCBPST  DS    F                       TIME OF LAST WORKING SET CHANGE
OUCBTCP  DS    F                       TIME OF CPU USAGE EVALUATION
OUCBTIO  DS    F                       TIME OF I/O USAGE EVALUATION
OUCBNDS  DS    H                       NUM OUTSTANDING DONTSWAPS
OUCBNTSG DS    XL1                     NEW TIME SLICE GROUP NUMBER
OUCBSDP  DS    XL1                     SPECIFIED DP
OUCBTME  DS    F                       LAST RESPONSE TIME
OUCBTML  DS    F                       TIME OF LAST TERMWAIT
OUCBDWMS DS    F                       INTVL DMN SVCE ACCUM
OUCBSRB  DS    F                       INTERVAL SRB SERVICE ACCUM
OUCBHOLD DS    F                       HOLD COUNT
OUCBTMP  DS    F                       PERF GRP PERIOD START TIME
OUCBDLYT DS    F                       RTO DELAY END TIME
OUCBSBRV DS    H                       STM RECOMMENDATION VALUE
OUCBSBFC DS    H                       RECENT FRAME CNT FOR STOR LOADBA
OUCBSBTE DS    F                       TIME OF STM USAGE EVALUATION
OUCBSUBN DS    CL4                     SUBSYSTEM NAME USED BY SMF
OUCBRPG  DS    H                       RESET PERFORMANCE GROUP NUMBER
OUCBSPG  DS    H                       SPECIFIED PERFORMANCE GROUP NUMB
OUCBNPG  DS    H                       NEW PERFORMANCE GROUP NUMBER
OUCBSRPG DS    H                       SUBSYSTEM RPGN
OUCBNRPG DS    H                       TRXNAME RPGN
OUCBURPG DS    H                       USERID RPGN
OUCBCRPG DS    H                       TRXCLASS RPGN
OUCBSTOS DS    H                       STAGE 1 WSS FOR SWAPIN FAIL
         DS    F                       RESERVED
OUCBTRXN DS    CL8                     TRANSACTION NAME
OUCBUSRD DS    CL8                     USERID
OUCBCLS  DS    CL8                     TRANSACTION CLASS NAME
OUCBSWFC DS    H                       SWAP IN FAIL COUNT
OUCBSFEC DS    H                       SWAP IN FAIL EVALUATION COUNT
         DS    F                       RESERVED
OUCBEND  DS    0D                      END OF OUCB
         MEND
./ ADD NAME=BCBSOUXB 0100-02135-02135-1224-00069-00069-00000-VBCMACS
         MACRO
         BCBSOUXB
*
***********************************************************************
*
*        MVS USER CONTROL BLOCK EXTENSION DEFINITION
*
***********************************************************************
*
OUXB     DSECT ,
OUXBNAME DS    CL4                     BLOCK IDENTIFICATION
OUXBPET  DS    F                       PRA BASE CPU MEASUREMENT
OUXBMET  DS    F                       MSO BASE CPU MEASUREMENT
OUXBRSW  DS    A                       ADDR OF ECB PASSED BY REQSWAP
OUXBPIN  DS    F                       INTERVAL PAGE-IN ACCUMULATOR
OUXBPOUT DS    F                       INTERVAL PAGE-OUT ACCUMULATOR
OUXBPREC DS    F                       INTERVAL RECLAIM ACCUMULATOR
OUXBVAMI DS    F                       INTERVAL VAM PAGE-IN ACCUMULAT
OUXBVAMO DS    F                       INTERVAL VAM PAGE-OUT ACCUMULA
OUXBVAMR DS    F                       INTERVAL VAM RECLAIM ACCUMULAT
OUXBSPIN DS    F                       SWAP PAGES IN COUNT
OUXBSPOT DS    F                       SWAP PAGES OUT COUNT
OUXBSWCT DS    F                       SWAP COUNT
OUXBCAPI DS    F                       INTERVAL COMMON AREA PAGINS
OUXBCAPR DS    F                       INTERVAL COMMON AREA RCLAIM
OUXBSTCT DS    F                       PAGES STOLEN ACCUMULATOR
OUXBLPAI DS    F                       LPA PAGE IN
OUXBLPAR DS    F                       LPA PAGE RECLAIMS
OUXBIOS  DS    H                       WLM BASE I/O MEASUREMENT
OUXBSTC  DS    H                       INTERVAL STEAL CALL COUNT
OUXCEJST DS    F                       BASE EXEC TIME,101%
OUXBTSW  DS    F                       TRANSWAP ECB ADDRESS
         DS    F                       RESERVED
OUXBNQT  DS    F                       ENQ RESIDENCY START TIME
OUXBTRC  DS    F                       SESSION TRANSACTION COUNT
OUXBJBS  DS    F                       SESSION SERVICE ACCUMULATOR
OUXBJBT  DS    F                       SESSION TIME ACCUMULATOR
OUXBTRS  DS    F                       TRANSACTION SERVICE ACCUMULATO
OUXBTRT  DS    F                       TRANSACTION TIME ACCUMULATOR
OUXBJBR  DS    F                       SESSION RESIDENCY ACCUMULATOR
OUXBTRR  DS    F                       TRANSACTION RESIDENCY ACCUMULA
OUXBJCPU DS    F                       SESSION CPU SERVICE ACCUM
OUXBTCPU DS    F                       TRANSACTION CPU SERVICE ACC
OUXBJIOC DS    F                       SESSION I/O SERVICE ACCUM.
OUXBTIOC DS    F                       TRANS I/O SERVICE ACCUM.
OUXBJMSO DS    F                       SESSION STORAGE SERV.ACCUM.
OUXBTMSO DS    F                       TRANSACTION STORAGE ACCUM.
OUXBJSRB DS    F                       SESSION SRB SERVICE ACCUM.
OUXBTSRB DS    F                       TRANSACTION SRB ACCUM.
OUXBILS  DS    F                       IOL BASE I/P MEASUREMENT
OUXBIOSM DS    F                       SMF BASE EXCP MEASUREMNT
OUXBAET  DS    F                       APG BASE CPU MEASUREMENT
OUXBCPS  DS    D                       WLM CPU MEASRMT 64BIT NMB
OUXBMSS  DS    D                       WLM MSO BASE SERVICE VALUE
OUXBSBS  DS    D                       WLM SRB BASE VALUE
OUXBITD  DS    F                       IOL BASE START TIME
OUXBSTD  DS    F                       AUX BASE START TIME
OUXBPRS  DS    F                       PERF GRP PERIOD STARTING SERVI
OUXBWCT  DS    H                       APG BASE SHORT WAIT COUNT
OUXBVSC  DS    H                       AUX BASE VAM SLOT COUNT
OUXBNVC  DS    H                       AUX BASE NONVAM SLOT COUNT
OUXBFIXC DS    H                       BASE USER FIXED FRAME COUNT
OUXBUIC  DS    H                       HIGHEST UNREF FRAME COUNT
OUXBSIBP DS    F                       BASE PAGE IN COUNT
OUXBSIBR DS    F                       BASE RESIDENECY TIME
OUXBSIBE DS    F                       BASE EXECUTION TIME
OUXBSIPR DS    H                       RECENT PAGE IN RATE
OUXBFMCT DS    H                       EFFECTIVE FMCT
         MEND
./ ADD NAME=BCBSPIT  0100-02135-02135-1224-00023-00023-00000-VBCMACS
         MACRO
         BCBSPIT
PITDSECT DSECT                     HASP PARTITION INFORMATION TBL DSECT
PITNEXT  DS    A                   ADDRESS OF NEXT PIT
PITFLAGS DS    0BL1                PIT FLAG BYTE
PITXBJCL EQU   X'80'               PIT AWAITING XBM JCL JOB
PITXBM   EQU   X'40'               PIT MANAGING BATCH MONITOR
PITSIVER EQU   X'10'               PIT AWAITING $SI VERIFICATION
PITSIERR EQU   X'08'               PIT START REJECTED
PITSJB   DS    A                   ADDRESS OF SJB FOR EXECUTING JOB
PITSTAT  DS    B                   LOGICAL PARTITION STATUS BYTE
PITHOLDA EQU   X'80'               PIT IS DRAINED ($P I)
PITHOLD1 EQU   X'40'               PIT IS DRAINED ($P IN)
PITBUSY  EQU   X'20'               PARTITION BUSY INDICATOR
PITHALTA EQU   X'10'               PIT IS HALTED ($Z I)
PITHALT1 EQU   X'08'               PIT IS HALTED ($Z IN)
PITINIT  EQU   X'04'               OS INITIATOR EXISTS FOR PIT
PITIDLE  EQU   X'02'               PIT 'IDLE' MESSAGE SENT
PITDUPL  EQU   X'01'               JOB WITH DUPLICATE JOBNAME EXISTS
         DS    X                   RESERVED FOR FUTURE USE
PITPATID DS    CL2                 LOGICAL PARTITION IDENTIFICATION
PITCLASS EQU   *                   LOGICAL PARTITION CLASSES
         MEND
./ ADD NAME=BCBSPPT  0100-02135-02135-1224-00026-00026-00000-VBCMACS
         MACRO
&NAME    BCBSPPT
         LCLC  &NAM
&NAM     SETC  'BCBSPPT'               DEFAULT DSECT NAME
         AIF   (T'&NAME EQ 'O').GENPPT USE DEFAULT
&NAM     SETC  '&NAME'
.GENPPT  ANOP
*
*     DEFINES ENTRY IN THE BCBS PROGRAM PROPERTIES TABLE
*
         DSECT
&NAM     DS    0XL12
PPTNAME  DS    CL8                     JOBNAME
PPTATTR  DS    0XL4                    ATTRIBUTES
*
PPTATTR1 DS    XL1                     ATTRIBUTE BYTE 1
PPTUNS   EQU   X'80'                   UNCONDITIONALLY NONSWAP
PPTASIS  EQU   X'40'                   LEAVE SWAP AS IS
PPTNODAY EQU   X'20'                   NONSWAP NIGHTS AND WEEKENDS
PPTWE    EQU   X'10'                   NONSWAP WEEKENDS
PPTPRTY  EQU   X'08'                   NONSWAP WE/NIGHTS/LOW DPRTY DAYS
*
PPTATTR2 DS    XL1                     ATTRIBUTE BYTE 1
PPTATTR3 DS    XL1                     ATTRIBUTE BYTE 1
PPTATTR4 DS    XL1                     ATTRIBUTE BYTE 1
         MEND
./ ADD NAME=BCBSPPTD 0100-02135-02135-1224-00011-00011-00000-VBCMACS
         MACRO
         BCBSPPTD &PGM,&OPTS
         LCLC  &DOPTS
&DOPTS   SETC  '0'
         AIF   (T'&OPTS EQ 'O').NOOPTS
&DOPTS   SETC  '&OPTS'
.NOOPTS  ANOP
         DC    CL8'&PGM'
         DC    AL1(&DOPTS),AL3(0)
*
         MEND
./ ADD NAME=BCBSPVT  0100-02135-02135-1224-00202-00202-00000-VBCMACS
         MACRO
         BCBSPVT
***********************************************************************
*              O/S PAGE VECTOR TABLE                                  *
***********************************************************************
PVT      DSECT ,
PVTFLAG1 DS    XL1             ALLFLAG BYTE
PVTPMSG  EQU   X'80'           ON, PREFERRED AREA EXPANSION MSG ISSUED
PVTBGMS  EQU   X'40'           WHEN =1, GETMAIN CANNOT BE CALLED
PVTSRBIU EQU   X'20'           WHEN 1, PVTRSRB IS IN USE.
PVTPCBLT EQU   X'10'           ON, THE INITIAL PCB POOL HAS BEEN BUILT
PVTAPREF EQU   X'08'           ON, LSQA AND FIXED PAGES TO PREFRD AREA
PVTLSI   EQU   X'04'           AFC LOW SYSEVENT ISSUED FLAG.
PVTRESV2 EQU   X'02'           RESERVED
PVTDUMP  EQU   X'01'           RSM RECOVERY ROUTINE DUMP FLAG
PVTFLAG2 DS    XL1             FLAG BYTE 2
PVTRSMGM EQU   X'80'           WHEN ON, RSM GETMAIN
PVTRCAFP EQU   X'40'           FOOTPRINT FOR IEAVFP2
PVTAFC   DS    H'0'            AVAILABLE FRAME COUNT
PVTAFCLO DS    H'0'            AVAILABLE FRAME COUNT LOW THRESHOLD.
PVTAFCOK DS    H'0'            AVAIL FRAME Q O.K. THRESHOLD
PVTPOOL  DS    H'0'            TOTAL REAL STRG FRAMES AVAIL FOR RSM USE
PVTPCBS  DS    AL1(0)          NUMBER OF PCBS TO BE CREATED AT IPL
PVTSSPIN DS    XL1'00'         SLAVE SPIN BYTE USED BY PAGE INVAL RTN
PVTPFTP  DS    A               APPARENT ORIGIN OF PAGE FRAME TABLE
PVTFPFN  DS    AL2             PFTE INDEX (RBN) TO FIRST PFTE IN PFT.
PVTLPFN  DS    AL2             RBN OF HIGHEST FRAME KNOWN TO RSM
PVTFVR   DS    AL2             RBN TO LO ADDR FRAME OF V=R AREA
PVTLVR   DS    AL2             RBN TO HI ADDR FRAME OF V=R AREA
PVTLPRIV DS    AL2             VBN TO 1ST PAGE OF PRIVATE AREA
PVTLCSA  DS    AL2             VBN TO THE FIRST PAGE OF CSA
PVTSQDC  DS    FL1'0'          SQA RSRV Q PREFERRED FRAME DEFICIT COUNT
PVTSRBNO DS    FL1'0'          NBR SRBS TO GET IF REPLENISH REQRD
PVTPCBNO DS    FL1'0'          NBR PCB'S TO GET IF REPLENISH REQRD
PVTPTLB  DS    XL1'0'          COMMUNICATION BYTE
PVTRSQA  DS    H'0'            NBR TIMES SQA RSRVD FRAME USED FOR ALLOC
PVTDFRS  DS    H'0'            NBR DEFERRED FRAME ALLOC REQUESTS
PVTPCBCT DS    H'0'            NBR PCB'S ON FREE QUEUE
PVTPCBLO DS    H'0'            LOW THRESHOLD OF PCB FREE QUEUE.
PVTVROOT DS    A(0)            VSA, 1ST ROOT PCB ON V=R RGN WAIT Q
PVTRSUS  DS    AL2(0)          RECONFIGURABLE STRG UNIT SIZE IN FRAMES
PVTSQVRC DS    FL1'0'          NBR SQA RESERVE QUEUE FRAMES V=R
PVTSQNPC DS    FL1'0'          NBR SQA RESERVE QUEUE FRAMES, NON-PREFRD
PVTREUS  DS    A(0)            @ REUSABLE RECLAIM OR FIRST REF PCB
PVTPRCA  DS    A(0)            ADDRESS OF CURRENT RECOVERY COMM AREA
PVTOROOT DS    A(0)            VSA OF THE FIRST VARY OFFLINE ROOT PCB
PVTLQSA  DS    AL2(0)          VBN, LOW PAGE PRESERVED FOR QUICKSTARTS
PVTHQSA  DS    AL2(0)          VBN, HI PAGE PRESERVED FOR QUICKSTARTS
PVTPCIWA DS    A(0)            @ OF FETCH PROTECTED WORKAREA
PVTSRBID DS    0F              ID OF CELL POOL FOR RSM SRBS
         DS    CL3'RSM'
         DS    X'01'
**
**             V-CONS FOR MAJOR RSM ENTRY POINTS
**
PVTPSIB  DS    V(IEAVPSIB)     EXTERNAL PSI BRANCH ENTRY
PVTPSINT DS    V(IEAVPSII)     INTERNAL PSI BRANCH ENTRY
PVTPSQA  DS    V(IEAVSQA2)     SQA, LSQA ALLOCATION
PVTPGFA  DS    V(IEAVGFA2)     GENERAL FRAME ALLOCATION
PVTPGFAD DS    V(IEAVGFD2)     GFA DEFER PROCESSOR
PVTPIOP  DS    V(IEAVPIO2)     PAGE I/O POST
PVTRSV4A DS    F'0'            RESERVED
PVTREP2  DS    V(IEAVREP2)     SRB REPLENICH ROUTINE
PVTPCB   DS    V(IEAVPCB2)     PCB MANAGER
PVTPFTE  DS    V(IEAVPFT2)     PFTE ENQ/DEQ
PVTPFP   DS    V(IEAVFP1)      FIND PAGE   LOCAL LOCK HOLDER E.P.
PVTPFP2  DS    V(IEAVFP2)      FIND PAGE   RSM ENTRY POINT
PVTPRFR  DS    V(IEAVRFR2)     REAL FRAME REPLACEMENT SELECT RTN
PVTPVRPO DS    V(IEAVEQRP)     V=R FORCE PAGE OUT
PVTPPIOI DS    V(IEAVPIOI)     PAGE I/O INITIATOR
PVTPVEQR DS    V(IEAVEQR2)     V=R ALLOCATION
PVTPVRLS DS    V(IEAVEQRF)     V=R RELEASE
PVTPVRIN DS    V(IEAVEQRI)     V=R INTERCEPT
PVTPVRC  DS    V(IEAVEQRC)     V=R COMPLETION
PVTPRCF  DS    V(IEAVRCF2)     STORAGE RECONFIGURATION INTERFACE
PVTPRCFI DS    V(IEAVRCFI)     RECONFIGURATION INTERCEPT ROUTINE
PVTPRCV  DS    V(IEAVRCV2)     FUNCTIONAL RECOVERY ROUTINE
PVTPSWIN DS    V(IEAVSWI2)     SWAP IN
PVTPSOUT DS    V(IEAVSOU2)     SWAP OUT
PVTPSWPC DS    V(IEAVSWPC)     SWAP OUT COMPLETION
PVTPINV  DS    V(IEAVINV2)     PAGE INVALIDATION
PVTPCSEG DS    V(IEAVCSE2)     CREATE SEGMENT EXTERNAL BRANCH ENTRY
PVTPCSGB DS    V(IEAVCSGB)     CREATE SEGMENT INTERNAL BRANCH ENTRY
PVTPDSEG DS    V(IEAVDSE2)     DESTROY SEGMENT
PVTPSRBP DS    V(IEAVSRBP)     SRB PURGE ROUTINE
PVTPITAS DS    V(IEAVITA2)     INITIALIZE ADDRESS SPACE
PVTPFXLD DS    V(IEAVFXL2)     PGFIX AND PGLOAD PROCESSOR
PVTPOUT  DS    V(IEAVOUT2)     PGOUT PROCESSOR
PVTPRELS DS    V(IEAVREL2)     PGRLSE PROCESSOR
PVTPFREE DS    V(IEAVFRE2)     PGFREE PROCESSOR
PVTPRELV DS    V(IEAVRELV)     FREEMAIN-RELEASE ENTRY POINT
PVTPRELF DS    V(IEAVRELF)     DEFERRED RELEASE ENTRY POINT
PVTPOPBR DS    V(IEAVOPBR)     PCB PROCESSOR IN IEAVPIOP
PVTPPREF DS    V(IEAVPRE2)     PREFERRED AREA STEAL ROUTINE
PVTPSWPP DS    V(IEAVSWPP)     SWAP-IN POST ROUTINE IN MODULE IEAVSWIN
PVTSWPIO DS    V(ILRSWAP)      ASM'S SWAP INTERFACE
PVTPAGIO DS    V(ILRPAGIO)     ASM'S PAGING I/O INTERFACE
PVTFRSLT DS    V(ILRFRSLT)     ASM'S FREE SLOT ROUTINE
PVTPRSET DS    V(IEAVRSET)     PCFLIH'S RESET ROUTINE
**
**             EVENT COUNTERS FOR SMF AND TUNING PURPOSES
**          ALL FIELDS EXCEPT PVTCFMCT ARE WRAP-AROUND COUNTS.
**
PVTNPIN  DS    F'0'            PAGES PAGED IN, EXCL SWAPIN, VIO
PVTNPOUT DS    F'0'            PAGES PAGED OUT, EXCL SWAPOUT, VIO
PVTVAMI  DS    F'0'            NUMBER OF VIO PAGE-INS, EXCLUDING SWAP
PVTVAMO  DS    F'0'            NUMBER OF VIO PAGE-OUTS, EXCLUDING SWAP
PVTVAMR  DS    F'0'            NUMBER OF VIO RECLAIMS
PVTSPIN  DS    F'0'            NUMBER OF PAGES SWAPPED IN
PVTSPOUT DS    F'0'            NUMBER OF PAGES SWAPPED OUT
PVTNPREC DS    F'0'            NBR PAGES RECLAIMED, EXCL SWAP RCLMS
PVTNSWPS DS    F'0'            NUMBER OF SUCCESSFUL SWAP-INS
PVTCAIN  DS    F'0'            NUMBER OF COMMON AREA PAGE-INS
PVTCAOUT DS    F'0'            NUMBER OF COMMON AREA PAGE-OUTS
PVTCAREC DS    F'0'            NUMBER OF RECLAIMS OF COMMON AREA PAGES
PVTSPREC DS    F'0'            NBR PVT AREA PAGES RCLMD ACROSS SWAP
PVTCFMCT DS    H'0'            NBR FRAMES ASGND TO CSA AND LPA
PVTSPFR  DS    H'0'            NUMBER OF FRAMES FREED BY SWAP-OUT
**
**       THIS SECTION OF THE PVT CONTAINS ANCHORS FOR PFTE QUEUES
**
PVTQS    DS    0F              BEGIN ORDERED BLOCK OF PFTEQ ANCHORS
PVTAFQF  DS    AL2(0)          RBN OF FIRST PFTE ON AVAILABLE FRAME Q
PVTAFQL  DS    AL2(0)          RBN OF LAST PFTE ON AVAILABLE FRAME Q
PVTRSRVF DS    AL2(0)          RBN OF FIRST PFTE ON SQA RESERVED Q
PVTRSRVL DS    AL2(0)          RBN OF LAST PFTE ON SQA RESERVED Q
PVTCFQF  DS    AL2(0)          RBN OF 1ST PFTE ON CMN FRAME Q (CSA, LPA)
PVTCFQL  DS    AL2(0)          RBN OF LAST PFTE ON COMMON FRAME Q
PVTSQAQF DS    AL2(0)          RBN OF FIRST PFTE ON SQA FRAME Q
PVTSQAQL DS    AL2(0)          RBN OF LAST PFTE ON SQA FRAME Q
PVTRSBQF DS    AL2(0)          RBN OF FIRST PFTE ON RSB FRAME Q
PVTRSBQL DS    AL2(0)          RBN OF LAST PFTE ON RSB FRAME Q
PVTPFTQR DS    5F              RESERVED FOR ADDITIONAL PFTE
**
**      FOLLOWING ARE THE RSM WORK/SAVE AREA DEFINITIONS
**
PVTWSAX  DS    0F              BEGINING OF THE WORK SAVE AREA
PVTWSA1  DS    18F             WORK/SAVE AREA
PVTWSA2  DS    18F             WORK/SAVE AREA
PVTWSA3  DS    18F             WORK/SAVE AREA
PVTWSA4  DS    18F             WORK/SAVE AREA
PVTWSA5  DS    18F             WORK/SAVE AREA
PVTWSA6  DS    18F             WORK/SAVE AREA
PVTWSA7  DS    18F             WORK/SAVE AREA
PVTWSA8  DS    22F             WORK/SAVE AREA
PVTWSA9  DS    20F             WORK/SAVE AREA
PVTWSA10 DS    20F             WORK/SAVE AREA
PVTWSA11 DS    18F             WORK/SAVE AREA
PVTWSA12 DS    18F             WORK/SAVE AREA
PVTWSA13 DS    18F             WORK/SAVE AREA
PVTWSA14 DS    18F             WORK/SAVE AREA
PVTWSA15 DS    18F             WORK/SAVE AREA
PVTWSA16 DS    18F             WORK/SAVE AREA
PVTWSA17 DS    18F             WORK/SAVE AREA
PVTWSA18 DS    18F             WORK/SAVE AREA
PVTSAVE  DS    18F             SAVE AREA FOR CALLING OTHER PROGRAMS
PVTACA   DS    6F              ASM CONTROL AREA (ACA)
PVTRSV4D DS    F'0'            RESERVED
PVTSRBS  DS    FL1'0'          NUMBER OF SRB'S TO BE BUILT INITIALLY.
PVTRESV5 DS    CL3             RESERVED
PVTRSRB  DS    0F              SRB TO SCHEDULE REPLENISH
         DS    CL44            RESERVED SRB USED TO SCHED IEAVREP1
PVTPERFX DS    H'0'            % OF AVAILABLE FRAMES THAT MAY BE FIXED
PVTMAXFX DS    H'0'            FIXED FRAME THRESHOLD.
PVTCNTRS DS    0D              PVT FIX COUNTERS USED BY PAGE FIX INSTR
PVTPEROK DS    H'0'            A LESSER PERCENTAGE THAN PVTPERFX.
PVTFIXOK DS    H'0'            FIXED FRAMES ACCEPTABLE FOR NORMAL PROC
PVTDEFFX DS    H'0'            PAGE FIX REQUESTS DFRD IF AFQ=PVTDEFFX
PVTCNTFX DS    H'0'            TOTAL SYSTEM COUNT OF FIXED FRAMES.
PVTSQAFX DS    H'0'            NUMBER FRAMES ALLOCATED TO SQA
PVTCOMFX DS    H'0'            CSA FIX FRAME COUNT
PVTCHUIC DS    H'0'            HIGHEST UIC FOR CSA FRAMES
PVTLPAFC DS    H'0'            PLPA FRAMES ALLOCATED
PVTLPAI  DS    F'0'            PLPA PAGES PAGED IN
PVTLPAR  DS    F'0'            PLPA PAGES RECLAIMED
PVTLSQAF DS    H'0'            NUMBER OF LSQA FRAMES.
PVTLPAFX DS    H'0'            NUMBER OF LPA TCB-FIXED FRAMES
**
**       THIS SECTION OF THE PVT CONTAINS ANCHORS FOR PCB QUEUES.
**
PVTPCBQS DS    0F              BEGIN ORDERED BLOCK OF PCB QUEUE ANCHORS
PVTPCBQR DS    4F              RESERVED FOR ADDITIONAL PCB QUEUEANCHORS
PVTFPCBF DS    A(0)            VSA OF FIRST PCB ON THE FREE QUEUE
PVTFPCBL DS    A(0)            VSA OF LAST PCB ON FREE QUEUE
PVTGFADF DS    A(0)            VSA OF FIRST PCB ON GFA DFRD ALLOC Q
PVTGFADL DS    A(0)            VSA OF LAST PCB ON GFA DFRD ALLOC Q
PVTCIOQF DS    A(0)            VSA OF FIRST PCB ON COMMON I/O QUEUE
PVTCIOQL DS    A(0)            VSA OF LAST PCB ON COMMON I/O QUEUE
**
**             V-CONS FOR MAJOR RSM ENTRY POINTS (CONTINUED)
**
PVTPRSB  DS    V(IEAVPRSB)     REAL STORAGE BUFFER ALLOCATION
PVTPPSIX DS    V(IEAVPSIX)     R-FORM PGFIX, SAVE REGS
PVTPPSIY DS    V(IEAVPSIY)     L-FORM PGFIX, SAVE REGS
PVTPPSIZ DS    V(IEAVPSIZ)     R-FORM PGFIX, REGS NOT SAVED
PVTPPSIF DS    V(IEAVPSIF)     PGFREE, SAVE REGS
PVTVCONS DS    6F              RESERVED FOR ADDITIONAL VCONS
PVTMVCLC DS    F'0'            PAGES MOVED TO ALLOC PREF FRAMES
PVTSPCCA DS    AL4(0)          PCCA ADDR OF PROCESSOR BEING SIGNALLED
PVTEND   EQU   *               END OF PVT
PVTLEN   EQU   *-PVT           LENGTH OF PVT
         MEND
./ ADD NAME=BCBSRCT  0100-02135-02135-1224-00065-00065-00000-VBCMACS
         MACRO
         BCBSRCT
*
***********************************************************************
*
*        MVS RESOURCE CONTROL TABLE (RCT) DEFINITION
*                    - 136 BYTES -
***********************************************************************
*
RCT      DSECT ,
RCTRCT   DS    CL4                     ACRONYM IN EBCDIC "RCT "
*              RCT CONSTANTS
RCCUICTL DS    XL2                     UIC THRESHOLD LOW
RCCUICTH DS    XL2                     UIC HIGH THRESHOLD
RCCCPUTL DS    XL2                     CPU LOW THRESHOLD
RCCCPUTH DS    XL2                     CPU HIGH THRESHOLD
RCCPTRTL DS    XL2                     PAGING RATE LOW THRESHOLD
RCCPTRTH DS    XL2                     PAGING RATE HIGH THRESHOLD
RCCASMTL DS    XL2                     ASM QUEUED REQUEST LOW THRESHOLD
RCCASMTH DS    XL2                     ASM QUEUED REQUEST HIGH THRESHOL
RCCDPRTL DS    XL2                     DEMAND PAGE RATE LOW THRESHOLD
RCCDPRTH DS    XL2                     DEMAND PAGE RATE HIGH THRESHOLD
RCCCPUPL DS    XL2                     CPU UTIL LOW THRESH W/DEMAND PAG
RCCCPUPH DS    XL2                     CPU UTIL HIGH THRESH W/DEMAND PA
RCCMSPTL DS    XL2                     PAGE DELAY LOW THRESH W/DEMAND P
RCCMSPTH DS    XL2                     PAGE DELAY HIGH THRESH W/DEMAND
RCCPDLTL DS    XL2                     PAGE DELAY LOW THRES (MILLISEC)
RCCPDLTH DS    XL2                     PAGE DELAY HIGH THRESHOLD
RCCTOTUT DS    XL2                     AVG DEFERRED IO UTIL THRESH
RCCLCHUT DS    XL2                     LCH DEFERRED UTIL THRESH
RCCLCHRR DS    XL2                     LCH REQ RATE THRESHOLD
RCCRUAM  DS    XL2                     MULTIPLIER FOR OLD READY USER AV
RCCRUCM  DS    XL2                     MULT FOR ACCUM READY USER AVG
RCCWSRM  DS    XL2                     MULT FOR OLD WEIGHTED SVCE RATE
RCCSRCM  DS    XL2                     MULT FOR ACCUM SVC RATE
RCCDCITL DS    XL2                     CONTENTION INDEX THRESH FOR EXCH
RCCETOLD DS    XL2                     MULT FOR OLD E.T. AVG
RCCETCUR DS    XL2                     MULT FOR NEW E.T. AVG
         DS    XL4                     RESERVED
*              RCT VARIABLES
RCVCTMC  DS    XL2                     SAMPLE INTERVALS COUNT
RCVUICA  DS    XL2                     UIC AVERAGE
RCVCPUA  DS    XL2                     CPU USAGE AVERAGE
RCVAVQC  DS    XL2                     AVQ LOW COUNT
RCVAFQA  DS    XL2                     AVAILABLE FRAME AVG
RCVASMQA DS    XL2                     ASM QUEUE LENGTH AVERAGE
RCVPTR   DS    XL2                     PAGING RATE
RCVDPR   DS    XL2                     DEMAND PAGING RATE
RCVPAGRT DS    XL2                     TOTAL PAGING RATE
RCVMSPP  DS    XL2                     PAGE DELAY TIME (MILLISEC)
RCVUICC  DS    XL4                     UIC ACCUMULATOR
RCVCPUC  DS    XL4                     CPU USAGE ACCUMULATOR
RCVAVQP  DS    XL4                     AVQ LOW COUNT SAVE AREA
RCVAFQC  DS    XL4                     AVAILABLE FRAME CUMULATOR
RCVASMQ  DS    XL4                     ASM QUEUE LENGTH ACCUMULATOR
RCVBPTCT DS    XL4                     BASE PAGE FAULT COUNT
RCVBDPCT DS    XL4                     BASE DEMAND PAGE COUNT
RCVBPPCT DS    XL4                     BASE TOTAL PAGE COUNT
RCVBPTTM DS    XL4                     BASE PAGE FAULT TIME
RCVTOTDF DS    XL2                     AVERAGE DEFERRED IO UTILIZATION
         DS    XL2                     RESERVED
RCVTAPAD DS    XL4                     LAST ALLOCATED TAPE
         DS    XL12                    RESERVED
RCTEND   EQU   *                       END OF RCT
         MEND
./ ADD NAME=BCBSRMCT 0100-02135-02135-1224-00088-00088-00000-VBCMACS
         MACRO
         BCBSRMCT
*
***********************************************************************
*                     *** RMCT - SRM CONTROL TABLE ***
*
* ASSEMBLED INTO NUCLEUS MODULE IRARMCNS.
* POINTED TO BY CVTOPCTP IN CVT.
* SIZE 272 BYTES
*
***********************************************************************
*
RMCT     DSECT ,                       SRM CONTROL TABLE DEFINITION
RMCTNAME DS    CL4                     BLOCK ID "RMCT"
RMCTCCT  DS    F                       @ CPU MGMT CONTROL TABLE - CCT
RMCTICT  DS    F                       @ I/O MGMT CONTROL TABLE - ICT
RMCTMCT  DS    F                       @ STORAGE MGMT CONTROL TABLE - M
RMCTRMPT DS    F                       @ CTL ALGORITHM PARAMETER TABLE
RMCTRMCA DS    F                       @ CTL ALGORITHM CONTROL AREA - R
RMCTWMST DS    F                       @ WLM SPECIFICATION TABLE
RMCTRLCT DS    F                       @ LOGICAL CHANNEL MGMT TABLE - R
RMCTRMSA DS    F                       @ RESOURCES MANAGER SAVE AREA
RMCTRMPD DS    F                       @ RESOURCES MANAGER PERF DATA
RMCTRMEX DS    F                       @ ROUTINE EXITING VECTOR TABLE
RMCTRMSB DS    F                       @ SUBRTNE CALLING VECTOR TABLE
RMCTEPPA DS    F                       @ PRTL ANALYSIS ENTRY TABLE
RMCTEPDT DS    F                       @ USER ACTION ENTRY TABLE
RMCTEPAT DS    F                       @ ALGORITHM ENTRY TABLE
RMCTLSCT DS    F                       @ LOGICAL SWAP TABLE
RMCTADJC DS    F                       @ CPU RATE ADJUSTMENT
RMCTITT  DS    F                       @ EVENT CHARACTERISTICS TABLE
RMCTEPET DS    F                       @ EVENT ROUTING VECTOR TABLE
RMCTFLTM DS    F                       @ TIME OF DAY DEPENDENT TABLE
RMCTEPPR DS    F                       @ PROCESS RATE DEPENDENT TABLE
RMCTWAST DS    F                       WMST FOR SET IPS
RMCTWAMT DS    F                       @ WAR MEASUREMENT TABLE
RMCTTMQE DS    F                       @ SCHED RTNE QUEUE HEAD
RMCTAQCT DS    F                       @ ACTION QUEUE MEMBER COUNT
RMCTAQHD DS    F                       @ ACTION QUEUE FORWARD POINTER
RMCTWTQE DS    F                       @ WAIT QUEUE HEADER
RMCTOTQE DS    F                       @ OUT QUEUE HEADER
RMCTINQE DS    F                       @ IN QUEUE HEADER
RMCTEPBG DS    F                       @ EPAT
RMCTTBS  DS    F                       SRM TIME OF DAY BASE
RMCTTOD  DS    F                       CURRENT TIME OF DAY
RMCTTOC  DS    2F                      TIME OF CENTURY
RMCTALA  DS    F                       ALG REQUEST ACCUMULATOR
RMCTALR  DS    F                       IMMED ALG REQUEST ACCUMUL
RMCTRQSM DS    F                       REQ SERVICE WORK AREA
RMCTFLGS DS    0XL4                    FLAGS
RMCTFLG1 DS    XL2                     PROCESSING CONTROL
RMCTTAPE DS    XL1                     TAPE SELECTION FLAG
RMCTFLG2 DS    XL1                     PROCESSING FLAGS
RMCTTELM DS    F                       RSRC MANAGER TIMING ELEMENT
RMCTCPID DS    F                       RSRC MANAGER CELL POOL ID
RMCTTOC1 DS    2F                      TOD CLOCK READ AREA
RMCTOUCB DS    F                       PREASSEMBLED MODEL OUCB
RMCTOUXB DS    F                       INTERPOSED DUMMY OUXB
RMCTSRBT DS    F                       PREBUILT SRB TABLE
RMCTDMDT DS    F                       @ DOMAIN TABLE
RMCTDMDE DS    F                       @ LAST DMDT ENTRY
RMCTDMNC DS    XL2                     NUMBER OF DOMAINS
RMCTCVTA DS    XL2                     APG VALUE FROM SYS00
RMCTTSPT DS    F                       FIRST TS PATTERN ENT
RMCTTSPE DS    F                       LAST TS PATTERN ENTRY
RMCTTSGT DS    F                       FIRST TSGRP TBL ENTRY
RMCTTSGE DS    F                       LAST TSGRP TBL ENTRY
RMCTRTVT DS    F                       FIRST ROT VECTOR ENT
RMCTROTT DS    F                       FIRST ROT TABLE NTRY
RMCTROTE DS    F                       LAST ROT TABLE ENTRY
RMCTICST DS    F                       ICSC TABLE ADDRESS
RMCTCPMP DS    F                       CPU ADJUSTING FACTOR
RMCTRCT  DS    F                       @ RCT
RMCTBRQE DS    0XL8                    BASIC REPORTING AVAIL Q
RMCTBRQH DS    F                       HEADER
RMCTBRQC DS    F                       USE COUNT
RMCTERQE DS    0XL8                    EXTENDED REPORTING AVAILQ
RMCTERQH DS    F                       HEADER
RMCTERQC DS    F                       USE COUNT
RMCTUPDQ DS    0XL8                    REPORTING UPDATE QUE
RMCTUPQH DS    F                       HEADER
RMCTUPQC DS    F                       USE COUNT
RMCTTRAD DS    F                       XACN REPORTING QUEUE FIRST PAGE
RMCTTRPC DS    F                       XACN RPTG Q PAGE CNT
RMCTICSP DS    F                       XACN DESCRIPTION TABLE
RMCTRSPL DS    F                       RSPL ADDRESS
RMCTEND  EQU   *                       END OF RMCT
         MEND
./ ADD NAME=BCBSSJB  0100-02135-02135-1224-00192-00192-00000-VBCMACS
         MACRO
         BCBSSJB
SJBDSECT DSECT
SJBSAVE  DS    18F
*
*        TSO CANCEL/STATUS SERVICE FIELDS
*
         ORG   SJBSAVE+8
SJBTCMND DS    0D                  FIRST OF CANCEL COMMAND
SJBTAREA DS    F                   WORK AREA GOTTEN
SJBTCCE  DS    F                   ADDRESS OF CCE
SJBTJOBN DS    CL8                 JOB NAME
SJBTJOBI DS    F                   JOB ID OR ZERO ( BINARY FORM )
SJBTDIMP DS    H                   SIZE OF EXTENTION
SJBTDIMR DS    H                   SIZE USED OR REQUIRED
SJBTFUNC DS    H                   REQUESTED FUNCTION
SJBTRETB DS    H                   SSOBRETN CODE
SJBTRETR DS    H                   R15 RETURN CODE
SJBTF    DS    C                   FLAGS
SJBTFCAN EQU   X'80'               SVC 34 REQUIRED TO CANCEL
SJBTFLGS DS    C                   FLAGS FROM SSOB
SJBTULEN DS    C                   USER ID LENGTH
         ORG
SJBID    DS    CL4'SJB'            SJB IDENTIFIER
SJBLENG  DS    AL2(*-*)            CONTROL BLOCK LENGTH
SJBFLG1  DS    X                   FIRST FLAG BYTE ---
SJB1XBMC EQU   X'80'               XBM CONTINUATION
SJB1SJID EQU   X'40'               SELECT JOB BY ID - SJBJOBID
SJB1NORE EQU   X'20'               DISALLOW JOB RE-ENQUEUE
SJB1XBM  EQU   X'10'               XEQ BATCH MONITOR OPERATING
SJB1XBWT EQU   X'08'               BATCH MONITOR AWAITS JOB
SJB1EJOB EQU   X'04'               HASP-RESTART JOB ($E JOB)
SJB1XBMR EQU   X'02'               XBM TERMINATING
SJB1XBMJ EQU   X'01'               NORMAL JOB CAUSED XBM TERMINATION
SJBFLG2  DS    X                   SECOND FLAG BYTE ---
SJB2PNIT EQU   X'80'               STOP THE INITIATOR
SJB2JNFD EQU   X'40'               JOB-BY NUMBER NOT FOUND
SJB2EOM  EQU   X'20'               END-OF-MEMORY DETECTED
SJB2CNCL EQU   X'10'               CANCEL AFTER SWA CREATE
SJB2CONV EQU   X'08'               SJB CREATED FOR CONVERTER
SJB2HOLD EQU   X'04'               HOLD JOB AFTER RE-QUEUE
SJB2JNL  EQU   X'02'               JOB IS JOURNALLED
SJB2INIT EQU   X'01'               INITIATOR FLAG
SJBSSIB  DS    A                   POINTER TO SSIB
SJBSJB   DS    A                   SJB CHAIN FROM $SVHAVT
SJBSDB   DS    A                   POINTER TO CHAIN OF SDBS
SJBJKEY  DS    A                   HDBDSKEY FOR THIS JOB
SJBJCT   DS    A                   ADDRESS OF JCT FOR JOB
SJBJCTRK DS    F                   JCT TRACK ADDRESS
SJBJQE   DS    A                   ADDRESS OF JQE IN HASP
SJBJQOFF DS    F                   OFFSET OF JQE WITHIN JOB QUEUE
SJBSSNM  DS    CL4                 SUBSYSTEM ID OF OWNER
SJBIOT   DS    A                   ADR OF FIRST REGULAR IOT
SJBSPIOT DS    A                   ADR OF FIRST SPIN IOT
SJBOCT   DS    A                   ADR OF OUTPUT CONTROL TABLE
SJBSECB  DS    0A                  STOP-ECB ADR FOR CREATED-ID JOB
SJBPIT   DS    A                   ADDRESS OF PIT IN HASP
SJBSTQE  DS    3F                  EXECUTION TIMER QUEUE ELEMENT
SJBXSTIM DS    F                   TIME ESTIMATE EXCESSION AMOUNT
SJBESTLN DS    F                   PRINT EXCESSION LIMIT
SJBESTPU DS    F                   PUNCH EXCESSION LIMIT
SJBXBSDB DS    A                   ADDRESS OF XBM INPUT SDB
SJBXBJNM DS    CL8                 NAME OF BATCH DRIVER JOB
SJBCSCB  DS    A                   ADDRESS OF CSCB
SJBECB   DS    A                   ECB FOR SJBIOB & JOB SELECT
SJBECBP  DS    A                   POINTER TO SJB'S ECB
SJBASCBP DS    A                   POINTER TO RELATED ASCB
SJBERRET DS    A                   POINTER TO ERROR RETURN
SJBPATID DS    H                   EBCDIC PIT ID
SJBPRIO  DS    X                   HASP EXECUTION SELECTION PRTY
         DS    C                   RESERVED FOR FUTURE USE
SJBXQFN1 DS    H                   HASPXEQ FUNCTION INDICATOR
SJBFLG3  DS    B                   TERMINATION FLAG ONE ---
SJB3CLS  EQU   X'80'               CLOSE ALL SUBSYSTEM DATA SETS
SJB3FSDB EQU   X'40'               FREE ALL SDBS
SJB3TERM EQU   X'20'               TERMINATE THE JOB
SJB3PPOU EQU   X'10'               PURGE PARTIAL OUTPUT
SJB3RSV4 EQU   X'08'               RESERVED
SJB3CKPT EQU   X'04'               WRITE IOTS, JCT
SJB3FIOT EQU   X'02'               FREE ALL IOTS
SJB3FJCT EQU   X'01'               FREE JCT
SJBFLG4  DS    B                   TERMINATION FLAG TWO ---
SJB4MEND EQU   X'80'               MSG 'ENDED'
SJB4MTRM EQU   X'40'               MSG 'TERMINATED'
SJB4MREQ EQU   X'20'               MSG 'RE-ENQUEUED'
SJB4MREX EQU   X'10'               MSG 'QUEUED FOR RE-EXECUTION'
SJB4FSJB EQU   X'08'               FREE THE SJB
SJB4MRQH EQU   X'04'               MSG 'RE-ENQUEUED AND HELD'
SJB4RSV6 EQU   X'02'               RESERVED
SJB4RSV7 EQU   X'01'               RESERVED
SJBQUEUE DS    A                   ADDRESS OF $SVJ QUEUE HEADER
SJBXQCHN DS    A                   HASPXEQ CHAINING WORD
         DS    F                   RESERVED
SJBLOCKH DS    0D                  SJB LOCKING DOUBLEWORD
SJBTCB   DS    A                   LOCK-HOLDING TCB ADDRESS
SJBNEXTL DS    A                   0 - SJB IS UNLOCKED
*                                  - - SJB LOCKED, NO WAIT CHAIN
*                                  + - SJB LOCKED, ADR OF WAITER
SJBLOGQ  DS    A                   HASP JOB LOG MESSAGE QUEUE
SJBPSOP  DS    A                   PROCESS SYSOUT CONTROL BLOCK
SJBJCLAS DS    C                   HASP JOB CLASS
         DS    C                   RESERVED
SJBASID  DS    H                   USERS ASID
SJBJOBID DS    CL8'JOBNNNNN'       JOB IDENTIFIER - EBCDIC, NUMERIC
SJBJOBNM DS    CL8'JOBNAMEX'       JOBNAME FROM JOB CARD
SJBFLOW  DS    0F                  FLOW BYTES FOR ABNORMAL PROCESSING
SJBTFLOW DS    X'0'                SJB HAS BEEN ON QUEUE INDICATOR
SJBTFFG  DS    X'0'                TSO PROCESSING FLOW
SJBTFFGM EQU   X'80'               ECB STATUS MEANINGFULL
SJBTFFGG EQU   X'40'               PSO GOTTEN THIS ENTRY TO PSO
SJBTFFGP EQU   X'20'               PSO PURGE REQUESTED
SJBTFFGC EQU   X'10'               CANCEL/STATUS EOT FUNCTION GOING
BCSJBFLG DS    C                       JOB TERMINATION FLAGS     BCV001
         DS    X                   RESERVED
SJBTCHN  DS    A                   TSU CHAIN FIELD
         DS    F                   RESERVED
SJBDBLWK DS    D                   DOUBLEWORD WORKAREA
*
*              INPUT/OUTPUT BLOCK IN SJB
*
         DS    0D                  DOUBLE WORD ALIGNMENT
SJBIOB   DS    0XL(40+4*8)         IOB FOR JOB CONTROL BLOCKS
SJBIFLG1 DS    X                   IOB - FLAG BYTE
         DS    X
SJBISNS0 DS    X                   IOB - FIRST SENSE BYTE
SJBISNS1 DS    X                   IOB - SECOND SENSE BYTE
SJBIECB  DS    0A                  IOB - EVENT CONTROL BLOCK ADR
SJBICMP  DS    X                   IOB - COMPLETION CODE
         DS    AL3(SJBECB)         IOB - ECB POINTER
SJBISIO  DS    X                   IOB - SIO CONDITION CODE
SJBICSW  DS    0XL7                IOB - CHANNEL STATUS WORD
SJBICSWA DS    AL3                 IOB - CSW ADDRESS PORTION
SJBIST0  DS    X                   IOB - FIRST STATUS BYTE
SJBIST1  DS    X                   IOB - SECOND STATUS BYTE
SJBILEN  DS    H                   IOB - RESIDUAL LENGTH
SJBIST   DS    A(SJBCCW1)          IOB - CHANNEL PROGRAN ADDRESS
SJBIDCB  DS    A(SJBDCB)           IOB - DCB ADDRESS
SJBIRS   DS    A                   IOB - RESTART CHANNEL PROGRAM ADR
         DS    A
SJBIFDAD DS    D                   IOB - FULL DISK ADDRESS
SJBCCW1  CCW   X'03',*+5,X'60',1   SET SECTOR/NO-OP
SJBCCW2  CCW   X'31',SJBIFDAD+3,X'60',5  SEARCH ID EQUAL
SJBCCW3  CCW   X'08',*-8,0,1       TIC *-8
SJBCCW4  CCW   X'05',0,0,*-*       WRITE/READ DATA
*
*              ACB FOR HASP JOB LOG DATASET
*
SJBLACB  ACB   MACRF=(ADR,SEQ,OUT)
*
*              DEB FOR HASP JOB LOG DATASET
*
SJBLDEB  DC    7A(0),A(SJBLACB)
*
*              RPL FOR HASP JOB LOG DATASET
*
SJBLRPL  RPL   ACB=SJBLACB
*
*              ACB FOR INTERNAL TEXT DATASET
*
SJBIACB  ACB   MACRF=(ADR,SEQ,IN)
*
*              DEB FOR INTERNAL TEXT DATASET
*
SJBIDEB  DC    7A(0),A(SJBIACB)
*
*              ACB FOR SYSTEM MESSAGES DATASET
*
SJBMACB  ACB   MACRF=(ADR,SEQ,OUT)
*
*              DEB FOR SYSTEM MESSAGES DATASET
*
SJBMDEB  DC    7A(0),A(SJBMACB)
*
*              ACB FOR JOURNAL DATASET
*
SJBJACB  ACB   MACRF=(ADR,SEQ,DIR,IN,OUT)
*
*              DEB FOR JOURNAL DATASET
*
SJBJDEB  DC    7A(0),A(SJBJACB)
*
*              DCB FOR SPOOL DATASET
*
         ORG   *-40
SJBDCB   DS    0F                  SYS1.HASPACE DATA CONTROL BLOCK
         ORG   *+40
         DS    3A
*
*              DEB FOR SPOOL DATASET
*
SJBDEB   EQU   *                   SYS1.HASPACE DATA EXTENT BLOCK
         MEND
./ ADD NAME=BCE      0100-02135-02135-1224-00025-00025-00000-VBCMACS
         MACRO
&LABEL   BCE   &BRHADDR,&BYTE,&CHAR,&NUMBER
         LCLA  &AL1,&AL2,&AL3
         LCLC  &IMMED
         AIF   (K'&BRHADDR EQ 0 OR K'&BYTE EQ 0 OR K'&CHAR EQ 0).ERROR
         AGO   .OK
.ERROR   ANOP
         MNOTE 9,'OMITTED OPERAND - MACRO GENERATION TERMINATED'
         MEXIT
.OK      ANOP
&IMMED   SETC  '&CHAR'
&LABEL   CLI   &BYTE,&IMMED
         BE    &BRHADDR
         AIF   (K'&NUMBER EQ 0).MACEND
&AL2     SETA  &NUMBER
.LOOP    ANOP
&AL1     SETA  &AL1+1
         CLI   &BYTE+&AL1,&IMMED
         BE    &BRHADDR
&AL2     SETA  &AL2-1
         AIF   (&AL2 EQ 0).MACEND
         AGO   .LOOP
.MACEND  ANOP
&AL1     SETA  0
         MEND
./ ADD NAME=BCFRPOOL 0100-02135-02135-1224-00036-00036-00000-VBCMACS
         MACRO
&NAME    BCFRPOOL &PAR,&AREA,&DUMMY=
.* EXTENDED FREEPOOL MACRO - NO LIMIT ON POOLSIZE TO BE FREED
         LCLC  &LBL
.*         RELEASE 23 DELETIONS/CHANGES
.*         RELEASE 22 DELETIONS/CHANGES
.*         RELEASE 21 DELETIONS/CHANGES
.*    001800-002800
.*         MODIFIED JAQ 2/24/82 - LARGE BUFFER ALLOCATIONS CAUSED
.*         THE CALCULATION OF THE AREA TO BE FREED TO GO NEGATIVE
         AIF   ('&PAR' EQ '').E1
&LBL     SETC  'IHB&SYSNDX'
.CONTGEN ANOP
&NAME    IHBINNRA &PAR
         L     15,20(0,1)              LOAD BUFCB ADDRESS
         SR    14,14                   CLEAR REGISTER
         IC    14,5(0,15)              LOAD COUNT
         ST    14,&LBL                 SAVE                    JAQ
         ICM   14,B'0011',6(15)        LOAD LENGTH             JAQ
         LR    15,14                   PLACE IN ODD REGISTER   JAQ
         SR    14,14                   CLEAR EVEN REG          JAQ
         M     14,&LBL                 MULT BY COUNT           JAQ
         LR    14,15                   SAVE AREA LENGTH        JAQ
         L     15,20(0,1)              RESET BUFCB ADDRESS     JAQ
         OI    23(1),1                 INDICATE NO BUFCB ADDR
         LA    0,8(0,14)               ACCOUNT FOR BCB
         TM    4(15),X'40'             IS BUFCB 16 BYTES       @ZA19719
         BNO   *+8                     BRANCH IF BUFCB = 8 BYTES
         LA    0,16(0,14)              ADJUST SIZE PLUS 16
         LA    1,0(0,15)               LOAD AREA ADDRESS
         SVC   10                      ISSUE FREEMAIN SVC
         B     &LBL+4                , BRANCH AROUND DATA AREA
&LBL     DC    F'0'
.DONE    MEXIT
.E1      IHBERMAC 01
         MEND
./ ADD NAME=BCGETRTN 0100-02135-02135-1224-00049-00049-00000-VBCMACS
         MACRO
&TAG     BCGETRTN &NAME=,&ADDR=,&LENG=,&SP=228
         AIF   (T'&NAME NE 'O').LOADIT
         AIF   (T'&ADDR EQ 'O').NOADDR
         AIF   (T'&LENG NE 'O').GOTADR
         AGO   .NOLENG
.GOTADR  ANOP
&TAG     L     R0,=A(&ADDR)            @ ROUTINE TO BE SCHEDULED
         L     R1,=A(&LENG)            LENGTH OF ROUTINE
         AGO   .SETUP
.LOADIT  AIF   (T'&LENG NE 'O').INVLENG
&TAG     LA    R0,=CL8'&NAME'          @ E.P. NAME
         MVC   SRBRTNAM,=CL8'&NAME'    ROUTINE NAME TO SRB
         LOAD  EPLOC=(0)               LOAD THE MODULE
         SLL   R1,3                    COMPUTE LENGTH IN BYTES
.SETUP   ST    R0,SRBEP                @ SRB ROUTINE TO SRB
         L     R15,16                  GET CVT ADDRESS
         CLC   SRBEP+1(3),129(R15)     IS ROUTINE BELOW PVT AREA
         BNH   BGR&SYSNDX              YES, NO MOVE REQUIRED
         CLC   SRBEP+1(3),417(R15)     ROUTINE ABOVE PRIVATE AREA
         BNL   BGR&SYSNDX              YES, NO MOVE REQUIRED
         LR    R0,R1                   COPY LENGTH FOR GETMAIN
         ICM   R0,8,=AL1(&SP)          SET SUBPOOL ID
         ST    R0,SRBRTNSL             SAVE LENGTH AND SUBPOOL ID
         BAL   R1,*+4                  INDICATE GETMAIN
         SVC   10                      GETMAIN CSA STRG FOR ROUTINE
         L     R14,SRBEP               GET LOADED MODULE ADDR
         ST    R1,SRBEP                POINT SRB TO GOTTEN STORAGE
         LR    R0,R1                   COPY STRG ADDR FOR MOVE
         L     R1,SRBRTNSL             PICK UP LENGTH TO MOVE
         LA    R1,0(R1)                CLEAR HI-ORDER BYTE
         LR    R15,R1                  SENDING LENGTH FOR MOVE
         MVCL  R0,R14                  MOVE ROUTINE TO GOTTEN STRG
         AIF   (T'&NAME EQ 'O').END
         CLI   SRBRTNSL,0              WAS ROUTINE MOVED
         BE    BGR&SYSNDX              NO
         LA    R0,SRBRTNAM             POINT TO MODULE NAME
         DELETE EPLOC=(0)              DELETE LOADED MODULE
         XC    SRBRTNAM,SRBRTNAM       CLEAR ROUTINE NAME IN SRB
.END     ANOP
BGR&SYSNDX EQU *
         MEXIT
.NOADDR  MNOTE 4,'EITHER NAME OR ADDR REQUIRED, NO CODE GENERATED'
         MEXIT
.NOLENG  MNOTE 4,'WHEN ADDR GIVEN, LENG REQUIRED, NO CODE GENERATED'
         MEXIT
.INVLENG MNOTE 4,'WHEN NAME GIVEN, LENG IS INVALID, NO CODE GENERATED'
         MEXIT
         MEND
./ ADD NAME=BCINFO   0100-02135-02135-1224-00084-00084-00000-VBCMACS
         MACRO
         BCINFO   &DSECT=
*****
*****
*****
         AIF   ('&DSECT' EQ 'YES').DSECT
INFOTBL  DS    0C       *** BLUE CROSS T.P. INFORMATION TABLE ***
*****
         AGO   .GENREC
.DSECT   ANOP
INFOTBL  DSECT ,        *** BLUE CROSS T.P. INFORMATION TABLE ***
*****
.GENREC  ANOP
*
*
***********************************************************************
*        INFORMATION TABLE USED BY VARIOUS MODULES
*
*        COBOL PROGRAMS SHOULD USE COPY MONITABL
***********************************************************************
*
RELBLK   DS    XL4                     LAST RELATIVE BLOCK NUMBER USED
MSGFROM  DS    CL1                     MESSAGE SOURCE: O=OFFLINE
*                                                      M=IMS/3270
*                                                      2=IMS 2740
*                                                      R=NETMACS
*                                                      T=NON-IMS
DATEMDY  DS    CL6                     DATE: MMDDYY
ORIGIN   DS    CL8                     ORIGINATING TERMINAL (LTERM)
CLMSYSTM DS    CL1                     CLAIM SYSTEM: C=BLUE CROSS,
*                                                    M=MEDICARE
*                                                    I=MEDICARE INPAT
REENTRY  DS    CL1                     2=REJECT REENTRY
TRANSMSN DS    CL1                     TRANSMISSION CODE:
*                                           1=REGULAR CROSS
*                                           2=SAME DAY REJECT REENTRY
*                                           3=FIXED FORMAT INPUT
*                                           9=TERMINAL CONTROL
HOSPIND  DS    CL1                     HOSPITAL NUMBER INDICATOR
HOSNTRD  EQU   C'1'                    HOSPITAL NUMBER ENTERED
HOSPNO   DS    CL9                     HOSPITAL/PROVIDER NUMBER
SECDEST  DS    CL6                     SECONDARY DESTINATION
TRANDATE DS    CL5                     MESSAGE DATE, YYDDD
TRANTIME DS    CL6                     MESSAGE TIME, HHMMSS
PROGRAM  DS    CL8                     PROCESSING PROGRAM NAME
ERRBYTE  DS    CL1                     ERROR BYTE
MONREJ   EQU   C'1'                    1=MONITOR REJECT
EDITERRS EQU   C'R'                    R=EDIT ERRORS
NOERRS   EQU   C'A'                    A=NO ERRORS
BACK2    DS    CL160                   ERROR DELIMITERS, IF ANY FOUND
SYSTMCLM DS    CL9                     SYSTEM CLAIM NUMBER
*
LOGHDR   DS    0CL32                   LOG HEADER FOR CROSSLOG
LOGRECTY DS    CL2                     "10", "50", OR "60"
LOGTRNCD DS    CL5                     TRANSACTION CODE
LOGORGIN DS    CL4                     ORIGIN LTERM NAME
LOGTSEQ  DC    CL4'0001'               TERMINAL SEQUENCE NUMBER
LOGSSEQ  DC    PL5'1'                  SYSTEM SEQUENCE NUMBER
LOGREFNO DC    PL3'10'                 REFERENCE NUMBER
LOGCLM   DC    CL9'JJJ060001'          LAST CLAIM NUMBER
LOGEND   EQU   *                       END OF LOG HEADER
*
BACTRCD  DS    CL8                     TRANSACTION CODE EXTERNAL BMP
NOOFDEST DS    CL1                     INDICATOR RETURNED BY ADJUD.
*
RMTHDR   DS    0CL30                   NETMACS MESSAGE HEADER
RMTTERM  DS    CL8                     NETMACS TERMINAL NAME
RMTLOB   DS    CL2                     NETMACS LOB CODE
RMTID    DS    CL8                     NETMACS LOGON ID
RMTDATE  DS    PL4                     NETMACS TRANSACTION DATE YYMMDD
RMTCOUNT DS    PL2                     NETMACS TRANSACTION COUNT
RMTINSEQ DS    PL3                     NETMACS INPUT SEQUENCE NUMBER
RMTOTSEQ DS    PL3                     NETMACS OUTPUT SEQUENCE NUMBER
RMTEND   EQU   *                       END OF NETMACS HEADER
ENDINFO  EQU   *
*****
*****
*****
         AIF   ('&DSECT' EQ 'YES').CSCT
         MEXIT
.CSCT    ANOP
&SYSECT  CSECT
         MEXIT
         MEND
./ ADD NAME=BCINFOA  0100-02135-02135-1224-00154-00154-00000-VBCMACS
         MACRO
         BCINFOA  &DSECT=
*****
*****
*****
         AIF   ('&DSECT' EQ 'YES').DSECT
INFOTBL  DS    0C       *** BLUE CROSS T.P. INFORMATION TABLE ***
*****
         AGO   .GENREC
.DSECT   ANOP
INFOTBL  DSECT ,        *** BLUE CROSS T.P. INFORMATION TABLE ***
*****
.GENREC  ANOP
*
*
***********************************************************************
*        INFORMATION TABLE USED BY VARIOUS MODULES
*
*        COBOL PROGRAMS SHOULD USE COPY MONITABL
***********************************************************************
*
****************************************************************8301187
*               GENERAL USE FIELDS                             *8301187
****************************************************************8301187
*                                                               8301187
RELBLK   DS    XL4                     CURRENT LOG FILE KEY     8400571
MSGFROM  DS    CL1                     MESSAGE SOURCE: O=OFFLINE
*                                                      M=IMS/3270
*                                                      2=IMS 2740
*                                                      R=NETMACS
DATEMDY  DS    CL6                     CURRENT DATE: MMDDYY     8400571
ORIGIN   DS    CL8                     ORIGINATING TERMINAL NAME8400571
*                                      (LTERM NAME FROM IO PCB) 8400571
*                                      FIRST 2 BYTES IDENTIFY   8400571
*                                      TERMINAL TYPE:           8400571
*                                      LZ = 3270 IN-HOUSE LOCAL 8400571
*                                      ZZ = 3270 IN-HOUSE REMOTE8400571
*                                      HZ = 3270 HOSPITAL       8400571
*                                      AZ - KZ = 2ND-12TH TERM- 8400571
*                                        INALS AT A HOSPITAL    8400571
*                                      HM = T.I. SILENT 700 DIAL8400571
*                                      RZ = DISTRICT OFFICE     8400571
*                                      HP = PRINTER AT HOSPITAL 8400571
CLMSYSTM DS    CL1                     CLAIM SYSTEM: C=BLUE CROSS,
REENTRY  DS    CL1                     2=REJECT REENTRY
TRANSMSN DS    CL1                     TRANSMISSION CODE:
*                                           1=REGULAR CROSS
*                                           2=SAME DAY REJECT REENTRY
*                                           3=FIXED FORMAT INPUT
*                                           9=TERMINAL CONTROL
HOSPIND  DS    CL1                     HOSPITAL NUMBER INDICATOR
HOSNTRD  EQU   C'1'                    HOSPITAL NUMBER ENTERED
HDITYPSV DC    CL3'   '                FOR HDI INPUT, TYP SERV 8700665
*        DC    CL12' '                 FILLER                 8700665A
NMHDIND  DS    CL1                     NETMACS HDI FORMAT IND 8700665A
         DC    CL11' '                 FILLER                 8700665A
TRANDATE DS    CL5                     MESSAGE DATE, YYDDD
*                                      FROM IO PCB             8400571
TRANTIME DS    CL6                     MESSAGE TIME, HHMMSS
*                                      FROM IO PCB             8400571
PROGRAM  DS    CL8                     PROCESSING PROGRAM NAME
*                                      FROM TRANSACTION TABLE  8400571
ERRBYTE  DS    CL1                     ERROR BYTE
MONREJ   EQU   C'1'                    1=MONITOR REJECT
EDITERRS EQU   C'R'                    R=EDIT ERRORS
NOERRS   EQU   C'A'                    A=NO ERRORS
DUPLCLM  EQU   C'D'                    D=DUPLICATE
NORECFD  EQU   C'N'                    N=NO RECORD FOUND
BACK2    DS    CL160                   ERROR DELIMITERS, IF ANY FOUND
SYSTMCLM DS    0CL9                    SYSTEM CLAIM NUMBER      8301187
CLMDAYJ  DS    CL3                     CURRENT JULIAN DAY       8301187
CLAIMNBR DS    CL6                     SEQUENTIAL CLAIM NUMBER  8301187
RQSTCODE DS    CL1                     REQUEST CODE             8301187
RQSTREAD EQU   C'R'                    READ REQUEST             8301187
RQSTWRIT EQU   C'W'                    WRITE REQUEST            8301187
RQSTOPEN EQU   C'O'                    OPEN REQUEST             8301187
RQSTCLOS EQU   C'C'                    CLOSE REQUEST            8301187
BACTRCD  DS    CL8                     IMS TRAN CODE, FOR BMP'S 8301187
NOOFDEST DS    CL1                     INDICATOR FROM ADJUD.    8301187
*                                                               8301187
****************************************************************8301187
* FOLLOWING FIELDS FROM LOGHDR THRU LOGEND DEFINE THE LOG      *8301187
* RECORD HEADER WHICH IS PREFIXED TO ALL LOG RECORDS BY THE    *8301187
* CROSSLOG PROGRAM BEFORE THEY ARE WRITTEN TO THE LOG FILE     *8301187
****************************************************************8301187
*                                                               8301187
LOGHDR   DS    0CL36                   LOG HEADER FOR CROSSLOG  8301187
LOGRECTY DS    CL2                     LOG RECORD TYPE          8301187
*                                      "10" = ORIGINAL INPUT    8301187
*                                      "50" = ACTIVITY RECORD   8301187
*                                      "60" = REPLY RECORD      8301187
LOGTRNCD DS    CL5                     TRANSACTION CODE. THIS IS8400571
*                                      THE DATA FOLLOWING THE   8400571
*                                      TR DELIMITER, LEFT JUST- 8400571
*                                      IFIED AND TRAILING BLANK 8400571
*                                      FILLED                   8400571
LOGORGIN DS    CL8                     ORIGIN LTERM NAME FROM   8400571
*                                      THE IO PCB               8400571
LOGTSEQ  DC    CL4'0001'               TERMINAL SEQUENCE NUMBER
LOGSSEQ  DC    PL5'1'                  SYSTEM SEQUENCE NUMBER
LOGREFNO DC    PL3'10'                 REFERENCE NUMBER
LOGCLM   DC    CL9'JJJ060001'          LAST CLAIM NUMBER
LOGEND   EQU   *                       END OF LOG HEADER
*                                                               8301187
****************************************************************8301187
*   FOLLOWING FIELDS COMPRISE THE NETMACS HEADER WHICH IS      *8301187
*   PREFIXED TO THE REPLY MESSAGES WRITTEN BACK TO NETMACS     *8301187
****************************************************************8301187
*                                                               8301187
*
RMTHDR   DS    0CL30                   NETMACS MESSAGE HEADER
RMTTERM  DS    CL8                     NETMACS TERMINAL NAME
RMTLOB   DS    CL2                     NETMACS LOB CODE
RMTID    DS    CL8                     NETMACS LOGON ID
RMTDATE  DS    PL4                     NETMACS TRANSACTION DATE YYMMDD
RMTCOUNT DS    PL2                     NETMACS TRANSACTION COUNT
RMTINSEQ DS    PL3                     NETMACS INPUT SEQUENCE NUMBER
RMTOTSEQ DS    PL3                     NETMACS OUTPUT SEQUENCE NUMBER
RMTEND   EQU   *                       END OF NETMACS HEADER
ENDINFO  EQU   *
*                                                               8400571
****************************************************************8400571
*   FOLLOWING FIELDS ARE CREATED BY CROSEDIT                   *8400571
****************************************************************8400571
*                                                               8400571
SECNDEST DS    CL8                     SECONDARY DESTINATION. IF8400571
*                                      SD IS ENTERED, THIS WILL 8400571
*                                      BE THE ENTERED DATA, LEFT8400571
*                                      JUSTIFIED WITH TRAILING  8400571
*                                      BLANKS. ELSE BLANKS.     8400571
HOSPNBR  DS    CL5                     HOSPITAL NUMBER. IF H# IS8400571
*                                      ENTERED, THIS FIELD HAS  8400571
*                                      THE ENTERED DATA, RIGHT  8400571
*                                      JUSTIFIED AND LEADING 0  8400571
*                                      FILLED. IF H# IS NOT     8400571
*                                      ENTERED, THIS FIELD WILL 8400571
*                                      BE SAME AS LTRMID        8400571
LTRMID   DS    CL5                     BC HOSPITAL ID MADE FROM 8400571
*                                      LTERM NAME. IF 6-BYTE    8400571
*                                      HAS LEADING 0 AND BYTES  8400571
*                                      3-6 OF LTERM. IF 7-BYTE  8400571
*                                      LTERM NAME, IT IS BYTES  8400571
*                                      3-7, AND IF LTERM NAME IS8400571
*                                      8 BYTES LONG, LTRMID IS  8400571
*                                      LTERM BYTES 4-8.         8400571
*****
*****
*****
         AIF   ('&DSECT' EQ 'YES').CSCT
         MEXIT
.CSCT    ANOP
&SYSECT  CSECT
         MEXIT
         MEND
./ ADD NAME=BCINFOQ  0100-02135-02135-1224-00152-00152-00000-VBCMACS
         MACRO
         BCINFOA  &DSECT=
*****
*****
*****
         AIF   ('&DSECT' EQ 'YES').DSECT
INFOTBL  DS    0C       *** BLUE CROSS T.P. INFORMATION TABLE ***
*****
         AGO   .GENREC
.DSECT   ANOP
INFOTBL  DSECT ,        *** BLUE CROSS T.P. INFORMATION TABLE ***
*****
.GENREC  ANOP
*
*
***********************************************************************
*        INFORMATION TABLE USED BY VARIOUS MODULES
*
*        COBOL PROGRAMS SHOULD USE COPY MONITABL
***********************************************************************
*
****************************************************************8301187
*               GENERAL USE FIELDS                             *8301187
****************************************************************8301187
*                                                               8301187
RELBLK   DS    XL4                     CURRENT LOG FILE KEY     8400571
MSGFROM  DS    CL1                     MESSAGE SOURCE: O=OFFLINE
*                                                      M=IMS/3270
*                                                      2=IMS 2740
*                                                      R=NETMACS
DATEMDY  DS    CL6                     CURRENT DATE: MMDDYY     8400571
ORIGIN   DS    CL8                     ORIGINATING TERMINAL NAME8400571
*                                      (LTERM NAME FROM IO PCB) 8400571
*                                      FIRST 2 BYTES IDENTIFY   8400571
*                                      TERMINAL TYPE:           8400571
*                                      LZ = 3270 IN-HOUSE LOCAL 8400571
*                                      ZZ = 3270 IN-HOUSE REMOTE8400571
*                                      HZ = 3270 HOSPITAL       8400571
*                                      AZ - KZ = 2ND-12TH TERM- 8400571
*                                        INALS AT A HOSPITAL    8400571
*                                      HM = T.I. SILENT 700 DIAL8400571
*                                      RZ = DISTRICT OFFICE     8400571
*                                      HP = PRINTER AT HOSPITAL 8400571
CLMSYSTM DS    CL1                     CLAIM SYSTEM: C=BLUE CROSS,
REENTRY  DS    CL1                     2=REJECT REENTRY
TRANSMSN DS    CL1                     TRANSMISSION CODE:
*                                           1=REGULAR CROSS
*                                           2=SAME DAY REJECT REENTRY
*                                           3=FIXED FORMAT INPUT
*                                           9=TERMINAL CONTROL
HOSPIND  DS    CL1                     HOSPITAL NUMBER INDICATOR
HOSNTRD  EQU   C'1'                    HOSPITAL NUMBER ENTERED
HDITYPSV DC    CL3'   '                FOR HDI INPUT, TYP SERV 8700665
         DC    CL12' '                 FILLER                  8700665
TRANDATE DS    CL5                     MESSAGE DATE, YYDDD
*                                      FROM IO PCB             8400571
TRANTIME DS    CL6                     MESSAGE TIME, HHMMSS
*                                      FROM IO PCB             8400571
PROGRAM  DS    CL8                     PROCESSING PROGRAM NAME
*                                      FROM TRANSACTION TABLE  8400571
ERRBYTE  DS    CL1                     ERROR BYTE
MONREJ   EQU   C'1'                    1=MONITOR REJECT
EDITERRS EQU   C'R'                    R=EDIT ERRORS
NOERRS   EQU   C'A'                    A=NO ERRORS
DUPLCLM  EQU   C'D'                    D=DUPLICATE
NORECFD  EQU   C'N'                    N=NO RECORD FOUND
BACK2    DS    CL160                   ERROR DELIMITERS, IF ANY FOUND
SYSTMCLM DS    0CL9                    SYSTEM CLAIM NUMBER      8301187
CLMDAYJ  DS    CL3                     CURRENT JULIAN DAY       8301187
CLAIMNBR DS    CL6                     SEQUENTIAL CLAIM NUMBER  8301187
RQSTCODE DS    CL1                     REQUEST CODE             8301187
RQSTREAD EQU   C'R'                    READ REQUEST             8301187
RQSTWRIT EQU   C'W'                    WRITE REQUEST            8301187
RQSTOPEN EQU   C'O'                    OPEN REQUEST             8301187
RQSTCLOS EQU   C'C'                    CLOSE REQUEST            8301187
BACTRCD  DS    CL8                     IMS TRAN CODE, FOR BMP'S 8301187
NOOFDEST DS    CL1                     INDICATOR FROM ADJUD.    8301187
*                                                               8301187
****************************************************************8301187
* FOLLOWING FIELDS FROM LOGHDR THRU LOGEND DEFINE THE LOG      *8301187
* RECORD HEADER WHICH IS PREFIXED TO ALL LOG RECORDS BY THE    *8301187
* CROSSLOG PROGRAM BEFORE THEY ARE WRITTEN TO THE LOG FILE     *8301187
****************************************************************8301187
*                                                               8301187
LOGHDR   DS    0CL36                   LOG HEADER FOR CROSSLOG  8301187
LOGRECTY DS    CL2                     LOG RECORD TYPE          8301187
*                                      "10" = ORIGINAL INPUT    8301187
*                                      "50" = ACTIVITY RECORD   8301187
*                                      "60" = REPLY RECORD      8301187
LOGTRNCD DS    CL5                     TRANSACTION CODE. THIS IS8400571
*                                      THE DATA FOLLOWING THE   8400571
*                                      TR DELIMITER, LEFT JUST- 8400571
*                                      IFIED AND TRAILING BLANK 8400571
*                                      FILLED                   8400571
LOGORGIN DS    CL8                     ORIGIN LTERM NAME FROM   8400571
*                                      THE IO PCB               8400571
LOGTSEQ  DC    CL4'0001'               TERMINAL SEQUENCE NUMBER
LOGSSEQ  DC    PL5'1'                  SYSTEM SEQUENCE NUMBER
LOGREFNO DC    PL3'10'                 REFERENCE NUMBER
LOGCLM   DC    CL9'JJJ060001'          LAST CLAIM NUMBER
LOGEND   EQU   *                       END OF LOG HEADER
*                                                               8301187
****************************************************************8301187
*   FOLLOWING FIELDS COMPRISE THE NETMACS HEADER WHICH IS      *8301187
*   PREFIXED TO THE REPLY MESSAGES WRITTEN BACK TO NETMACS     *8301187
****************************************************************8301187
*                                                               8301187
*
RMTHDR   DS    0CL30                   NETMACS MESSAGE HEADER
RMTTERM  DS    CL8                     NETMACS TERMINAL NAME
RMTLOB   DS    CL2                     NETMACS LOB CODE
RMTID    DS    CL8                     NETMACS LOGON ID
RMTDATE  DS    PL4                     NETMACS TRANSACTION DATE YYMMDD
RMTCOUNT DS    PL2                     NETMACS TRANSACTION COUNT
RMTINSEQ DS    PL3                     NETMACS INPUT SEQUENCE NUMBER
RMTOTSEQ DS    PL3                     NETMACS OUTPUT SEQUENCE NUMBER
RMTEND   EQU   *                       END OF NETMACS HEADER
ENDINFO  EQU   *
*                                                               8400571
****************************************************************8400571
*   FOLLOWING FIELDS ARE CREATED BY CROSEDIT                   *8400571
****************************************************************8400571
*                                                               8400571
SECNDEST DS    CL8                     SECONDARY DESTINATION. IF8400571
*                                      SD IS ENTERED, THIS WILL 8400571
*                                      BE THE ENTERED DATA, LEFT8400571
*                                      JUSTIFIED WITH TRAILING  8400571
*                                      BLANKS. ELSE BLANKS.     8400571
HOSPNBR  DS    CL5                     HOSPITAL NUMBER. IF H# IS8400571
*                                      ENTERED, THIS FIELD HAS  8400571
*                                      THE ENTERED DATA, RIGHT  8400571
*                                      JUSTIFIED AND LEADING 0  8400571
*                                      FILLED. IF H# IS NOT     8400571
*                                      ENTERED, THIS FIELD WILL 8400571
*                                      BE SAME AS LTRMID        8400571
LTRMID   DS    CL5                     BC HOSPITAL ID MADE FROM 8400571
*                                      LTERM NAME. IF 6-BYTE    8400571
*                                      HAS LEADING 0 AND BYTES  8400571
*                                      3-6 OF LTERM. IF 7-BYTE  8400571
*                                      LTERM NAME, IT IS BYTES  8400571
*                                      3-7, AND IF LTERM NAME IS8400571
*                                      8 BYTES LONG, LTRMID IS  8400571
*                                      LTERM BYTES 4-8.         8400571
*****
*****
*****
         AIF   ('&DSECT' EQ 'YES').CSCT
         MEXIT
.CSCT    ANOP
&SYSECT  CSECT
         MEXIT
         MEND
./ ADD NAME=BCNE     0100-02135-02135-1224-00025-00025-00000-VBCMACS
         MACRO
&LABEL   BCNE  &BRHADDR,&BYTE,&CHAR,&NUMBER
         LCLA  &AL1,&AL2,&AL3
         LCLC  &IMMED
         AIF   (K'&BRHADDR EQ 0 OR K'&BYTE EQ 0 OR K'&CHAR EQ 0).ERROR
         AGO   .OK
.ERROR   ANOP
         MNOTE 9,'OMITTED OPERAND - MACRO GENERATION TERMINATED'
         MEXIT
.OK      ANOP
&IMMED   SETC  '&CHAR'
&LABEL   CLI   &BYTE,&IMMED
         BNE   &BRHADDR
         AIF   (K'&NUMBER EQ 0).MACEND
&AL2     SETA  &NUMBER
.LOOP    ANOP
&AL1     SETA  &AL1+1
         CLI   &BYTE+&AL1,&IMMED
         BNE   &BRHADDR
&AL2     SETA  &AL2-1
         AIF   (&AL2 EQ 0).MACEND
         AGO   .LOOP
.MACEND  ANOP
&AL1     SETA  0
         MEND
./ ADD NAME=BCSRBDEF 0100-02135-02135-1224-00049-00049-00000-VBCMACS
         MACRO
         BCSRBDEF &END=NO,&CVT=YES
         AIF   ('&CVT' NE 'YES').STDSCT
CVTMAP   EQU   0
CVTPTR   EQU   16
CVT0PT01 EQU   152
CVTLSMQ  EQU   616
CVTGSMQ  EQU   612
.STDSCT  ANOP
SRBDSECT DSECT ,
SRBSECT  EQU   *
*
*                  * * * STANDARD IBM SRB FIELDS * * *
*
SRBID    DS    CL4                     SRB IDENTIFIER: 'SRB'
SRBFLNK  DS    F                       LINK FIELD USED BY SCHEDULE MACR
SRBASCB  DS    F                       @ ASCB FOR TARGET MEMORY
SRBCPAFF DS    XL2                     CPU AFFINITY: ZEROS
SRBPASID DS    XL2                     SCHEDULER'S ASID
SRBPTCB  DS    F                       @ SCHEDULER'S TCB
SRBEP    DS    F                       @ ROUTINE TO BE SCHEDULED
SRBRMTR  DS    F                       RECOVERY MGMT FIELD: ZEROS
SRBPARM  DS    F                       PARAMETER LIST POINTER: ZEROS
SRBSAVE  DS    F                       SAVE AREA POINTER: ZEROS
SRBPKF   DS    XL1                     SCHEDULED RTN PROTECT KEY: ZERO
SRBPRIOR DS    XL1                     SCHEDULED RTN PRIORITY: ZERO
         DS    XL6                     RESERVED: ZEROS
*
*                    * * * STANDARD BLUE CROSS APPENDAGE * * *
*
SRBPR10  DS    F                       REG 10 VALUE FOR POST: ZEROS
SRBPR11  DS    F                       REG 11 VALUE FOR POST, @ SRBECB
*                                       HIGH ORDER BIT = 1
SRBECB   DS    F                       ECB USED BY SYNCHRONIZE PROCESSI
*                                       BY SCHEDULED ROUTINE AT END
SRBPR13  DS    F                       R13 FOR POST: @ SCHEDULING ASCB
SRBSV14  DS    F                       SAVE AREA FOR REG 14
SRBPOST  DS    F                       @ BRANCH ENTRY TO POST FROM CVTO
SRBSPLV  DS    F                       SRB SUB-POOL ID , LENGTH
SRBRTNSL DS    F                       ROUTINE SUB-POOL ID, LENGTH
SRBRTNAM DS    CL8                     SUBROUTINE NAME IF LOADED
SRBWORK  DS    0F                      VARIABLE SIZED WORK AND
*                                       COMMUNICATION AREA
         AIF   ('&END' EQ 'YES').RESUME
         MEXIT
.RESUME  ANOP
SRBEND   EQU   *
&SYSECT  CSECT
         MEND
./ ADD NAME=BCSRBENT 0100-02135-02135-1224-00020-00020-00000-VBCMACS
         MACRO
&NAME    BCSRBENT &BASE=R3,&CSECT=NO,&SRB=R9
         AIF   ('&CSECT' EQ 'NO').NOCSECT
&NAME    CSECT
         AGO   .SRBST
.NOCSECT ANOP
&NAME    DS    0H                      SRB ROUTINE
.SRBST   AIF   ('&BASE' EQ 'R15' OR '&BASE' EQ '15').NOBASE
         LR    &BASE,R15               COPY E.P. ADDR TO BASE REG
         USING &NAME,&BASE
         AGO   .SET
.NOBASE  USING &NAME,R15
.SET     LR    &SRB,R0                 COPY SRB ADDRESS TO BASE REC
         USING SRBDSECT,&SRB
         ST    R14,SRBSV14             SAVE RETURN ADDRESS
         B     SRBSTART                AROUND IDENTIFIER
         DC    CL8'&NAME'              IDENTIFIER
SRBSTART DS    0H                      ROUTINE START
         MEXIT
         MEND
./ ADD NAME=BCSRBFRE 0100-02135-02135-1224-00035-00035-00000-VBCMACS
         MACRO
&NAM     BCSRBFRE &SRB=YES
         AIF   ('&SRB'                 EQ 'ONLY').SRBDEL
         AIF   ('&SRB'                 EQ 'NO').GEN
         AIF   ('&SRB'                 EQ 'YES').GEN
         AGO   .ERR
.GEN     ANOP
&NAM     CLI   SRBRTNSL,0              WAS STORAGE GOTTEN
         BE    BF1&SYSNDX              NO
         L     R0,SRBRTNSL             GET SUBPOOL ID AND LENGTH
         L     R1,SRBEP                ADDRESS OF ROUTINE
         LA    R1,0(R1)                CLEAR HI-ORDER FOR FREEMAIN
         SVC   10                      FREE ROUTINE STORAGE
BF1&SYSNDX CLI   SRBRTNAM,0           WAS MODULE LOADED
         AIF   ('&SRB' EQ 'YES').GO2
         BE    BF3&SYSNDX              NO
         AGO   .DEL
.GO2     BE    BF2&SYSNDX              NO
.DEL     LA    R0,SRBRTNAM             GET ADDR OF RTN NAME
         DELETE EPLOC=(0),RELATED=(X)  DELETE IT
         AIF   ('&SRB' EQ 'NO').XIT
         AGO   .SRBFR2
.SRBDEL  ANOP
&NAM     LA    R0,SRBRTNAM             SUBPOOL ID AND LENGTH
         AGO   .SRBFRE
.SRBFR2  ANOP
BF2&SYSNDX L    R0,SRBSPLV          SUBPOOL ID AND LENGTH
.SRBFRE  LA    R1,SRBDSECT             SRB ADDRESS
         SVC   10                      FREE SRB STRG
         MEXIT
.XIT     ANOP
BF3&SYSNDX EQU *
         MEXIT
.ERR     MNOTE 4,'SRB MUST BE YES, NO, OR ONLY - NO GENERATION'
         MEND
./ ADD NAME=BCSRBPST 0100-02135-02135-1224-00026-00026-00000-VBCMACS
         MACRO
&NAME    BCSRBPST &ERR=,&EXIT=YES,&SRB=
&NAME    LM    R10,R15,SRBPR10         PICK UP POST REGISTER VALUES
         AIF   (T'&ERR EQ 'O').NOERR
         LA    R12,&ERR                GET ERROR ROUTINE ADDRESS
         AGO   .CKSRB
.NOERR   LA    R12,*+6                 NO SPECIAL ERROR ROUTINE
.CKSRB   ANOP
         AIF   (T'&SRB EQ 'O').POST
         AIF   ('&SRB' EQ 'R9').POST
         AIF   ('&SRB' EQ '9').POST
         LR    R9,&SRB                 SAVE SRB ADDR ACROSS POST
.POST    BALR  R14,R15                 CALL POST
         AIF   (T'&SRB EQ 'O').CKEXIT
         AIF   ('&SRB' EQ 'R9').CKEXIT
         AIF   ('&SRB' EQ '9').CKEXIT
         LR    &SRB,R9                 SAVE SRB ADDR ACROSS POST
.CKEXIT  ANOP
         AIF   ('&EXIT' EQ 'NO').EXIT
         AIF   ('&EXIT' NE 'YES').EXERR
         L     R14,SRBSV14             RETURN ADDRESS
         BR    R14                     EXIT FROM SRB ROUTINE1
         MEXIT
.EXERR   MNOTE 1,'INVALID EXIT PARAMETER, USE YES OR NO'
.EXIT    MEXIT
         MEND
./ ADD NAME=BSYNAD   0100-02135-02135-1224-00084-00084-00000-VBCMACS
         MACRO
&LABEL   BSYNAD &REG
         AIF   (T'&REG EQ 'O').OMIT
         STM   R13,R0,BE&SYSNDX    SAVE REGISTERS TO BE USED
         TM    24(R1),MASK02       TEST FOR OVERFLOW RECORD
         BO    BOV&SYSNDX          YES
         TM    24(R1),MASK80       TEST FOR NO RECORD FOUND
         BO    BNF&SYSNDX          YES
         TM    24(R1),MASK40       TEST FOR WRONG LENGTH RECORD
         BO    BWL&SYSNDX          YES
         TM    24(R1),MASK20       TEST FOR NO ROOM
         BO    BNR&SYSNDX               YES
         TM    24(R1),MASK10       TEST FOR INVALID REQUEST
         BO    BIR&SYSNDX          YES
         TM    24(R1),MASK08       TEST FOR I/O ERROR
         BO    BIO&SYSNDX          YES
         TM    24(R1),MASK04       TEST FOR UNREACHABLE BLOCK
         BO    BUB&SYSNDX          YES
         TM    24(R1),MASK01       TEST FOR DUPLICATE KEY ERROR
         BO    BDP&SYSNDX          YES
         MVC   BA&SYSNDX+1(3),B202&SYSNDX  MOVE IN ABEND CODE
BAB&SYSNDX EQU *
         L     R0,8(R1)            GET ADDR OF DCB FROM DECB
         L     R1,16               GET CVT ADDRESS
         L     R1,0(R1)            GET TCB ADDRESS POINTER FROM CVT
         L     R1,4(R1)            GET TCB ADDRESS
         L     R1,12(R1)           GET TIOT ADDRESS FROM TCB
         AH    R1,40(R0)           ADD TIOT OFFSET FROM DCB
         MVC   BF&SYSNDX,4(R1)     MOVE DDNAME FROM TIOT TO MESSAGE
         LA    R1,BW&SYSNDX        ADDR OF WTO MESSAGE
         SVC   35                  WTO
         LM    R13,R0,BE&SYSNDX    RESTORE REGISTERS
         L     R1,BA&SYSNDX        POINTER FOR ABEND
         SVC   13                  ABEND
BOV&SYSNDX EQU *
         B     BEX&SYSNDX          GO TO EXIT
BNF&SYSNDX EQU *
         MVI   0(&REG),BN&SYSNDX   PASS BACK CODE FOR NRF ERROR
         B     BEX&SYSNDX          GO TO EXIT
BWL&SYSNDX EQU *
         MVC   BA&SYSNDX+1(3),B102&SYSNDX    MOVE IN ABEND CODE
         B     BAB&SYSNDX          GO TO ABEND ROUTINE
BNR&SYSNDX EQU *
         MVC   BA&SYSNDX+1(3),B104&SYSNDX    MOVE IN ABEND CODE
         B     BAB&SYSNDX          GO TO ABEND ROUTINE
BIR&SYSNDX EQU *
         MVI   0(&REG),BK&SYSNDX   MOVE IN CODE FOR INVALID REQUEST
         B     BEX&SYSNDX          GO TO EXIT
BIO&SYSNDX EQU *
         MVC   BA&SYSNDX+1(3),B101&SYSNDX    MOVE IN ABEND CODE
         B     BAB&SYSNDX          GO TO ABEND ROUTINE
BUB&SYSNDX EQU *
         MVC   BA&SYSNDX+1(3),B103&SYSNDX    MOVE IN ABEND CODE
         B     BAB&SYSNDX          GO TO ABND ROUTINE
BDP&SYSNDX EQU *
         MVI   0(&REG),BD&SYSNDX   PASS BACK CODE FOR DUPLICATE
         B     BEX&SYSNDX          GO TO EXIT
         AGO   .DATA
.OMIT    ANOP
         MNOTE 9,'OMITTED OPERAND - MACRO GENERATION TERMINATED'
         MEXIT
.DATA    ANOP
BE&SYSNDX DS   4F                  REGISTER SAVE AREA
         DS    0F                  ALIGNMENT
BW&SYSNDX DS   0CL51               WTO MESSAGE
         DC    X'00360000'             MSG LENGTH
         DC    CL37'**** DATA SET ERROR - JOB TERMINATED '
BF&SYSNDX DC   CL8' '              DCB NAME
         DC    CL5' ****'
B202&SYSNDX DC AL3(202)
B101&SYSNDX DC AL3(101)
B102&SYSNDX DC AL3(102)
B103&SYSNDX DC AL3(103)
B104&SYSNDX DC AL3(104)
         DS    0F
BA&SYSNDX DC   AL1(128)
         DC    CL3' '
BK&SYSNDX EQU   C'K'
BD&SYSNDX EQU   C'D'
BN&SYSNDX EQU   C'N'
         DS    0H
BEX&SYSNDX EQU *
         MEXIT
         MEND
./ ADD NAME=DSCBDEF  0101-01197-01197-1116-00262-00261-00004-VBCMACS
         MACRO
         DSCBDEF &FMT1=YES,&FMT2=YES,&FMT3=YES,&FMT4=YES,&FMT5=YES,    X
               &FMT6=YES,&DSECT=YES
         LCLC &CSECT,&SW
&SW      SETC '0'
&CSECT   SETC '&SYSECT'
         AIF   ('&FMT1' NE 'YES').CKFMT2
.*
.* THIS IS A LOCAL DSCB DESCRIPTION MACRO. SEE SYS1.MODGEN(IECSDSL1)
.* FOR THE NORMAL IBM DESCRIPTOR MACRO.
.*
         AIF   ('&DSECT' EQ 'YES').DSECT1
DSCBFMT1 DS    0CL140   *** FORMAT 1 DSCB DESCRIPTION ***
         AGO   .ST1
.DSECT1  ANOP
DSCBFMT1 DSECT ,        *** FORMAT 1 DSCB DESCRIPTION ***
.ST1     ANOP
*
DS1DSNAM DS    CL44          DATA SET NAME
DS1FMTID DS    CL1           FORMAT 1 IDENTIFIER, X'F1'
DS1DSSN  DS    CL6           VOLSER OF FIRST VOLUME
DS1VOLSQ DS    XL2           VOLUME SEQUENCE NBR
DS1CREDT DS    XL3           CREATION DATE, BINARY, YDD
DS1EXPDT DS    XL3           EXPIRATION DATE, BINARY, YDD
DS1NOEPV DS    XL1           NBR EXTENTS ON THIS VOLUME
DS1NOBDB DS    XL1           NBR BYTES USED IN LAST DIRECTORY BLOCK
         DS    XL1           RESERVED
DS1SYSCD DS    CL13          SYSTEM CODE
DS1REFD  DS    XL3           LAST REFERENCED DATE (IF USED)
         DS    XL4           RESERVED
DS1DSORG DS    XL2           DATA SET ORGANIZATION. BYTE1:
*                              BIT0-IS, BIT1-PS, BIT2-DA, BIT6-PO
*                              BIT7-UNMOVABLE. BYTE2: BIT4-VSAM
DS1RECFM DS    XL1           RECORD FORMAT, BITS01=10-F, BITS01=01-V,
*                              BITS01=11-U, BIT2-TRKOFLO, BIT3-BLOCKED
*                              BIT4-ASA CTL CHAR, BIT5-MACH CTL CHAR
DS1OPTCD DS    XL1           DCB OPTION CODES, SAME AS DCBOPTCD
DS1BLKL  DS    XL2           BLOCKSIZE
DS1LRECL DS    XL2           LOGICAL RECORD LENGTH (0 FOR RECFM=U)
DS1KEYL  DS    XL1           KEYLENGTH, 0=NO KEY
DS1RKP   DS    XL2           RELATIVE KEY POSITION
DS1DSIND DS    XL1           DATA SET INDICATORS, BIT0-LAST VOLUME,
*                            BITS 3 (10) AND 5 (04) ARE PASSWORD
*                            INDICATORS:
*                             X'10' = READ AND WRITE PROTECTED
*                             X'14' = WRITE PROTECTED ONLY
*                             BOTH BITS OFF = NOT PROTECTED
*                             BOTH BITS ON FOR VSAM
DS1SCALO DS    XL1           PRIMARY ALLOCATION TYPE
*                              BITS01=01-
*                              BITS01=00-TRKS REL TO SPEC LOC,
*                              BITS01=01-BLOCKS, BITS01=11-CYLINDERS,
*                              BITS01=10-TRACKS,
*                              BIT4-CONTIG, BITS5-7-OTHER
DS1SCAL  DS    XL3           SECONDARY ALLOCATION QUANTITY
DS1LSTAR DS    XL3           TTR OF LAST BLOCK WRITTEN (PS AND PO ONLY)
DS1TRBAL DS    XL2           BYTES REM ON TRK AFTER LAST BLOCK
         DS    XL2           RESERVED
DS1EXT1  DS    XL10          FIRST EXTENT - SEE EXTENT DSECT
DS1EXT2  DS    XL10          SECOND EXTENT DESCRIPTION
DS1EXT3  DS    XL10          THIRD EXTENT DESCRIPTION
DS1PTRDS DS    XL5           CCHHR POINTER TO A FORMAT 2 DSCB (IS ONLY)
*                              OR TO A FORMAT 3 IF OVER 3 EXTENTS AND
*                              DSORG=PS OR PO, ZEROS IF UNUSED
.CKFMT2  AIF   ('&FMT2' NE 'YES').CKFMT3
*
*
*
         AIF   ('&DSECT' EQ 'YES').DSECT2
DSCBFMT2 DS    0CL140   *** FORMAT 2 DSCB DESCRIPTION ***
         AGO   .ST2
.DSECT2  ANOP
DSCBFMT2 DSECT ,        *** FORMAT 2 DSCB DESCRIPTION ***
.ST2     ANOP
*
DS2CODE  DS    XL1           CODE FOR FORMAT 2 - X'02'
DS22MIND DS    XL7           MBBCCHH ADDRESS OF 2ND LEVEL MASTER INDEX
DS2L2MEN DS    XL5           CCHHR ADDRESS OF LAST ENTRY IN ABOVE
DS23MIND DS    XL7           MBBCCHH ADDRESS OF 3RD LEVEL MASTER INDEX
DS2L3MIN DS    XL5           ENDING ADDRESS OF ABOVE, CCHHR
         DS    XL11          RESERVED
DS2LPDT  DS    XL8           LAST PRIME TRK ON LAST PRIME CYL
DS2FMTID DS    CL1           FORMAT IDENTIFIER X'F2'
DS2NOLEV DS    XL1           NUMBER OF INDEX LEVELS
DS2DVIND DS    XL1           MASTER INDEX SIZE FOR THESE TRACKS
DS21RCYL DS    XL3           HHR ADDRESS OF 1ST DATA REC ON CYL
DS2LTCYL DS    XL2           HH ADDRESS OF LAST DATA REC ON CYL
DS2CYLOV DS    XL1           NBR CYL OVFLO TRACKS PER CYL
DS2HIRIN DS    XL1           HIGHEST R OF HIGH LEVEL INDEX
DS2HIRPR DS    XL1           HIGHEST R OF FORMAT F PRIME DATA RECS
DS2HIROV DS    XL1           HIGHEST R OF FORMAT F OVFLO RECDS
DS2RSHTR DS    XL1           R OF LAST DATA REC ON SHARED TRK
DS2HIRTI DS    XL1           HIGHEST R OF TRK INDEX ON UNSHARED TRK
DS2HIIOV DS    XL1           HIGHEST R OF FORMAT F INDEP OFLO
DS2TAGDT DS    XL2           NBR DELETE RECORDS - USER SUPPLIED
DS2RORG3 DS    XL3           NBR REFERENCES TO NON-1ST OFLO RECDS
DS2NOBYT DS    XL2           NBR BYTES REQRD TO HOLD HIGH INDX IN CORE
DS2NOTRK DS    XL1           NBR TRKS REQUIRED TO HOLD HIGH INDEX
DS2PRCTR DS    XL4           NBR RECDS IN PRIME DATA AREA
DS2STIND DS    XL1           INDICATORS, BIT6-LAST BLK FULL,
*                              BIT7-LAST TRACK FULL
DS2CYLAD DS    XL7           MBBCCHH ADDR OF CYLINDER INDEX
DS2ADLIN DS    XL7           MBBCCHH ADDR OF LOWEST LEVEL MSTR INDX
DS2ADHIN DS    XL7           MBBCCHH ADDR OF HIGHEST LEV MSTR INDX
DS2LPRAD DS    XL8           MBBCCHHR ADDR OF LAST REC IN PRIM DATA ARE
DS2LTRAD DS    XL5           CCHHR ADDR OF LAST ENTRY IN TRK INDX ON
*                              LAST CYLINDER
DS2LCYAD DS    XL5           CCHHR ADDR OF LAST ENTRY IN CYL INDX
DS2LMSAD DS    XL5           CCHHR ADDR OF LAST ENTRY IN MSTR INDX
DS2LOVAD DS    XL8           MBBCCHHR ADDR OF LAST INDEP OFLO RECD
DS2BYOVL DS    XL2           BYTES LEFT ON CURR INDEP OFLO TRK
DS2RORG2 DS    XL2           NBR TRKS LEFT IN INDEP OFLO AREA
DS2OVRCT DS    XL2           NBR RECDS IN OVERFLOW AREA
DS2RORG1 DS    XL2           NBR FULL CYL OVFLO AREAS
DS2NIRT  DS    XL3           HHR ADDR OF DUMMY TRK INDEX ENTRY
DS2PTRDS DS    XL5           CCHHR ADDR OF NEXT DSCB, IF ANY
.CKFMT3  AIF   ('&FMT3' NE 'YES').CKFMT4
*
*
*
         AIF   ('&DSECT' EQ 'YES').DSECT3
DSCBFMT3 DS    0CL140   *** FORMAT 3 DSCB DESCRIPTION ***
         AGO   .ST3
.DSECT3  ANOP
DSCBFMT3 DSECT ,        *** FORMAT 3 DSCB DESCRIPTION ***
.ST3     ANOP
*
DS3KEYID DS    XL4           KEY IDENTIFIER, X'03030303'
DS3EXT1  DS    XL10          1ST EXTENT DESCRIPTION, SEE EXTENT DSECT
DS3EXT2  DS    XL10          2ND EXTENT DESCRIPTION
DS3EXT3  DS    XL10          3RD EXTENT DESCRIPTION
DS3EXT4  DS    XL10          4TH EXTENT DESCRIPTION
DS3FMTID DS    CL1           FORMAT IDENTIFIER, X'F3'
DS3EXT5  DS    XL10          5TH EXTENT DESCRIPTION
DS3EXT6  DS    XL10          6TH EXTENT DESCRIPTION
DS3EXT7  DS    XL10          7TH EXTENT DESCRIPTION
DS3EXT8  DS    XL10          8TH EXTENT DESCRIPTION
DS3EXT9  DS    XL10          9TH EXTENT DESCRIPTION
DS3EXT10 DS    XL10          10TH EXTENT DESCRIPTION
DS3EXT11 DS    XL10          11TH EXTENT DESCRIPTION
DS3EXT12 DS    XL10          12TH EXTENT DESCRIPTION
DS3EXT13 DS    XL10          13TH EXTENT DESCRIPTION
DS3PTRDS DS    XL5           RESERVED
.CKFMT4  AIF   ('&FMT4' NE 'YES').CKFMT5
*
*
*
         AIF   ('&DSECT' EQ 'YES').DSECT4
DSCBFMT4 DS    0CL140   *** FORMAT 4 DSCB DESCRIPTION ***
         AGO   .ST4
.DSECT4  ANOP
DSCBFMT4 DSECT ,        *** FORMAT 4 DSCB DESCRIPTION ***
.ST4     ANOP
*
DS4DSNAM DS    XL44          IDENTIFIER, ALL HEX '04'S
DS4IDFMT DS    CL1           FORMAT IDENTIFIER, X'F4'
DS4HPCHR DS    XL5           CCHHR ADDR OF HIGHEST ADDRESS PREVIOUSLY
*                              USED FOR A FORMAT 1 DSCB
DS4DSREC DS    XL2           NBR OF AVAILABLE BLANK DSCB'S IN VTOC
DS4HCCHH DS    XL4           CCHH ADDR OF NEXT ALT TRK AVAILABLE
DS4NOATK DS    XL2           NBR OF REMAINING ALT TRKS
DS4VTOCI DS    XL1           INDICATORS, 80=DOS BIT, 40=INDEX WAS
*                              DISABLED, 10=DOS STACKED PACK, 08=
*                              DOS CONVERTED VTOC, 04=DIRF BIT, 02=
*                              DIRF RECLAIMED, 01=INDEXED VTOC USED
DS4NOEXT DS    XL1           X'01' TO INDICATE VTOC IS 1 EXTENT
         DS    XL2           RESERVED
DS4DEVSZ DS    0XL4          DEVICE SIZE
DS4NOCYL DS    XL2             NBR LOGICAL CYLINDERS
DS4TKLC  DS    XL2             NUMBER OF TRKS PER LOGICAL CYLINDER
DS4DEVTK DS    XL2           NBR BYTES PER TRK AFTER HA AND R0
DS4DEVI  DS    XL1           CONSTANT FOR KEYED BLOCK
DS4DEVL  DS    XL1           CONSTANT FOR LAST BLOCK
DS4DEVK  DS    XL1           CONSTANT FOR NO KEY IN BLOCK
DS4DEVFG DS    XL1           DEVICE INDICATORS
DS4DEVTL DS    XL2           DEVICE TOLERANCE
DS4DEVDT DS    XL1           NBR OF DSCB'S PER TRACK
DS4DEVDB DS    XL1           NUMBER DIRECTORY BLOCKS/TRACK
DS4AMTIM DS    XL8           VSAM TIME STAMP
DS4VSIND DS    XL1           80=OWNED BY VSAM CATALOG
DS4VSCRA DS    XL2           REL TRK OF CRA
DS4R2TIM DS    XL8           CATALOG MATCH TIME STAMP
         DS    XL5           RESERVED
DS4F6PTR DS    XL5           CCHHR ADDR OF 1ST FMT 6 DSCB
DS4VTOCE DS    XL10          VTOC EXTENT, SEE EXTENT DSECT
         DS    XL25          RESERVED
.CKFMT5  AIF   ('&FMT5' NE 'YES').CKFMT6
*
*
*
         AIF   ('&DSECT' EQ 'YES').DSECT5
DSCBFMT5 DS    0CL140   *** FORMAT 5 DSCB DESCRIPTION ***
         AGO   .ST5
.DSECT5  ANOP
DSCBFMT5 DSECT ,        *** FORMAT 5 DSCB DESCRIPTION ***
.ST5     ANOP
*
DS5KEYID DS    XL4           KEY IDENTIFIER, X'05050505'
DS5AVEXT DS    0XL5          DESCRIBES AN AVAILABLE EXTENT
DS5AVTRK DS    XL2             RELATIVE TRACK ADDRESS
DS5AVCYL DS    XL2             NBR ENTIRELY UNUSED CYLINDERS IN EXTENT
DS5AVTKS DS    XL1             NBR TRACKS IN ADD'N TO FULL CYL'S IN XTN
DS5EXTAV DS    7XL5          UP TO 7 ADD'L EXTENTS IN ASCENDING ADDR
DS5FMTID DS    CL1           FORMAT IDENTIFIER, X'F5'
DS5MAVET DS    18XL5         UP TO 18 ADD'L EXTENTS
DS5PTRDS DS    XL5           CCHHR ADDR OF NEXT FMT 5 DSCB, OR ZEROS
*
*
*
.CKFMT6  AIF   ('&FMT6' NE 'YES').CKXTNT
*
*
*
         AIF   ('&DSECT' EQ 'YES').DSECT6
DSCBFMT6 DS    0CL140   *** FORMAT 6 DSCB DESCRIPTION ***
         AGO   .ST6
.DSECT6  ANOP
DSCBFMT6 DSECT ,        *** FORMAT 6 DSCB DESCRIPTION ***
.ST6     ANOP
*
DS6KEYID DS    XL4           KEY IDENTIFIER, X'06060606'
DS6AVEXT DS    0XL5          EXTENT OF SHARED SPACE
DS6AVTRK DS    XL2             RELATIVE TRK ADDR OF FIRST CYLINDER
DS6AVCYL DS    XL2             NBR FULL CYLINDERS SHARED
DS6DSTS  DS    XL1           NBR DATA SETS SHARING EXTENT
DS6EXTAV DS    7XL5          UP TO 7 ADD'L SHARED EXTENTS
DS6FMTID DS    CL1           FORMAT IDENTIFIER, X'F6'
DS6MAVET DS    18XL5         UP TO 18 ADD'L SHARED EXTENTS
DS6PTRDS DS    XL5           CCHHR OF NEXT FMT 6 DSCB, OR ZEROS
.CKXTNT  ANOP
         AIF   ('&FMT1' EQ 'YES').XTNT
         AIF   ('&FMT3' EQ 'YES').XTNT
         AIF   ('&FMT4' EQ 'YES').XTNT
         AGO   .END
.XTNT    ANOP
&SW      SETC  '1'
*
*
*
EXTENT   DSECT ,        *** EXTENT DESCRIPTION ***
EXTYP    DS    XL1           EXTENT TYPE, X'00'-UNUSED EXTENT FIELD,
*                              X'01'-EXTENT FOR DATA RECDS (PRIM DATA)
*                              X'02'-OVERFLOW AREA EXTENT
*                              X'04'-INDEX AREA FOR I S
*                              X'40'-USER LABEL EXTENT
*                              X'80'-SHARED EXTENT
*                              X'81' EXTENT IS ON CYLINDER BOUNDARIES
EXTSEQ   DS    XL1           EXTENT SEQUENCE, BEGINS AT 0 FOR ALL BUT
*                              I S. FOR I S, NBR STARTS AT 1 FOR EACH
*                              VOLUME
EXTLOLIM DS    XL4           CCHH ADDR OF EXTENT LOWER LIMIT
EXTUPLIM DS    CL4           CCHH ADDR OF EXTENT UPPER LIMIT
.END     ANOP
*
*
*
         AIF   ('&SW' EQ '1').NEEDC
         AIF   ('&DSECT' NE 'YES').XIT
.NEEDC   ANOP
&CSECT   CSECT
.XIT     MEXIT
         MEND
./ ADD NAME=ENDASM   0100-02135-02135-1227-00013-00013-00000-VBCMACS
*****************************************************************
* 8200479  PROJECT IMPLEMENTED 2/08/83, R.PARROTT.              *
*          THIS MACRO IS USED BY MEDICARE B ASSEMBLER ROUTINES; *
*          AND, WAS ORIGINALLY OBTAINED FROM RHODE ISLAND.      *
*                                                               *
*****************************************************************
         MACRO
&NAME    ENDASM
         DS    0H
&NAME    L     13,4(13)
         RETURN  (14,12),,RC=(15)
         MEXIT
         MEND
./ ADD NAME=EXCPIOB  0100-92344-92344-1416-00169-00169-00000-VBCMACS
         MACRO
&NAME    EXCPIOB &TYPE=DA,&ECB=0,&CCW=0,&DCB=0,&DDNAME=,&DSECT=NO
         LCLC  &N
&N       SETC  '&NAME'(1,2)
         AIF   ('&DSECT' EQ 'YES').DSECT
.NOSET   AIF   ('&TYPE' EQ 'DA').CKCCW
         AIF   ('&TYPE' EQ 'TA').CKCCW
         MNOTE 5,'&TYPE IS INVALID FOR TYPE, MUST BE DA OR TA'
         MEXIT
.CKCCW   AIF   ('&CCW' NE '0').CKDCB
         MNOTE 5,'CCW ADDRESS NOT GIVEN'
         MEXIT
.CKDCB   AIF   ('&DCB' EQ '0').DDNM
         AIF   (T'&DDNAME EQ 'O').GENECB
         MNOTE 5,'DCB AND DDNAME MUTUALLY EXCLUSIVE'
         MEXIT
.DDNM    AIF   (T'&DDNAME NE 'O').GENECB
         MNOTE 5,'EITHER DCB OR DDNAME MUST BE SPECIFIED'
         MEXIT
.DSECT   ANOP
EXCPIOB  DSECT ,        *** INPUT OUTPUT BLOCK DESCRIPTION ***
         AGO   .BDR
.GENECB  ANOP
         EJECT
         AIF   ('&ECB' NE '0').GENIOB
&N.ECB   DC    F'0' óóóóóóóóóóóóóóóóóó EVENT CONTROL BLOCK
.GENIOB  ANOP
*
*
         AIF   ('&TYPE' EQ 'DA').DHDR
*                       *** INPUT/OUTPUT BLOCK FOR TAPE USING EXCP
         AGO   .BDR
.DHDR    ANOP
*                       *** INPUT/OUTPUT BLOCK FOR DISK USING EXCP
.BDR     ANOP
*
*
         DS    0F óóóóóóóóóóóóóóóóóóóó ALIGN TO FULLWORD BOUNDARY
         AIF   ('&TYPE' EQ 'DA').DASTRT
&NAME    DS    0XL32 óóóóóóóóóóóóóóóóó IOB START, 32 BYTES
         AGO   .FLGS
.DASTRT  ANOP
&NAME    DS    0XL40 óóóóóóóóóóóóóóóóó IOB START, 40 BYTES
.FLGS    ANOP
&N.FLAGS DC    X'42' óóóóóóóóóóóóóóóóó COMMAND CHAIN + UNRELATED
         DC    X'00' óóóóóóóóóóóóóóóóó SYSTEM FLAGS BYTE
&N.UCSNS DC    XL2'00' óóóóóóóóóóóóóóó FIRST 2 SENSE BYTES AFTER UNT CH
         AIF   (T'&NAME EQ 'O').GENDSK
         AIF   ('&TYPE' NE 'DA').CKTP
.GENDSK  ANOP
*                                   *** DISK ***
*                                      BYTE 1 -
*                                        BIT 0 = COMMAND REJECT
*                                        BIT 3 = EQUIPMENT CHECK
*                                        BIT 4 = DATA CHECK
*                                        BIT 5 = OVERRUN
*                                        BIT 6 = TRK CONDITION CHK
*                                        BIT 7 = SEEK CHECK
*                                      BYTE 2 -
*                                        BIT 0 = DATA CHK IN COUNT
*                                        BIT 1 = WRITE TRAK OVERRUN
*                                        BIT 2 = END OF CYLINDER ON M-T
*                                        BIT 3 = INVALID COMMAND SEQ
*                                        BIT 4 = NO RECORD FOUND
*                                        BIT 5 = FILE PROTECTED
*                                        BIT 6 = MISSING ADDRESS MARKER
*                                        BIT 7 = OVERFLOW INCOMPLETE
.CKTP    ANOP
         AIF   (T'&NAME EQ 'O').GENTAP
         AIF   ('&TYPE' EQ 'TA').GENTAP
         AGO   .CC
.GENTAP  ANOP
*                                   *** TAPE ***
*                                      BYTE 1 -
*                                        BIT 0 = COMMAND REJECT
*                                        BIT 3 = EQUIPMENT CHECK
*                                        BIT 4 = DATA CHECK
*                                        BIT 5 = OVERRUN
*                                        BIT 6 = WORD COUNT ZERO
*                                        BIT 7 = CONVERTER CHECK
*                                      BYTE 2 -
*                                        BIT 0 = NOISE RECORD
*                                        BITS 1-2 , 01 = NO T.U.
*                                                   01 = NOT READY
*                                                   10 = RDY, NOT RWND
*                                                   11 = RDY, REWINDING
*                                        BIT 4 = AT LOAD POINT
*                                        BIT 5 = IN WRITE STATUS
*                                        BIT 6 = FILE PROTECTED
*                                        BIT 7 = T.U. NOT COMATABLE
.CC      ANOP
&N.ECBCC DS    0XL1 óóóóóóóóóóóóóóóóóó ECB COMPLETION CODE
*                                        7F = GOOD I/O COMPLETION
*                                        41 = PERM I/O ERROR, CSW 0/GOO
         AIF   ('&TYPE' EQ 'TA').ECB44
*                                        42 = EXTENT VIOL NO CSW
.ECB44   ANOP
*                                        44 = INTERCEPTED NO CSW
*                                        OTHER - HARD ERRORS
         AIF   ('&ECB' NE '0').USRECB
         AIF   (T'&NAME EQ 'O').USRECB
         AIF   ('&DSECT' EQ 'YES').USRECB
&N.ECBAD DC    A(&N.ECB) óóóóóóóóóóóóó ECB ADDRESS
         AGO   .CSW
.USRECB  ANOP
&N.ECBAD DC    A(&ECB)   óóóóóóóóóóóóó ECB ADDRESS
.CSW     ANOP
&N.CSW   DS    0XL8 óóóóóóóóóóóóóóóóóó CHANNEL STATUS WORD
&N.NXCCW DC    A(0) óóóóóóóóóóóóóóóóóó ADDR OF LAST EXEC COMM + 8
&N.UNST  DC    XL1'00' óóóóóóóóóóóó *** UNIT STATUS BYTE
*                                      BIT 0 = ATTENTION
*                                      BIT 1 = STATUS MODIFIER
*                                      BIT 2 = CONTROL UNIT END
*                                      BIT 3 = BUSY
*                                      BIT 4 = CHANNEL END
*                                      BIT 5 = DEVICE END
*                                      BIT 6 = UNIT CHECK (ERROR)
*                                      BIT 7 = UNIT EXCEPTION (EOF)
&N.CHST  DC    XL1'00' óóóóóóóóóóóó *** CHANNEL STATUS BYTE
*                                      BIT 0 = PCI
*                                      BIT 1 = WRONG LENGTH RECORD
*                                      BIT 2 = CHANNEL PROGRAM CHECK
*                                      BIT 3 = PROTECTION CHECK
*                                      BIT 4 = CHANNEL DATA CHECK
*                                      BIT 5 = CHANNEL CONTROL CHECK
*                                      BIT 6 = INTERFACE CONTROL CHK
*                                      BIT 7 = CHAINING CHECK
&N.RESID DC    H'0' óóóóóóóóóóóóóóóóóó RESIDUAL COUNT
&N.SIOCC DS    0XL1 óóóóóóóóóóóóóóóóóó COND CODE AFTER SIO COMMAND
&N.CCWAD DC    A(&CCW) óóóóóóóóóóóóóóó ADDRESS OF CHANNEL PROGRAM
         AIF   (T'&NAME EQ 'O').USRDCB
         AIF   ('&DSECT' EQ 'YES').USRDCB
         AIF   ('&DCB' EQ '0').GNDCB
.USRDCB  ANOP
&N.DCBAD DC    A(&DCB)   óóóóóóóóóóóóó ADDRESS OF DCB
         AGO   .RSTRT
.GNDCB   ANOP
&N.DCBAD DC    A(&N.DCB)  óóóóóóóóóóóó ADDRESS OF DCB
.RSTRT   DC    A(0) óóóóóóóóóóóóóóóóóó SYSTEM RESTART FIELD
         AIF   ('&TYPE' EQ 'DA').FW0
&N.BLKINC DC H'1' óóóóóóóóóóóóóóóóóóóó DCB BLOCK COUNT INCREMENT
         AGO   .RETRY
.FW0     DC    H'0' óóóóóóóóóóóóóóóóóó RESERVED
.RETRY   ANOP
&N.RET   DC    H'0' óóóóóóóóóóóóóóóóóó NBR RETRIES DURING ERRECOV
         AIF   ('&TYPE' EQ 'TA').GENDCB
&N.EXTM  DC    XL1'00' óóóóóóóóóóóóóóó EXTENT NBR BEGINNING WITH 0
&N.SEEK  DS    0XL6 óóóóóóóóóóóóóóóóóó SEEK ADDRESS
&N.BIN   DC    XL2'00' óóóóóóóóóóóóóóó BIN NBR
&N.SRCH  DS    0XL5 óóóóóóóóóóóóóóóóóó SEARCH ADDRESS
&N.CYL   DC    XL2'00' óóóóóóóóóóóóóóó CYLINDER NBR
         DC    X'00' óóóóóóóóóóóóóóóóó FIRST BYTE OF HEAD NBR, ZERO
&N.HEAD  DC    XL1'00' óóóóóóóóóóóóóóó HEAD NBR
&N.REC   DC    X'01' óóóóóóóóóóóóóóóóó RECORD NBR
&N.KEYL  DC    X'01'                   KEY LENGTH OF COUNT RECORD
&N.DTAL  DC    XL2'00'                 DATA LENGTH OF COUNT RECORD
*
*
*
.GENDCB  AIF   (T'&DDNAME EQ 'O').END
&N.DCB   DCB   DDNAME=DDNAME,MACRF=(E)
         ORG   &N.DCB+40
         DC    CL8'&DDNAME'            SET DDNAME IN DCB
         ORG
*
*
*
.END     ANOP
         MEND
./ ADD NAME=EXDADEB  0100-02135-02135-1227-00082-00082-00000-VBCMACS
         MACRO
         EXDADEB
         EJECT
*
*                       *** DATA EXTENT BLOCK DEFINITION ***
*
*                                 EXCP - DIRECT ACCESS
EXDADEB  DSECT
*
*                            *** APPENDAGE TABLE ***
*
XDEOEA   DS    F óóóóóóóóóóóóóóóóóóóóó ADDR OF END OF EXTNT APPEN
XDSIOA   DS    F óóóóóóóóóóóóóóóóóóóóó ADDR IF SIO APPENDAGE
XDPCIA   DS    F óóóóóóóóóóóóóóóóóóóóó ADDR OF PCI APPENDAGE
XDCENDA  DS    F óóóóóóóóóóóóóóóóóóóóó ADDR OF CHNL END APPENDAGE
XDABNA   DS    F óóóóóóóóóóóóóóóóóóóóó ADDR OF ABEND APPENDAGE
*
*                       *** DEB PREFIX ***
*
XDWKARA  DS    XL1 óóóóóóóóóóóóóóóóóóó I/O SUPPORT WORK AREA
XDDSCB   DS    XL7 óóóóóóóóóóóóóóóóóóó ADDR OF DSCB - BBCCHHR
XDDCBMK  DS    XL4 óóóóóóóóóóóóóóóóóóó DCB MODIFICATION MASK
XDDEBLN  DS    XL1 óóóóóóóóóóóóóóóóóóó DEB LENGTH
         DS    XL3 óóóóóóóóóóóóóóóóóóó RESERVED
*
*                            *** BASIC DEB ***
*
XDTCB    DS    F óóóóóóóóóóóóóóóóóóóóó TCB ADDRESS
XDDEB    DS    F óóóóóóóóóóóóóóóóóóóóó NEXT DEB ADDRESS
XDOFLG   DS    0XL1 óóóóóóóóóóóóóóóóóó DATA SET STATUS
*                                      BITS 0-1, 01=OLD,10=MOD,11=NEW
*                                      BIT 2 ON = LAST VOLUME
*                                      BIT3 ON = RELEASE CODED ON DD
*                                      BIT 4 ON = DCB MODIFICATION
*                                      BIT 5 ON = SPLIT CYLINDER
*                                      BIT 6 ON = NON-STD LABELS
XDIRB    DS    F óóóóóóóóóóóóóóóóóóóóó IRB ADDRESS FOR APPENDAGES
XDOPATB  DS    XL1 óóóóóóóóóóóóóóóóóóó I/O METHOD AND FINAL DISP
*                                      BIT 0 ON = SYSABEND OR SYSUDUMP
*                                      BITS 2-3, 01 = REREAD,
*                                        11 = LEAVE,
*                                      BITS 4-7, 0000 = INPUT
*                                        1111=OUTPUT
*                                        0011 = INOUT
*                                        0111 = OUTIN
*                                        0001 = RDBACK
*                                        0100 = UPDAT
XDQSNT   DS    XL1 óóóóóóóóóóóóóóóóóóó QUIESCE COUNT
XDFLG1   DS    XL1 óóóóóóóóóóóóóóóóóóó FLAG FIELD
*                                      BIT 0 ON = PASSWORD SUPPLIED
*                                      BIT 1 SET BY EOV AT EOF
*                                      BIT 5 SET BY EOV DURING CLOSE
         DS    XL1 óóóóóóóóóóóóóóóóóóó RESERVED
XDEXT    DS    0XL1 óóóóóóóóóóóóóóóóóó NUMBER OF EXTENTS
XDPURG   DS    F óóóóóóóóóóóóóóóóóóóóó ADDR OF USER PURGE IOB CHAIN
XDPRTY   DS    0XL1 óóóóóóóóóóóóóóóóóó TASK PRIORITY
XDPGECB  DS    F óóóóóóóóóóóóóóóóóóóóó ADDRESS OF PURGE ECB LIST
XDPK     DS    0XL1 óóóóóóóóóóóóóóóóóó BITS 0-3 = PROTECT KEY
*                                      BITS 4-7 = 1111, DEB IDENTIFIER
XDDCB    DS    F óóóóóóóóóóóóóóóóóóóóó ADDRESS OF DCB
XDXTSCL  DS    0XL1 óóóóóóóóóóóóóóóóóó EXTENT SCALE, 4 FOR DASD
XDAPPAD  DS    F óóóóóóóóóóóóóóóóóóóóó ADDRESS OF APPEN VECTOR TBL
XDXTNT   DS    0CL16 óóóóóóóóóóóó *** EXTENT DESCRIPTION SEGMENT ***
*                                      ONE SEGMENT PER EXTENT
XDFMSK   DS    0XL1 óóóóóóóóóóóóóóóóóó FILE MASK
XDUCB    DS    F óóóóóóóóóóóóóóóóóóóóó UCB ADDRESS
XDBB     DS    XL2 óóóóóóóóóóóóóóóóóóó BIN NUMBER
XDSTRCC  DS    XL2 óóóóóóóóóóóóóóóóóóó STARTING CYL NO
XDSTRHH  DS    XL2 óóóóóóóóóóóóóóóóóóó STARTING HEAD NO
XDENDCC  DS    XL2 óóóóóóóóóóóóóóóóóóó ENDING CYL NO
XDENDHH  DS    XL2 óóóóóóóóóóóóóóóóóóó ENDING HEAD NO
XDNMTRK  DS    XL2 óóóóóóóóóóóóóóóóóóó NUMBER TRKS IN EXTENT
*
*                       *** FOLLOWING FIELDS AFTER LAST EXTENT SEGMENT
*
XDVOLSQ  DS    XL2 óóóóóóóóóóóóóóóóóóó VOLUME SEQ NO
XDVOLNM  DS    XL2 óóóóóóóóóóóóóóóóóóó NUMBER OF VOLUMES
XDMEM    DS    CL8 óóóóóóóóóóóóóóóóóóó MEMBER NAME FOR PDS OUTPUT
*
*
*
         MEND
./ ADD NAME=FCB      0101-88118-88118-0922-00178-00178-00000-VBCMACS
         MACRO
&LABEL   FCB   &LPI
         LCLA  &A(180),&LP,&N,&WK,&CC,&LAST,&K,&K1,&LI
         LCLB  &Q,&C,&PASS,&CCH(12)
         LCLC  &CH,&BLANK,&B,&B1
&LAST    SETA  N'&SYSLIST              GET NBR OPERANDS
         AIF   (&LAST LT 3).MACBAD     ERROR IF LESS THAN 3
.OP1     AIF   (T'&SYSLIST(1) NE 'N').OP1BAD OP1 MUST BE NUMERIC
&LI      SETA  6                       ASSUME OP1 SAYS 6 LPI
         AIF   (&SYSLIST(1) EQ 6).OP2  BRANCH IF SO
         AIF   (&SYSLIST(1) NE 8).OP1BAD ERROR IF NOT 6 OR 8
&LI      SETA  8                       SHOW 8 LINES PER INCH
.OP2     AIF   (T'&SYSLIST(2) NE 'N').OP2BAD OP2 MUST BE NUMERIC
         AIF   (&SYSLIST(2) LT 2 OR &SYSLIST(2) GT 180).OP2BAD
&LP      SETA  &SYSLIST(2)             SET NBR LINES PER PAGE
.OP3     ANOP
&N       SETA  2                       SET OPERAND COUNTER TO 2
.OPN     ANOP                          START LOOP
&N       SETA  &N+1                    ADD 1 TO OPERAND COUNTER
         AIF   (&N GT &LAST).ENDSCAN   IF NO MORE OPERANDS
         AIF   (T'&SYSLIST(&N) NE 'N').OPH IF NOT NUMERIC
         AIF   (&N EQ 3).OP3BAD        ERROR IF OP3 NOT HYPHENATED
         AIF   (NOT &C).OPN            IGNORE OP IF INVALID &CC
&WK      SETA  &SYSLIST(&N)            SET WORK TO OPERAND VALUE
.OPN1    AIF   (&WK LT 1 OR &WK GT &LP).OPLBAD IF BAD LINE NBR
         AIF   (&A(&WK) NE 0 AND &A(&WK) NE &CC).DUPBAD IF DUPLICATE
&A(&WK)  SETA  &CC                     SET &WK-TH LINE TO &CC
         AGO   .OPN                    LOOP
.OPH     ANOP                          NON-NUMERIC OPERAND
&K       SETA  K'&SYSLIST(&N)          SET OPERAND CHAR COUNT
&K1      SETA  0                       SET CHAR COUNT TO 0
&WK      SETA  0                       WORK TO 0
&PASS    SETB  0                       SHOW 1ST PASS
.OPH1    ANOP                          START LOOP
&K1      SETA  &K1+1                   ADD 1 TO CHAR CTR
         AIF   (&K1 GT &K).OPH3        IF END OF STRING
&CH      SETC  '&SYSLIST(&N)'(&K1,1)   GET A CHARACTER
         AIF   ('&CH' LT '0' OR '&CH' GT '9').OPH2 IF NON-NUM
&WK      SETA  &WK*10+&CH              COMPILE DECIMAL NBR
         AGO   .OPH1                   LOOP
.OPH2    AIF   (&PASS OR '&CH' NE '-').HYPBAD ERROR IF NOT -
&CC      SETA  &WK                     SET CARRIAGE CHNL
&WK      SETA  0                       ZERO WORK
&PASS    SETB  1                       SHOW 2ND PASS
         AGO   .OPH1                   RETURN TO LOOP
.OPH3    AIF   (NOT &PASS).LOGBAD      ERROR IF 1ST PASS
         AIF   (&CC LT 1 OR &CC GT 12).OPCBAD IF CC BAD
&CCH(&CC) SETB 1                       SHOW CARRIAGE CHNL USED
&C       SETB  1                       SHOW VALID &CC
         AGO   .OPN1                   GO CHECK VALID LINE NBR
.ENDSCAN AIF   (&Q).QUITBAD            EXIT IF QUIT SWITCH
         AIF   (K'&LABEL LT 5).LABBAD1   LABEL MUST BE GT 4 BYTES
         AIF   (K'&LABEL GT 5).CKFCB2
&CH      SETC  '&LABEL'(K'&LABEL,1)     GET LAST CHAR OF LABEL
         AIF   ('&CH' EQ 'S' OR '&CH' EQ 'U').LABBAD2
.CKFCB2  AIF   ('&LABEL'(1,4) NE 'FCB2').LABBAD1
&N       SETA  0                       CHNL CTR TO 0
&C       SETB  0                       0 1ST TIME MSG SWITCH
&K       SETA  0                       0 TOP DOWN LINE CTR
&K1      SETA  &LP+1                   SET BOTTOM UP LINE CTR
.END11   ANOP                          START LOOP
&N       SETA  &N+1                    ADD 1 TO CHANNEL CTR
         AIF   (&N GT 12).BEGIN        IF ALL CHNLS DONE
         AIF   (&CCH(&N)).END11        IF CHNL IS ASSIGNED
         AIF   (&C).END12              IF NOT 1ST TIME
         MNOTE *,'THE FOLLOWING ASSIGNMENTS OF UNSPECIFIED '
         MNOTE *,'CARRIAGE CHANNELS PREVENT RUN-AWAY FORMS ---'
         MNOTE *,'A CHANNEL 1 MUST BE CODED OR A HASP0180 ERROR'
         MNOTE *,'MSG MAY RESULT AS STATED BY JES SOURCE ---'
&C       SETB  1                       SHOW 1ST TIME MSG WRITTEN
.END12   AIF   (&N EQ 9 OR &N EQ 12).END14 IF CHNL 9 OR 12
.END13   ANOP                          UNASSIGNED CHANNEL FOUND
&K       SETA  &K+1                    ADD 1 TO LINE CTR
         AIF   (&K GT &LP).END17       IF ALL LINES HAVE CHANNELS
         AIF   (&A(&K) NE 0).END13     IF THIS LINE HAS A CHNL
&WK      SETA  &K                      SET LINE NBR AND
         AGO   .END15                  GO ASSIGN CHNL TO IT
.END14   ANOP                          UNASSIGNED CHNL 9 OR 12
&K1      SETA  &K1-1                   LOWER LINE CTR BY 1
         AIF   (&K1 LT 1).END17        IF ALL LINES HAVE CHNLS
         AIF   (&A(&K1) NE 0).END14    IF THIS LINE HAS CHNL
&WK      SETA  &K1                     SET LINE NBR
.END15   ANOP                          ASSIGN CHANNEL TO LINE
&BLANK   SETC  ''                      ASSUME CHNL 10 OR GTR
         AIF   (&N GT 9).END16         IF CHNL GTR THAN 9
&BLANK   SETC  ' '                     ADD A BLANK FOR CHNL 9 OR LESS
.END16   MNOTE *,'   CARRIAGE CHANNEL &BLANK.&N IN LINE &WK'
&A(&WK)  SETA  &N                      ASSIGN CHNL NBR TO LINE
&CCH(&N) SETB  1                       SHOW CHANNEL ASSIGNED
         AGO   .END11                  BACK INTO LOOP
.END17   AIF   (&CCH(1)).END18         IF CHNL IS ASSIGNED
         MNOTE 4,'ERROR - CARRIAGE CHANNEL 1 IS NOT SPECIFIED AND'
         MNOTE *,'CANNOT BE INSERTED. CHANNEL 1 PUNCH IS'
         MNOTE *,'REQUIRED FOR 3211 CARRIAGE-RESTORE FUNCTION.'
         AGO   .QUITBAD
.END18   MNOTE 0,'WARNING - UNSPECIFIED CARRIAGE CHANNELS'
         MNOTE 0,'STARTING WITH CHANNEL &N CAN CAUSE'
         MNOTE 0,'RUN-AWAY FORMS.'
.BEGIN   ANOP
&LABEL   CSECT
&PASS    SETB  (&LI EQ 8)              &PASS = 1 FOR 8 LPI
&A(1)    SETA  &A(1)+16*&PASS          SET UP 1ST BYTE
&A(&LP)  SETA  &A(&LP)+16              SET UP LAST BYTE
&N       SETA  0                       CURRENT BYTE PTR TO 0
&K       SETA  0                       PREV NON-0 BYTE PTR TO 0
.DO      ANOP                          BUILD THE FCB
         DC    X'00',0C'               NOT A DEFAULT FCB'
         DC    AL1(&LP),0C'            FCB IS &LP BYTES LONG'
.DOCT    ANOP
&N       SETA  &N+1                    POINT TO THE NEXT BYTE
         AIF   (&A(&N) EQ 0).DOCT      LOOP IF ITS 0
&K       SETA  &N-&K-1                 COMPUTE NBR OF 0 BYTES
         AIF   (&K EQ 0).DO1           SKIP DOING THEM IF NONE
         DC    &K.AL1(0),0C'           LINES WITH NO CHNLS'
.DO1     ANOP
&WK      SETA  &A(&N)                  SET WORK TO BYTE'S VALUE
         AIF   (&WK EQ 16).DO3         IF 0 DIGIT ENTRY
&B       SETC  ''                      SET 2 LCLC VARIABLES
&B1      SETC  ''                      TO NULL STRINGS
         AIF   (&WK GT 9).DO2          IF ADCON IS 2 DIGITS
&B       SETC  ' '                     ELSE ADD BLANK TO COMMENT
.DO2     ANOP
&WK      SETA  &WK-&WK/16*16           GET CHNL NBR
         AIF   (&WK GT 9).DO2A         IF CHNL NBR 2 DIGITS
&B1      SETC  ' '                     ELSE ADD BLANK TO COMMENT
.DO2A    DC    AL1(&A(&N)),0C'     &B.CHAN &B1.&WK IS AT LINE &N'
         AGO   .DO4
.DO3     DC    AL1(&A(&N))
.DO4     AIF   (&N EQ &LP).END         IF LAST BYTE PROCESSED
&K       SETA  &N                      SET K TO LAST NON-0 BYTE
         AGO   .DOCT                   GO LOOP
.OP1BAD  MNOTE 4,'INVALID OPERAND 1 - &SYSLIST(1) -'
         MNOTE *,'FIRST OPERAND MUST BE EITHER 6 OR 8.'
         AGO   .QUITBAD
.OP2BAD  MNOTE 4,'INVALID OPERAND 2 - &SYSLIST(2) -'
         MNOTE *,'SECOND OPERAND MUST BE A NUMBER GREATER THAN 1'
         MNOTE *,'AND NOT GREATER THAN 180.'
         AGO   .QUITBAD
.OP3BAD  MNOTE 4,'INVALID OPERAND 3 - &SYSLIST(3) -'
         MNOTE *,'THIRD OPERAND MUST HAVE A CARRIAGE CHANNEL'
         MNOTE *,'NUMBER, A HYPHEN, AND A LINE NUMBER.'
         AGO   .QUITBAD
.OPLBAD  AIF   (T'&SYSLIST(&N) NE 'N').OPLBADA
         MNOTE 4,'INVALID OPERAND &N - &SYSLIST(&N) -'
         AGO   .OPLBADB
.OPLBADA MNOTE 4,'INVALID SUBOPERAND &WK OF OPERAND &N - &SYSLIST(&N)'
.OPLBADB MNOTE *,'LINE NUMBER MUST BE GREATER THAN 1 AND '
         MNOTE *,'NOT GREATER THAN &LP..'
         AGO   .QUITBAD
.DUPBAD  MNOTE 4,'DUPLICATE SPECIFICATION - OPERAND &N ASSIGNS'
         MNOTE *,'CARRIAGE CHANNEL &CC TO LINE &WK, WHICH WAS'
         MNOTE *,'PREVIOUSLY ASSIGNED CHANNEL &A(&WK)..'
         AGO   .QUITBAD
.HYPBAD  MNOTE 4,'INVALID OPERAND &N - &SYSLIST(&N) -'
         AIF   (&PASS).HYPBADA
         MNOTE *,'UNRECOGNIZABLE CHARACTER ''&CH'''
         AGO   .HYPBADB
.HYPBADA MNOTE *,'UNRECOGNIZABLE CHARACTER ''&CH'' IN LINE NUMBER.'
.HYPBADB ANOP
         AGO   .QUITBAD
.OPCBAD  MNOTE 4,'INVALID OPERAND &N - &SYSLIST(&N) -'
         MNOTE *,'CARRIAGE CHANNEL MUST BE GREATER THAN 0'
         MNOTE *,'AND NOT GREATER THAN 12.'
         AGO   .QUITBAD
.LOGBAD  MNOTE 4,'INTERNAL LOGIC ERROR AT OPERAND &N'
         AGO   .QUITBAD
.MACBAD  MNOTE 4,'TOO FEW OPERANDS SPECIFIED. AT LEAST LINES PER'
         MNOTE *,'INCH, LINES PER PAGE, AND ONE CARRIAGE CONTROL'
         MNOTE *,'PUNCH MUST BE SPECIFIED.'
.QUITBAD MNOTE *,'FCB WILL NOT BE GENERATED'
         MEXIT
.LABBAD1 MNOTE 4,'LABEL MUST BE AT LEAST 5 BYTES, BEGINNING WITH FCB2'
         MNOTE *,'LAST 4 ARE THE FCB IDENTIFIER'
         AGO   .QUITBAD
.LABBAD2 MNOTE 4,'LABELS FCB2S AND FCB2U ARE RESERVED FOR JES2 USE'
         AGO   .QUITBAD
.END     ANOP
         MEND
./ ADD NAME=FINDPCT  0100-02135-02135-1227-00139-00139-00000-VBCMACS
         MACRO
&LBL     FINDPCT &NBR,&ISOF=,&ANS=,&NBRLEN=,&NBRDEC=,&ISOFLEN=,        X
               &ISOFDEC=,&ANSLEN=,&ANSDEC=
         GBLA  &XQWK,&XXWK
         LCLA  &NL,&NS,&IL,&IS,&AL,&AS,&WL,&WS
         LCLA  &WRK,&WRK1,&RND
         AIF   (T'&NBR NE 'P').NBNP
&NL      SETA  L'&NBR
&NS      SETA  S'&NBR
.CKIO    AIF   (T'&ISOF NE 'P').ISNP
&IL      SETA  L'&ISOF
&IS      SETA  S'&ISOF
.CKAN    AIF   (T'&ANS NE 'P').ANNP
&AL      SETA  L'&ANS
&AS      SETA  S'&ANS
         AGO   .CKOVRD
.NBNP    AIF   (T'&NBRLEN EQ 'O').NBNP1
         AIF   (T'&NBRDEC EQ 'O').NBNP1
         AGO   .CKIO
.ISNP    AIF   (T'&ISOFLEN EQ 'O').ISNP1
         AIF   (T'&ISOFDEC EQ 'O').ISNP1
         AGO   .CKAN
.ANNP    AIF   (T'&ANSLEN EQ 'O').ANNP1
         AIF   (T'&ANSDEC EQ 'O').ANNP1
.CKOVRD  AIF   (T'&NBRLEN EQ 'O').OVRD1
         AIF   (T'&NBRLEN NE 'N').LENDEC
&NL      SETA  &NBRLEN
.OVRD1   AIF   (T'&NBRDEC EQ 'O').OVRD2
         AIF   (T'&NBRDEC NE 'N').LENDEC
&NS      SETA  &NBRDEC
.OVRD2   AIF   (T'&ISOFLEN EQ 'O').OVRD3
         AIF   (T'&ISOFLEN NE 'N').LENDEC
&IL      SETA  &ISOFLEN
.OVRD3   AIF   (T'&ISOFDEC EQ 'O').OVRD4
         AIF   (T'&ISOFDEC NE 'N').LENDEC
&IS      SETA  &ISOFDEC
.OVRD4   AIF   (T'&ANSLEN EQ 'O').OVRD5
         AIF   (T'&ANSLEN NE 'N').LENDEC
&AL      SETA  &ANSLEN
.OVRD5   AIF   (T'&ANSDEC EQ 'O').LENGCK
         AIF   (T'&ANSDEC NE 'N').LENDEC
&AS      SETA  &ANSDEC
.LENGCK  AIF   (&AL GT 16).ATL
&WRK     SETA  3+&IS-&NS+&AS
&RND     SETA  1
.INCNG   AIF   (&WRK GE 0).CKFIT
&WRK     SETA  &WRK+1
&RND     SETA  &RND+1
         AGO   .INCNG
.CKFIT   ANOP
         AIF   (&RND GT 8).RTL
&WRK1    SETA  &WRK/2
&WRK1    SETA  2*&WRK1
         AIF   (&WRK EQ &WRK1).ADHLF
&WRK1    SETA  &WRK/2+1
         AGO   .PLUSEXP
.ADHLF   ANOP
&WRK1    SETA  &WRK/2
.PLUSEXP ANOP
&WRK1    SETA  &WRK1+&NL+&IL
         AIF   (&WRK1 GT 16).TOOLONG
         AIF   (&XQWK EQ 1).CKWK2
         CNOP  4,8
         AIF   (&XXWK NE 1).B28
         B     *+20    BRANCH OVER WORK
         AGO   .GENXQ
.B28     B     *+28    BRANCH OVER WORK
.GENXQ   ANOP
&XQWK    SETA  1
XQWK     DS    PL16  16 BYTE DBLWD ALIGNED WORK AREA
         AIF   (&XXWK NE 1).GENXX
         AGO   .STINS
.CKWK2   AIF   (&XXWK EQ 1).STINS
         CNOP  4,8   ALIGN TO SECOND WORD OF DBLWD
         B     *+12   BRANCH OVER WORK
.GENXX   ANOP
&XXWK    SETA  1
XXWK     DS    PL8    8 BYTE DBLWD ALIGNED WORK AREA
.STINS   ANOP
&LBL     ZAP   XQWK,&NBR.(&NL)    GET DIVIDEND TO WORK
&WRK1    SETA  1
.CKAOF   AIF   (&WRK EQ 0).CKZ
         AIF   (&WRK LT 9).ALCK
&WRK     SETA  &WRK-9
         MP    XQWK,=P'1000000000'   MULTIPLY TO ALIGN
         AGO   .CKAOF
.ALCK    AIF   (&WRK LT 1).MPALGN
&WRK1    SETA  10*&WRK1
&WRK     SETA  &WRK-1
         AGO   .ALCK
.MPALGN  MP    XQWK,=P'&WRK1'     MULTIPLY NBR TO ALIGN
.CKZ     ZAP   &ISOF.(&IL),&ISOF.(&IL) IS DIVIDEND ZERO
         BNZ   *+14          NO, GO DIVIDE
         ZAP   &ANS.(&AL),=P'0'   YES, SET ANS TO ZERO
         B     *+40               AND LEAVE
         DP    XQWK,&ISOF.(&IL)   DIVIDE BY ISOF
&WRK1    SETA  5
&WRK     SETA  &RND
.RNDCLC  AIF   (&RND LT 2).ADDRND
&WRK1    SETA  10*&WRK1
&RND     SETA  &RND-1
         AGO   .RNDCLC
.ADDRND  ANOP
&WL      SETA  16-&IL
         ZAP   XXWK,=P'&WRK1'    GET ROUNDING FACTOR
         MVN   XXWK+7(1),XQWK+&WL-1    GET QUOTIENT SIGN
         AP    XQWK(&WL),XXWK    ADD ROUND FACTOR
&RND     SETA  &WRK
&WRK     SETA  &WRK/2
&WRK     SETA  2*&WRK
         AIF   (&WRK EQ &RND).RNDEVEN
&WRK     SETA  &AL-1
&WRK1    SETA  15-&IL
         MVN   &ANS.+&WRK.(1),XQWK+&WRK1  QUOTIENT SIGN TO ANS
&WRK     SETA  15-&IL-&RND/2
         MVO   &ANS.(&AL),XQWK(&WRK)   SIGNIFICANT DIGITS TO ANS
         MEXIT
.RNDEVEN ANOP
&WRK     SETA  15-&IL-&RND/2
&WRK1    SETA  15-&IL
         MVN   XQWK+&WRK.(1),XQWK+&WRK1   SHIFT SIGN IN WORK
&WRK     SETA  &WRK+1
         ZAP   &ANS.(&AL),XQWK(&WRK)   ROUNDED RESULT TO ANS
         MEXIT
.NBNP1   MNOTE 'NBRLEN AND NBRDEC REQUIRED WHEN NBR NOT PACKED'
         MEXIT
.ISNP1   MNOTE 'ISOFLEN AND ISOFDEC REQRD WHEN ISOF NOT PACKED'
         MEXIT
.ANNP1   MNOTE 'ANSLEN AND ANSDEC REQRD WHEN ANS NOT PACKED'
         MEXIT
.ATL     MNOTE '&ANS MORE THAN 16 BYTES'
         MEXIT
.TOOLONG MNOTE 'LENGTHS EXCEED 16 AFTER ALIGNMENT'
         MEXIT
.LENDEC  MNOTE 'LENGTHS AND DECIMALS MUST BE NUMERIC'
         MEXIT
.RTL     MNOTE 'RND FACTOR TOO LONG TO COMPUTE'
         MEXIT
         MEND
./ ADD NAME=IECDIRT  0100-02135-02135-1228-00194-00194-00000-VBCMACS
* %      GOTO IRTPLS;              /* GO TO THE PLS VERSION   */
*
         MACRO
         IECDIRT
         ORG   LCCAIRT
IRT      DS    0D
         SPACE 1
****************************************************************
*                                                              *
*   THIS MACRO DSECT DESCRIBES THE IOS RECOVERY  TABLE.        *
*   THE TABLE IS RELATED TO A CPU AND IS LOCATED IN THE        *
*   LCCA.                                                      *
*                                                              *
****************************************************************
         SPACE 1
IRTENTRY EQU   *
IRTFLA   DS    XL1                 FLAG BYTE A
         SPACE 1
IRTULCK  EQU   X'80'               UCB LOCK HELD
IRTLLCK  EQU   X'40'               LCH LOCK HELD
IRTSLCK  EQU   X'20'               SYNCH LOCK HELD
IRTCLCK  EQU   X'10'               CAT LOCK HELD
IRTALCK  EQU   X'08'               SALLOC LOCK HLED
IRTIOQA  EQU   X'04'               AN IOQ IS ACTIVE
IRTSLISN EQU   X'02'               RECOVERY SENSE INDICATOR
*        EQU   X'01'               RESERVED
         SPACE 1
IRTFLB   DS    XL1                 FLAG BYTE B
IRTNRST  EQU   X'80'               SUPPRESS RESTART OF CURRENT
*                                  CHANNEL
IRTSKRST EQU   X'40'               FIRST PASS OF CHAN. RESTART
IRTPCISW EQU   X'20'               FIRST PASS OF PCI
IRTCHBSY EQU   X'10'               ALL CHANNELS BUSY
IRTSMGR  EQU   X'08'               STORAGE MANAGER ENTERED
IRT12GT  EQU   X'04'               STORAGE MNGR - SMALL BLK GET
*        EQU   X'03'               RESERVED
         SPACE 1
IRTENVR  DS    XL1                 ENVIRONMENT FLAGS
IRTCHENT EQU   X'80'               CHAN SCHED ENTRANCE
IRTSLIHA EQU   X'40'               I/O INT HNDLR ENTRANCE
IRTSHTP  EQU   X'20'               SHOULDER TAP ENTRANCE
*        EQU   X'10'               RESERVED
IRTRSTI  EQU   X'08'               I/O RESTART IN PROGRESS
IRTHIO   EQU   X'04'               HIO IN PROCESS
IRTPINT  EQU   X'02'               I/O RESTART PSEUDO INTERRUPT
IRTCSINT EQU   X'01'               CHANNEL SCHEDULER ENTRANCE
*                                  * INITIALIZATION COMPLETE
         SPACE 1
         DS    XL1                 RESERVED
         SPACE 1
IRTSYMSK DS    XL1                 OLD SYSTEM MASK SET BY
*                                  CHANNEL SCHEDULER
IRTCCH   DS    XL1                 CHANNEL CHECK HANDLER
*                                  COMMUNICATION BYTE
IRTCMRST DS    XL1                 RESTART INDICATOR SET BY CHAN
*                                  SCHEDULER WHEN ENTERED. SET
*                                  IN THE OTHER CPU WHEN SHLDER
*                                  TAP IS TO BE DONE.
*                                    FF = IOS ACTIVE AND RESTART
*                                       CAN BE DONE VIA RESTART
*                                       ROUTINE
*                                    00 = IOS NOT ACTIVE. SHLDER
*                                       TAP TO BE USED TO RESTRT
         DS    XL1                 RESERVED
IRTUCB   DS    A                   ADDRESS OF LOCKED UCB
IRTLCH   DS    A                   ADDRESS OF LOCKED LCH
IRTIOQ   DS    A                   ADDRESS OF ACTIVE IOQ
IRTCHNL  DS    A                   CURRENT CHANNEL USED BY TCH
IRTNIOQ  DS    A                   SAVED ADDRESS OF NEXT IOQ
IRTPSTSV DS    A                   IOQ SAVE AREA USED BY
*                                  CHANNEL SCHEDULER
IRTCHMSK DS    A                   RESTART CHANNEL MASK THIS CPU
IRTRTNSV DS    D                   USED BY CHAN SCHED AND SHLDR
*                                  TAP FOR REG 13 AND 14 SAVE
IRTTCHSV DS    A                   TCH ROUTINE LINK SAVE
IRTDDSV  DS    A                   DEVICE DEPENDENT SIO SUBROUTINE
IRTSIOSV DS    A                   POST SIO LINK SAVE
IRTSTASV DS    A                   STATUS ROUTINE LINK SAVE
IRTRSTSV DS    A                   RESTART ROUTINE LINK SAVE
IRTDIESV DS    A                   DIE ROUTINE LINK SAVE
IRTSENSV DS    A                   SENSE ROUTINE LINK SAVE
IRTPCISV DS    A                   PCI ROUTINE LINK SAVE
IRTPRGSV DS    A                   CHECK PURGE ROUTINE LINK SAVE
IRTCSME  DS    A                   SAVED CHANNEL SEARCH MODULE
*                                  TABLE ENTRY ADDRESS
IRTNSRB  DS    A                   ADDR OF SRB FOR NEW WORK
*                                  FROM DIE.
IRTFRRWA DS    A                   ADDR OF FRR WORKAREA
IRTATTSV DS    A                   ATTENTION ROUTINE LINK SAVE
IRTCCHSV DS    A                   CCH INTERFACE LINK SAVE
IRTINTSV DS    A                   SLIH ROUTINE LINK SAVE
IRTSTSSV DS    A                   TEST SCHEDULABILITY SAVE AREA
IRTLCHAD DS    A                   SAVED LCH ADDR FOR CHAN RSTRT
IRTEL    EQU   128                 ENTRY LENGTH
         MEND
*%IRTPLS: ;
*
*/*************************************************************/
*/*                                                           */
*/*  THIS STRUCTURE DESCRIBES THE IOS  RECOVERY  TABLE.  THE  */
*/*  TABLE IS RELATED TO A CPU AND IS LOCATED  IN  THE  LCCA. */
*/*  A RESPECIFY SHOULD BE DONE ON IRT TO  BASE  IT  ON  THE  */
*/*  ADDRESS OF LCCAIRT.                                      */
*/*                                                           */
*/*************************************************************/
*/*                                                           */
*/*    05/30/72     LEVEL=00                                  */
*/*                                                           */
*/*************************************************************/
*
*   DCL 1 IRT  BDY(WORD)  BASED(IRTPTR),
*
*       2 IRTENTRY  PTR(31),       /* LABEL IDENTIFICATION    */
*         3 IRTFLA  CHAR(1),       /* FLAG BYTE A             */
*           4 IRTULCK BIT(1),      /* UCB LOCK HELD           */
*           4 IRTLLCK BIT(1),      /* LCH LOCK HELD           */
*           4 IRTSLCK BIT(1),      /* SYNCH LOCK HELD         */
*           4 IRTCLCK BIT(1),      /* CAT LOCK HELD           */
*           4 IRTALCK BIT(1),      /* SALLOC LOCK HELD        */
*           4 IRTIOQA BIT(1),      /* AN IOQ  IS ACTIVE       */
*           4 IRTSLISN BIT(1),     /* RECOVERY SENSE IND      */
*           4 *       BIT(1),      /* RESERVED                */
*
*         3 IRTFLB  CHAR(1),       /* RESERVED                */
*           4 IRTNRST BIT(1),      /* SUPPRESS RESTART FOR
*                                     CURRENT CHANNEL         */
*           4 IRTSKRST BIT(1),     /* FIRST PASS OF CHAN RSTRT*/
*           4 IRTPCISW BIT(1),     /* FIRST PASS OF PCI       */
*           4 IRTCHBSY BIT(1),     /* ALL CHANNELS BUSY       */
*           4 IRTSMGR  BIT(1),     /* STORAGE MANAGER ENTERED */
*           4 IRT12GT  BIT(1),     /* SMALL BLK GET           */
*           4 *        BIT(2),     /* RESERVED                */
*
*         3 IRTENVR CHAR(1),       /* ENVIRONMENT INDICATORS  */
*           4 IRTCHENT BIT(1),     /* CHAN. SCHED. ENTRANCE   */
*           4 IRTSLIHA BIT(1),     /* I/O INT HNDLR ENTRANCE  */
*           4 IRTSHTP  BIT(1),     /* SHOULDER TAP ENTRANCE   */
*           4 *        BIT(1),     /* RESERVED                */
*           4 IRTRSTI  BIT(1),     /* I/O RESTART IN PROGRESS */
*           4 IRTHIO   BIT(1),     /* HIO IN PROCESS          */
*           4 IRTPINT  BIT(1),     /* I/O RESTART PSEUDO INT  */
*           4 IRTCSINT BIT(1),     /* CHAN SCHED INIT DONE    */
*
*         3 *         BIT(8),      /* RESERVED                */
*       2 IRTSYMSK  CHAR(1),       /* OLD SYSTEM MASK SET BY
*                                     CHANNEL SCHEDULER       */
*       2 IRTCCH    CHAR(1),       /* CCH COMMUNICATION BYTE  */
*       2 IRTCMRST  CHAR(1),       /* RESTRT IND. SET BY CHAN.
*                                     SCHED WHEN ENTERED. ALSO
*                                     SET IN THE OTHER CPU
*                                     WHEN SHOULDER TAP TO BE
*                                     DONE
*                                     FF = IOS ACTIVE AND CAN
*                                       RESTART VIA RSTSRT RTN
*                                     00 = IOS NOT ACTIVE.
*                                     SHOULDER TAP TO BE USED
*                                     TO RESTART              */
*       2 *         CHAR(1),       /* RESERVED                */
*       2 IRTUCB    PTR(31),       /* ADDRESS OF LOCKED UCB   */
*       2 IRTLCH    PTR(31),       /* ADDRESS OF LOCKED LCH   */
*       2 IRTIOQ    PTR(31),       /* ADDRESS OF ACTIVE IOQ   */
*       2 IRTCHNL   PTR(31),       /* TCH CURRENT CHANNEL     */
*       2 IRTNIOQ   PTR(31),       /* SAVED ADDR OF NEXT IOQ  */
*       2 IRTPSTSV  PTR(31),       /* IOQE SAVE AREA USED BY
*                                     CHANNEL SCHEDULER       */
*       2 IRTCHMSK  CHAR(4),       /* RESTART CHANNEL MASK FOR
*                                     THIS CPU                */
*       2 IRTRTNSV  CHAR(8),       /* USED BY CHAN SCHED AND
*                                     SHLDR TAP FOR RG 13 & 14*/
*       2 IRTTCHSV  PTR(31),       /* TCH ROUTINE LINK SAVE   */
*       2 IRTDDSV   PTR(31),       /* DEVICE DEPENDENT SIO
*                                     SUBROUTINE LINK SAVE    */
*       2 IRTSIOSV  PTR(31),       /* POST SIO LINK SAVE      */
*       2 IRTSTASV  PTR(31),       /* STATUS SUBRTN LINK SAVE */
*       2 IRTRSTSV  PTR(31),       /* RESTART RTN LINK SAVE   */
*       2 IRTDIESV  PTR(31),       /* DIE ROUTINE LINK SAVE   */
*       2 IRTSENSV  PTR(31),       /* SENSE ROUTINE LINK SAVE */
*       2 IRTPCISV  PTR(31),       /* PCI ROUTINE LINK SAVE   */
*       2 IRTPRGSV  PTR(31),       /* CHECK PURGE ROUTINE
*                                     LINK SAVE               */
*       2 IRTCSME   PTR(31),       /* SAVED CHANNEL SEARCH
*                                     MODULE TABLE ENTRY ADDR */
*       2 IRTNSRB   PTR(31),       /* ADDR OF SRB FOR NEW WORK
*                                     FROM DIE.               */
*       2 IRTFRRWA  PTR(31),       /* ADDR OF FRR WORKAREA    */
*       2 IRTATTSV  PTR(31),       /* ATTN. ROUTINE LINK SAVE */
*       2 IRTCCHSV  PTR(31),       /* CCH INTERFACE LINK SAVE */
*       2 IRTINTSV  PTR(31),       /* SLIH ROUTINE LINK SAVE  */
*       2 IRTSTSSV  PTR(31),       /* TEST SCHEDULABILITY SAVE*/
*       2 IRTLCHAD  PTR(31),       /* LCH ADDR FOR CHAN RSTRT */
*       2 IRTEND    CHAR(0);       /* END OF IRT              */
*
*%DCL IRTEL CHAR;                  /* ENTRY LENGTH            */
*%IRTEL='ADDR(IRTEND)-ADDR(IRTENTRY)';
./ ADD NAME=IKJECBS  0100-02135-02135-1228-00044-00044-00000-VBCMACS
*        %GOTO TSECBBSL ; /*
         MACRO
         IKJECBS
TSECB    DSECT
TSCECB   DS    1F .     WORD FOR POSTING
TSCECB1  DS    1F .     ECB FOR POSTING TSC SUB TASK
TSCECB2  DS    1F .     TERMINATION ECB FOR IKJEAT06
TSCECB3  DS    1F .     ECB POSTED BY RCT QUIESCE AND TSIP FOR SWAP IN
*                       WAITED ON BY IKJEAT03 DURING LOGON IMAGE PROC
TSCECB4  DS    1F .     ECB WAITED ON BY IKJEAT06 WHEN  MODIFY FOR
*                       REGION IS IN PROGRESS- IT IS POSTED BY
*                       T03 WHEN REGION COMPLETLY INITIALIZED OR BY
*                       T05 WHEN REGION CANNOT INITIALIZE
TSCECB5  DS    1F                 WAITED ON BY IKJEAT06 FOR TERM.
*                                 POSTED BY IKJEAT03
TSCECB6  DS    1F                 IKJEAT06 WTOR ECB
TSCECB7  DS    1F                 WAITED ON BY IKJEAT03 WHEN DEAD
*                                 RCTS ARE FOUND DURING STOP PROCESS.
*                                 IMPORTANT..IT IS NEVER POSTED.
TSCECB8  DS    1F                 IKJEAT06 FSTOP WTOR ECB
**/
         MEND
* %TSECBBSL:  ;
* DECLARE
*   1 TSECB    BASED(TSECBPTR),
*    2 TSCECB   FIXED(31),           /* WORD FOR POSTING             */
*    2 TSCECB1  FIXED(31),           /* ECB FOR POSTING TSC SUB TASK */
*    2 TSCECB2  FIXED(31),           /* TERMINATION ECB FOR IKJEAT06 */
*    2 TSCECB3  FIXED(31),           /* POSTED BY RCT QUIESCE AND TSIP
*                                       FOR SWAP IN - WAITED ON BY T03
*                                       DURING LOGON IMAGE PROCESS   */
*    2 TSCECB4  FIXED(31),        /* WAITED ON BY IKJEAT06 WHEN
*                                       MODIFY FOR REGION IS IN PROGR
*                                       - IT IS POSTED BT T03 WHEN INIT
*                                       IS COMPLETE OR T05 IF REGION
*                                       CANNOT INITIALIZE            */
*    2 TSCECB5  FIXED(31),        /* WAITED BY T06 FOR TERM.
*                                 POSTED BY IKJEAT03 */
*    2 TSCECB6  FIXED(31),        /* WAITED ON BY T06 WTOR ECB*/
*    2 TSCECB7  FIXED(31),        /* WAITED ON BY IKJEAT03 WHEN DEAD
*                                 RCTS FOUND DURING STOP PROCESSING.
*                                 IMPORTANT. IT IS NEVER POSTED. */
*    2  TSCECB8  FIXED(31);       /* IKJEAT06 FSTOP WTOR ECB */
*
./ ADD NAME=IKJRCB   0100-02135-02135-1228-00272-00272-00000-VBCMACS
*        %GOTO RCBBSL   ; /*
         MACRO
         IKJRCB
RCB      DSECT
RCBRCT   DS    A .       ADDR OF RCT'S TCB
RCBECB   DS    1F .      RCT'S ECB
RCBDIECB DS    1F .      TSC'S ECB
RCBTJID  DS    1H .      TERM JOB ID OF CURRENT TS JOB EXEC IN REGION
RCBRSIZE DS    1H .      SIZE OF THIS TS REGION
RCBLSQSZ DS    1H .      SIZE OF LOCAL SQS FOR THIS TS REGION
RCBNMBR  DS    CL1 .     REGION NUMBER ASSIGNED TO THIS REGION
RCBPKEY  DS    CL1 .     PROTECT KEY OF CURRENT TS JOB IN THIS REGION
RCBUMSMN DS    CL1 .     NO OF MAIN STORAGE MAP ENTRIES
RCBFLG   DS    X .       FIRST BYTE OF RCB FLAGS
RCBFQU   EQU   X'80' .   QUIESCE FLAG-CURR USER SHOULD BE QUIESCED
RCBFSO   EQU   X'40' .   SWAP OUT    -CURR USER SHOULD BE SWAPPED OUT
RCBFSI   EQU   X'20' .   SWAP IN     -CURR USER SHOULD BE SWAPPED IN
*                        USERS TJID IS IN THE RCB
RCBFRS   EQU   X'10' .   RESTORE FLAG-USER WHOSE TJID IS IN THE RCB
RCBOCAB  EQU   X'08' .   FUNCTION FLAG SET BY IKJEAS02 TO INVOKE
*                        IKJEAT07
RCBSTR3  EQU   X'04' .   INDICATES TO T05 MODIFY FOR REGION STOP WAS
*                        ISSUED AND T05 MUST POST TSCECB4 TO GET T06
*                        OUT OF WAIT
RCBFAT   EQU   X'02' .   ATTENTION EXIT- A ATTN EXIT IS REQ FOR A USER
RCBFND   EQU   X'01' .   END RCT - RCT SHOULD RETURN TO TSC-NORMALLY
RCBFLG2  DS    X .       SECOND BYTE OF RCB FLAGS
RCBFSE   EQU   X'80' .   SWAP END FLAG-SWAP I/O HAS COMPLETED
RCBSTOP  EQU   X'40' .   REGION STOP REQUESTED
RCBACTV  EQU   X'20' .   INDICATES ACTIVE RCT. SET TO 1 BY RCT INIT
*                        RESET TO 0 BY RCT TERM
RCBSTR1  EQU   X'10' .   INDICATES REGION START REQUESTED;ATTACH AN RCT
RCBSTR2  EQU   X'08' .   INDICATES REGION START REQUESTED; CREATE SWAP
*                        LOGON IMAGE
RCBDEAD  EQU   X'04' .   INDICATES THE REGION HAS TERMINATED ABNORMALLY
RCBLOGPR EQU   X'02' .   INDICATE LOGON IMAGE PROCESSING IN IKJEAT03
RCBMODFY EQU   X'01' .   INDICATES TO T06 MODIFY IN PROGRESS FOR THIS
*                        REGION - DO NOT ACCEPT ANOTHER MODIFY UNTIL
*                        RESET BY R01 WHEN REG INIT COMPLETE OR R00
*                        IF REGION CANCELLED DUE TO INSUFF CORE
RCBFBQE  DS    CL1 .     USED TO SAVE NUMBER OF FBQE'S
RCBUTTMQ DS    1H .      TT MAP QUE PTR TO LOC OF LOGON IMAGE ON SWAP
RCBCUSE  DS    1H .      NO OF USERS CURR LOGGED ON IN THIS REGION
*                        TSC WILL INCREMENT COUNT BEFORE DISCONNECT
*                        TSC WILL DECREMENT COUNT IN LOGON
RCBEXTNT DS    A .       PTR TO TJBX CREATED SURING LOGON INIT FOR REG
RCBUMSM  DS    A .       PTR TO MS MAP DESCRIBING THIS REGION LOGON
RCBSDCB  DS    A .       ADDR OF SWAP DS CONTROL BLOCK
RCBPQE   DS    A .       ADDR OF PQE PTR IN SQS-FOR RCT'S REGION INIT
RCBPRG   DS    CL16 .    SVC PURGE I/O PARM LIST
RCBQPL   EQU   RCBPRG+12 ADDR OF QUIESCE I/O  PARM LIST
RCBSTECB DS    1F .      ECB WAITED ON BY THE TSC. USED TO INDICATE
*                        END OF RTC PROCESSING IN EVENT OF SUBSYSTEM
*                        RECOVERY
RCBRCOVR DS    X .       INDICATE CURRENT STATE OF RCT FOR RECOVERY
*                        PURPOSES IN EVENT SUBSYSTEM FAILURE
RCBRCOV0 EQU   X'00' .   RCT RECOVER IKJEAR01 INIT
RCBRCOV1 EQU   X'04' .   RCT RECOVER IKJEAR01 MAINLINE
RCBRCOV2 EQU   X'08' .   RCT RECOVER RCBOCAB-IKJEAT07
RCBRCOV3 EQU   X'0C' .   RCT RECOVER RCBFRS-IKJEAR03
RCBRCOV4 EQU   X'10' .   RCT RECOVER RCBFAT-IKJEAR04
RCBRCOV5 EQU   X'14' .   RCT RECOVER RCBFQU-IKJEAR02
RCBRCOV6 EQU   X'18' .   RCT RECOVER RCBFND RCBCUSE EQ0
RCBRCOV7 EQU   X'1C' .   RCT RECOVER RCBFND RCBCUSE NE0
RCBRSFLG DS    X .       INDICATORS FOR OUT OF CORE ABEND
RCBRSTRT EQU   X'80' .   INDICATE RESTORE STARTED
RCBTCBDN EQU   X'40' .   INDICATE TCBS REQUEUED
RCBQELCM EQU   X'20' .   INDICATE QEL RESTORE PROCESSING COMPLETE
RCBTQECM EQU   X'10' .   INDICATE TQE RESTORE PROCESSING COMPLETE
RCBRQIQC EQU   X'08' .   INDICATE RQE AND IQE RESTORE PROCESSING COMP
RCBIORSC EQU   X'04' .   INDICATE I/O RESTORE PROCESSING COMPLETE
RCBWTORC EQU   X'02' .   INDICATE WTOR RESTORE PROCESSING COMPLETE
RCBTACMP EQU   X'01' .   INDICATE TRANSIENT AREA RESTORE  COMPLETE
RCBQUFLG DS    X .       INDICATIONS FOR OUT OF CORE ABEND
RCBQUSTR EQU   X'80' .   QUIESCE STARTED
RCBIOSTR EQU   X'40' .   INDICATE 1ST ENTRY I/O PURGE COMPLETE
RCBTADON EQU   X'20' .   TRANSIENT AREA QUIESCE DONE
RCBWTORD EQU   X'10' .   WTOR QUIESCE DONE
RCBQELDN EQU   X'08' .   QEL QUIESCE DONE
RCBIODON EQU   X'04' .   INDICATE 2ND ENTRY I/O PURGE COMPLETE
RCBTQEDN EQU   X'02' .   TQE QUIESCE  COMPLETE
RCBRQIQD EQU   X'01' .   INDICATE IQE AND RQE COMPLETE
RCBSWTCH DS    X .       SET & RESET BY IKJEAT07 TO INDICATE METHOD OF
*                        SEARCH BY IKJEAT07
RCBSTSP  EQU   X'80' .   FLAG USED FOR STATUS STOP RECURSION     A44022
RCBSWTON EQU   X'40' .   WHEN SET WITH BIT 0 SEARCH BY TJID & TCB ADDR
RCBEXTRN EQU   X'20' .   INDICATE USAGE OF EXTERNAL RTN BY IKJEAR02
*                        AND IKJEAR03
RCBRMSAL EQU   X'10' .   SOLID MACHINE CHECK IN USER REGION
RCBRMS1U EQU   X'08' .   INTERMITTENT MACHINE CHECK IN USER REGION
RCBZQRF  EQU   X'04' .   IF ON,ZERO RCBRSFLG AND RCBQUFLG        A44022
*                        BEFORE TSEVENT LOGOFF                   A44022
RCBCONID DS    CL1 .     CONSOLE ID OF START OR MODIFY COMMAND
RCBSTAEN DS    X .       INDEX VALUE TO SCHEDULE STAE RETRY ROUTINES
*                        FOR THE RCT
RCBSTAE0 EQU   X'00' .   STAE EXIT 0
RCBSTAE1 EQU   X'04' .   STAE EXIT 1
RCBSTAE2 EQU   X'08' .   STAE EXIT 2
RCBSTAE3 EQU   X'0C' .   STAE EXIT 3
RCBSTAE4 EQU   X'10' .   STAE EXIT 4
RCBSTAE5 EQU   X'14' .   STAE EXIT 5
RCBSTAE6 EQU   X'18' .   STAE EXIT 6
RCBSTAE7 EQU   X'1C' .   STAE EXIT 7
         DS    CL2 .     RESERVED
RCBEND   DS    0F .
**/
         MEND
* %RCBBSL  :  ;
* DECLARE
*   1 RCB      BASED(RCBPTR),
*    2 RCBRCT   PTR(31),             /* ADDR OF RCT'S TCB            */
*    2 RCBECB   FIXED(31),           /* RCT'S ECB                    */
*    2 RCBDIECB FIXED(31),           /* TSC'S ECB                    */
*    2 RCBTJID  FIXED(15),           /* TERM JOB ID OF CURRENT TS
*                                       JOB EXEC IN REGION           */
*    2 RCBRSIZE FIXED(15),           /* SIZE OF THIS TS REGION       */
*    2 RCBLSQSZ FIXED(15),           /* SIZE OF LOCAL SQS FOR THIS
*                                       TS REGION                    */
*    2 RCBNMBR  CHAR(1),             /* REGION NUMBER ASSIGNED TO
*                                       THIS REGION                  */
*    2 RCBPKEY  CHAR(1),             /* PROTECT KEY OF CURRENT TS
*                                       JOB IN THIS REGION           */
*    2 RCBUMSMN CHAR(1),             /* NO OF MAIN STORAGE MAP
*                                       ENTRIES                      */
*    2 RCBFLG   CHAR(1),             /* FIRST BYTE OF RCB FLAGS      */
*     3 RCBFQU   BIT(1),             /* QUIESCE FLAG-CURR USER
*                                       SHOULD BE QUIESCED           */
*     3 RCBFSO   BIT(1),             /* SWAP OUT                     */
*     3 RCBFSI   BIT(1),             /* SWAP IN USERS TJID IS IN THE
*                                       RCB                          */
*     3 RCBFRS   BIT(1),             /* RESTORE FLAG-USER WHOSE TJID
*                                       IS IN THE RCB EQU EQU        */
*     3 RCBOCAB  BIT(1),             /* FUNCTION FLG SET BY IKJEAS02
*                                       TO INVOKE IKJEAT07           */
*     3 RCBSTR3  BIT(1),             /* TELLS T05 TO POST TSCECB4 TO
*                                       GET T06 OUT OF WAIT FROM
*                                       MODIFY COMMAND FOR REG STOP  */
*     3 RCBFAT   BIT(1),             /* ATTENTION EXIT- A ATTN EXIT
*                                       IS REQ FOR A USER            */
*     3 RCBFND   BIT(1),             /* END RCT - RCT SHOULD RETURN
*                                       TO TSC-NORMALLY              */
*    2 RCBFLG2  CHAR(1),             /* SECOND BYTE OF RCB FLAGS     */
*     3 RCBFSE   BIT(1),             /* SWAP END FLAG-SWAP I/O HAS
*                                       COMPLETED                    */
*     3 RCBSTOP  BIT(1),             /* REGION STOP REQUESTED        */
*     3 RCBACTV  BIT(1),             /* INDICATES ACTIVE RCT. SET TO
*                                       1 BY RCT INIT RESET TO 0 BY
*                                       RCT TERM                     */
*     3 RCBSTR1  BIT(1),             /* INDICATES REGION START
*                                       REQUESTED; ATTACH AN RCT     */
*     3 RCBSTR2  BIT(1),             /* INDICATES REGION START
*                                       REQUESTED; CREATE SWAP LOGON
*                                       IMAGE                        */
*     3 RCBDEAD  BIT(1),             /* REGION TERMINATED ABNORMALLY */
*     3 RCBLOGPR BIT(1),             /* INDICATE LOGON IMAGE
*                                       PROCESSING IN IKJEAT03       */
*     3 RCBMODFY BIT(1),             /* INDICATE TO T03 MODIFY IN PROG
*                                       FOR THIS REG - DO NOT ACCEPT
*                                       ANOTH MODIFY UNTIL RESET BY R01
*                                       WHEN REG INIT COMPLETE OR R00
*                                       WHEN REG CANCELLED DUE TO
*                                       INSUFFICIENT CORE            */
*    2 RCBFBQE  CHAR(1),             /* USED TO SAVE NUMBER OF
*                                       FBQE'S                       */
*    2 RCBUTTMQ FIXED(15),           /* TT MAP QUE PTR TO LOC OF
*                                       LOGON IMAGE ON SWAP          */
*    2 RCBCUSE  FIXED(15),           /* NO OF USERS CURR LOGGED ON
*                                       IN THIS REGION TSC WILL
*                                       INCREMENT COUNT BEFORE
*                                       DISCONNECTTSC WILL DECREMENT
*                                       COUNT IN LOGON               */
*    2 RCBEXTNT PTR(31),             /* PTR TO TJBX CREATED SURING
*                                       LOGON INIT FOR REG           */
*    2 RCBUMSM  PTR(31),             /* PTR TO MS MAP DESCRIBING
*                                       THIS REGION LOGON            */
*    2 RCBSDCB  PTR(31),             /* ADDR OF SWAP DS CONTROL
*                                       BLOCK                        */
*    2 RCBPQE   PTR(31),             /* ADDR OF PQE PTR IN SQS-FOR
*                                       RCT'S REGION INIT            */
*    2 RCBPRG   CHAR(12),            /* SVC PURGE I/O PARM LIST      */
*    2 RCBQPL   PTR(31),             /* ADDR OF QUIESCE I/O          */
*    2 RCBSTECB FIXED(31),           /* ECB WAITED ON BY THE TSC.
*                                       USED TO INDICATE END OF RTC
*                                       PROCESSING IN EVENT OF
*                                       SUBSYSTEM RECOVERY           */
*    2 RCBRCOVR CHAR(1),             /* INDICATE CURRENT STATE OF
*                                       RCT FOR RECOVERY PURPOSES IN
*                                       EVENT SUBSYSTEM FAILURE      */
*%DCL RCBRCOV0 CHAR;
*%RCBRCOV0 ='''00''X';               /* RCT RECOVER IKJEAR01 INIT    */
*%DCL RCBRCOV1 CHAR;
*%RCBRCOV1 ='''04''X';               /* RCT RECOVER IKJEAR01 MAINLINE*/
*%DCL RCBRCOV2 CHAR;
*%RCBRCOV2 ='''08''X';               /* RCT RECOVER RCBOCAB-IKJEAT07 */
*%DCL RCBRCOV3 CHAR;
*%RCBRCOV3 ='''0C''X';               /* RCT RECOVER RCBFRS-IKJEAR03  */
*%DCL RCBRCOV4 CHAR;
*%RCBRCOV4 ='''10''X';               /* RCT RECOVER RCBFAT-IKJEAR04  */
*%DCL RCBRCOV5 CHAR;
*%RCBRCOV5 ='''14''X';               /* RCT RECOVER RCBFQU-IKJEAR02  */
*%DCL RCBRCOV6 CHAR;
*%RCBRCOV6 ='''18''X';               /* RCT REC RCBFND RCBCUSE EQ0   */
*%DCL RCBRCOV7 CHAR;
*%RCBRCOV7 ='''1C''X';               /* RCT REC RCBFND RCBCUSE NE0   */
*    2 RCBRSFLG CHAR(1),             /* INDICATORS FOR OUT OF CORE
*                                       ABEND                        */
*     3 RCBRSTRT BIT(1),             /* INDICATE RESTORE STARTED     */
*     3 RCBTCBDN BIT(1),             /* INDICATE TCBS REQUEUED       */
*     3 RCBQELCM BIT(1),             /* INDICATE QEL RESTORE
*                                       PROCESSING COMPLETE          */
*     3 RCBTQECM BIT(1),             /* INDICATE TQE RESTORE
*                                       PROCESSING COMPLETE          */
*      4 RCBRQIQC BIT(1),            /* INDICATE RQE AND IQE RESTORE
*                                       PROCESSING COMP              */
*     3 *        BIT(1),             /* RESERVED                     */
*     3 RCBIORSC BIT(1),             /* INDICATE I/O RESTORE
*                                       PROCESSING COMPLETE          */
*     3 RCBWTORC BIT(1),             /* INDICATE WTOR RESTORE
*                                       PROCESSING COMPLETE          */
*     3 RCBTACMP BIT(1),             /* INDICATE TRANSIENT AREA
*                                       RESTORE                      */
*    2 RCBQUFLG CHAR(1),             /* INDICATIONS FOR OUT OF CORE
*                                       ABEND                        */
*     3 RCBQUSTR BIT(1),             /* QUIESCE STARTED              */
*     3 RCBIOSTR BIT(1),             /* INDICATE 1ST ENTRY I/O PURGE
*                                       COMPLETE                     */
*     3 RCBTADON BIT(1),             /* TRANSIENT AREA QUIESCE DONE  */
*     3 RCBWTORD BIT(1),             /* WTOR QUIESCE DONE            */
*     3 RCBQELDN BIT(1),             /* QEL QUIESCE DONE             */
*     3 RCBIODON BIT(1),             /* INDICATE 2ND ENTRY I/O PURGE
*                                       COMPLETE                     */
*     3 RCBTQEDN BIT(1),             /* TQE QUIESCE                  */
*     3 RCBRQIQD BIT(1),             /* INDICATE IQE AND RQE
*                                       COMPLETE                     */
*    2 RCBSWTCH CHAR(1),             /* SET & RESET BY IKJEAT07 TO
*                                       INDICATE METHOD OF SEARCH BY
*                                       IKJEAT07                     */
*     3 RCBSTSP  BIT(1),             /* FLAG=STATUS STOP RECURSION   */
*     3 RCBSWTON BIT(1),             /* WHEN SET WITH BIT 0 SEARCH
*                                       BY TJID & TCB ADDR           */
*     3 RCBEXTRN BIT(1),             /* INDICATE USAGE OF EXTERNAL
*                                       BY IKJEAR02 AND IKJEAR03     */
*     3 RCBRMSAL BIT(1),             /* SOLID MACHINE CHECK IN USER
*                                       REGION                       */
*     3 RCBRMS1U BIT(1),             /* INTERMITTENT MACHINE CHECK
*                                       IN USER REGION               */
*     3 RCBZQRF  BIT(1),             /* IF ON ZERO THE RCBRSFLG AND
*                                       RCBQUFLG BEF TSEVENT LOGOFF  */
*     3 *        BIT(1),             /* RESERVED                     */
*     3 *        BIT(1),             /* RESERVED                     */
*    2 RCBCONID CHAR(1),             /* CONSOLE ID FOR START COMMAND
*                                       OR MODIFY COMMAND            */
*    2 RCBSTAEN CHAR(1),             /* INDEX VALUE TO SCHEDULE STAE
*                                       RETRY ROUTINES FOR RCT       */
*%DCL RCBSTAE0 CHAR;
*%RCBSTAE0 ='''00''X';               /* STAE EXIT 0                  */
*%DCL RCBSTAE1 CHAR;
*%RCBSTAE1 ='''04''X';               /* STAE EXIT 1                  */
*%DCL RCBSTAE2 CHAR;
*%RCBSTAE2 ='''08''X';               /* STAE EXIT 2                  */
*%DCL RCBSTAE3 CHAR;
*%RCBSTAE3 ='''0C''X';               /* STAE EXIT 3                  */
*%DCL RCBSTAE4 CHAR;
*%RCBSTAE4 ='''10''X';               /* STAE EXIT 4                  */
*%DCL RCBSTAE5 CHAR;
*%RCBSTAE5 ='''14''X';               /* STAE EXIT 5                  */
*%DCL RCBSTAE6 CHAR;
*%RCBSTAE6 ='''18''X';               /* STAE EXIT 6                  */
*%DCL RCBSTAE7 CHAR;
*%RCBSTAE7 ='''1C''X';               /* STAE EXIT 7                  */
*    2 *        CHAR(2);             /* RESERVED                     */
*
./ ADD NAME=INITASM  0100-02135-02135-1228-00040-00040-00000-VBCMACS
*****************************************************************
* 8200479  PROJECT IMPLEMENTED 2/8/83, R. PARROTT.              *
*          THIS MACRO IS USED BY MEDICARE B ASSEMBLER ROUTINES; *
*          AND, WAS ORIGINALLY OBTAINED FROM RHODE ISLAND.      *
*                                                               *
*****************************************************************
         MACRO
&NAME    INITASM
&NAME    CSECT
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 3
         SAVE  (14,12),,*
         LR    R12,R15
         USING &NAME,R12
         LA    R11,SAVEA
         ST    R13,SAVEA+4
         ST    R11,8(R13)
         LR    R13,R11
         B     SAVEA+72    BRANCH AROUND SAVE AREA
         SPACE 2
SAVEA    DC    18F'0'
         EJECT
         MEXIT
         MEND
./ ADD NAME=IOB      0100-02135-02135-1228-00484-00484-00000-VBCMACS
         MACRO
         IEZIOB &DSECT=YES
*/*            INPUT/OUTPUT BLOCK                                    */
         AIF   ('&DSECT' EQ 'NO').NODSCT
IOB      DSECT , -       IOBSTDRD-16
         AGO   .CONT
.NODSCT  ANOP
         DS    0D
IOB      EQU   * -       IOBSTDRD-16
.CONT    ANOP
***********************************************************************
*                                                                     *
*                    PREFIX SECTIONS OF THE IOB                       *
*                                                                     *
***********************************************************************
IOBPREFX DS    0D
*                            ******************************************
*                            *                                        *
*                            *         QSAM,BSAM,BPAM PREFIX          *
*                            *    CHAINED SCHEDULING *** 16 BYTES     *
*                            *                                        *
*                            ******************************************
IOBQSAMC DS    0D
IOBBSAMC DS    0D
IOBBPAMC DS    0D
IOBCFLG1 DS    B -       I/O INDICATORS
IOBRSV01 EQU   X'80',,C'X' RESERVED
IOBRSV02 EQU   X'40',,C'X' RESERVED
IOBRSV03 EQU   X'20',,C'X' RESERVED
IOBRSV04 EQU   X'10',,C'X' RESERVED
IOBPTST  EQU   X'08' -   NOTE OR POINT OPERATION IS IN PROCESS
IOBABAPP EQU   X'04' -   ERROR HAS BEEN PROCESSED ONCE BY ABNORMAL-END
*                        APPENDAGE ROUTINE
IOBRSTCH EQU   X'02' -   RESTART CHANNEL
IOBPCI   EQU   X'01' -   SET WHEN A PROGRAM-CONTROLLED INTERRUPTION
*                        (PCI) OCCURS
IOBRSV05 DS    XL1 -     RESERVED
IOBCINOP DS    CL1 -     OFFSET OF THE LAST I/O COMMAND FOR INPUT
*                        OPERATION (NOP CCW) FROM THE ORIGIN OF THE ICB
IOBCONOP DS    CL1 -     OFFSET OF THE LAST I/O COMMAND FOR AN OUTPUT
*                        OPERATION (NOP CCW) FROM THE ORIGIN OF THE ICB
IOBCECB  DS    F -       EVENT CONTROL BLOCK USED BY BSAM OR QSAM.
*                        SHOWS THE STATUS OF THE I/O OPERATION.
IOBCICB  DS    A -       ADDRESS OF THE FIRST INTERRUPT CONTROL BLOCK
*                        (ICB) ON THE ICB QUEUE
IOBCNOPA DS    A -       ADDRESS OF THE NOP COMMAND AT THE END OF THE
*                        QUEUE
         ORG   IOBPREFX+8
*                            ******************************************
*                            *                                        *
*                            *        QSAM,BSAM,BPAM PREFIX           *
*                            *    NORMAL SCHEDULING *** 8 BYTES       *
*                            *                                        *
*                            ******************************************
IOBQSAMN DS    0D
IOBBSAMN DS    0D
IOBBPAMN DS    0D
IOBNIOBA DS    0A -      ADDRESS OF THE NEXT IOB ASSOCIATED WITH ONE
*                        PARTICULAR DCB.  THE IOB'S ARE CHAINED IN
*                        SEQUENTIAL ORDER.
IOBNFLG1 DS    B -       FLAG BYTE
IOBPRTOV EQU   X'80' -   PRTOV HAS OCCURRED
IOBWRITE EQU   X'40' -   A WRITE OPERATION IS IN PROCESS
IOBREAD  EQU   X'20' -   A READ OPERATION IS IN PROCESS
IOBUPDAT EQU   X'10' -   UPDATE FLAG.  SET ON TOGETHER WITH BIT 1 OF
*                        THIS BYTE TO SHOW THAT THE BLOCK IS TO BE
*                        UPDATED.  CAN ONLY OCCUR IF THE OPEN
*                        PARAMETER IS UPDAT.
IOBBKSPC EQU   X'08' -   IOB BEING USED FOR BACKSPACE, CONTROL OR
*                        NOTE/POINT OPERATION
IOBSPAN  EQU   X'04' -   THE RECORD CURRENTLY BEING PROCESSED HAS MORE
*                        THAN ONE SEGMENT (QSAM LOCATE MODE, LOGICAL
*                        RECORD INTERFACE, UPDATE PROCESSING OF
*                        SPANNED RECORDS)
IOBUPERR EQU   X'02' -   UPDATE CHANNEL PROGRAM HAS BEEN SPLIT INTO
*                        TWO PARTS
IOBFIRST EQU   X'01' -   THIS IS THE FIRST IOB ON CHAIN
IOBNIOBB DS    AL3 -     ADDRESS OF THE NEXT IOB ASSOCIATED WITH ONE
*                        PARTICULAR DCB.  THE IOB'S ARE CHAINED IN
*                        SEQUENTIAL ORDER.
IOBNECB  DS    F -       EVENT CONTROL BLOCK USED BY QSAM TO INDICATE
*                        THE STATUS OF THE I/O EVENT
         ORG   IOBPREFX+8
*                            ******************************************
*                            *                                        *
*                            *       BDAM PREFIX *** 8 BYTES          *
*                            *                                        *
*                            ******************************************
IOBBDAM  DS    0D
IOBDQADA DS    0A -      ADDRESS OF THE OTHER IOB REFERRED TO IN
*                        DESCRIPTION OF IOBDEQ BELOW
IOBDEQIN DS    B -       DEQUEUE LOOP INDICATOR
IOBDEQ   EQU   X'80' -   THIS IOB IS USING A TRACK THAT WAS DEQUEUED BY
*                        ANOTHER IOB WHICH IS NOW WAITING TO DEQUEUE
*                        ANOTHER TRACK.  THE OTHER IOB ENQUEUED ON TWO
*                        OR MORE TRACKS TO FIND SPACE IN WHICH TO
*                        WRITE/ADD A SPANNED RECORD.  THE OTHER IOB
*                        REMAINED ENQUEUED UNTIL IT EITHER WROTE THE
*                        RECORD OR DETERMINED THAT THERE WAS ENOUGH
*                        CONTIGUOUS FREE SPACE ON THE TRACKS TO CONTAIN
*                        THE RECORD.  AFTER THE OTHER IOB DEQUEUED THE
*                        CURRENT TRACK, THE DEQUEUEING WAS INTERRUPTED
*                        BY THE NEED OF THIS IOB FOR THE CURRENT TRACK.
IOBRSV07 EQU   X'40',,C'X' RESERVED
IOBRSV08 EQU   X'20',,C'X' RESERVED
IOBRSV09 EQU   X'10',,C'X' RESERVED
IOBRSV10 EQU   X'08',,C'X' RESERVED
IOBRSV11 EQU   X'04',,C'X' RESERVED
IOBRSV12 EQU   X'02',,C'X' RESERVED
IOBRSV13 EQU   X'01',,C'X' RESERVED
IOBDQADB DS    AL3 -     ADDRESS OF THE OTHER IOB REFERRED TO IN
*                        DESCRIPTION OF IOBDEQ ABOVE
IOBSWAP  DS    A -       ADDRESS OF THE SEGMENT WORK AREA USED BY THIS
*                        IOB TO READ OR WRITE A RECORD OF A FORMAT VS
*                        DATA SET
         ORG   IOBPREFX+12
*                            ******************************************
*                            *                                        *
*                            *       GAM,QISAM PREFIX *** 4 BYTES     *
*                            *                                        *
*                            ******************************************
IOBGAM   EQU   *
IOBQISAM EQU   *
IOBGQECB DS    F -       EVENT CONTROL BLOCK THAT IS WITHIN FIRST IOB
*                        ONLY  (GAM)
*                        EVENT CONTROL BLOCK USED TO INDICATE STATUS
*                        OF AN I/O EVENT  (QISAM)
***********************************************************************
*                                                                     *
*                    STANDARD SECTION OF THE IOB                      *
*                                                                     *
***********************************************************************
IOBSTDRD DS    0D
IOBFLAG1 DS    B -       FLAG BYTE 1
IOBDATCH EQU   X'80' -   DATA CHAINING USED IN CHANNEL PROGRAM
IOBCMDCH EQU   X'40' -   COMMAND CHAINING USED IN CHANNEL PROGRAM
IOBERRTN EQU   X'20' -   ERROR ROUTINE IS IN CONTROL
IOBRPSTN EQU   X'10' -   DEVICE IS TO BE REPOSITIONED
IOBCYCCK EQU   X'08' -   CYCLIC REDUNDANCY CHECK (CRC) NEEDED (TAPE)
IOBFCREX EQU   X'08' -   FETCH COMMAND RETRY EXIT (DIRECT ACCESS)
IOBIOERR EQU   X'04' -   EXCEPTIONAL CONDITION.  AFTER THE ERROR
*                        ROUTINE RETURNS AND THIS BIT IS ON, THE ERROR
*                        IS CONSIDERED PERMANENT.
IOBUNREL EQU   X'02' -   IOB UNRELATED FLAG (I.E., NONSEQUENTIAL)
IOBSPSVC EQU   X'01' -   FOR SAM/PAM, SET BY SVC IF I/O APPENDAGE
*                        SHOULD NOT PROCESS INTERRUPT
IOBFLAG2 DS    B -       FLAG BYTE 2
IOBHALT  EQU   X'80' -   HALT I/O HAS BEEN ISSUED BY SVC PURGE ROUTINE
IOBSENSE EQU   X'40' -   SENSE WILL NOT BE PERFORMED UNTIL THE DEVICE
*                        IS FREE
IOBRRT3  EQU   X'20' -   TYPE 3 RELATED REQUEST
IOBRRT2  EQU   X'10' -   TYPE 2 RELATED REQUEST
IOBALTTR EQU   X'08' -   NO TEST FOR OUT-OF-EXTENT.  AN ALTERNATE TRACK
*                        IS IN USE.
IOBSKUPD EQU   X'04' -   SEEK ADDRESS IS BEING UPDATED.  CYLINDER END
*                        OR FILE MASK VIOLATION HAS OCCURRED.
IOBSTATO EQU   X'02' -   DEVICE END STATUS HAS BEEN OR'ED WITH CHANNEL
*                        END STATUS  (GRAPHICS DEVICE)
IOBPNCH  EQU   X'01' -   ERROR RECOVERY IN CONTROL FOR A 2540 CARD
*                        PUNCH WITH THREE BUFFERS  (QSAM)
*                        RESETPL MACRO INSTRUCTION WAS USED  (BTAM)
IOBSENS0 DS    B -       FIRST SENSE BYTE
IOBS0B0  EQU   X'80' -   BIT 0 (DEVICE DEPENDENT)
IOBS0B1  EQU   X'40' -   BIT 1 (DEVICE DEPENDENT)
IOBS0B2  EQU   X'20' -   BIT 2 (DEVICE DEPENDENT)
IOBS0B3  EQU   X'10' -   BIT 3 (DEVICE DEPENDENT)
IOBS0B4  EQU   X'08' -   BIT 4 (DEVICE DEPENDENT)
IOBS0B5  EQU   X'04' -   BIT 5 (DEVICE DEPENDENT)
IOBS0B6  EQU   X'02' -   BIT 6 (DEVICE DEPENDENT)
IOBS0B7  EQU   X'01' -   BIT 7 (DEVICE DEPENDENT)
IOBSNSC9 EQU   X'01' -   CHANNEL 9 SENSED IN CARRIAGE TAPE
IOBSENS1 DS    B -       SECOND SENSE BYTE
IOBS1B0  EQU   X'80' -   BIT 0 (DEVICE DEPENDENT)
IOBS1B1  EQU   X'40' -   BIT 1 (DEVICE DEPENDENT)
IOBS1B2  EQU   X'20' -   BIT 2 (DEVICE DEPENDENT)
IOBS1B3  EQU   X'10' -   BIT 3 (DEVICE DEPENDENT)
IOBS1B4  EQU   X'08' -   BIT 4 (DEVICE DEPENDENT)
IOBS1B5  EQU   X'04' -   BIT 5 (DEVICE DEPENDENT)
IOBS1B6  EQU   X'02' -   BIT 6 (DEVICE DEPENDENT)
IOBS1B7  EQU   X'01' -   BIT 7 (DEVICE DEPENDENT)
IOBECBPT DS    0A -      ADDRESS OF ECB TO BE POSTED ON I/O COMPLETION
IOBECBCC DS    CL1 -     COMPLETION CODE FOR AN I/O REQUEST.  THIS CODE
*                        WILL APPEAR IN THE FIRST BYTE OF AN ECB.
IOBECBPB DS    AL3 -     ADDRESS OF THE ECB TO BE POSTED UPON THE
*                        COMPLETION OF AN I/O EVENT.  FOR BSAM/BPAM,
*                        ECB IS IN THE DECB.  FOR QSAM, ECB IS IN THE
*                        QSAM PREFIX OF THE IOB.
IOBFLAG3 DS    B  -      I/O SUPERVISOR ERROR ROUTINE FLAG BYTE
*                        (DEVICE DEPENDENT)
IOBCCC   EQU   X'80' -   CHANNEL CONTROL CHECK ERROR COUNT
IOBICC   EQU   X'40' -   INTERFACE CONTROL CHECK ERROR COUNT
IOBCDC   EQU   X'20' -   CHANNEL DATA CHECK ERROR
IOBACU   EQU   X'10' -   ATTENTION/CONTROL UNIT ERROR
IOBCNC   EQU   X'08' -   CHAIN CHECK ERROR
IOBMSG   EQU   X'04' -   MESSAGE FLAG
IOBICL   EQU   X'02' -   INCORRECT LENGTH ERROR
IOBLOG   EQU   X'01' -   LOG OUT FLAG
IOBCSW   DS    0CL7 -    LOW-ORDER SEVEN BYTES OF THE LAST CSW THAT
*                        REFLECTS THE STATUS FOR THIS REQUEST
IOBSTART DS    0A -      ADDRESS OF CHANNEL PROGRAM TO BE EXECUTED
IOBSIOCC DS    B -       SIO CODE.  BITS 2 AND 3 CONTAIN CONDITION CODE
*                        RETURNED AFTER EXECUTION OF SIO INSTRUCTION
*                        FOR THIS I/O EVENT.
IOBSTRTB DS    AL3 -     ADDRESS OF CHANNEL PROGRAM TO BE EXECUTED
IOBDCBPT DS    0A -      ADDRESS OF DCB ASSOCIATED WITH THIS IOB
IOBFLAG4 DS    B -       FLAG BYTE
IOBGDPOL EQU   X'80' -   RE-ENTER SIO APPENDAGE FOR OLTEP GUARANTEED
*                        DEVICE PATH
IOBCC3WE EQU   X'40' -   USER REQUESTS THAT IOS POST A X'6D' FOR A
*                        CONDITION CODE 3 ON ATTEMPTED I/O OPERATIONS
IOBRSV40 EQU   X'10',,C'X' - RESERVED
IOBRSV41 EQU   X'08',,C'X' - RESERVED
IOBRSV42 EQU   X'04',,C'X' - RESERVED
IOBJES3I EQU   X'02' -   JES3 INTERVENTION REQUIRED NOTIFICATION.
*                        SETTING THIS BIT WILL RESULT IN TURNING ON BIT
*                        IOSPGDPX IN THE IOSB.
*                                                                     30
IOBRSV44 EQU   X'01',,C'X' - RESERVED
IOBDCBPB DS    AL3 -     ADDRESS OF DCB ASSOCIATED WITH THIS IOB
IOBRESTR DS    0A -      AFTER SVC 16 (PURGE) - QUIESCE - ADDRESS OF
*                        THE NEXT IOB IN THE PURGE CHAIN.  (LAST IOB IN
*                        THE CHAIN, BYTE 4 IS FF.)
*                        DURING I/O SUPERVISOR WRITE-TO-OPERATOR
*                        ROUTINE CONTROL - CCHH PART OF THE ADDRESS OF
*                        A DEFECTIVE TRACK.
*                        DURING I/O ERROR CORRECTION (MEANINGFUL ONLY
*                        IF BIT 3 IN THE IOBFLAG1 FIELD IS ON) -
*                        ADDRESS OF THE CHANNEL PROGRAM USED TO CORRECT
*                        AN ERROR CONDITION.
*                        AFTER I/O ERROR CORRECTION - IF A CHANNEL
*                        PROGRAM IS RESTARTED THROUGH A CCW OTHER THAN
*                        THE ONE POINTED TO BY THE IOBSTART FIELD, ITS
*                        ADDRESS IS HERE.
IOBREPOS DS    CL1 -     DURING I/O ERROR CORRECTION (MEANINGFUL ONLY
*                        IF BIT 3 IN THE IOBFLAG1 FIELD IS ON) FOR
*                        MAGNETIC TAPE ONLY - THE CONTROL COMMAND
*                        (BSR, FSR, ERG) REQUIRED TO REPOSITION OVER A
*                        BLOCK.
IOBRSTRB DS    AL3 -     SAME AS IOBRESTR ABOVE
IOBINCAM DS    0H -      QSAM, BSAM, EXCP ACCESS METHOD -- NORMAL
*                        SCHEDULING - VALUE USED TO INCREMENT BLOCK
*                        COUNT FIELD IN DCB FOR MAGNETIC TAPE.
*                        CHAINED SCHEDULING - ZEROS.
*                        QSAM, BSAM -- OPERATION CODE OF WRITE CCW WHEN
*                        A USASI CONTROL CHARACTER AND NO DATA IS TO BE
*                        WRITTEN (PRINTER AND CARD PUNCH ONLY)
IOBBTAMF DS    B -       FLAG BYTE FOR BTAM
IOBPRMER EQU   X'80' -   SAD OR ENABLE ISSUED BY OPEN RESULTED IN A
*                        PERMANENT I/O ERROR
IOBINUSE EQU   X'40' -   THIS IOB IS CURRENTLY IN USE BY AN I/O
*                        OPERATION
IOBRSV14 EQU   X'20',,C'X' RESERVED
IOBRSV15 EQU   X'10',,C'X' RESERVED
IOBRSV16 EQU   X'08',,C'X' RESERVED
IOBRSV17 EQU   X'04',,C'X' RESERVED
IOBRFTMG EQU   X'02' -   A REQUEST-FOR-TEST MESSAGE RECEIVED FROM A
*                        REMOTE 3270 DISPLAY STATION             ICB478
IOBOLTST EQU   X'01' -   LINE IS UNDER ON-LINE TEST OPERATION
IOBRSV19 DS    XL1 -     RESERVED
         ORG   IOBINCAM
IOBCRDCC DS    CL1 -     DATA CHECK ERROR COUNT  (OPTICAL READER)
IOBCRILC DS    CL1 -     INCORRECT LENGTH ERROR COUNT  (OPTICAL READER)
IOBERRCT DS    H -       USED BY I/O SUPERVISOR ERROR ROUTINES TO COUNT
*                        TEMPORARY ERRORS DURING RETRY
***********************************************************************
*                                                                     *
*                   EXTENSION SECTIONS OF THE IOB                     *
*                                                                     *
***********************************************************************
IOBEXTEN DS    0D
*                            ******************************************
*                            *                                        *
*                            *  DIRECT ACCESS EXTENSION *** 8 BYTES   *
*                            *                                        *
*                            ******************************************
IOBSEEK  DS    0CL8 -    A SEEK ADDRESS (IN THE FORMAT MBBCCHHR) USED
*                        WITH A CHANNEL PROGRAM
IOBM     DS    CL1 -     THE NUMBER OF THE DEB EXTENT TO BE USED FOR
*                        THIS REQUEST.  THE FIRST EXTENT IS NUMBER 0.
IOBBB    DS    0CL2 -    BIN NUMBER(DATA CELL)
IOBBB1   DS    CL1
IOBBB2   DS    CL1
IOBCC    DS    0CL2 -    CYLINDER NUMBER
IOBCC1   DS    CL1
IOBCC2   DS    CL1
IOBHH    DS    0CL2 -    TRACK NUMBER
IOBHH1   DS    CL1
IOBHH2   DS    CL1
IOBR     DS    CL1 -     RECORD NUMBER
         ORG   IOBEXTEN
*                            ******************************************
*                            *                                        *
*                            *          BTAM EXTENSION ***            *
*                            *      40 BYTES + CHANNEL PROGRAM        *
*                            *                                        *
*                            ******************************************
IOBUCBX  DS    CL1 -     UCB INDEX.  THE LINE NUMBER IS USED AS AN
*                        INDEX TO LOCATE THE PROPER UCB ADDRESS IN THE
*                        DEB.
IOBWORK  DS    CL5 -     WORK AREA USED BY ERROR ROUTINES AND ON-LINE
*                        TERMINAL TEST ROUTINES
IOBRCVPT DS    CL1 -     RECEIVED ACK (ACK-0 OR ACK-1)
IOBSNDPT DS    CL1 -     SENT ACK (ACK-0 OR ACK-1)
IOBERCCW DS    CL8 -     CCW AREA USED BY THE BTAM ERROR RECOVERY
*                        ROUTINES
IOBERINF DS    CL16 -    ERROR INFORMATION FIELD USED BY THE BTAM ERROR
*                        RECOVERY ROUTINES
IOBCPA   DS    0D -      CHANNEL PROGRAMS AREA.  THE LENGTH DEPENDS ON
*                        THE TERMINAL AND THE OPTIONS.
         ORG   IOBSEEK+8
*                            ******************************************
*                            *                                        *
*                            *      BISAM EXTENSION *** 16 BYTES      *
*                            *                                        *
*                            ******************************************
IOBCCWAD DS    A -       FOR FIXED LENGTH RECORDS, ADDRESS OF FIRST
*                        CCW OF CHANNEL PROGRAM.
*                        FOR VARIABLE LENGTH RECORDS, ADDRESS OF
*                        BUFFER, IF DYNAMIC BUFFERING SPECIFIED, AFTER
*                        COMPLETION OF A READ FOR UPDATE (READ KU)
IOBINDCT DS    B -       INDICATORS
IOBDEQCP EQU   X'80' -   DEQUEUE CHANNEL PROGRAM FROM QUEUE
IOBUNSCH EQU   X'40' -   UNSCHEDULED QUEUE
IOBOVPTR EQU   X'20' -   IF 0, DECBAREA + 6 POINTS TO OVERFLOW RECORD
*                        DATA.
*                        IF 1, DCBMSWA POINTS TO OVERFLOW RECORD KEY
*                        FOLLOWED BY DATA.
IOBKEYAD EQU   X'10' -   IF 0, DECBKEY POINTS TO OVERFLOW RECORD KEY.
*                        IF 1, DCBMSWA + 8 POINTS TO OVERFLOW RECORD
*                        KEY.
IOBRSV27 EQU   X'08',,C'X' RESERVED
IOBRSV28 EQU   X'04',,C'X' RESERVED
IOBRSV29 EQU   X'02',,C'X' RESERVED
IOBCHNNL EQU   X'01' -   IF 0, NORMAL CHANNEL END HAS OCCURRED.
*                        IF 1, ABNORMAL CHANNEL END HAS OCCURRED.
IOBUNSQR DS    B -       REASON FOR UNSCHEDULED QUEUE
IOBCPBSY EQU   X'80' -   CHANNEL PROGRAM CP1 OR CP2 BUSY
IOBNTAV1 EQU   X'40' -   NO CP4, CP5 OR CP6 AVAILABLE
IOBNTAV2 EQU   X'20' -   NO CP7 AVAILABLE
IOBKNWR  EQU   X'10' -   WRITE KN IS IN EFFECT (UNSCHEDULED IOB IS FOR
*                        WRITE KN)
IOBKNRWR EQU   X'08' -   WRITE KN IS IN EFFECT (UNSCHEDULED IOB IS FOR
*                        READ OR WRITE KN)
IOBRSV30 EQU   X'04',,C'X' RESERVED
IOBRSV31 EQU   X'02',,C'X' RESERVED
IOBRSV32 EQU   X'01',,C'X' RESERVED
IOBAPP   DS    CL1 -     APPENDAGE CODE
IOBASYN  DS    CL1 -     ASYNCHRONOUS ROUTINE CODE
IOBFCHAD DS    0A -      FORWARD CHAIN ADDRESS
IOBCOUNT DS    CL1 -     WRITE CHECK COUNTER
IOBFCHNB DS    AL3 -     FORWARD CHAIN ADDRESS
IOBBCHAD DS    A -       BACKWARD CHAIN ADDRESS
         ORG   IOBEXTEN
*                            ******************************************
*                            *                                        *
*                            *      GAM EXTENSION *** 40 BYTES        *
*                            *                                        *
*                            ******************************************
IOBUCBXG DS    CL1 -     UCB INDEX
IOBRSV37 DS    XL3 -     RESERVED
IOBNXTPT DS    0A -      ADDRESS OF NEXT AVAILABLE IOB.  SET TO ZERO
*                        IF THIS IS LAST IOB.
IOBSTATA DS    B -       STATUS INDICATORS
IOBAVLFL EQU   X'80' -   IF 0, IOB IS AVAILABLE.
*                        IF 1, IOB IS NOT AVAILABLE.
IOBRSV20 EQU   X'40',,C'X' RESERVED
IOBRSV21 EQU   X'20',,C'X' RESERVED
IOBRSV22 EQU   X'10',,C'X' RESERVED
IOBRSV23 EQU   X'08',,C'X' RESERVED
IOBRSV24 EQU   X'04',,C'X' RESERVED
IOBRSV25 EQU   X'02',,C'X' RESERVED
IOBRSV26 EQU   X'01',,C'X' RESERVED
IOBNXTPB DS    AL3 -     ADDRESS OF NEXT AVAILABLE IOB.  SET TO ZERO
*                        IF THIS IS LAST IOB
IOBCCW   DS    CL32 -    LIST OF CHANNEL COMMAND WORDS TO TRANSFER DATA
         ORG   IOBSEEK+8
*                            ******************************************
*                            *                                        *
*                            *     QISAM EXTENSION *** 2 BYTES        *
*                            *                                        *
*                            ******************************************
W1IEXTEN DS    0CL2 -    APPENDAGE CODES FOR BOTH NORMAL AND ABNORMAL
*                        CHANNEL END CONDITIONS
W1OEXTEN DS    CL2 -     SAME AS W1IEXTEN ABOVE
         ORG   IOBSEEK+8
*                            ******************************************
*                            *                                        *
*                            *          BDAM EXTENSION ***            *
*                            *      40 BYTES + CHANNEL PROGRAM        *
*                            *                                        *
*                            ******************************************
IOBDBYTR DS    H -       NUMBER OF UNUSED BYTES REMAINING ON THE TRACK
IOBDIOBS DS    H -       OVERALL SIZE OF THE IOB
IOBDPLAD DS    0A -      ADDRESS OF THE NEXT IOB IN THE POOL OF IOB'S
IOBDAYLI DS    B -       ALL BITS SET TO ZERO INDICATE THE AVAILABILITY
*                        OF THIS IOB
IOBDPLB  DS    AL3 -     ADDRESS OF THE NEXT IOB IN THE POOL OF IOB'S
IOBDTYPE DS    B -       THE TYPE OF REQUEST AND SPECIFIED OPTIONS
IOBVERFY EQU   X'80' -   VERIFY
IOBOVFLO EQU   X'40' -   OVERFLOW
IOBEXTSC EQU   X'20' -   EXTENDED SEARCH
IOBFDBCK EQU   X'10' -   FEEDBACK
IOBACTAD EQU   X'08' -   ACTUAL ADDRESSING
IOBDYNBF EQU   X'04' -   DYNAMIC BUFFERING
IOBRDEXC EQU   X'02' -   READ EXCLUSIVE
IOBRELBL EQU   X'01' -   RELATIVE BLOCK ADDRESSING
IOBDTYP2 DS    B -       SECOND BYTE OF OPTIONS AND REQUESTS
IOBSKEY  EQU   X'80' -   KEY ADDRESS CODED AS 'S'
IOBSBLKL EQU   X'40' -   BLOCK LENGTH CODED AS 'S'
IOBSUFFX EQU   X'30' -   IF BITS 2 AND 3 ARE ONE, RU IS SUFFIXED TO THE
*                        TYPE, INDICATING THAT THE FEEDBACK ADDRESS IN
*                        DECNXADR CAN BE THE ADDRESS OF EITHER THE NEXT
*                        DATA RECORD OR THE NEXT CAPACITY RECORD,
*                        WHICHEVER OCCURS FIRST.
*                        IF BIT 2 IS ZERO AND BIT 3 IS ONE, R IS
*                        SUFFIXED TO THE TYPE, INDICATING THAT THE
*                        FEEDBACK ADDRESS IN DECNXADR IS THE ADDRESS OF
*                        THE NEXT DATA RECORD.
IOBRQUST EQU   X'08' -   IF 1, READ REQUEST.  IF 0, WRITE REQUEST.
IOBTYPE  EQU   X'04' -   IF 1, KEY TYPE.  IF 0, ID TYPE.
IOBADDTY EQU   X'02' -   ADD TYPE
IOBRELEX EQU   X'01' -   RELEX MACRO ISSUED
IOBDSTAT DS    0CL2  -   STATUS OF THE I/O REQUEST
IOBSTAT1 DS    B -       FLAG BYTE
IOBABNRM EQU   X'80' -   ABNORMAL COMPLETION
IOBNEWVL EQU   X'40' -   ON EXTENDED SEARCH, THE NEXT EXTENT IS ON A
*                        NEW VOLUME.  THE ASI ROUTINE MUST ISSUE THE
*                        EXCP MACRO.  THE END-OF-EXTENT APPENDAGE
*                        CANNOT.
IOBSYNCH EQU   X'20' -   MODULE WAS ENTERED VIA SYNCH
IOBPASS2 EQU   X'10' -   ON EXTENDED SEARCH, INDICATES TO THE RELATIVE
*                        BLOCK CONVERSION ROUTINE THAT THE SECOND PASS
*                        OF A TWO-PASS CONVERSION ROUTINE HAS COMPLETED
IOBENQUE EQU   X'08' -   FOR EXCLUSIVE CONTROL REQUEST, INDICATES THAT
*                        A RECORD HAS BEEN ENQUEUED
IOBBUFF  EQU   X'04' -   A BUFFER HAS BEEN ASSIGNED TO THIS IOB
IOBADDVU EQU   X'02' -   IOB BEING USED TO ADD A VARIABLE (V) OR
*                        UNDEFINED (U) TYPE RECORD TO THE DATA SET
IOBSIORT EQU   X'01' -   INDICATES TO THE DYNAMIC BUFFERING ROUTINE
*                        THAT IT WAS ENTERED FROM, AND IS TO RETURN
*                        TO, THE START I/O APPENDAGE MODULE
IOBSTAT2 DS    CL1 -     ERROR CODE FOR ABNORMAL COMPLETION USED AS
*                        POST CODE IN ECB
IOBDCPND DS    A -       ADDRESS OF LOCATION WHERE CHANNEL END PROGRAM
*                        SHOULD END
IOBDBYTN DS    H -       NUMBER OF BYTES NEEDED ON A TRACK TO WRITE A
*                        NEW BLOCK
IOBRSV34 DS    XL2 -     RESERVED
IOBDQPTR DS    A -       ADDRESS OF IOB FOR NEXT I/O OPERATION TO BE
*                        EXECUTED
IOBRSV35 DS    XL8 -     RESERVED
IOBDNCRF DS    CL8 -     COUNT FIELD FOR NEW BLOCK
IOBCHNPR DS    0D -      CHANNEL PROGRAM USED TO TRANSFER DATA AS
*                        REQUESTED BY THE READ OR WRITE MACRO
*                        INSTRUCTION STARTS HERE
         ORG   IOBSEEK+8
*                            ******************************************
*                            *                                        *
*                            *     VSAM EXTENSION *** 24 BYTES        *
*                            *                                        *
*                            ******************************************
IOBSEEK2 DS    0CL8 -    SEEK FIELD 2                            ICB435
IOBSK2M  DS    C -       EXTENT NUMBER                           ICB435
IOBSK2BB DS    CL2 -     BIN NUMBER                              ICB435
IOBSK2CC DS    CL2 -     CYLINDER NUMBER                         ICB435
IOBSK2HH DS    CL2 -     HEAD NUMBER                             ICB435
IOBSK2R  DS    C -       RECORD NUMBER                           ICB435
IOBBUFC  DS    A -       ADDRESS OF ASSOCIATED BUFFER CONTROL BLOCK
*                                                                ICB435
IOBREADA DS    A -       ADDRESS OF FIRST READ CHANNEL PROGRAM SEGMENT
*                        THAT HAS NOT BEEN PROCESSED             ICB435
IOBNEXTA DS    A -       ADDRESS OF NEXT ACTIVE IOB              ICB435
IOBRDCHP DS    A -       ADDRESS OF READ CHANNEL PROGRAM         ICB435
*                            ******************************************
*                            *                                        *
*                            *   3540 EXTENSION *** 4 BYTES   @Y30OP9A*
*                            *                                        *
*                            ******************************************
IOBSKADR DS    0CL4 -    3540 SEEK ADDRESS
IOBSKRV  DS    XL1 -     RESERVED
IOBSKTT  DS    XL1 -     TRACK NUMBER
IOBSK0   DS    XL1 -     MUST BE ZERO
IOBSKSS  DS    XL1 -     SECTOR NUMBER
         MEND
./ ADD NAME=ISORT    0100-02135-02135-1228-00047-00047-00000-VBCMACS
         MACRO
&NAME    ISORT &FLDLEN,&KEYLEN,&RKP,&ORDER,&FIRST
         LCLC  &S,&OP
&S       SETC  '&SYSNDX'
         AIF   ('&ORDER' EQ 'A' OR '&ORDER' EQ 'D').NEXT1
         MNOTE 8,'4''TH PARAMETER MUST BE AN A OR A D.'
         MEXIT
.NEXT1   AIF   (&FLDLEN LE 256).NEXT2
         MNOTE 8,'LENGTH OF SORT FIELD MUST BE LESS THAN 256'
         MEXIT
.NEXT2   AIF   (&RKP+&KEYLEN-1 GT &FLDLEN).NEXT3
         AIF   (&KEYLEN LE &FLDLEN AND &RKP LE &FLDLEN).NEXT4
.NEXT3   MNOTE 8,'RELATIVE KEY POSITION, LENGTHS OF FIELD AND KEY ARE I*
               NCONSISTANT.'
         MEXIT
.NEXT4   ANOP
&OP      SETC  'BNH'
         AIF   ('&ORDER' EQ 'A').NEXT5
&OP      SETC  'BNL'
.NEXT5   ANOP
&NAME    STM   2,7,28(13) .            SAVE WORK REGS
         L   3,&FIRST       .  ADDR OF START OF TABLE
         LA    4,&FLDLEN .             LENGTH OF ONE ENTRY
         BCTR  2,0
         BCTR  2,0
         MH    2,=H'&FLDLEN'
         LA    5,0(2,3) .              (N-2)*LENGTH+START OF TABLE
         LNR   6,4 .                   -LENGTH
         LR    7,3 .                   START OF TABLE
         BCTR  7,0
TOP&S    SR    2,2 .                   # OF SWAPS = 0
LOOP&S   CLC   &RKP-1(&KEYLEN,3),&RKP-1+&FLDLEN.(3) . COMPARE
         &OP   BXLE&S
         MVC   WORK&S,0(3) .           SWAP
         MVC   0(&FLDLEN,3),&FLDLEN.(3)
         MVC   &FLDLEN.(&FLDLEN,3),WORK&S
         BCTR  2,0 .                   #SWAPS = #SWAPS + 1
BXLE&S   BXLE  3,4,LOOP&S .            LOOP TIL DONE
         LTR   2,2 ANY PASS THAT DOES NOT PRODUCE A SWAP IS THE LAST
         BZ    DONE&S FURTHER PASSES UNNECESSARY
         LA    3,1(,7)
         BXH   5,6,TOP&S
DONE&S   LM    2,7,28(13)
         B     OUT&S
WORK&S   DS    CL&FLDLEN
OUT&S    DS    0H
         MEND
./ ADD NAME=JFCBDEF  0100-02135-02135-1228-00093-00093-00000-VBCMACS
         MACRO
         JFCBDEF &DSECT=YES
*
*
*
         AIF   ('&DSECT' EQ 'YES').DSECT
JFCB     DS    0CL176   *** JFCB DESCRIPTION ***
         AGO   .START
.DSECT   ANOP
JFCB     DSECT ,        *** JFCB DESCRIPTION ***
.START   ANOP
JFCBDSNM DS    CL44          DATA SET NAME (ALL HEX 04'S FOR FMT 4 DSCB
JFCBELNM DS    CL8           ELEMENT NAME, GENERATION NBR, OR ISAM
*                              TYPE OF AREA
JFCBTSDM DS    XL1           JOB MGMT/DATA MGMT INTERFACE
*                              BIT0-CATALOGUED
*                              BIT1-VOL SER LIST WAS CHANGED
*                              BIT2-SYSIN OR SYSOUT DATA SET
*                              BIT3-JOB STEP TO BE RESTARTED
*                              BIT4-NO JFCB WRITE-BACK DURING OPEN
*                              BIT5-NO DSCB OR LABEL MERGE TO JFCB
*                            BIT6-NO DCB MERGE TO JFCB
*                              BIT7-THE PATTERNING DSCB IS COMPLETE
JFCBDSCB DS    XL3           TTR OF FORMAT 1 DSCB ON FIRST VOLUME
JFCFBID  DS    CL4           FORMS CONTROL BUFFER IMAGE FOR 3211
         DS    CL6           RESERVED
JFCBLTYP DS    XL1           LABEL TYPE
JFCBUFOF DS    XL1           TAPE DATA SET BUFFER OFFSET
JFCBFLSQ DS    XL2           TAPE FILE SEQ NBR
JFCBVLSQ DS    XL2           VOLUME SEQ NBR
JFCBMASK DS    XL8           DATA MANAGEMENT MASK
JFCBCRDT DS    XL3           CREATION DATE, BINARY, YDD
JFCBXPDT DS    XL3           EXPIRATION DATE, BINARY, YDD
JFCBIND1 DS    XL1           INDICATOR BYTE, BIT6-GEN MEM, BUT7-PDS MEM
JFCBIND2 DS    XL1           INDICATOR BYTE, BITS01=01-OLD,
*                              BITS01=10-MOD DATA SET,
*                              BITS01=11-NEW DATA SET
*                              BITS23-PASSWORD, BIT4-SHARED, BIT5-DELET
*                              THIS JFCB BEFORE RESTART, BIT6-STORAGE V
*                              VOLUME REQ, BIT7-TEMPORARY DATA SET
JFCBUFNO DS    XL1           NUMBER BUFFERS
JFCBFTEK DS    XL1           BUFFERING TECHNIQUE
JFCBUFL  DS    XL2           BUFFER LENGTH
JFCEROPT DS    XL1           ERROR OPTION, BIT0-ACCEPT, BIT1-SKIP,
*                              BIT2-ABEND
JFCKEYLE DS    XL1           KEY LENGTH FOR DASD, UNIQUE BY DEVICE
JFCDEN   DS    XL1           TAPE DENSITY
JFCLIMCT DS    XL3           BDAM SEARCH LIMIT
JFCDSORG DS    XL1           DATA SET ORGANIZATION, BIT0-I S, BIT1-PS,
*                              BIT2-DA, BIT6-PO, BIT7-UNMOVABLE
         DS    XL1           BIT1-GAM
JFCRECFM DS    XL1           RECORD FORMAT
*                              BITS01=10-FIXED, BITS01=01-VARIABLE,
*                              BITS01=11-UNDEFINED, BIT2-TRK OFLO,
*                              BIT3-BLOCKED, BIT4-F(B)S OR VS,
*                              BITS56=10-ASA CTL CHR, BITS56=01-MACH CT
*                              CHAR, BITS56=00-NO CTL CHAR
JFCOPTCD DS    XL1           OPTION CODES
JFCBLKSI DS    XL2           MAXIMUM BLOCK SIZE
JFCLRECL DS    XL2           LOGICAL RECORD LENGTH
JFCNCP   DS    XL1           NUMBER OF CHANNEL PROGRAMS
JFCNTM   DS    XL1           NUMBER MASTER INDEX TRACKS
JFCRKP   DS    XL2           RELATIVE KEY POSITION
JFCCYLOF DS    XL1           NBR TRKS OVERFLOW PER CYL FOR I S
         DS    XL1           RESERVED
JFCINTVL DS    XL1           QTAM NBR SECONDS INTENTIONAL DELAY
JFCOUTL1 DS    XL3           SMF SYSOUT LIMIT
         DS    XL1           RESERVED
JFCBNVOL DS    XL1           NBR VOLUMES SER NBRS TO FOLLOW
JFCBVOLS DS    5CL6          UP TO 5 VOL SER NBRS
JFCBEXTL DS    XL1           RESERVED
JFCBEXAD DS    XL3           TTR OF FIRST JFCB EXTENSION
JFCBPQTY DS    XL3           PRIMARY DASD SPACE REQUIRED
JFCBCTRI DS    XL1           SPACE PARAMETERS, BITS01=00-ABSTR,
*                              BITS01=01-BLOCKS, BITS01=10-TRACKS,
*                              BITS01=11-CYL, BIT4-CONTIG, BIT5-MXIG,
*                              BIT6-ALX, BIT7-ROUND
JFCBSQTY DS    XL3           SECONDARY QUANTITY
         DS    XL1           RESERVED
JFCBDQTY DS    XL3           DIRECTORY QUANTITY
JFCBSPNM DS    XL3           DATA MGMT ADDRESS
JFCBABST DS    XL2           TTR OF FIRST TRK ALLOCATED
JFCBSBNM DS    XL3           DAAT MANAGEMENT ADDRESS
JFCBDRLH DS    XL3           AVERAGE BLOCK LENGTH
JFCBVLCT DS    XL1           VOLUME COUNT
JFCBSPTN DS    XL1           NBR TRKS USED FOR SPLIT CYL
*
*
*
         AIF   ('&DSECT' NE 'YES').XIT
&SYSECT  CSECT
.XIT     MEXIT
         MEND
./ ADD NAME=LDA      0100-02135-02135-1228-00043-00043-00000-VBCMACS
         MACRO
         LDA
LDA      DSECT
*                               LDA                                   *
*        THE VSM LOCAL DATA AREA IS IN LSQA. IT CONTAINS ADDRESS      *
*        SPACE-RELATED VSM CONTROL BLOCK POINTERS, AND WORKING        *
*        STORAGE FOR THE USE OF VSM REENTRANT ROUTINES.               *
LDASTART EQU  *
LVSMFLAG DS  0F    LOCAL FLAGS
LDAFLAGS DS  B
LDABRSW  EQU  X'01' BRANCH ENTRY SWITCH
LDARES   DS  BL3
PASCBSV  DS  F     SAVE AREA FOR ASCB ADDRESS
ASDPQE   DS  F     ADDRESS SPACE PQE  PTR.
LDATCB   DS  F     SAVE TCB PTR. FROM REG 4
LDARQSTA DS  F     CURRENT REQUEST STATUS
LDACBSP  DS   X    SPID FOR GETMAIN OF CONTROL BLKS
LDARES2  DS   BL3  THREE BYTES RESERVED
GMFMWKAR DS  XL500 GETMAIN/FREEMAIN WORK AREA
BRANCHSV DS  16F   REG SAVE AREA #1
SAVEREG2 DS  16F   REG SAVE AREA #2
BSAVE    DS  16F   REG SAVE AREA #3
FSAVE    DS  16F   REG SAVE AREA #4
G4KSAVE  DS  16F   REG SAVE AREA #5
FBQSAVE  DS  16F   REG SAVE AREA #6
GMREPSAV DS  16F   REG SAVE AREA #7
GFRESAVE DS  16F   REG SAVE AREA #8
OBFRSAVE DS  16F   REG SAVE AREA #9
CSAVE    DS  16F   REG SAVE AREA #10
CFAPWKAR DS  75F   GP/FP, CFAS WORK AREA
LSQAPTR  DS  F     LSQA SPQE PTR.
VVREGSZ  DS  F     EXPLICIT V=V REGION SIZE
CURRGNTP DS  F     CURRENT TOP OF REGION ADDRESS
LDASRPQE DS  F     POINTER TO SYSTEM REGION PQE
LDARSVPT DS  A     PTR TO LSQA AREA FOR PAGE TABLE
LDALIMIT DS  F     LIMIT FOR REGION SIZE
*                                                                     *
*  THE FOLLOWING FIELDS MUST REMAIN IN SEQUENCE                       *
*                                                                     *
LCLCELL  DS  F     INTERNAL CELL ANCHOR BLOCK
LCLCELCT DS  F     COUNT OF FREE INTERNAL CELLS
LDAEND EQU    *
         MEND
./ ADD NAME=LOWCORE  0100-02135-02135-1228-00057-00057-00000-VBCMACS
         MACRO
&NAME    LOWCORE &DSECT
         LCLC  &CSECT
         LCLC  &DNAME
&CSECT   SETC  '&SYSECT'
&DNAME   SETC  'LOWCORE'
         AIF   (T'&NAME EQ 'O').NONAME
&DNAME   SETC '&NAME'
.NONAME  ANOP
         EJECT
*
*
*
*     DESRIPTION OF PSA
*
*
*
         AIF   (T'&DSECT NE 'O').NODSECT
&DNAME   DSECT
         AGO   .DATA
.NODSECT ANOP
&DNAME   DS    0D
.DATA    ANOP
IPLPSW   DS    D
IPLCCW1  DS    D
IPLCCW2  DS    D
EPSWO    DS    D
SPSWO    DS    D
PPSWO    DS    D
MPSWO    DS    D
IPSWO    DS    D
CSW      DS    D
CAW      DS    F
         DS    F
INTIMER  DS    D
EPSWN    DS    D
SPSWN    DS    D
PPSWN    DS    D
MPSWN    DS    D
IPSWN    DS    D
         DS    32D
REGS     DS    16F
CREGS    DS    16F
         DS    XL3224
EREGS    DS    16F
SREGS    DS    16F
PREGS    DS    16F
MREGS    DS    16F
IREGS    DS    16F
*
*
*
         AIF   (T'&DSECT NE 'O').END
&CSECT   CSECT
.END     ANOP
         EJECT
         MEND
./ ADD NAME=MSORT    0100-02135-02135-1228-00036-00036-00000-VBCMACS
         MACRO
&NAME    MSORT &FLDS
*
*   SYMBOLIC PARAM IS 'FIELDS=(           ) UP TO 47 CHARACTERS IN ( )
*   SORT IS SPECIFIED WITHIN THE MACRO ALREADY
*   PGM WILL NOT ASSEMBLE WITHOUT &FLDS PARAMETER SPECIFIED-SEE MNOTE
*
         AIF   (T'&FLDS EQ 'O').NOFLDS
*   LOAD ADDR OF PARAM LIST INTO REGISTER 1
*   LINK TO SORT33 USING REGISTER 1
         LA    1,MPARM
         LINK  EP=SORT33,MF=(E,(1))
         B     MSORTOUT
         CNOP  0,8
MPARM    DC    X'80'
         DC    AL3(MLIST)
         DC    X'0000'
MLIST    DC    X'001C'
         DC    A(SORTCBEG)
         DC    A(SORTCEND)
         DC    X'00000000'
         DC    X'00000000'
         DC    X'00000000'
         DC    X'00000000'
         DC    X'00'
         DC    C'MAX'
SORTCBEG DC    C' SORT '
         DC    C&FLDS
SORTCEND DC    C' '
         CNOP  0,8
MSORTOUT EQU   *
         MEXIT
.NOFLDS  ANOP
         MNOTE 8,'NO SORT FIELD STATEMENT SPECIFIED - REQUIRED'
.EXIT1   ANOP
         MEND
./ ADD NAME=PDSDIR   0100-02135-02135-1228-00164-00164-00000-VBCMACS
         MACRO
         PDS
*/*            PARTITIONED DATA SET (PDS) DIRECTORY ENTRY            */
*/*      THE PDS DIRECTORY ENTRY MAY HAVE ANY OR ALL OF THE          */
*/*      FOLLOWING FIVE SECTIONS IN THIS ORDER --                    */
*/*      1.    BASIC (MAY OR MAY NOT CONTAIN 2 BLDL BYTES)           */
*/*      2.    SCATTER LOAD   - OPTIONAL                             */
*/*      3.    ALIAS          - OPTIONAL                             */
*/*      4.    SSI            - OPTIONAL                             */
*/*      5.    APF            - OPTIONAL                             */
         IEZBITS , -          SYMBOLIC BIT DEFINITIONS
PDS2     DSECT ,              PDS2PTR
PDS2NAME DS    CL8 -          LOAD MODULE MEMBER NAME OR ALIAS
PDS2TTRP DS    CL3 -          TTR OF FIRST BLOCK OF NAMED MEMBER
PDS2CNCT DS    FL1 -          CONCATENATION NUMBER OF THE DATA SET
PDS2LIBF DS    C -            LIBRARY FLAG FIELD
PDS2LNRM EQU   X'00' -        NORMAL CASE
PDS2LLNK EQU   X'01' -        IF DCB OPERAND IN BLDL MACRO INTRUCTION
*                             WAS SPECIFIED AS ZERO, NAME WAS FOUND IN
*                             LINK LIBRARY
PDS2LJOB EQU   X'02' -        IF DCB OPERAND IN BLDL MACRO INTRUCTION
*                             WAS SPECIFIED AS ZERO, NAME WAS FOUND IN
*                             JOB LIBRARY
DEZBYTE  EQU   PDS2LIBF --- ALIAS
PDS2INDC DS    B -            INDICATOR BYTE
PDS2ALIS EQU   BIT0 -         NAME IN THE FIRST FIELD IS AN ALIAS
DEALIAS  EQU   BIT0 --- ALIAS FOR PDS2ALIS
PDS2NTTR EQU   BIT1+BIT2 -    NUMBER OF TTR'S IN THE USER DATA FIELD
PDS2LUSR EQU   BIT3+BIT4+BIT5+BIT6+BIT7 - LENGTH OF USER DATA FIELD
*                             IN HALF WORDS
PDS2USRD DS    0C -           START OF VARIABLE LENGTH USER DATA FIELD
PDS2TTRT DS    CL3 -          TTR OF FIRST BLOCK OF TEXT
PDS2ZERO DS    C -            ZERO
PDS2TTRN DS    CL3 -          TTR OF NOTE LIST OR SCATTER/TRANSLATION
*                             TABLE.  USED FOR MODULES IN SCATTER LOAD
*                             FORMAT OR OVERLAY STRUCTURE ONLY.
PDS2NL   DS    FL1 -          NUMBER OF ENTRIES IN NOTE LIST FOR
*                             MODULES IN OVERLAY STRUCTURE,
*                             OTHERWISE ZERO
PDS2ATR  DS    0BL2 -         TWO-BYTE MODULE ATTRIBUTE FIELD
PDS2ATR1 DS    B -            FIRST BYTE OF MODULE ATTRIBUTE FIELD
PDS2RENT EQU   BIT0 -         REENTERABLE
DEREEN   EQU   BIT0 --- ALIAS FOR PDS2RENT
PDS2REUS EQU   BIT1 -         REUSABLE
PDS2OVLY EQU   BIT2 -         IN OVERLAY STRUCTURE
DEOVLY   EQU   BIT2 --- ALIAS FOR PDS2OVLY
PDS2TEST EQU   BIT3 -         MODULE TO BE TESTED - TESTRAN
PDS2LOAD EQU   BIT4 -         ONLY LOADABLE
DELODY   EQU   BIT4 --- ALIAS FOR PDS2LOAD
PDS2SCTR EQU   BIT5 -         SCATTER FORMAT
DESCAT   EQU   BIT5 --- ALIAS FOR PDS2SCTR
PDS2EXEC EQU   BIT6 -         EXECUTABLE
DEXCUT   EQU   BIT6 --- ALIAS FOR PDS2EXEC
PDS21BLK EQU   BIT7 -         IF ZERO, MODULE CONTAINS MULTIPLE RECORDS
*                             WITH AT LEAST ONE BLOCK OF TEXT.  ---
*                             IF ONE, MODULE CONTAINS NO RLD ITEMS AND
*                             ONLY ONE BLOCK OF TEXT.
PDS2ATR2 DS    B -            SECOND BYTE OF MODULE ATTRIBUTE FIELD
PDS2FLVL EQU   BIT0 -         IF ZERO, MODULE CAN BE PROCESSED BY ALL
*                             LEVELS OF LINKAGE EDITOR.  ---
*                             IF ONE, MODULE CAN BE PROCESSED ONLY BY
*                             F LEVEL OF LINKAGE EDITOR.
PDS2ORG0 EQU   BIT1 -         LINKAGE EDITOR ASSIGNED ORIGIN OF FIRST
*                             BLOCK OF TEXT IS ZERO.
PDS2EP0  EQU   BIT2 -         ENTRY POINT ASSIGNED BY LINKAGE EDITOR
*                             IS ZERO
PDS2NRLD EQU   BIT3 -         MODULE CONTAINS NO RLD ITEMS
PDS2NREP EQU   BIT4 -         MODULE CANNOT BE REPROCESSED BY LINKAGE
*                             EDITOR
PDS2TSTN EQU   BIT5 -         MODULE CONTAINS TESTRAN SYMBOL CARDS
PDS2LEF  EQU   BIT6 -         MODULE CREATED BY LINKAGE EDITOR F
PDS2REFR EQU   BIT7 -         REFRESHABLE MODULE
PDS2STOR DS    FL3 -          TOTAL CONTIGUOUS MAIN STORAGE REQUIREMENT
*                             OF MODULE
PDS2FTBL DS    FL2 -          LENGTH OF FIRST BLOCK OF TEXT
PDS2EPA  DS    AL3 -          ENTRY POINT ADDRESS ASSOCIATED WITH
*                             MEMBER NAME OR WITH ALIAS NAME IF ALIAS
*                             INDICATOR IS ONE
         DS    0AL3 -         LINKAGE EDITOR ASSIGNED ORIGIN OF FIRST
*                             BLOCK OF TEXT (OS USE OF FIELD)
PDS2FTBO DS    0BL3 -         FLAG BYTES (AOS USE OF FIELD)
PDS2FTB1 DS    B -            BYTE 1 OF PDS2FTBO
PDSAOSLE EQU   BIT0 -         MODULE HAS BEEN PROCESSED BY AOS LINKAGE
*                             EDITOR
*        BIT1 IS RESERVED TO INDICATE ANOTHER EXPANSION WHEN IT
*        BECOMES NECESSARY
PDS2PAGA EQU   BIT2 -         PAGE ALIGNMENT REQUIRED FOR LOAD
*                             MODULE
PDS2SSI  EQU   BIT3 -         SSI INFORMATION PRESENT
PDSAPFLG EQU   BIT4 -         INFORMATION IN PDSAPF IS VALID
PDS2FTB2 DS    B -            BYTE 2 OF PDS2FTBO
PDS2FTB3 DS    B -            BYTE 3 OF PDS2FTBO
PDSBCEND EQU   * -            END OF BASIC SECTION
PDSBCLN  EQU   PDSBCEND-PDS2 - LENGTH OF BASIC SECTION
         SPACE 2
*        THE FOLLOWING SECTION IS FOR LOAD MODULES WITH SCATTER LOAD
         SPACE 1
PDSS01   EQU   * -            START OF SCATTER LOAD SECTION
PDS2SLSZ DS    FL2 -          NUMBER OF BYTES IN SCATTER LIST
PDS2TTSZ DS    FL2 -          NUMBER OF BYTES IN TRANSLATION TABLE
PDS2ESDT DS    CL2 -          IDENTIFICATION OF ESD ITEM (ESDID) OF
*                             CONTROL SECTION TO WHICH FIRST BLOCK OF
*                             TEXT BELONGS
PDS2ESDC DS    CL2 -          IDENTIFICATION OF ESD ITEM (ESDID) OF
*                             CONTROL SECTION CONTAINING ENTRY POINT
PDSS01ND EQU   * -            END OF SCATTER LOAD SECTION
PDSS01LN EQU   PDSS01ND-PDSS01 - LENGTH OF SCATTER LOAD SECTION
         SPACE 2
*        THE FOLLOWING SECTION IS FOR LOAD MODULES WITH ALIAS NAMES
         SPACE 1
PDSS02   EQU   * -            START OF ALIAS SECTION
PDS2EPM  DS    AL3 -          ENTRY POINT FOR MEMBER NAME
DEENTBK  EQU   PDS2EPM --- ALIAS
PDS2MNM  DS    CL8 -          MEMBER NAME OF LOAD MODULE.  WHEN THE
*                             FIRST FIELD (PDS2NAME) IS AN ALIAS NAME,
*                             THIS FIELD CONTAINS THE ORIGINAL NAME OF
*                             THE MEMBER EVEN AFTER THE MEMBER HAS
*                             BEEN RENAMED.
PDSS02ND EQU   * -            END OF ALIAS SECTION
PDSS02LN EQU   PDSS02ND-PDSS02 - LENGTH OF ALIAS SECTION
         SPACE 2
*        THE FOLLOWING SECTION IS FOR SSI INFORMATION AND IS ON
*        A HALF-WORD BOUNDARY
         SPACE 1
PDSS03   DS    0H -           FORCE HALF-WORD ALIGNMENT FOR SSI
*                             SECTION
PDSSSIWD DS    0CL4 -         SSI INFORMATION WORD
PDSCHLVL DS    FL1 -          CHANGE LEVEL OF MEMBER
PDSSSIFB DS    B -            SSI FLAG BYTE
PDSFORCE EQU   BIT1 -         A FORCE CONTROL CARD WAS USED WHEN
*                             EXECUTING THE IHGUAP PROGRAM
PDSUSRCH EQU   BIT2 -         A CHANGE WAS MADE TO MEMBER BY THE
*                             INSTALLATION, AS OPPOSED TO AN
*                             IBM-DISTRIBUTED CHANGE
PDSEMFIX EQU   BIT3 -         SET WHEN AN EMERGENCY IBM-AUTHORIZED
*                             PROGRAM 'FIX' IS MADE, AS OPPOSED TO
*                             CHANGES THAT ARE INCLUDED IN AN
*                             IBM-DISTRIBUTED MAINTENANCE PACKAGE
PDSDEPCH EQU   BIT4 -         A CHANGE MADE TO THE MEMBER IS DEPENDENT
*                             UPON A CHANGE MADE TO SOME OTHER MEMBER
*                             IN THE SYSTEM
PDSSYSGN EQU   BIT5+BIT6 -    FLAGS THAT INDICATE WHETHER OR NOT A
*                             CHANGE TO THE MEMBER WILL NECESSITATE A
*                             PARTIAL OR COMPLETE REGENERATION OF THE
*                             SYSTEM
PDSNOSGN EQU   X'00' -        NOT CRITICAL FOR SYSTEM GENERATION
PDSCMSGN EQU   BIT6 -         MAY REQUIRE COMPLETE REGENERATION
PDSPTSGN EQU   BIT5 -         MAY REQUIRE PARTIAL REGENERATION
PDSIBMMB EQU   BIT7 -         MEMBER IS SUPPLIED BY IBM
PDSMBRSN DS    CL2 -          MEMBER SERIAL NUMBER
PDSS03ND EQU   * -            END OF SSI SECTION
PDSS03LN EQU   PDSS03ND-PDSS03 - LENGTH OF SSI SECTION
         SPACE 2
*        THE FOLLOWING SECTION IS FOR APF INFORMATION
         SPACE 1
PDSS04   EQU   * -            START OF APF SECTION
PDSAPF   DS    0CL2 -         PROGRAM AUTHORIZATION FACILITY (APF)
*                             FIELD
PDSAPFCT DS    FL1 -          LENGTH OF PROGRAM AUTHORIZATION CODE
*                             (PDSAPFAC) IN BYTES
PDSAPFAC DS    C -            PROGRAM AUTHORIZATION CODE
PDSS04ND EQU   * -            END OF APF SECTION
PDSS04LN EQU   PDSS04ND-PDSS04 - LENGTH OF APF SECTION
         MEND
./ ADD NAME=PVT      0100-02135-02135-1228-00239-00239-00000-VBCMACS
         MACRO
         PVT
         IEZBITS
**                       PAGE VECTOR TABLE    11/06/74                *
PVT      DSECT , PVTPTR
PVTFLAG1 DC    BL1'00000000' - FLAG BYTE
PVTPMSG  EQU   BIT0 -          WHEN 1, PREFERRED AREA EXPANSION MESSAGE
*                              HAS ALREADY BEEN ISSUED
PVTBGMS  EQU   BIT1 -          WHEN =1, GETMAIN CANNOT BE CALLED
PVTSRBIU EQU   BIT2 -          WHEN 1, PVTRSRB IS IN USE.
PVTPCBLT EQU   BIT3 -          WHEN ON, THE INITIAL PCB POOL HAS BEEN
*                              BUILT AS PART OF SYSTEM INITIALIZATION.
*              BIT4 -          RESERVED
PVTLSI   EQU   BIT5 -          AFC LOW SYSEVENT ISSUED FLAG. WHEN 1,
*                              THE AFC LOW SYSEVENT HAS BEEN ISSUED.
PVTSIT   EQU   BIT6 -          SUSPEND IN TROUBLE, WHEN ON NEED ANOTHER
*                              SSRB. WHEN OFF PVTSSRB HAS ADDR OF EXTRA
PVTDUMP  EQU   BIT7 -          WHEN 1, THE RSM RECOVERY ROUTINE WILL
*                              DUMP THE PVT, PFT, SQA, AND CURRENT LSQA
*                              ON C0D ABENDS. SET/RESET MANUALLY.
PVTFLAG2 DC    BL1'00000000' - RESERVED
**
**       THE RFA ROUTINES AND PFTE ENQ/DEQ WORK TOGETHER IN MAINTAINING
**       THE NEXT THREE COUNTS, THEIR RELATED SRM SYSEVENTS, AND
**       CONTROLLING FLAGS LISTED ABOVE.
**
PVTAFC   DC    H'0' -          AVAILABLE FRAME COUNT
PVTAFCLO DC    H'0' -          AVAILABLE FRAME COUNT LOW THRESHOLD.
*                              SRM IS NOTIFIED WHEN PVTAFC IS TOO LOW.
PVTAFCOK DC    H'0' -          THRESHOLD AT WHICH THE SRM IS NOTIFIED
*                              THAT PVTAFC IS AT A SATISFACTORY LEVEL
PVTPOOL  DC    H'0' -          THE TOTAL NUMBER OF REAL STORAGE
*                              FRAMES CURRENTLY AVAILABLE FOR REAL
*                              STORAGE MANAGEMENT USE.  THIS COUNT
*                              EXCLUDES FRAMES OCCUPIED BY THE
*                              NUCLEUS AND FRAMES MARKED AS BAD OR
*                              OFFLINE
PVTPCBS  DC    AL1(0) -        NUMBER OF PCBS TO BE CREATED
*                              AT SYSTEM INITIALIZATION.
PVTSSPIN DC    XL1'00' -       SLAVE SPIN BYTE USED BY PAGE
*                              INVALIDATION ROUTINE
PVTPFTP  DS    A -             APPARENT ORIGIN OF PAGE FRAME TABLE
*                              (VM ADDR)
PVTFPFN  DS    AL2 -           PFTE INDEX (RBN) TO FIRST PFTE IN PFT.
*                              RBN IS HIGH ORDER 12 BITS OF A 24 BIT
*                              REAL ADDRESS, RBN IS LEFT JUSTIFIED IN
*                              HALF WORD, 4 LOW ORDER BITS ARE ZERO
PVTLPFN  DS    AL2 -           PFTE INDEX (RBN) TO LAST PFTE IN PFT.
*                              HIGHEST ADDRESS FRAME KNOWN TO RSM
PVTFVR   DS    AL2 -           PFTE INDEX (RBN) OF FIRST PFTE FOR V=R
*                              AREA, RBN OF LOWEST ADDRESS FRAME OF
*                              V=R AREA
PVTLVR   DS    AL2 -           PFTE INDEX (RBN) OF LAST PFTE FOR V=R
*                              AREA, RBN OF HIGHEST ADDRESS FRAME OF
*                              V=R AREA
PVTLPRIV DS    AL2 -           VIRTUAL STORAGE INDEX (VBN) TO THE FIRST
*                              PAGE OF THE USER PRIVATE AREA.
*                              VBN IS THE HIGH ORDER 12 BITS OF A 24
*                              BIT VIRTUAL ADDRESS
PVTLCSA  DS    AL2 -           VBN TO THE FIRST PAGE OF CSA, SAME AS
*                              LOWEST ADDRESS PAGE ABOVE THE USER
*                              PRIVATE AREA
PVTSQDC  DC    FL1'0' -        SQA QUEUE DEFICIT COUNT.
*                              THE NUMBER OF FRAMES NEEDED TO
*                              RESTORE THE SQA RESERVE QUEUE TO THE
*                              NUMBER OF FRAMES SPECIFIED IN THE PVT
PVTSRBNO DC    FL1'0' -        NUMBER OF SRBS TO BE OBTAINED IF
*                              REPLENISHMENT IS NECESSARY.
PVTPCBNO DC    FL1'0' -        NUMBER OF PCB'S TO BE OBTAINED IF
*                              REPLENISHMENT IS NECESSARY
PVTPTLB  DC    XL1'0' -        COMMUNICATION BYTE USED BY PAGE
*                              INVALIDATION ON MULTIPLE PROCESSORS
PVTRSQA  DC    H'0' -          THE NUMBER OF TIMES AN SQA RESERVED
*                              FRAME WAS USED FOR SQA ALLOCATION.
PVTDFRS  DC    H'0' -          THE COUNT OF THE NUMBER OF TIMES
*                              A FRAME ALLOCATION REQUEST
*                              WAS DEFERRED.
PVTPCBCT DC    H'0' -          COUNT OF THE NUMBER OF PCB'S
*                              CURRENTLY ON THE FREE QUEUE
PVTPCBLO DC    H'0' -          LOW THRESHOLD OF PCB FREE QUEUE.
*                              WHEN THE PCB COUNT GOES BELOW THIS
*                              THRESHOLD, THE PCB POOL MUST BE
*                              EXTENDED.
PVTVROOT DC    A(0) -          VSA OF FIRST ROOT PCB ON V=R REGION
*                              WAIT QUEUE
PVTRSUS  DC    AL2(0) -        RECONFIGURABLE STORAGE UNIT SIZE IN
*                              FRAMES
PVTRESV4 DC    AL2(0) -        RESERVED
PVTCALGN DC    CL8'        ' - LGN FOR GENERATION OF LPID'S OF
*                              COMMON AREA (LPA/CSA) PAGES
PVTPRCA  DC    A(0) -          ADDRESS OF CURRENT RECOVERY COMM AREA
PVTOROOT DC    A(0) -          VSA OF THE FIRST VARY OFFLINE ROOT PCB
PVTLQSA  DC    AL2(0) -        VBN OF LOWEST ADDRESSED PAGE OF THE
*                              VIRTUAL AREA TO BE PRESERVED FOR
*                              QUICKSTARTS.
PVTHQSA  DC    AL2(0) -        VBN OF NEXT HIGHEST PAGE ABOVE THE
*                              VIRTUAL AREA TO BE PRESERVED FOR
*                              QUICKSTARTS.
PVTPCIWA DC    A(0) -          ADDRESS OF FETCH PROTECTED WORKAREA FOR
*                              PAGE SERVICES ROUTINES
PVTSRBID DS    0F -            ID OF CELL POOL FOR RSM SRBS
         DC    CL3'RSM'
         DC    X'01'
**
**             V-CONS FOR MAJOR RSM ENTRY POINTS
**
PVTPSIB  DC    V(IEAVPSIB) -   EXTERNAL PSI BRANCH ENTRY
PVTPSINT DC    V(IEAVPSII) -   INTERNAL PSI BRANCH ENTRY
PVTPSQA  DC    V(IEAVSQA) -    SQA, LSQA ALLOCATION
PVTPGFA  DC    V(IEAVGFA) -    GENERAL FRAME ALLOCATION
PVTPGFAD DC    V(IEAVGFAD) -   GFA DEFER PROCESSOR
PVTPIOI  DC    V(IEAVPIOI) -   SWAP-OUT I/O INITIATOR
PVTPIOP  DC    V(IEAVPIOP) -   PAGE I/O POST
PVTPIOCP DC    V(IEAVIOCP) -   I/O COMPLETION PROCESSOR - SRB ENTRY
PVTPIOCB DC    V(IEAVCPBR) -   IOCP BRANCH ENTRY
PVTPCB   DC    V(IEAVPCB) -    PCB MANAGER
PVTPFTE  DC    V(IEAVPFTE) -   PFTE ENQ/DEQ
PVTPFP   DC    V(IEAVFP1) -    FIND PAGE - LOCAL LOCK HOLDER E.P.
PVTPFP2  DC    V(IEAVFP2) -    FIND PAGE - RSM ENTRY POINT
PVTPRFR  DC    V(IEAVRFR) -    REAL FRAME REPLACEMENT SELECT RTN
PVTPVRPO DC    V(IEAVEQRP) -   V=R FORCE PAGE OUT
PVTPTERM DC    V(IEAVTERM) -   TERMINATION SERVICES
PVTPVEQR DC    V(IEAVEQR) -    V=R ALLOCATION
PVTPVRLS DC    V(IEAVEQRF) -   V=R RELEASE
PVTPVRIN DC    V(IEAVEQRI) -   V=R INTERCEPT
PVTPVRC  DC    V(IEAVEQRC) -   V=R COMPLETION
PVTPRCF  DC    V(IEAVRCF) -    STORAGE RECONFIGURATION INTERFACE
PVTPRCFI DC    V(IEAVRCFI) -   RECONFIGURATION INTERCEPT ROUTINE
PVTPRCV  DC    V(IEAVRCV) -    FUNCTIONAL RECOVERY ROUTINE
PVTPSWIN DC    V(IEAVSWIN) -   SWAP IN
PVTPSOUT DC    V(IEAVSOUT) -   SWAP OUT
PVTPINV  DC    V(IEAVINV) -    PAGE INVALIDATION
PVTPRSET DC    V(IEAVRSET) -   PCFLIHS RESET ROUTINE
PVTPCSEG DC    V(IEAVCSEG) -   CREATE SEGMENT EXTERNAL BRANCH ENTRY
PVTPCSGB DC    V(IEAVCSGB) -   CREATE SEGMENT INTERNAL BRANCH ENTRY
PVTPDSEG DC    V(IEAVDSEG) -   DESTROY SEGMENT
PVTSRBP  DC    V(IEAVSRBP) -   SRB PURGE ROUTINE
PVTPITAS DC    V(IEAVITAS) -   INITIALIZE ADDRESS SPACE
PVTPFXLD DC    V(IEAVFXLD) -   PGFIX AND PGLOAD PROCESSOR
PVTPOUT  DC    V(IEAVOUT) -    PGOUT PROCESSOR
PVTPRELS DC    V(IEAVRELS) -   PGRLSE PROCESSOR
PVTPFREE DC    V(IEAVFREE) -   PGFREE PROCESSOR
PVTPRELV DC    V(IEAVRELV) -   FREEMAIN-RELEASE ENTRY POINT
PVTPRELF DC    V(IEAVRELF) -   DEFERRED RELEASE ENTRY POINT
PVTPOPBR DC    V(IEAVOPBR) -   SCHEDULE SUBROUTINE OF PIOP
**
**             EVENT COUNTERS FOR SMF AND TUNING PURPOSES
**
**          ALL FIELDS EXCEPT PVTCFMCT ARE WRAP-AROUND COUNTS.
**
PVTNPIN  DC    F'0' -          NUMBER OF PAGES PAGED IN, EXCLUDING
*                              SWAP-INS AND VIO PAGE-INS
PVTNPOUT DC    F'0' -          NUMBER OF PAGES PAGED OUT, EXCLUDING
*                              SWAP-OUTS AND VIO PAGE-INS
PVTVAMI  DC    F'0' -          NUMBER OF VIO PAGE-INS, EXCLUDING SWAP
PVTVAMO  DC    F'0' -          NUMBER OF VIO PAGE-OUTS, EXCLUDING SWAP
PVTVAMR  DC    F'0' -          NUMBER OF VIO RECLAIMS
PVTSPIN  DC    F'0' -          NUMBER OF PAGES SWAPPED IN
PVTSPOUT DC    F'0' -          NUMBER OF PAGES SWAPPED OUT
PVTNPREC DC    F'0' -          NUMBER OF PAGES RECLAIMED
PVTNSWPS DC    F'0' -          NUMBER OF SUCCESSFUL SWAP-INS
PVTCAIN  DC    F'0' -          NUMBER OF NON-VIO PAGE-INS
PVTCAOUT DC    F'0' -          NUMBER OF COMMON AREA NON-VIO PAGE-OUTS
PVTCAREC DC    F'0' -          NUMBER OF RECLAIMS OF COMMON AREA
*                              NON-VIO PAGES
PVTCAVI  DC    F'0' -          NUMBER OF COMMON AREA VIO PAGE-INS
PVTCAVO  DC    F'0' -          NUMBER OF COMMON AREA VIO PAGE-OUTS
PVTCAVR  DC    F'0' -          NUMBER OF COMMON AREA VIO RECLAIMS
PVTCFMCT DC    H'0' -          NUMBER OF FRAMES CURRENTLY ASSIGNED TO
*                              PAGEABLE COMMON AREAS (CSA AND LPA)
PVTSPFR  DC    H'0' -          NUMBER OF FRAMES FREED BY SWAP-OUT
*                              WITHOUT OUTPUT I/O.
**
**       THIS SECTION OF THE PVT CONTAINS ANCHORS FOR PFTE AND PCB
**       QUEUES.  THE FIELDS MUST REMAIN IN THIS ORDER BECAUSE THEY
**       ARE INDEXED BY QUEUE NUMBERS.  ALSO, THE PFTE AND PCB MANAGERS
**       DEPEND ON THE COMPILE-TIME DISPLACEMENT OF THIS SECTION FROM
**       THE PVT ORIGIN.  ALL QUEUES ARE FORWARD AND BACKWARD CHAINED.
**
**   NOTE:  IF FIELDS ARE ADDED OR DELETED FROM THIS SECTION,
**          THE PCB AND PFTE QUEUE INDEX VALUES MUST BE ADJUSTED.
**
PVTQS    DS    0F -            BEGINNING OF ORDERED BLOCK OF QUEUE
*                              ANCHORS
PVTAFQF  DC    AL2(0) -        RBN OF FIRST PFTE ON AVAILABLE FRAME Q
PVTAFQL  DC    AL2(0) -        RBN OF LAST PFTE ON AVAILABLE FRAME Q
PVTRSRVF DC    AL2(0) -        RBN OF FIRST PFTE ON SQA RESERVED Q
PVTRSRVL DC    AL2(0) -        RBN OF LAST PFTE ON SQA RESERVED Q
PVTCFQF  DC    AL2(0) -        RBN OF FIRST PFTE ON COMMON FRAME Q
*                              (CSA AND LPA FRAMES)
PVTCFQL  DC    AL2(0) -        RBN OF LAST PFTE ON COMMON FRAME Q
PVTSQAQF DC    AL2(0) -        RBN OF FIRST PFTE ON SQA FRAME Q
PVTSQAQL DC    AL2(0) -        RBN OF LAST PFTE ON SQA FRAME Q
PVTFPCBF DC    A(0) -          VSA OF FIRST PCB ON THE FREE QUEUE
*                              (AVAILABLE PCB'S)
PVTFPCBL DC    A(0) -          VSA OF LAST PCB ON THE FREE Q
PVTGFADF DC    A(0) -          VSA OF FIRST PCB ON GFA DEFERRED
*                              ALLOCATION Q
PVTGFADL DC    A(0) -          VSA OF LAST PCB ON GFA DEFERRED
*                              ALLOCATION Q
PVTCIOQF DC    A(0) -          VSA OF FIRST PCB ON COMMON I/O Q
PVTCIOQL DC    A(0) -          VSA OF LAST PCB ON COMMON I/O Q
**
**      FOLLOWING ARE THE RSM WORK/SAVE AREA DEFINITIONS
**      USE OF THIS AREA IS GUARDED BY THE SALLOC LOCK.
**
PVTWSAX  DS    0F -            BEGINING OF THE WORK SAVE AREA
PVTWSA1  DS    18F -           WORK/SAVE AREA FOR IEAVCSEG/IEAVDSEG
PVTWSA2  DS    18F -           WORK/SAVE AREA FOR IEAVDLAS/P.S.SUBRTNS
PVTWSA3  DS    18F -           WORK/SAVE AREA FOR IEAVEQRI/IEAVRCFI
PVTWSA4  DS    18F -           WORK/SAVE AREA FOR IEAVPSII   E.P.
PVTWSA5  DS    18F -           WORK/SAVE AREA FOR IEAVRELV   E.P.
PVTWSA6  DS    18F -           WORK/SAVE AREA FOR IEAVRELF   E.P.
PVTWSA7  DS    18F -           WORK/SAVE AREA FOR ALL ROOT EXITS
PVTWSA8  DS    20F -           WORK/SAVE AREA FOR IEAVGFA/IEAVSQA
PVTWSA9  DS    20F -           WORK/SAVE AREA FOR IEAVOPBR   E.P.
PVTWSA10 DS    20F -           WORK/SAVE AREA FOR IEAVCPBR   E.P.
PVTWSA11 DS    18F -           WORK/SAVE AREA FOR IEAVPSI
PVTWSA12 DS    18F -           WORK/SAVE AREA FOR IEAVPFTE
PVTWSA13 DS    18F -           WORK/SAVE AREA FOR IEAVPCB
PVTWSA14 DS    18F -           WORK/SAVE AREA FOR IEAVFP2/IEAVINV
PVTWSA15 DS    18F -           WORK/SAVE AREA FOR IEAVAMSI,IEAVSOUT AND
*                              IEAVRFR
PVTSAVE  DS    18F -           SAVE AREA FOR CALLING OTHER PROGRAMS
PVTACA   DS    6F -            ASM CONTROL AREA (ACA) USED BY RSM
*                              ROUTINES WHEN REQUESTING ASM SERVICES
*                              OTHER THAN REQUEST I/O.
PVTSSRB  DS    F               ADDR OF EXTRA SSRB FOR PCFLIH
PVTSPARE DC    5F'0' -         RESERVED SPACE
PVTWSA16 DS    18F -           WORK/SAVE AREA FOR IEAVPREF
PVTSRBS  DC    FL1'0' -        NUMBER OF SRB'S TO BE BUILT INITIALLY.
*
PVTRESV5 DS    CL3 -           RESERVED
PVTRSRB  DS    0F              SRB TO SCHEDULE REPLENISH
         DS    CL44 -          RESERVED SRB USED TO SCHED IEAVREP1
PVTREP2  DC    V(IEAVREP2) -   ENTRY POINT IEAVREP2
PVTWSA17 DS    18F -           WORK/SAVE FOR IEAVREP2
PVTLEN   EQU   *-PVT           LENGTH OF PVT
         MEND
./ ADD NAME=QSYNAD   0100-02135-02135-1228-00095-00095-00000-VBCMACS
         MACRO
&LABEL   QSYNAD &DCBNM,&REG
.* OPERANDS ARE DCBNAME AND OPTIONALLY AN ERROR RETURN REGISTER
         AIF   (T'&DCBNM EQ 'O').OMIT TEST FOR OMITTED DCBNM
         STM   R13,R0,QE&SYSNDX    STORE REGISTERS USED IN SYNAD
         TM    &DCBNM+80,MASK80    TEST FOR NOT FOUND
         BO    QNF&SYSNDX
         TM    &DCBNM+80,MASK40    SHOULD NOT OCCUR
         BO    QSN&SYSNDX
         TM    &DCBNM+80,MASK20    NO ROOM
         BO    QNR&SYSNDX
         TM    &DCBNM+80,MASK10    SHOULD NOT OCCUR
         BO    QSN&SYSNDX
         TM    &DCBNM+80,MASK08    IO INPUT
         BO    QIO&SYSNDX
         TM    &DCBNM+80,MASK04    IO OUTPUT
         BO    QIO&SYSNDX
         TM    &DCBNM+80,MASK02
         BO    QUB&SYSNDX          UNREACHABLE BLOCK
         TM    &DCBNM+80,MASK01    UNREACHABLE BLOCK
         BO    QUB&SYSNDX
         TM    &DCBNM+81,MASK80    SEQUENCE
         BO    QSQ&SYSNDX
         TM    &DCBNM+81,MASK40    DUPLICATE
         BO    QDP&SYSNDX
         TM    &DCBNM+81,MASK20    SHOULD NOT OCCUR
         BO    QSN&SYSNDX
         TM    &DCBNM+81,MASK08    WLR
         BO    QWL&SYSNDX
QSN&SYSNDX EQU   *                 SHOULD NOT OCCUR
         MVC   QA&SYSNDX+1(3),Q202&SYSNDX
QAB&SYSNDX EQU   *                 ABEND ROUTINE
         L     R1,16               GET CVT ADDRESS
         L     R1,0(R1)            GET TCB ADDRESS POINTER FROM CVT
         L     R1,4(R1)            GET TCB ADDRESS
         L     R1,12(R1)           GET TIOT ADDRESS FROM TCB
         AH    R1,&DCBNM+40        ADD TIOT OFFSET FROM DCB
         MVC   QF&SYSNDX,4(R1)     MOVE DDNAME FROM TIOT TO MESSAGE
         LA    R1,QW&SYSNDX
         SVC   35                  WRITE TO OPERATOR
         LM    R13,R0,QE&SYSNDX    RESTORE PROGRAM REGISTERS
         L     R1,QA&SYSNDX
         SVC   13                  ABEND WITH DUMP
QNF&SYSNDX EQU   *                 REC NOT FOUND
         AIF   (T'&REG EQ 'O').NOREG
         MVI   0(&REG),QN&SYSNDX   MOVE N TO ERROR IND
         B     QEX&SYSNDX          EXIT
.NOREG   ANOP
         B     QSN&SYSNDX
QNR&SYSNDX EQU   *                 NO ROOM
         MVC   QA&SYSNDX+1(3),Q104&SYSNDX  ABEND CODE 104
         B     QAB&SYSNDX
QIO&SYSNDX EQU   *                 IO ERROR
         MVC   QA&SYSNDX+1(3),Q101&SYSNDX  ABEND CODE 101
         B     QAB&SYSNDX
QUB&SYSNDX EQU   *                 UNREACHABLE BLOCK
         MVC   QA&SYSNDX+1(3),Q103&SYSNDX  ABEND CODE 103
         B     QAB&SYSNDX
QSQ&SYSNDX EQU   *                 SEQUENCE ERROR
         MVC   QA&SYSNDX+1(3),Q302&SYSNDX  ABEND CODE 302
         B     QAB&SYSNDX
QDP&SYSNDX EQU   *                 DUPLICATE
         MVC   QA&SYSNDX+1(3),Q301&SYSNDX  ABEND CODE 301
         B     QAB&SYSNDX
QWL&SYSNDX EQU   *                 WRONG LENGTH RECORD
         MVC   QA&SYSNDX+1(3),Q102&SYSNDX  ABEND CODE 102
         B     QAB&SYSNDX
         AGO   .DATA
.OMIT    ANOP
.*  DCBNAME OMITTED
         MNOTE 9,'OMITTED OPERAND - MACRO GENERATION TERMINATED'
         MEXIT
.DATA    ANOP
QE&SYSNDX DS 4F                    ERROR SAVE AREA
         DS    0F
QW&SYSNDX DS 0CL51                 WTO ERROR MESSAGE
         DC    X'00360000'             MSG LENGTH
         DC    CL37'**** DATA SET ERROR - JOB TERMINATED '
QF&SYSNDX DC CL8' '                DDNAME
         DC    CL5' ****'
Q101&SYSNDX DC   AL3(101)
Q102&SYSNDX DC   AL3(102)
Q103&SYSNDX DC    AL3(103)
Q104&SYSNDX DC   AL3(104)
Q202&SYSNDX DC   AL3(202)
Q301&SYSNDX DC   AL3(301)
Q302&SYSNDX DC   AL3(302)
         DS    0F
QA&SYSNDX DC    AL1(128)
         DC    CL3' '
QN&SYSNDX EQU  C'N'
         DS    0H
QEX&SYSNDX EQU   *
         MEXIT
         MEND
./ ADD NAME=RB       0100-02135-02135-1228-00359-00359-00000-VBCMACS
         MACRO
         RB
*/*               OS/VS REQUEST BLOCKS                               */
         IEZBITS , -          SYMBOLIC BIT DEFINITIONS
RBPRFX   DSECT , -            RBSECPTR-64
         DS    8D -           PREFIX IS SYSTEM DEPENDENT
RBBASIC  EQU   * -            START OF BASIC SECTION OF RB
RBEXRTNM DS    0CL8 -         EIGHT-CHARACTER NAME OF ERROR EXIT
*                             ROUTINE (SIRB)
RBTMFLD  DS    B -            INDICATORS FOR TIMER ROUTINES.  WHEN
*                             THERE ARE NO TIMER ROUTINES, THIS FIELD
*                             IS ZERO.  (IRB)
RBTMQUE  EQU   BIT0 -         TIMER ELEMENT NOT ON QUEUE
RBTMTOD  EQU   BIT1 -         LOCAL TIME-OF-DAY OPTION IS USED
RBRSV005 EQU   BIT2,,C'X' -   RESERVED
RBWLIM   EQU   BIT3 -         WAIT LIMIT EXCEEDED
RBTMCMP  EQU   BIT4 -         INTERVAL HAS EXPIRED
RBTMIND2 EQU   BIT5 -         EXIT SPECIFIED WITH TASK OR REAL REQUEST
RBTMIND3 EQU   BIT6+BIT7 -    TYPE OF REQUEST
RBTREQ   EQU   X'00' -        TASK REQUEST
RBWREQ   EQU   BIT7 -         WAIT REQUEST
RBRREQ   EQU   BIT6+BIT7 -    REAL REQUEST
         DS    XL7 -          LAST 7 BYTES OF RBEXRTNM
         DS    H -            SYSTEM-DEPENDENT FIELD
RBSTAB   DS    0BL2 -         STATUS AND ATTRIBUTE BITS  (ALL RB'S)
XSTAB    DS    0BL2 -         SAME AS RBSTAB
RBSTAB1  DS    0B -           FIRST BYTE OF STATUS AND ATTRIBUTE BITS
XSTAB1   DS    B -            SAME AS RBSTAB1
*              BITS 0-4 ARE SYSTEM-DEPENDENT BITS
RBFTCKPT EQU   BIT5 -         A CHECKPOINT MAY BE TAKEN IN A USER EXIT
*                             FROM THIS SVC ROUTINE (SVRB-BOTH)
XRBCKPT  EQU   BIT5 -         SAME AS RBFTCKPT
*              BITS 6-7 ARE SYSTEM-DEPENDENT BITS
RBSTAB2  DS    0B -           SECOND BYTE OF STATUS AND ATTRIBUTE BITS
XSTAB2   DS    B -            SAME AS RBSTAB2
RBTCBNXT EQU   BIT0 -         RBLINK FIELD POINTS TO TCB (ALL RB'S)
XRBTCBP  EQU   BIT0 -         SAME AS RBTCBNXT
RBFACTV  EQU   BIT1 -         IRB OR SIRB IS QUEUED TO TCB - PROGRAM IS
*                             ACTIVE
XRBACTV  EQU   BIT1 -         ACTIVE PROGRAM (ALL RB'S EXCEPT LPRB AND
*                             LRB FOR OS/VS1)
*              BITS 2-5 ARE SYSTEM-DEPENDENT BITS
RBFDYN   EQU   BIT6 -         RB STORAGE CAN BE FREED AT EXIT
XRBFRRB  EQU   BIT6 -         SAME AS RBFDYN
RBECBWT  EQU   BIT7 -         IF ZERO, WAIT FOR A SINGLE EVENT OR ALL
*                             OF A NUMBER OF EVENTS ---
*                             IF ONE, WAIT FOR A NUMBER OF EVENTS THAT
*                             IS LESS THAN THE TOTAL NUMBER OF EVENTS
*                             WAITING
XRBWAIT  EQU   BIT7 -         SAME AS RBECBWT
         DS    A -            SYSTEM-DEPENDENT FIELD
RBOPSW   DS    0CL8 -         USER'S OLD PSW (ALL RB'S EXCEPT FRB)
XRBPSW   DS    CL8 -          SAME AS RBOPSW
         DS    A -            SYSTEM-DEPENDENT FIELD
RBLINK   DS    0A -           SAME AS RBLINKB BELOW
XRBLNK   DS    0A -           SAME AS RBLINKB BELOW
RBWCF    DS    0FL1 -         NUMBER OF REQUESTS WAITING (WAIT COUNT)
*                             (ALL RB'S FOR OS/VS2)
XRBWT    DS    FL1 -          SAME AS RBWCF (ALL RB'S EXCEPT LPRB AND
*                             LRB FOR OS/VS1)
RBLINKB  DS    0AL3 -         ADDRESS OF PREVIOUS RB, OR ADDRESS OF TCB
*                             WHEN THIS IS FIRST RB ON THE QUEUE
*                             (ALL RB'S FOR OS/VS2)
XRBLNKA  DS    AL3 -          SAME AS RBLINKB (ALL RB'S EXCEPT LPRB AND
*                             LRB FOR OS/VS1)
RBGRSAVE DS    0CL64 -        GENERAL REGISTER SAVE AREA
*                             (SVRB-BOTH, IRB, TIRB FOR OS/VS2)
XRBREG   DS    0CL64 -        SAME AS RBGRSAVE
*                             (IRB, SIRB, SVRB FOR OS/VS1)
RBGRS0   DS    0F -           SAVE AREA FOR GENERAL REGISTER 0
XRBREG0  DS    F -            SAME AS RBGRS0
RBGRS1   DS    0F -           SAVE AREA FOR GENERAL REGISTER 1
XRBREG1  DS    F -            SAME AS RBGRS1
RBGRS2   DS    0F -           SAVE AREA FOR GENERAL REGISTER 2
XRBREG2  DS    F -            SAME AS RBGRS2
RBGRS3   DS    0F -           SAVE AREA FOR GENERAL REGISTER 3
XRBREG3  DS    F -            SAME AS RBGRS3
RBGRS4   DS    0F -           SAVE AREA FOR GENERAL REGISTER 4
XRBREG4  DS    F -            SAME AS RBGRS4
RBGRS5   DS    0F -           SAVE AREA FOR GENERAL REGISTER 5
XRBREG5  DS    F -            SAME AS RBGRS5
RBGRS6   DS    0F -           SAVE AREA FOR GENERAL REGISTER 6
XRBREG6  DS    F -            SAME AS RBGRS6
RBGRS7   DS    0F -           SAVE AREA FOR GENERAL REGISTER 7
XRBREG7  DS    F -            SAME AS RBGRS7
RBGRS8   DS    0F -           SAVE AREA FOR GENERAL REGISTER 8
XRBREG8  DS    F -            SAME AS RBGRS8
RBGRS9   DS    0F -           SAVE AREA FOR GENERAL REGISTER 9
XRBREG9  DS    F -            SAME AS RBGRS9
RBGRS10  DS    0F -           SAVE AREA FOR GENERAL REGISTER 10
XRBREG10 DS    F -            SAME AS RBGRS10
RBGRS11  DS    0F -           SAVE AREA FOR GENERAL REGISTER 11
XRBREG11 DS    F -            SAME AS RBGRS11
RBGRS12  DS    0F -           SAVE AREA FOR GENERAL REGISTER 12
XRBREG12 DS    F -            SAME AS RBGRS12
RBGRS13  DS    0F -           SAVE AREA FOR GENERAL REGISTER 13
XRBREG13 DS    F -            SAME AS RBGRS13
RBGRS14  DS    0F -           SAVE AREA FOR GENERAL REGISTER 14
XRBREG14 DS    F -            SAME AS RBGRS14
RBGRS15  DS    0F -           SAVE AREA FOR GENERAL REGISTER 15
XRBREG15 DS    F -            SAME AS RBGRS15
         DS    0D
RBEXSAVE DS    0CL48 -        EXTENDED SAVE AREA FOR SVC ROUTINES
*                             (SVRB-BOTH) (OS/VS2)
XRBESA   DS    10D -          SVRB - EXTENDED SAVE AREA
         ORG   RBPRFX
RBPREFIX EQU   * -            RBSECPTR-64
RBRSV012 DS    A -            RESERVED
RBRSV013 DS    A -            RESERVED
RBRSV014 DS    H -            RESERVED
RBRSV015 DS    X -            RESERVED
RBRSV016 DS    X -            RESERVED
RBRSV017 DS    X -            RESERVED
RBRSV018 DS    X -            RESERVED
RBRSV019 DS    B -            RESERVED
RBRSV020 EQU   X'80',,C'X' -  RESERVED
RBRSV021 EQU   X'40',,C'X' -  RESERVED
RBRSV022 EQU   X'20',,C'X' -  RESERVED
RBRSV023 EQU   X'10',,C'X' -  RESERVED
RBRSV024 EQU   X'08',,C'X' -  RESERVED
RBRSV025 EQU   X'04',,C'X' -  RESERVED
RBRSV026 EQU   X'02',,C'X' -  RESERVED
RBRSV027 EQU   X'01',,C'X' -  RESERVED
RBRSV028 DS    B -            RESERVED
RBRSV029 EQU   X'80',,C'X' -  RESERVED
RBRSV030 EQU   X'40',,C'X' -  RESERVED
RBRSV031 EQU   X'20',,C'X' -  RESERVED
RBRSV032 EQU   X'10',,C'X' -  RESERVED
RBRSV033 EQU   X'08',,C'X' -  RESERVED
RBRSV034 EQU   X'04',,C'X' -  RESERVED
RBRSV035 EQU   X'02',,C'X' -  RESERVED
RBRSV036 EQU   X'01',,C'X' -  RESERVED
RBRSV037 DS    A -            RESERVED
RBRSV038 DS    A -            RESERVED
RBRSV039 DS    H -            RESERVED
RBRSV040 DS    X -            RESERVED
RBRSV041 DS    B -            RESERVED
RBRSV042 EQU   X'80',,C'X' -  RESERVED
RBRSV043 EQU   X'40',,C'X' -  RESERVED
RBRSV044 EQU   X'20',,C'X' -  RESERVED
RBRSV045 EQU   X'10',,C'X' -  RESERVED
RBRSV046 EQU   X'08',,C'X' -  RESERVED
RBRSV047 EQU   X'04',,C'X' -  RESERVED
RBRSV048 EQU   X'02',,C'X' -  RESERVED
RBRSV049 EQU   X'01',,C'X' -  RESERVED
RBRSV050 DS    A -            RESERVED
RBPRFXST DS    0D -           START OF ASSIGNED FIELDS IN RB PREFIX
RBRSV051 DS    A -            RESERVED
RBRSV052 DS    H -            RESERVED
RBRSV053 DS    X -            RESERVED
RBRSV054 DS    B -            RESERVED
RBRSV055 EQU   X'80',,C'X' -  RESERVED
RBRSV056 EQU   X'40',,C'X' -  RESERVED
RBRSV057 EQU   X'20',,C'X' -  RESERVED
RBRSV058 EQU   X'10',,C'X' -  RESERVED
RBRSV059 EQU   X'08',,C'X' -  RESERVED
RBRSV060 EQU   X'04',,C'X' -  RESERVED
RBRSV061 EQU   X'02',,C'X' -  RESERVED
RBRSV062 EQU   X'01',,C'X' -  RESERVED
         DS    0D
RBRTOPSW DS    0CL16 -        PROGRAM STATUS INFORMATION STORED AT
*                             TIME OF INTERRUPT CAUSING ENTRY INTO THE
*                             RTM
RBRTPSW1 DS    CL8 -          FIRST DOUBLE WORD OF PSW - SYSTEM AND
*                             PROGRAM MASKS, KEY CONDITION CODE AND
*                             INSTRUCTION COUNTER
RBRTPSW2 DS    0CL8 -         SECOND DOUBLE WORD OF PSW
RBRTICIL DS    0CL4 -         ILC AND INTERRUPT CODE
RBRSV160 DS    XL1 -          RESERVED - SET TO ZERO IN LOW CORE BY
*                             HARDWARE
RBRTILC  DS    FL1 -          INSTRUCTION LENGTH COUNTER - NUMBER OF
*                             BYTES IN INSTRUCTION CAUSING INTERRUPT
*
RBRTINCD DS    H -            INTERRUPT CODE
RBRTRAN  DS    A -            VIRTUAL ADDRESS CAUSING TRANSLATION
*                             EXCEPTION IF PROGRAM INTERRUPT 16, 17 OR
*                             18.  OTHERWISE, NOT USED.
RBFLAGS1 DS    B -            FLAG BYTE
RBSLOCK  EQU   BIT0 -         INDICATES THAT THIS RB IS
*                             NON-DISPATCHABLE UNTIL THE SUPERVISOR
*                             LOCK (CVTSYLK) IS RESET  (ALL RB'S)
RBXWAIT  EQU   BIT1 -         INDICATES THAT THE PROGRAM OPERATING
*                             UNDER THIS RB HAS ISSUED AN EXPLICIT
*                             (SVC) WAIT  (ALL RB'S)
RBABEND  EQU   BIT2 -         ABEND SVRB  (SVRB-BOTH)
RBRSV159 EQU   BIT3,,C'X' -   RESERVED
RBASIR   EQU   BIT4 -         ASIR IS RUNNING UNDER THIS RB
RBLONGWT EQU   BIT5 -         LONG WAIT ISSUED UNDER THIS RB
RBSCB    EQU   BIT6 -         SET BY SVC 60 TO INDICATE RB HAS AN
*                             ASSOCIATED ESTAE OR STAE EXIT
RBSSSYN  EQU   BIT7 -         SYNCHRONIZED STATUS STOP PENDING FOR
*                             THIS RB
RBRSV004 DS    XL3 -          RESERVED
RBWCSA   DS    FL1 -          NUMBER OF REQUESTS WAITING AT TIME OF
*                             TERMINATION (WAIT COUNT SAVE AREA)
*                             (ALL RB'S)
RBINTCDA DS    0CL3 -         INTERRUPT CODE  (ALL RB'S)
RBINLNTH DS    CL1 -          INSTRUCTION LENGTH CODE - 4 HIGH-ORDER
*                             BITS MUST BE ZERO  (ALL RB'S)
RBINTCOD DS    CL2 -          INTERRUPT CODE  (ALL RB'S)
RBPRFXND DS    0C -           END OF RB PREFIX
         SPACE 2
         DS    0D -
RBSECT   EQU   * -            RBSECPTR - THIS IS THE START OF THE
*                             BASIC SECTION OF THE RB
RBPPSAV  DS    0A -           ADDRESS OF PROBLEM PROGRAM REGISTER SAVE
*                             AREA (IRB)
         DS    B -            RBTMFLD
RBPPSAV1 DS    AL3 -          ADDRESS OF PROBLEM PROGRAM REGISTER SAVE
*                             AREA (IRB)
RBABOPSW DS    CL4 -          AFTER EXECUTION OF TRANSIENT AREA HANDLER
*                             ROUTINE - FOUR LOW-ORDER BYTES OF NAME OF
*                             REQUESTED ROUTINE  (SVRB-TRANS)
RBSIZE   DS    H -            SIZE OF THIS RB IN DOUBLEWORDS (ALL RB'S)
         DS    0BL2 -         RBSTAB
         DS    B -            RBSTAB1
RBFTP    EQU   BIT0+BIT1+BIT2 TYPE OF RB
RBFTPRB  EQU   X'00' -        PRB
RBFTTIRB EQU   BIT1+BIT2 -    TIRB
RBFTIRB  EQU   BIT1 -         IRB
RBFTSIRB EQU   BIT0 -         SIRB
RBFTSVRB EQU   BIT0+BIT1 -    SVRB
RBTRSVRB EQU   BIT3 -         IF RBTRSVRB=0 AND RBCDE=0, THEN TYPE 2
*                             SVC IN NUCLEUS.  IF RBTRSVRB=0 AND
*                             RBCDE1 NOT 0, THEN SECOND OR SUBSEQUENT
*                             LOAD OF TYPE 4 SVC IN FIXED OR MODIFIED
*                             LPA (RBCDE1 = ADDRESS OF CDE).  IF
*                             RBTRSVRB=1 AND RBCDE1=0, THEN TYPE 3 OR
*                             FIRST LOAD OF TYPE 4 SVC IN PAGED, FIXED
*                             OR MODIFIED LPA.  IF RBTRSVRB=1 AND
*                             RBCDE1 NOT 0, THEN SECOND OR SUBSEQUENT
*                             LOAD OF TYPE 4 SVC IN PAGED LPA (RBCDE1
*                             = ADDRESS OF LPDE).
RBFNSVRB EQU   BIT3 -         ALIAS FOR RBTRSVRB
RBWAITP  EQU   BIT4 -         INDICATES THAT AN ECB IS POINTING AT THE
*                             RB.
*RBFTCKPT EQU  BIT5 -         SEE COMMON SECTION
RBATNXIT EQU   BIT6 -         THIS IRB IS AN ATTENTION IRB
RBPMSVRB EQU   BIT7 -         THIS IS A PROGRAM MANAGER SVRB - VALID
*                             ONLY ON LINK, LOAD, XCTL OR ATTACH
*
         DS    B -            RBSTAB2
*RBTCBNXT EQU  BIT0 -         SEE COMMON SECTION
*RBFACTV  EQU  BIT1 -         SEE COMMON SECTION
RBATTN   EQU   BIT2 -         EXITING PROGRAM IS AN ATTENTION EXIT
*                             (IRB)
RBETXR   EQU   BIT3 -         IRB IS FOR AN ETXR EXIT ROUTINE
RBUSIQE  EQU   BIT3 -         SAME AS RBETXR
RBIQETP  EQU   BIT4+BIT5 -
RBRQENR  EQU   X'00' -        REQUEST QUEUE ELEMENT IS NOT TO BE
*                             RETURNED
RBIRBAER EQU   BIT5 -         IRB HAS QUEUE ELEMENTS FOR ASYNCHRONOUSLY
*                             EXECUTED ROUTINES THAT ARE RQE'S
RBIQENR  EQU   BIT4 -         IQE IS NOT TO BE RETURNED AT EXIT
RBIRBAIQ EQU   BIT4+BIT5 -    IRB HAS QUEUE ELEMENTS FOR ASYNCHRONOUSLY
*                             EXECUTED ROUTINES THAT ARE IQE'S
*RBFDYN   EQU  BIT6 -         SEE COMMON SECTION
*RBECBWT  EQU  BIT7 -         SEE COMMON SECTION
RBEP     DS    A -            ENTRY POINT ADDRESS OF ASYNCHRONOUSLY
*                             EXECUTED ROUTINE (IRB, SIRB)
         DS    CL8 -          RBOPSW
RBPGMQ   DS    0A -           SAME AS RBPGMQ1 BELOW
         DS    X -            ZERO
RBPGMQ1  DS    AL3 -          ADDRESS OF RB INDICATING A REQUEST TO USE
*                             SAME SERIALLY REUSABLE PROGRAM
*                             (SVRB-RES, PRB)
         DS    0A -           RBLINK
         DS    FL1 -          RBWCF
         DS    AL3 -          RBLINKB
         DS    CL64 -         RBGRSAVE
IRBEND   DS    0F -           END OF IRB UNLESS OPTIONAL FIELDS
*                             RBNEXAV AND RBIQEWRK ARE PRESENT
         DS    0CL48 -        RBEXSAVE
RBRSV135 DS    A -            RESERVED
RBRSV136 DS    H -            RESERVED
RBRSV137 DS    X -            RESERVED
RBRSV138 DS    B -            RESERVED
RBRSV139 EQU   X'80',,C'X' -  RESERVED
RBRSV140 EQU   X'40',,C'X' -  RESERVED
RBRSV141 EQU   X'20',,C'X' -  RESERVED
RBRSV142 EQU   X'10',,C'X' -  RESERVED
RBRSV143 EQU   X'08',,C'X' -  RESERVED
RBRSV144 EQU   X'04',,C'X' -  RESERVED
RBRSV145 EQU   X'02',,C'X' -  RESERVED
RBRSV146 EQU   X'01',,C'X' -  RESERVED
PRBEND   DS    0F -           END OF PRB
TIRBEND  DS    0F -           END OF TIRB
         DS    CL40 -         LAST 40 BYTES OF RBEXSAVE
RBSCBB   DS    CL20 -         AREA CONTAINING STAE CONTROL BLOCK (SCB)
*                             (SVRB ONLY)
RBRSV148 DS    H -            RESERVED
RBRSV149 DS    X -            RESERVED
RBRSV150 DS    B -            RESERVED
RBRSV151 EQU   X'80',,C'X' -  RESERVED
RBRSV152 EQU   X'40',,C'X' -  RESERVED
RBRSV153 EQU   X'20',,C'X' -  RESERVED
RBRSV154 EQU   X'10',,C'X' -  RESERVED
RBRSV155 EQU   X'08',,C'X' -  RESERVED
RBRSV156 EQU   X'04',,C'X' -  RESERVED
RBRSV157 EQU   X'02',,C'X' -  RESERVED
RBRSV158 EQU   X'01',,C'X' -  RESERVED
SVRBEND  DS    0F -           END OF SVRB (BOTH)
SIRBEND  DS    0F -           END OF SIRB
         SPACE 2
         ORG   RBEP -         FOR SVRB-BOTH AND PRB
RBCDE    DS    0A -           SAME AS RBCDE1 BELOW
RBCDFLGS DS    B -            CONTROL FLAGS
RBNOCELL EQU   BIT0 -         EXIT SHOULD FREEMAIN THIS SVRB RATHER
*                             THAN FREECELL
RBRSV009 EQU   BIT1,,C'X' -   RESERVED
RBCDATCH EQU   BIT2 -         CONTENTS SUPERVISION HAS BEEN ENTERED
*                             VIA ATTACH
RBRSV010 EQU   BIT3,,C'X' -   RESERVED
RBCDNODE EQU   BIT4 -         NO DE SAVE AREA REQUIRED
RBCDSYNC EQU   BIT5 -         SYNCH MACRO INSTRUCTION REQUESTED
RBCDXCTL EQU   BIT6 -         XCTL MACRO INSTRUCTION REQUESTED
RBCDLOAD EQU   BIT7 -         LOAD MACRO INSTRUCTION REQUESTED
RBCDE1   DS    AL3 -          ADDRESS OF CDE, ADDRESS OF LPDE OR ZERO
*                             (SEE COMMENTS FOR BIT RBTRSVRB)
         SPACE 2
         ORG   RBPGMQ -       FOR TIRB
RBSQE    DS    0A -           SAME AS RBSQEA BELOW
         DS    FL1 -          RBUSE - CONTAINS ZEROS
RBSQEA   DS    AL3 -          CHAIN OF SUPERVISOR QUEUE ELEMENTS
*                             (SQE'S) WHICH REPRESENT ASYNCHRONOUS
*                             SUPERVISOR SERVICE REQUESTS RELATED TO
*                             TCB UNDER WHICH TIRB IS PRESENTLY
*                             OPERATING  (TIRB)
         SPACE 2
         ORG   RBPGMQ -       FOR IRB (3-BYTE LINK FIELD SEGMENT)
RBIQE    DS    0A -           LIST ORIGIN FOR IQE (IRB)
RBUSE    DS    FL1 -          USE COUNT USED BY ATTACH (IRB)
RBIQE1   DS    AL3 -          LIST ORIGIN FOR IQE (IRB)
         SPACE 2
         ORG   RBPGMQ -       FOR IRB (4-BYTE LINK FIELD SEGMENT), SIRB
RBIQE2   DS    0F -
RBIQEA   DS    F -            LIST ORIGIN FOR RQE (IRB WITH 4-BYTE LINK
*                             FIELD SEGMENT, SIRB)
         SPACE 2
         ORG   IRBEND -       FOR IRB--FIELDS PRESENT ONLY IF REQUESTED
RBNEXAV  DS    A -            ADDRESS OF NEXT AVAILABLE IQE (IRB)
RBIQEWRK DS    F -            IQE WORK SPACE, VARIABLE LENGTH,
*                             MAXIMUM SIZE IS 1984 BYTES (IRB)
         SPACE 2
         ORG   IRBEND -       FOR SIRB
RBSIRBWA DS    CL64 -         SIRB WORK AREA
RBRSV161 DS    A -            RESERVED - RBRSV148 FOLLOWS THIS FIELD
         SPACE 2
SIRBWALN EQU   64 -           LENGTH OF RBSIRBWA
RBPRFXLN EQU   RBPRFXND-RBPREFIX - TOTAL PREFIX LENGTH INCLUDING
*                                  AREA RESERVED FOR FUTURE EXPANSION
RBPRFLNA EQU   RBPRFXND-RBPRFXST - ASSIGNED PREFIX LENGTH
PRBLEN   EQU   PRBEND-RBPRFXST -   REAL PRB LENGTH FOR GETMAIN
SIRBLEN  EQU   SIRBEND-RBPRFXST -  REAL SIRB LENGTH FOR GETMAIN
TIRBLEN  EQU   TIRBEND-RBPRFXST -  REAL TIRB LENGTH FOR GETMAIN
IRBLEN   EQU   IRBEND-RBPRFXST -   REAL IRB LENGTH FOR GETMAIN UNLESS
*                                  OPTIONAL FIELDS ARE ALSO PRESENT
SVRBLEN  EQU   SVRBEND-RBPRFXST -  REAL SVRB LENGTH FOR GETMAIN
         MEND
./ ADD NAME=REQU     0100-02135-02135-1228-00040-00040-00000-VBCMACS
         MACRO
&LABEL   REQU &RF,&RL
.* MACRO TO GENERATE EQUATES FOR REGISTERS: 0(R0) TO 15(R15).
.* IF NO OPERAND IS SPECIFIED 0-15 ASSUMED.
.* TWO OPERANDS MAY BE CODED FOR A SERIES OF REGISTERS.
.* ERROR CHECKING IS FOR LESS THAN 0 OR GREATER THAN 15.
.* IN CASE OF ERROR CONDITION, 0-15 ARE GENERATED WITH MNOTE.
         LCLA  &NUM,&MAX
         AIF   (T'&RF EQ 'O').ALL
         AIF   ('&RF' LT '0' OR '&RL' GT '15').OPERR
         AIF   ('&RL' LT '&RF').OPERR
         AIF   (N'&SYSLIST NE 2).OPERR
&NUM     SETA &RF
&MAX     SETA  &RL
         AGO   .GEN
.OPERR   ANOP
         MNOTE 0,'IMPROPER REGISTER SPECIFICATION. R0-R15 GENERATED.'
.ALL     ANOP
&NUM     SETA  0
&MAX     SETA  15
.GEN     ANOP
*****   EQUATES FOR REGISTERS   *****
.LOOP    ANOP
R&NUM    EQU   &NUM
         AIF   ('&NUM' EQ '&MAX').END
&NUM     SETA  &NUM+1
         AGO   .LOOP
.END     ANOP
         SPACE 2
MASK80   EQU   X'80'
MASK40   EQU   X'40'
MASK20   EQU   X'20'
MASK10   EQU   X'10'
MASK08   EQU   X'08'
MASK04   EQU   X'04'
MASK02   EQU   X'02'
MASK01   EQU   X'01'
         EJECT
         MEXIT
         MEND
./ ADD NAME=RETLINK  0100-02135-02135-1228-00011-00011-00000-VBCMACS
         MACRO
&LABEL   RETLINK
.* MACRO FOR OS RETURN LINKAGE
.* THIS MACRO IS USED IN COMBINATION WITH SVLINK
.* IF A SAVEAREA NAME WAS SPECIFIED IN SVLINK , THAT NAME IS USED
.* IF NOT, SAVE IS USED
         GBLC  &MACSV
         L     R13,&MACSV+4
         RETURN (14,12),RC=0
         MEXIT
         MEND
./ ADD NAME=RTCD     0100-02135-02135-1228-00008-00008-00000-VBCMACS
         MACRO
&NAME    RTCD  &RTN
         L     13,4(13)                GET CALLER SAVE ADDR
         AIF   (T'&RTN EQ 'O').REG1
         LA    1,&RTN                    GET RETURN CODE INTO R1
.REG1    ST    1,0(13)                 SET STORED R15 TO RETURN CODE
         L     13,8(13)                RESTORE R13
         MEND
./ ADD NAME=SCVT     0100-02135-02135-1228-00063-00063-00000-VBCMACS
         MACRO
         IHASCVT
SCVTSECT DSECT
SCVTPGTM DC    V(IEAQPGTM) -       ADDR OF EOT TIMER PURGE ROUTINE
SCVTPGWR DC    A(SCVTBR14) -       ADDRESS OF WTO/WTOR RESOURCE
*                                  MANAGER.  INITIALLY CONTAINS ADDRESS
*                                  OF BR 14.  CHANGED TO IEECVPRG
*                                  (MODULE IEAVMED2) BY COMMUNICATIONS
*                                  TASK INITIALIZATION (IEAVVINT).
SCVTSPET DC    V(IEAQSPET) -       ADDR OF EOT SUBPOOL RELEASE
SCVTBR14 BR    14 -                RETURN TO CALLER
         DC    XL2'00' -           RESERVED
         DC    A(0) -              ** SCVTERAS FIELD UNUSED IN OS/VS2
         DC    A(0) -              ** SCVTQCBO FIELD UNUSED IN OS/VS2
         DC    A(0) -              ** SCVTPGEQ FIELD UNUSED IN OS/VS2
SCVTRMBR DC    V(RMBRANCH) -       ADDR OF REGMAIN BRANCH ENTRY
         DC    A(0) -              ** SCVTPGIO FIELD UNUSED IN OS/VS2
SCVTRACE DC    A(20) -             ADDR OF POINTER TO TRACE ROUTINE
         DC    A(0) -              ** SCVTTASW FIELD UNUSED IN OS/VS2
SCVTCDCL DC    V(IEAQCS02) -       ADDR OF CDCONTROL IN LINK
SCVTLFRM DC    V(FMBRANCH) -       LIST FORMAT FREEMAIN BRANCH ENT PT
         DC    A(0) -              ** SCVTPABL FIELD UNUSED IN OS/VS2
         DC    A(0) -              ** SCVTDQTC FIELD UNUSED IN OS/VS2
SCVTHSKP DC    V(CDHKEEP) -        ADDR OF CDHKEEP IN EOT
SCVTRPTR DC    A(0) -              ADDR OF TRACE TABLE POINTERS
SCVTGMBR DC    V(GMBRANCH) -       LIST FORMAT GETMAIN BRANCH ENTRY
*                                  POINT
         DC    A(0) -              ** SCVTAUCT FIELD UNUSED IN VS2 **
         DC    A(0) -              ** SCVTROCT FIELD UNUSED IN VS2 **
         DC    A(0) -              ** SCVTROQ  FIELD UNUSED IN VS2 **
         DC    A(0) -              ** SCVTRIRB FIELD UNUSED IN VS2 **
         DC    A(0) -              ** SCVTRTCB FIELD UNUSED IN VS2 **
SCVTCOMM DC    A(0) -              ADDR OF COMM TASK ROUTINE
         DC    A(0) -              ** SCVTABLK FIELD UNUSED IN VS2 **
         DC    A(0) -              ** SCVTNFND FIELD UNUSED IN VS2 **
         DC    A(0) -              ** SCVTRMTC FIELD UNUSED IN OS/VS2
         DC    A(0) -              ** SCVTMSSQ FIELD UNUSED IN OS/VS2
SCVTCTCB DC    V(IEECVTCB) -       ADDR OF COMM TASK TCB
         DC    A(0) -              ** SCVTETCB FIELD UNUSED IN OS/VS2
SCVTRXLQ DC    A(0) -              ADDR OF RECOVERY EXTENT LIST
         DC    A(0) -              ** SCVTRQND FIELD UNUSED IN OS/VS2
         DC    A(0) -              ** SCVTTAR  FIELD UNUSED IN VS2 **
SCVTSVCT DC    V(SVCTABLE) -       ORIGIN OF SVC TABLE
         DC    A(0) -              ** SCVTSTXP FIELD UNUSED IN OS/VS2
SCVTTQE  DC    V(IEATSELM) -       ADDR OF TSO SUBSYSTEM'S TQE
         DC    A(0) -              ** SCVTRMSV FIELD UNUSED IN OS/VS2
SCVTSTAT DC    V(IGC07902) -       ADDR OF SVC STATUS ROUTINE
SCVTQCBR DC    V(QCBRANCH) -       BRANCH ENTRY POINT TO GETMAIN/
*                                  FREEMAIN QUICKCELL ROUTINE
         DC    A(0) -              ** SCVTABBR FIELD UNUSED IN OS/VS2
         DC    A(0) -              ** SCVTAPIO FIELD UNUSED IN OS/VS2
SCVTPTRM DC    V(IEAVTERM) -       ADDRESS OF REAL STORAGE MANAGER
*                                  (RSM) TERMINATION RESOURCE MANAGER
*                                  ROUTINE THAT QUIESCES PAGING I/O
*                                  AND PGFIX REQUESTS
         DC    A(0) -              ** SCVTHOOK FIELD UNUSED IN OS/VS2
*                                  RELEASE 2 **
SCVTPIQE DC    V(IEADQIQE) -       ADDR OF RESIDENT SUBROUTINE IN EOT
*                                  TO REMOVE IQE'S FROM ASYNCHRONOUS
*                                  EXIT QUEUE
         DC    A(0) -              ** SCVTTMBR FIELD UNUSED IN OS/VS2
         DC    A(0) -              ** SCVTFOMG FIELD UNUSED IN OS/VS2
         MEND
./ ADD NAME=SMFRECS  0100-02135-02135-1228-00388-00388-00000-VBCMACS
         MACRO
&NAME    SMFRECS
         LCLC  &DNAME,&CSECT
&CSECT   SETC  '&SYSECT'
&DNAME   SETC  'SMFDSECT'
         AIF   (T'&NAME EQ 'O').NONAME
&DNAME   SETC  '&NAME'
.NONAME  ANOP
*
*
*
*    BCBS SMF RECORD DESCRIPTION DSECT(S)
*
*    EACH RECORD CONTAINS A 13 BYTE HEADER WITH
*     DATE, TIME, DAY OF WEEK CODE, AND RECORD TYPE
*
*    THE SOURCE FOR HEADER DATE/TIME VARIES FOR EACH RECORD
*     TYPE, BUT IS LOGICALLY THE START DATE/TIME OF THE EVENT
*     THAT CAUSED THE RECORD TO BE WRITTEN BY SMF
*
*
*    THERE IS 1 DSECT THAT INCLUDES ALL RECORD TYPES. EACH
*     RECORD DESCRIPTION ORGS TO 'SMFREST' AND DOES NOT
*     DESCRIBE THE RECORD HEADER.
*
*    IN ADDITION, THERE ARE DSECTS FOR VARIOUS PORTIONS OF
*    SEVERAL RECORD TYPES
*
*
&DNAME   DSECT
*
SMFHEAD  DS    0XL13                   STANDARD RECORD HEADER
SMFRDW   DS    XL4                     VARIABLE RECORD DESCRIPTOR WORD
SMFDATE  DS    PL3                     EVENT START DATE, YYDDD
SMFTIME  DS    PL4                     EVENT START TIME, SEC/100
SMFDOW   DS    XL1                     DAY OF WEEK, 0=SUN THRU 6=SAT
SMFTYPE  DS    XL1                     RECORD TYPE
*
SMFREST  DS    0X                      START OF RECORD TYPE DESCRIPTION
*
*
*     JOB LOG NUMBER HEADER FOR RECORD TYPES
*       JOB-TYPE04/05, STEP-TYPE06/07, DS-TYPE14, AND VS-TYPE64
*
*
         ORG   SMFREST
SMFJLOG  DS    0XL15                   JOB LOG ID
SMFJOBNM DS    CL8                     JOB NAME
SMFJRSD  DS    PL3                     READER START DATE, YYDDD
SMFJRST  DS    PL4                     READER START TIME, SEC/100
         EJECT
*      IPL RECORD, TYPE 0
*
*      SMFDATE = CALCULATED DATE SYSTEM WENT DOWN
*      SMFTIME = CALCULATED TIME SYSTEM WENT DOWN
*      SMFTYPE = X'00'
*
*
         ORG   SMFREST
T00DOWN  DS    PL5                     TIME OFFSET TO IPL, SEC/100
END00    EQU   *                       END FIXED LENGTH PART OF RECORD
         EJECT
*     BATCH JOB RECORD, TYPE 4 AND TSO LOGON RECORD, TYPE 5
*
*     SMFDATE = INITIATOR SELECT DATE OR TSO LOGON DATE
*     SMFTIME = INITIATOR SELECT TIME OR TSO LOGON TIME
*     SMFTYPE = X'04' OR X'05'
*
*
         ORG   SMFREST
         DS    XL15                    SMFJLOG
T04STEPS DS    XL1                     NUMBER OF STEPS IN JOB
T04TOJTM DS    PL5                     TIME OFFSET TO JOB END, SEC/100
T04COMPL DS    XL2                     JOB COMPLETION CODE
*                                      0NNN = SYSTEM ABEND CODE
*                                      8NNN = USER ABEND CODE
*                                      0000 = NORMAL COMPLETION
*                                      FFFF = FLUSHED
*                                      F000 = SYSTEM DIED
T04PRTY  DS    XL1                     JOB SELECTION PRIORITY
T04SRB   DS    PL4                     SRB CPU TIME, SEC/100
T04TCB   DS    PL4                     TCB CPU TIME, SEC/100
T04PGNO  DS    XL1                     PERFORMANCE GROUP NBR
T04SERV  DS    XL3                     SERVICE UNITS USED
T04TACT  DS    PL4                     TOTAL TRANS ACTIVE TIME, SEC/100
T04TRES  DS    PL4                     TOTAL TRANS RESIDENCY, SEC/100
T04CLASS DS    CL1                     JOB CLASS FROM JOBCARD
T04IND1  DS    XL1                     INDICATOR
*                                      80 = PRIORITY USED
*                                      04 = ENTERED VIA INTERNAL READER
*                                      02 = JOB RERUN BY JES2
*                                      01 = JOB CANCELED BY OPERATOR
T04JOBNO DS    CL4                     JES2 ASSIGNED JOB NUMBER
T04OUTS  DS    XL4                     NBR OUTPUT LINES + CARDS
END04    EQU   *                       END FIXED LENGTH PART OF TYPE 4
T05TGETS DS    XL2                     NUMBER TGETS
T05TPUTS DS    XL2                     NUMBER TPUTS
END05    EQU   *                       END FIXED LENGTH PART OF TYPE 5
         EJECT
*     STEP RECORD, TYPE 6 OR TS STEP RECORD, TYPE 7
*
*      SMFDATE = STEP INITIATION DATE
*      SMFTIME = STEP INITIATION TIME
*      SMFTYPE = X'06' OR X'07'
*
*
         ORG   SMFREST
         DS    XL15                    SMFJLOG
T06STPNO DS    XL1                     STEP NUMBER
T06STPNM DS    CL8                     STEP NAME
T06PGMNM DS    CL8                     PROGRAM NAME
T06TODAL DS    PL5                     TIME OFFSET TO DEV ALLOC, SEC/10
T06TOPPS DS    PL5                     TIME OFFSET TO PP START, SEC/100
T06TOSTM DS    PL5                     TIME OFFSET TO STEP END, SEC/100
T06COMPL DS    XL2                     STEP COMPLETION CODE
*                                      0NNN = SYSTEM COMPLETION CODE
*                                      8NNN = USER COMPLETION CODE
*                                      0000 = NORMAL COMPLETION
*                                      FFFF = FLUSHED
*                                      F000 = SYSTEM DIED
T06DPRTY DS    XL1                     DISPATCHING PRIORITY
T06SRB   DS    PL4                     STEP SRB CPU TIME, SEC/100
T06TCB   DS    PL4                     STEP TCB CPU TIME, SEC/100
T06IND   DS    XL1                     INDICATOR
*                                      02 = EXCP COUNT MAY BE WRONG
*                                      01 = STORAGE IS REAL
T06PAS   DS    XL2                     PRIVATE AREA SIZE K-BYTES
T06PAST  DS    XL2                     PAS FROM TOP, K-BYTES
T06PASB  DS    XL2                     PAS FROM BOTTOM, K-BYTES
T06PGIN  DS    XL3                     NONVIO/NONSWAP PAGE INS
T06PGOUT DS    XL3                     NONVIO/NONSWAP PAGE OUTS
T06PGV   DS    XL3                     VIO PAGE INS AND OUTS
T06CSAIN DS    XL3                     CSA PAGEINS
T06SWAPS DS    XL2                     NBR OF SWAPS
T06SPIN  DS    XL2                     NBR PAGES SWAPPED IN
T06SPOUT DS    XL2                     NBR PAGES SWAPPED OUT
T06PGNO  DS    XL1                     PERFORMANCE GROUP NUMBER
T06SERV  DS    XL3                     SERVICE UNITS USED
T06TACT  DS    PL4                     TRANS ACTIVE TIME, SEC/100
T06TRES  DS    PL4                     TRANS RESIDENT TIME, SEC/100
T06OFDEV DS    XL2                     OFFSET TO 1ST DEVICE SEG
T06DEVNO DS    XL1                     NUMBER OF DEVICE SEGS
END06    EQU   *                       END FIXED LENGTH PART OF TYPE 6
T07TGETS DS    XL2                     NUMBER TGETS
T07TPUTS DS    XL2                     NUMBER TPUTS
END07    EQU   *                       END FIXED PART OF TYPE 7
*
*    SEE T06DEV DSECT FOR DEVICE SEG DESCRIPTION
         EJECT
*    DATA SET ACTIVITY, TYPE 14
*
*    SMFDATE = DATE STEP INITIATED
*    SMFTIME = TIME STEP INITIATED
*    SMFTYPE = X'0E'
*
*
         ORG   SMFREST
         DS    XL15                    SMFJLOG
T14STPNO DS    XL1                     STEP NUMBER
T14TOCLS DS    PL5                     TIME OFFSET TO CLOSE
T14IND   DS    XL1                     INDICATOR
*                                      10 = TEMPORARY DS
*                                      01 = VIO DS
T14DDNM  DS    CL8                     DDNAME
T14BLKSZ DS    XL2                     BLKSIZE
T14LRECL DS    XL2                     LRECL
T14KEYLN DS    XL1                     KEYLENGTH
T14ABLKS DS    XL2                     AVERAGE BLKSIZE
T14RECFM DS    XL1                     RECORD FORMAT
T14MACRF DS    XL2                     MACRO TYPE USED
T14DSORG DS    XL2                     DATA SET ORGANIZATION
T14DSTAT DS    XL1                     STATUS INDICATOR
T14DIOTP DS    XL1                     METHOD & DIRECTION
T14OFUCB DS    XL2                     OFFSET TO 1ST UCB SEG
T14UCBNO DS    XL1                     NUMBER OF UCB SEGS
T14DSNLN DS    XL1                     DSNAME LENGTH
END14    EQU   *                       END FIXED LENGTH PART OF RECORD
T14DSN   DS    0C                      DSNAME, 1-44 BYTES
*
*   SEE T14UCBSG DSECT FOR UCB SEGMENT DESCRIPTION
         EJECT
*    VSAM STATUS RECORD, TYPE 64
*
*    SMFDATE = DATE STEP INITIATED
*    SMFTIME = TIME STEP INITIATED
*    SMFTYPE = X'40'
*
*
         ORG   SMFREST
         DS    XL15                    SMFJLOG
T64STPNO DS    XL1                     STEP NUMBER
T64TOCLS DS    PL5                     TIME OFFSET TO CLOSE
T64DDNM  DS    CL8                     DDNAME
T64BLKSZ DS    XL2                     BLKSIZE
T64LRECL DS    XL2                     LRECL
T64KEYLN DS    XL1                     KEYLENGTH
T64UUSCI DS    XL2                     CHG IN NBR UNUSED CIS
T64SPLCI DS    XL2                     CI SPLITS FOR STEP
T64SPLCA DS    XL2                     CA SPLITS FOR STEP
T64EXCP  DS    PL5                     EXCPS
T64OFEXT DS    XL2                     OFFSET TO 1ST EXT SEGMENT
T64EXTNO DS    XL1                     NUMBER OF EXTENT SEGS
T64DSNLN DS    XL1                      LENGTH OF DSNAME
END64    EQU   *                       END FIXED LENGTH PART OF RECORD
T64DSN   DS    0C                       DSNAME, 1-44 BYTES
*
*    SEE T64EXTSG DSECT FOR EXTENT SEGMENT DESCRIPTION
         EJECT
*    MF1/RMF CPU ACTIVITY RECORD, TYPE 70
*
*    SMFDATE = DATE MEASUREMENT STARTED
*    SMFTIME = TIME MEASUREMENT STARTED
*    SMFTYPE = X'46'
*
*
         ORG   SMFREST
RMFDUR   DS    PL4                     MEASUREMENT DURATION, SEC/100
T70OCPU  DS    XL2                     OFFSET TO 1ST CPU SEG
T70CPUNO DS    XL1                     NBR CPU SEGMENTS
END70    EQU   *                       END FIXED LENGTH PART OF RECORD
*
*   SEE T70CPU DSECT FOR CPU SEGMENT DESCRIPTION
         EJECT
*    MF1/RMF PAGING ACTIVITY RECORD, TYPE 71
*
*    SMFDATE = DATE MEASUREMENT STARTED
*    SMFTIME = TIME MEASUREMENT STARTED
*    SMFTYPE = X'47'
*
*
         ORG   SMFREST
T71PGIN  DS    PL4                     NONVIO/NONSWAP PAGEINS
T71PGOUT DS    PL4                     NONVIO/NONSWAP PAGE OUTS
T71SWAPS DS    PL3                     SWAPS
T71SPIN  DS    PL4                     PAGES SWAPPED IN
T71SPOUT DS    PL4                     PAGES SWAPPED OUT
T71VPIN  DS    PL4                     VIO PAGES IN
T71VPOUT DS    PL4                     VIO PAGES OUT
T71CSAIN DS    PL4                     CSA PAGES IN
T71CSAOT DS    PL4                     CSA PAGES OUT
END71    EQU   *                       END FIXED LENGTH PART OF RECORD
         EJECT
*    MF1/RMF WORKLOAD ACTIVITY RECORD, TYPE 72
*
*    SMFDATE = DATE MEASUREMENT STARTED
*    SMFTIME = TIME MEASUREMENT STARTED
*    SMFTYPE = X'48'
*
*
         ORG   SMFREST
         DS    PL4                     RMFDUR
T72PGNO  DS    XL1                     PERFORMANCE GROUP NUMBER
T72OPS   DS    XL2                     OFFSET TO PERIOD SEGMENT
T72PSNO  DS    XL1                     NBR PERIOD SEGMENTS
END72    EQU   *                       END FIXED LENGTH PART OF RECORD
*
*    SEE T72PERSG DSECT FOR PERIOD SEGMENT DESCRIPTION
         EJECT
*    MF1/RMF CHANNEL ACTIVITY RECORD, TYPE 73
*
*    SMFDATE = DATE MEASUREMENT STARTED
*    SMFTIME = TIME MEASUREMENT STARTED
*    SMFTYPE = X'49'
*
*
         ORG   SMFREST
         DS    PL4                     RMFDUR
T73SAMPS DS    PL3                     NBR SAMPLES TAKEN
T73OCHS  DS    XL2                     OFFSET TO 1ST CHANNEL SEG
T73CHSNO DS    XL1                     NUMBER OF CHANNEL SEGS
END73    EQU   *                       END FIXED LENGTH PART OF RECORD
*
*    SEE T73CHAN DSECT FOR CHANNEL SEG DESCRIPTION
         EJECT
*    MF1/RMF DEVICE ACTIVITY RECORD, TYPE 74
*
*    SMFDATE = DATE MEASUREMENT STARTED
*    SMFTIME = TIME MEASUREMENT STARTED
*    SMFTYPE = X'4A'
*
*
         ORG   SMFREST
         DS    PL4                     RMFDUR
T74SAMPS DS    PL3                     SAMPLES TAKEN
T74DEVCL DS    XL1                     DEVICE CLASS (UCBTYPE BYTE 3)
T74ODEVS DS    XL2                     OFFSET TO 1ST DEVICE SEG
T74DEVNO DS    XL1                     NUMBER DEVICE SEGS
END74    EQU   *                       END FIXED LENGTH PART OF RECORD
*
*       SEE T74DEV DSECT FOR DEVICE SEGMENT DESCRIPTION
         EJECT
*     TYPE 6 AND 7 DEVICE SEGMENT DSECT
*
*
T06DEVS  DSECT
T06DEV   DS    0XL9
T06DEVTP DS    XL2                     DEVICE CLASS & TYPE (UCBTYPE BYT
T06DEVAD DS    XL2                     DEVICE ADDRESS, 0CUU
T06EXCPS DS    PL5                     EXCP COUNT
         EJECT
*     UCB SEGMENT DSECT FOR TYPE 14 RECORDS
*
*
T14UCBSG DSECT
T14UCB   DS    0XL17
T14UCBTP DS    XL2                     UCBTYPE BYTES 3 & 4
T14CUU   DS    XL2                     DEVICE ADDRESS, 0CUU
T14VOL   DS    CL3                     VOLSER BYTES 1, 5, AND 6
*                                      WHEN BYTE 1 NUMERIC, ELSE
*                                      VOLSER BYTES 1, 4, AND 6
T14EXCP  DS    XL4                     EXCPS
T14EXTS  DS    XL1                     NUMBER OF EXTENTS
T14TRKS  DS    XL2                     NBR OF TRACKS ALLOCATED
         EJECT
*     EXTENT SEGMENT DSECT FOR TYPE 64 RECORDS
*
*
T64EXTSG DSECT
T64EXT   DS    0XL12
T64TYPE  DS    XL2                     DEVICE TYPE
T64CUU   DS    XL2                     DEVICE ADDRESS, 0CUU
T64VOL   DS    CL6                     VOLUME SERIAL NUMBER
T64TRKS  DS    XL2                     NBR OF TRACKS IN EXTENT
         EJECT
*    TYPE 70 CPU SEGMENT DSECT
*
*
T70CPUSG DSECT
T70CPU   DS    0XL6
T70CPUID DS    XL1                     CPU ID, X'00' OR X'01'
T70IND   DS    XL1                     INDICATOR
*                                      00 = ONLINE
*                                      01 = VARIED DURING INTERVAL
T70WAIT  DS    PL4                     CPU WAIT TIME, SEC/100
         EJECT
*   TYPE 72 PERFORMANCE PERIOD SEGMENT DSECT
*
*
T72PERSG DSECT
T72PER   DS    0XL47
T72TTNO  DS    PL3                     NUMBER TRANS TERMINATED
T72TACT  DS    PL5                     TRANSACTION ACTIVE TIME, SEC/100
T72SERV  DS    PL5                     NBR SERVICE UNITS
T72ELPS  DS    PL5                     ELAPSED TIME ALL TRANS, SEC/100
T72WKLV  DS    PL5                     WORKLOAD LEVEL ALL TRANS
T72MSSV  DS    PL5                     MAIN STORAGE SERVICE UNITS
T72IOSV  DS    PL5                     IO SERVICE UNITS
T72CPUSV DS    PL5                     CPU SERVICE UNITS
T72TRES  DS    PL5                     TRANSACTION RESIDENCE, SEC/100
T72SWAPS DS    PL3                     NBR OF SWAPS
T72DOMN  DS    XL1                     DOMAIN NUMBER
         EJECT
*    TYPE 73 CHANNEL ACTIVITY SEGMENT DSECT
*
*
T73CHANS DSECT
T73CHAN  DS    0XL14
T73CPUID DS    XL1                     CPU ID (00 OR 01)
T73CHNO  DS    XL1                     CHANNEL ADDRESS
T73IND   DS    XL1                     INDICATOR
*                                      20 = BLOCK MUX
*                                      10 = BYTE MUX
*                                      04 = INVALID CHANNEL ID
*                                      02 = VARIED ON OR OFF
*                                      01 = ONLINE
T73SIO   DS    PL5                     NBR SIOS
T73SBUS  DS    PL3                     NBR SAMPLES CHANNEL BUSY
T73SBUSW DS    PL3                     NBR SAMPLES CHAN BUSY/CPU WAIT
         EJECT
*    TYPE 74 DEVICE SEGMENT DSECT
*
*
T74DEVSG DSECT
T74SEG   DS    0XL21
T74TYPE  DS    XL1                     DEVICETYPE (UCBTYPE BYTE 4)
T74ADDR  DS    XL2                     DEVICE ADDRESS 0CUU
T74VOL   DS    CL6                     VOL SER
T74IND   DS    XL1                     INDICATOR
*                                      02 = VARIED DURING MEASUREMENT
*                                      01 = ONLINE
T74SIO   DS    PL5                     NBR SIOS
T74SBUS  DS    PL3                     NBR SAMPLES DEVICE BUSY
T74QUE   DS    PL3                     NBR REQUESTS QUED AT SAMPLES
*
*
*
&CSECT   CSECT
         MEND
./ ADD NAME=SMODE    0100-02135-02135-1228-00029-00029-00000-VBCMACS
         MACRO
&NAME    SMODE &KEY=,&STATE=
         GBLC  &SK
         GBLC  &SS
         GBLC  &SENTRY
         AIF   ('&SENTRY' EQ '1').GOTDEF
.*  IF MACRO HAS ALREADY BEEN ENTRERED USE LAST KEY AND STATE
.*  AS DEFAULTS, ELSE USE KEY=NZERO AND STATE=P AS DEFAULTS
&SK      SETC  '257'
&SS      SETC  '1'
&SENTRY  SETC  '1'
.GOTDEF  ANOP
         AIF   (T'&KEY EQ 'O').USEKDEF
         AIF   ('&KEY' EQ 'NZERO').KEYN0
         AIF   ('&KEY' EQ 'N').KEYN0
&SK      SETC  '&KEY'
         AGO   .USEKDEF
.KEYN0   ANOP
&SK      SETC  '257'
.USEKDEF ANOP
         AIF   (T'&STATE EQ 'O').USESDEF
&SS      SETC  '1'                     SET TO PROGRAM STATE
         AIF   ('&STATE' NE 'S').USESDEF
&SS      SETC  '0'                     SET TO SUPERVISOR STATE
.USESDEF ANOP
&NAME    LA    0,&SK                   SET PROTECT KEY
         LA    1,&SS                   SET STATE
         SVC   243                     ISSUE SETMODE SVC
         MEND
./ ADD NAME=SMODINST 0100-02135-02135-1228-00058-00058-00000-VBCMACS
                                                                        0000000
                                                                        0000000
                                                                        0000000
                                                                        0000000
                                                                        0000000
     DOCUMENTATION FOR MACRO     SMODE                                  0000000
                                                                        0000000
                                                                        0000000
         SMODE EXPANDS TO ISSUE SVC 243 FOR CHANGING PROTECTION KEY     0000000
          AND PROGRAM STATE                                             0000000
                                                                        0000000
         SMODE FORMAT IS                                                0000000
                                                                        0000000
     LABEL    SMODE KEY=NNN,STATE=Z                                     0000000
                                                                        0000000
          WHERE      NNN IS THE PROTECT KEY YOU WANT, 0 - 255, OR       0000000
                        N OR NZERO TO RETURN YOUR ORIGINAL PROTECT      0000000
                        KEY. NUMERIC VALUES GREATER THAN 255 ALSO       0000000
                        CAUSE RETURN TO ORIGINAL PROTECT KEY.           0000000
                        NONNUMERIC VALUES OTHER THAN N OR NZERO         0000000
                        WILL CAUSE ASSEMBLER ERROR OR UNPREDICTABLE     0000000
                        RESULTS.                                        0000000
                                                                        0000000
                     Z IS THE PROGRAM STATE YOU DESIRE, P-PROGRAM STATE 0000000
                       S-SUPERVISOR STATE. IF S IS NOT SPECIFIED, P IS  0000000
                       ASSUMED.                                         0000000
                                                                        0000000
                                                                        0000000
          ON FIRST EXECUTION OF SMODE IN A PROGRAM                      0000000
                                                                        0000000
                     KEY= DEFAULTS TO NZERO                             0000000
                     STATE= DEFAULTS TO P                               0000000
                                                                        0000000
          ON SUBSEQUENT EXECUTIONS, KEY= AND STATE= DEFAULT TO THE      0000000
           VALUES USED IN THE LAST PREVIOUS EXECUTION. DEFAULTS ARE     0000000
           TAKEN ONLY IF THE KEY WORD, OR KEY WORD VALUE IS OMMITTED.   0000000
                                                                        0000000
                                                                        0000000
          EXAMPLE:                                                      0000000
                                                                        0000000
            SMODE KEY=0,STATE=S                                         0000000
                                                                        0000000
               YOU ARE NOW IN PROTECT KEY ZERO, SUPERVISOR STATE        0000000
                                                                        0000000
            SMODE KEY=N                                                 0000000
                                                                        0000000
               YOU ARE NOW BACK TO YOUR ORIGINAL PROTECT KEY, AND       0000000
                STILL IN SUPERVISOR STATE                               0000000
                                                                        0000000
                                                                        0000000
          LITTLE EDITING IS PERFORMED BY SMODE. IF KEY=NNN IS           0000000
           SPECIFIED, AND NNN IS NOT = TO N OR NZERO, NNN IS USED AS    0000000
           ENTERED. IF STATE=Z IS SPECIFIED AND Z = S, SUPERVISOR STATE 0000000
           IS USED,  OTHERWISE, PROGRAM STATE IS USED.                  0000000
                                                                        0000000
                                                                        0000000
                                                                        0000000
                                                                        0000000
./ ADD NAME=SRBINST  0100-02135-02135-1228-00291-00291-00000-VBCMACS
*            *** USE OF THE SRB MACROS ***
*
*      THIS DESCRIBES THE USE OF THE MACROS BCBLDSRB, BCGETRTN, BCSRBFRE
*      BCSRBDEF, BCSRBENT, AND BCSRBPST, IN SHEDULING AND WRITING SERVIC
*      ROUTINES.
*
*
* 1. SCHEDULING A SERVICE ROUTINE:
*    A. LOCATE THE ADDRESS OF THE TARGET MEMORY'S ASCB, AND PLACE IT IN
*       A REGISTER.
*    B. GET INTO SUPERVISOR STATE, PROTECT KEY ZERO, USING MODESET OR
*       SMODE.
*    C. ISSUE THE BCBLDSRB MACRO, SPECIFYING THE TGTASCB AND SRBASE
*       PARAMETERS.
*    D. ISSUE THE BCGETRTN MACRO, SPECIFYING EITHER THE NAME PARAMETER
*       IF THE ROUTINE IS EXTERNAL TO THE PROGRAM, OR THE ADDR AND LENG
*       PARAMETERS IF IT IS WRITTEN WITHIN THE PROGRAM.
*    E. SCHEDULE THE SERVICE ROUTINE FOR EXECUTION:
*          LA    R1,SRBSECT
*          SCHEDULE SRB=(1),SCOPE=LOCAL
*    F. AWAIT SERVICE ROUTINE COMPLETION:
*          LA    R1,SRBECB
*          WAIT  ECB=(1)
*    G. PROCESS AS NECESSARY, USING THE WORK AREA PORTION OF THE SRB AS
*       COMMUNICATION AREA BETWEEN THE SERVICE ROUTINE AND THE SCHEDULIN
*       PROGRAM.
*    H. ISSUE THE BCSRBFRE MACRO TO FREE THE STORAGE GOTTEN FOR THE SRB
*       AND SERVICE ROUTINE.
*    I. COMPLETE OTHER PROCESSING.
*    J. ISSUE THE BCSRBDEF MACRO TO GET AN SRB DSECT, AND FOLLOW IT WITH
*       ANY DESIRED WORK/COMMUNICATION FIELDS TO BE USED BY THE PROGRAM
*       AND SERVICE ROUTINE. FINISH SRB DEFINITION WITH SRBEND EQU *,
*       AND RETURN TO IN-LINE CODE WITH A CSECT STATEMENT.
*
*
*
* 2. CODING REQUIREMENTS FOR THE BCBLDSRB MACRO:
*
*    BCBLDSRB GETS STORAGE FOR THE SRB IN THE REQUESTED SUB-POOL, AND
*    BUILDS AN SRB IN THE GOTTEN STORAGE. AN SRB BASE REGISTER IS SET
*    UP FOR THE SRB. REGISTERS 0, 1, 14, AND 15 WILL BE CHANGED BY THIS
*    MACRO. THE STORAGE AREA FOR THE SRB IS CLEARED TO BINARY ZEROS
*    BEFORE THE FORMAT BEGINS. THE END OF THE SRB IS EXPECTED TO BE
*    IDENTIFIED BY AN INSTRUCTION NAMED SRBEND, AND IS USED IN LENGTH
*    COMPUTATION (SEE THE BCSRBDEF MACRO). THE USER MUST BE IN PROTECT
*    KEY ZERO AND IN SUPERVISOR STATE TO EXECUTE CODE GENERATED BY THIS
*    MACRO.
*
*
*          NAME  BCBLDSRB  TGTASCB=REGNO,SP=NBR,SRBBASE=REGNO
*
*     A. THE NAME FIELD IS OPTIONAL.
*     B. TGTASCB IS AN OPTIONAL PARAMETER. WHEN CODED, SPECIFY A REGISTE
*        CONTAINING THE ADDRESS OF THE ASCB FOR THE TARGET MEMORY. THE
*        REGISTER PROVIDED WILL BE STORED IN THE SRBASCB FIELD. IF THIS
*        PARAMETER IS OMITTED, THE USER MUST PLACE THE ADDRESS OF THE
*        TARGET ASCB IN SRBASCB BEFORE ISSUING THE SCHEDULE MACRO.
*     C. SP= IS USED TO SPECIFY THE SUB-POOL NUMBER TO BE USED FOR THE
*        GETMAIN. IF OMITTED, SUB-POOL 228 IS USED.
*     D. THE SRBBASE= PARAMETER SPECIFIES THE REGISTER TO BE USED AS A
*        BASE REGISTER FOR THE SRB. IF SPECIFIED, THE ADDRESS OF THE SRB
*        WILL BE PLACED IN THE REGISTER, AND A USING INSTRUCTION WILL
*        BE GENERATED. WHEN OMITTED, THE ADDRESS OF THE SRB WILL BE
*        PLACED IN REGISTER 2, AND NO USING INSTRUCTION WILL BE ISSUED.
*
*     E. EXAMPLE:
*
*                    BCBLDSRB  TGTASCB=R12,SRBBASE=R5
*
*
*
* 3. CODING REQUIREMENTS FOR THE BCGETRTN MACRO:
*
*    THIS MACRO GETS STORAGE FROM A COMMONLY ADDRESSABLE SUB-POOL, AND
*    MOVES THE SERVICE ROUTINE TO THE GOTTEN STORAGE, IF IT IS NOT
*    ALREADY IN COMMON STORAGE. IF THE ROUTINE IS NOT WRITTEN IN-LINE
*    IN THE SCHEDULING PROGRAM, A LOAD MACRO IS EXECUTED TO GAIN ACCESS
*    TO THE SERVICE ROUTINE. WHEN A LOAD'ED MODULE MUST BE MOVED TO
*    COMMONLY ADDRESSABLE STORAGE, IT WILL BE DELETED AFTER THE MOVE.
*    THE ADDRESS OF THE MODULE WILL BE PLACED IN THE SRBEP FIELD. TO
*    USE THIS MACRO, THE USER MUST BE IN SUPERVISOR STATE, PROTECT KEY
*    ZERO, WITH ADDRESSABILITY FOR THE SRB. REGISTERS 0, 1, 14, AND
*    15 WILL BE CHANGED BY THIS MACRO.
*
*       NAME   BCGETRTN  NAME=EXTSYM, ADDR=INLINE,LENG=RTNLENG,SP=NNN
*
*     A. THE NAME FIELD IS OPTIONAL.
*     B. WHEN THE ROUTINE IS CODED IN-LINE IN THE ISSUING PROGRAM:
*        SPECIFY THE ROUTINE ENTRY POINT NAME IN THE ADDR= PARAMETER,
*        AND ITS LENGTH IN THE LENG PARAMETER. THE NAME= PARAMETER
*        MUST BE OMITTED. ENTRY POINT OF THE ROUTINE MUST BE THE FIRST
*        BYTE OF THE ROUTINE, AS THE MOVE TO COMMONLY ADDRESSABLE
*        STORAGE WILL BEGIN HERE. LENGTH MAY BE GIVEN AS THE DIFFERENCE
*        BETWEEN THE LABELS ON THE END AND BEGINNING OF THE ROUTINE.
*     C. WHEN THE ROUTINE IS NOT INCLUDED IN THE ISSUING PROGRAM, CODE
*        THE NAME= PARAMETER, GIVING THE SYMBOLIC NAME OF THE ROUTINE
*        TO BE USED. THE ROUTINE WILL BE FOUND USING A LOAD MACRO. IF
*        FOUND IN COMMONLY ADDRESSABLE STORAGE (PLPA, ETC), NO GETMAIN
*        OR MOVE WILL OCCUR. IF NOT IN COMMON STORAGE, A GETMAIN AND
*        MOVE WILL BE DONE, AND A DELETE MACRO WILL BE ISSUED FOR THE
*        MODULE. WHEN THE NAME= PARAMETER IS CODED, THE ADDR= AND LENG=
*        PARAMETERS ARE INVALID.
*     D. THE SP= PARAMETER IS USED TO SPECIFY THE SUB-POOL TO BE USED
*        TO CONTAIN THE SERVICE ROUTINE WHEN MOVEMENT IS NECESSARY. IF
*        OMITTED, SUB-POOL 228 WILL BE USED.
*     E. EXAMPLES:
*         1. ROUTINE CODED IN-LINE IN THE ISSUING PROGRAM:
*
*                    BCGETRTN   ADDR=SERVCRTN,LENG=ENDLBL-SERVCRTN
*
*         2. ROUTINE NOT IN THE ISSUER'S PROGRAM:
*
*                    BCGETRTN   NAME=XTRNSYM
*
*
*
* 4. CODING INSTRUCTIONS FOR THE BCSRBFRE MACRO:
*
*    THE BCSRBFRE MACRO IS USED TO FREE THE STORAGE USED BY THE SRB
*    AND SERVICE ROUTINE, AND DELETE THE SERVICE ROUTINE IF IT WAS
*    LOCATED IN COMMONLY ADDRESSABLE STORAGE, AND NOT MOVED BY THE
*    BCGETRTN MACRO. SINCE SUB-POOL 228 STORAGE MUST BE EXPLICITLY
*    FREED, IT IS IMPORTANT THAT A FREEMAIN BE ISSUED BEFORE PROGRAM
*    TERMINATION.
*
*        NAME   BCSRBFRE   SRB=
*
*     A. THE NAME OPERAND IS OPTIONAL.
*     B. THE SRB OPERAND IS ALSO OPTIONAL, AND HAS TWO POSSIBLE OPERANDS
*        WHEN CODED:
*            SRB= OMITTED  -> ALL STORAGE GOTTEN FOR BOTH SRB AND SERVIC
*                             ROUTINE IS FREED, AND SERVICE ROUTINE IS
*                             DELETED IF NECESSARY.
*            SRB=NO        -> ONLY THE SERVICE ROUTINE STORAGE IS DELETE
*                             AND USER MAY RETAIN SRB FOR USE BY ANOTHER
*                             SERVICE ROUTINE TO BE SCHEDULED.
*            SRB=ONLY      -> ONLY THE SRB STORAGE IS FREED, AND THE
*                             SERVICE ROUTINE STORAGE IS RETAINED.
*     D. EXAMPLE:
*
*                   BCSRBFRE
*
*
*
* 5. CODING REQUIREMENTS FOR THE BCSRBDEF MACRO:
*
*    THIS MACRO GENERATES A DSECT FOR AN SRB, AND SEVERAL EQUATES FOR US
*    BY THE SCHEDULE MACRO. THESE EQUATES ARE IN LIEU OF THE CVT MACRO,
*    AND WILL CAUSE DUPLICATE NAMES IF THE CVT MACRO IS USED IN THE SAME
*    ASSEMBLY. THE USER SHOULD CODE FIELDS FOLLOWING THE STANDARD SRB
*    FOR WORK AREAS TO BE USED BY THE SERVICE ROUTINE, AND COMMUNICATION
*    BETWEEN THE SCHEDULER AND SERVICE ROUTINE. THIS ELIMINATES THE NEED
*    FOR GETMAINS BY THE SERVICE ROUTINE, AND SIMPLIFIES PASSING
*    INFORMATION AND PARAMETERS BETWEEN SCHEDULER AND SERVICE ROUTINE.
*
*           BCSRBDEF  END=YES
*
*    A. NOTE THAT NO NAME MAY BE CODED ON THIS MACRO.
*    B. END=YES IS OPTIONAL. WHEN INCLUDED, THE MACRO GENERATES
*         SRBEND   EQU   *
*         &SYSECT  CSECT
*       AT THE END OF THE SRB CREATED. THIS PREVENTS THE USER FROM
*       ADDING WORK/COMMUNICATION FIELDS TO THE SRB, AND SHOULD
*       NORMALLY NOT BE USED. WHEN END=YES IS OMITTED, THE USER MAY
*       DEFINE FIELDS FOR COMMUNICATION BETWEEN THE SCHEDULING AND
*       SERVICE ROUTINES, AND FOR WORK FIELDS NEEDED BY THE SERVICE
*       ROUTINE.
*    C. EXAMPLE:
*
*                 BCSRBDEF ,           DEFINE STANDARD SRB
*        WKFLD1   DS    XL3
*        WKFLD2   DS    CL8
*        WKFLD3   DS    AL3
*        SRBEND   EQU   *              END OF SRB
*        PGMNAM   CSECT ,              RETURN TO SERVICE ROUTINE CSECT
*
*
*
* 6. CONSIDERATIONS WHEN WRITING A SERVICE ROUTINE:
*
*    A. ISSUE THE BCSRBENT MACRO TO ESTABLISH THE ROUTINE BASE REGISTER
*       SRB ADDRESSABILITY, AND SAVE THE RETURN ADDRESS. DO NOT USE
*       REGISTERS 10-15 AS BASES.
*    B. IF WRITTEN AS A SEPARATE PROGRAM, INCLUDE THE REQU MACRO FOR
*       REGISTER EQUATES.
*    C. ON ENTRY, THE ROUTINE WILL BE IN SUPERVISOR STATE, PROTECT KEY
*       ZERO, WITH NO LOCKS HELD. THE ROUTINE CANNOT ISSUE ANY SVC'S
*       (THIS PRECLUDES ANY I/O). THE ROUTINE CANNOT ENTER THE WAIT
*       STATE, EXPLICITLY, OR IMPLICITLY.
*    D. PROCESS AS NECESSARY, USING THE WORK AREA EXTENSION OF THE SRB
*       AS A COMMUNICATION AND WORK AREA.
*    E. ON COMPLETION, ISSUE THE BCSRBPST MACRO TO POST THE SCHEDULING
*       PROGRAM AND RETURN CONTROL TO THE OPERATING SYSTEM.
*
*
*
* 7. CODING REQUIREMENTS FOR THE BCSRBENT MACRO:
*
*    THE BCSRBENT MACRO GENERATES ENTRY STATEMENTS FOR THE SERVICE
*    ROUTINE. THE BASE REGISTERS FOR THE ROUTINE AND FOR SRB
*    ADDRESSABILITY ARE LOADED, AND USING STATEMENTS ARE GENERATED.
*    A PROGRAM NAME LITERAL IS INCLUDED. THE RETURN ADDRESS IS SAVED IN
*    SRBSV14 FOR RETURN TO THE OPERATING SYSTEM ON COMPLETION.
*           PROGRAMMING NOTES:
*      A. SERVICE ROUTINES ARE ENTERED IN SUPERVISOR STATE, PROTECT KEY
*         ZERO, WITH NO LOCKS HELD, AND MUST RETURN TO THE OPERATING
*         SYSTEM ON COMPLETION IN THE SAME STATE.
*      B. ON ENTRY, REGISTERS 0 AND 1 WILL BOTH CONTAIN THE ADDRESS OF
*         THE SRB, REGISTER 15 WILL CONTAIN THE ADDRESS OF THE FIRST
*         BYTE OF THE SERVICE ROUTINE, AND REGISTER 14 WILL CONTAIN THE
*         RETURN ADDRESS. THE SERVICE ROUTINE MUST BRANCH TO THE ADDRESS
*         IN REGISTER 14 ON COMPLETION.
*      C. SERVICE ROUTINES MUST BE CODED RE-ENTRANTLY. USE OF WORK AREAS
*         IN THE SRB FACILITATES THIS, AND REDUCE OR ELIMINATE THE NEED
*         FOR GETMAIN'ED AREAS IF PROPERLY DEFINED.
*      D. SERVICE ROUTINES CANNOT ENTER PROBLEM STATE, AS THEY MUST
*         RETURN TO THE OPERATING SYSTEM IN SUPERVISOR STATE.
*      E. SERVICE ROUTINES CANNOT EXECUTE ANY SVC'S.
*      F. AT NO TIME CAN A SERVICE ROUTINE ENTER THE WAIT STATE, EITHER
*         THRU BRANCH ENTRY TO THE SYSTEM WAIT ROUTINE, OR INDIRECTLY
*         AS THE RESULT OF AN ACTION THAT WILL CAUSE SOME OTHER AGENCY
*         TO ATTEMPT TO PLACE THE CALLER IN THE WAIT STATE.
*      G. WHEN THE SERVICE ROUTINE IS WRITTEN IN-LINE IN THE SCHEDULING
*         PROGRAM, IT SHOULD INCLUDE A LTORG STATEMENT TO CAPTURE ANY
*         NECESSARY LITERALS, AND SHOULD HAVE A FINAL EQU * STATEMENT
*         TO PERMIT SIMPLE ROUTINE LENGTH CALCULATION. THE SERVICE
*         ROUTINE WILL BE MOVED TO COMMONLY ADDRESSABLE STORAGE BY THE
*         BCGETRTN MACRO, AND SO MUST BE FULLY SELF-CONTAINED.
*
*
*
*        NAME   BCSRBENT    BASE=REGNO,CSECT=YES,SRB=REGNO
*
*     A. THE NAME FIELD IS REQUIRED.
*     B. THIS PARAMETER IS USED TO SPECIFY THE PROGRAM BASE REGISTER,
*        AND IS OPTIONAL. DEFAULT IS REGISTER 3. BE CAUTIOUS WHEN USING
*        REGISTERS 10-15, AS THEY ARE USED BY THE BCSRBPST MACRO.
*     C. CSECT=YES IS OPTIONAL. WHEN CODED, THE NAME WILL BE PLACED
*        ON A CSECT STATEMENT. THIS WOULD BE USED WHEN THE SERVICE
*        ROUTINE IS SEPARATELY ASSEMBLED. WHEN CSECT=YES IS OMITTED,
*        THE NAME IS PLACED ON AN EQU * STATEMENT ON THE ASSUMPTION
*        THE SERVICE ROUTINE IS BEING WRITTEN IN-LINE IN THE SCHEDULING
*        PROGRAM. WHEN SEPARATELY ASSEMBLED, INCLUDE THE REQU MACRO
*        TO GENERATE REGISTER EQUATES, AS STANDARD REGISTER NOTATION
*        IS USED IN GENERATED INSTRUCTIONS.
*     D. THE SRB= PARAMETER IS USED TO SPECIFY THE REGISTER TO BE USED
*        AS A BASE FOR THE SRB DSECT. DEFAULT IS REGISTER 9, IF THE
*        PARAMETER IS OMITTED. AGAIN, REGISTERS 10-15 SHOULD BE USED
*        WITH CAUTION. ALSO, ONLY R9 AND R14 ARE RETAINED ACROSS THE
*        BRANCH ENTRY TO CROSS-MEMORY POST. BECAUSE OF THIS, THE
*        REGISTER USED MUST BE SPECIFIED ON THE BCSRBPST MACRO IF R9
*        IS NOT USED.
*     E. EXAMPLE:
*
*         SRVRTN   BCSRBENT   BASE=R6
*
*
* 8. CODING REQUIREMENTS FOR THE BCSRBPST MACRO:
*
*    THIS MACRO IS USED BY A SERVICE ROUTINE TO POST THE SCHEDULING
*    PROGRAM ON COMPLETION OF PROCESSING, AND RETURN CONTROL TO THE
*    OPERATING SYSTEM. REGISTER VALUES ARE OBTAINED FROM THE SRB, AS
*    INITIALIZED BY THE BCBLDSRB MACRO. THE OPERATING SYSTEM'S POST
*    ROUTINE IS BRANCH-ENTERED, SINCE SVC USE IS ILLEGAL. REGISTERS
*    10-15 ARE CHANGED BY THIS MACRO. THE POST GENERATED IS FOR A
*    CROSS-MEMORY POST. IF THE SERVICE ROUTINE IS SCHEDULED IN THE
*    SCHEDULER'S OWN MEMORY, THE USER MUST TURN OFF THE HIGH-ORDER
*    BIT OF SRBPR11 AND OBTAIN THE LOCAL LOCK BEFORE ISSUING
*    BCSRBPST. ALSO, EXIT=NO MUST THEN BE CODED TO PERMIT THE SERVICE
*    ROUTINE TO RELEASE THE LOCAL LOCK PRIOR TO RETURNING CONTROL
*    TO THE OPERATING SYSTEM. IF THE BASE USED FOR THE SRB IS OTHER
*    THAN R9, THE SRB= PARAMETER MUST BE CODED TO PERMIT SAVING AND
*    RESTORING THE SRB BASE VIA R9 ACROSS THE CROSS MEMORY POST. ALL
*    REGISTERS EXCEPT R9 AND R14 ARE DESTROYED BY CROSS MEMORY POST,
*    SO THAT ANY PROCESSING FOLLOWING THE EXECUTION OF BCSRBPST MUST
*    RESTORE THE PROGRAM BASE REGISTER FROM SRBEP BEFORE PROCESSING.
*    THE USER MUST ALSO FIND A MEANS OF SAVING ANY OTHER REGISTERS
*    WHICH MUST BE AVAILABLE AFTER THE CROSS MEMORY POST.
*
*    NAME   BCSRBPST   EXIT=NO,ERR=ERRTN,SRB=
*    A. NAME PARAMETER IS OPTIONAL.
*    B. EXIT PARAMETER IS OPTIONAL. IF OMITTED, THE GENERATED CODE WILL
*       INCLUDE A RETURN TO THE OPERATING SYSTEM. IF USED, CODE AS SHOWN
*       EXIT=NO, AND ONLY POST CODE WILL BE GENERATED WITH A FALL-THRU
*       FOR CONTINUED SERVICE ROUTINE PROCESSING.
*    C. THE SRB PARAMETER IS OPTIONAL IF R9 IS USED AS THE SRB BASE REG-
*       ISTER. WHEN ANOTHER SRB BASE IS USED, IT MUST BE SPECIFIED HERE
*       SO THAT THE SRB BASE CAN BE SAVED IN R9 BEFORE THE BRANCH ENTRY
*       TO CROSS-MEMORY POST.
*    D. EXAMPLE:
*                 SRBEXIT BCSRBPST ,        POST THE SCHEDULER AND RETUR
./ ADD NAME=SUBSTART 0100-02135-02135-1228-00008-00008-00000-VBCMACS
         MACRO
&NAME    SUBSTART
         AIF   ('&NAME' EQ '').ERR1
         DS    F
&NAME    ST    14,&NAME-4
         MEXIT
.ERR1    MNOTE 8,'SUBROUTINE NAME MUST BE SPECIFIED'
         MEND
./ ADD NAME=SVLINK   0100-02135-02135-1228-00039-00039-00000-VBCMACS
         MACRO
&LABEL   SVLINK &BREG,&SVNM
.* MACRO FOR STANDARD OS LINKAGE
.* TWO POSITIONAL PARAMETERS - BASE REGISTER,SAVE AREA NAME
.* IF BASE REG IS OMITTED,R12 IS USED
.* IF SAVE AREA NAME IS OMITTED,SAVE IS USED
         GBLC  &MACSV
         LCLC  &MACREG
&MACSV   SETC  '&SVNM'
&MACREG  SETC  '&BREG'
         AIF   (T'&BREG EQ 'O' AND T'&SVNM EQ 'O').NEITHER
         AIF   (T'&SVNM EQ 'O').NONM
         AIF   (T'&BREG EQ 'O').NOREG
.SETJUNK ANOP
         USING *,R15
         SAVE  (14,12)             SAVE CALLING PROG REGS
         ST    R13,&MACSV+4        STORE R13 IN LSA
         LR    &MACREG,R13         LOAD SAVE POINTER INTO WORK REG
         LA    R13,&MACSV          SET UP ADDR OF USER SAVEAREA
         ST    R13,8(&MACREG)      STORE POINTER TO USER SAVE IN HSA
         BALR  &MACREG,0           LOAD BASE REG
         USING *,&MACREG
         B     &MACSV+72           BRANCH AROUND SAVE AREA
&MACSV   DS    18F                 SAVE AREA
         EJECT
         MEXIT
.NOREG   ANOP
&MACREG  SETC  'R12'
         MNOTE 0,'NO BASE REGISTER SPECIFIED. DEFAULT OF R12.'
         AGO   .SETJUNK
.NONM    ANOP
&MACSV   SETC  'SAVE'
         AGO   .SETJUNK
.NEITHER ANOP
&MACSV   SETC  'SAVE'
&MACREG  SETC  'R12'
         MNOTE 0,'NO BASE REGISTER SPECIFIED. DEFAULT OF R12.'
         AGO   .SETJUNK
         MEND
./ ADD NAME=SVLNK    0102-91008-91008-0916-00096-00096-00000-VBCMACS
         MACRO
&NAME    SVLNK &REG1,&REG2,&REG3,&IND,&LV=
         GBLC  &EQU,&GM,&CSECT
&GM      SETC  '0'                     INDICATE NO GETMAIN
         LCLC  &REGA
         AIF   (T'&NAME EQ 'O').NOCSECT
         AIF   ('&NAME' EQ '*').NOCSECT
&CSECT   SETC  '&NAME'
&CSECT   CSECT                         NAME OF PROGRAM
         AGO   .RST
.NOCSECT ANOP
&CSECT   SETC  '*'
         CSECT                         BEGINNING OF PROGRAM
.RST     ANOP
         AIF   ('&EQU' EQ 'ON').NRQ
&EQU     SETC  'ON'
*
***REGISTER EQUATES***
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
.NRQ     ANOP
*
*******************  PROGRAM INITIALIZATION  *************************
*
&REGA    SETC  'R3'                    DEFAULT REG1
         AIF   (T'&REG1 EQ 'O').NOREG
&REGA    SETC  '&REG1'
.NOREG   AIF   (T'&REG2 EQ 'O').ONEREG
         USING &CSECT,&REGA,&REG2          ESTABLISH ADDRESSABILITY
         AGO   .BYUSE
.ONEREG  USING &CSECT,&REGA              ESTABLISH ADDRESSABILITY
.BYUSE   ANOP
         STM   R14,R12,12(R13) :       STORE REGS IN HIGH SAVE AREA
         LR    &REGA,R15                  INITIALIZE BASE REG
         AIF   (T'&REG2 EQ 'O').NOLA
         LA    &REG2,4095(&REGA)       INITIALIZE THE SECOND
         LA    &REG2,1(&REG2)                BASE REGISTER
.NOLA    ANOP
         AIF   (T'&REG3 EQ 'O').NOLNK
         L     &REG3,0(R1)                GET PARAMETER LIST ADDR
.NOLNK   ANOP
         AIF (T'&IND EQ 'O').GETIT
         CNOP  0,4
         BAL   R15,SAVEAREA+72         BRANCH AROUND SAVE AREA
SAVEAREA DS    18F                     REGISTER SAVE AREA
         ST    R15,8(R13)
         ST    R13,SAVEAREA+4
         LR    R13,R15
         AGO   .NOSAVE
.GETIT   ANOP
&GM      SETC  '72'
         AIF   (T'&LV EQ 'O').LA
&GM      SETC  '&LV+&GM'
.GMD     ANOP
*
***GET MAIN STORAGE FOR SAVE AREA***
*
.LA      ANOP
         LA    R0,&GM                  GET &GM BYTES
         GETMAIN R,LV=(0)
.EGM     ANOP
*
***SET UP SAVE AREA POINTERS***
*
         ST    R1,8(R13)               STORE LOW SAVE POINTER
         ST    R13,4(R1)               STORE HIGH SAVE POINTER
         LR    R13,R1                  INITIALIZE SAVE POINTER
         AIF   (T'&REG3  NE 'O').NOSAVE
         L     R1,4(R13)               GET POINTER TO RESTORE PARA REG
         L     R1,24(R1)               RESTORE PARAMETER REGISTER
.NOSAVE  ANOP
         AIF   ('&CSECT' EQ '*').EXIT
         B     *+28
         DC    CL8'&CSECT'             PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
.EXIT    ANOP
*
*********************  END INITIALIZATION  ***************************
*
         MEND
./ ADD NAME=TCT      0100-02135-02135-1228-00176-00176-00000-VBCMACS
         MACRO
         TCT
*/*            SMF TIMING CONTROL TABLE DEFINITION                   */
*/*      THE TCT IS COMPOSED OF                                      */
*/*      1. THE TCT PROPER WHICH CONSISTS OF                         */
*/*            A. FIELDS UTILIZED BY THE SMF MODULES                 */
*/*            B. ONE OR TWO STORAGE TABLES DEPENDING UPON THE       */
*/*               KINDS OF STORAGE ALLOCATED.                        */
*/*      2. THE TCT I/O TABLE CONSISTING OF A TCT I/O LOOKUP TABLE   */
*/*         AND A TCT I/O COUNTER TABLE.                             */
*/*      THE TCT I/O TABLE NEED NOT BE CONTIGUOUS TO THE TCT PROPER. */
         IEZBITS , -          SYMBOLIC BIT DEFINITIONS
SMFTCT   DSECT , -            START OF TCT
TCTQA    DS    CL3 -          QUEUE ADDRESS OF TCT
TCTEXP   DS    0B -           JOB/STEP TIME INDICATOR MASK
TCTSW    DS    B -            TCT SWITCHES
TCTJSTI  EQU   BIT0 -         TQE JOB/STEP TIME INDICATOR.
*                             IF 0, TQE CONTAINS STEP TIME.
*                             IF 1, TQE CONTAINS JOB TIME.
TCTIEX   EQU   BIT1 -         ERROR IN TCT I/O TABLE I/O COUNTS
TCTRSV02 EQU   BIT2,,C'X' -   RESERVED
TCTRSV03 EQU   BIT3,,C'X' -   RESERVED
TCTRSV04 EQU   BIT4,,C'X' -   RESERVED
TCTRSV05 EQU   BIT5,,C'X' -   RESERVED
TCTRSV06 EQU   BIT6,,C'X' -   RESERVED
TCTRSV07 EQU   BIT7,,C'X' -   RESERVED
TCTTCB   DS    A -            ADDRESS OF THE INITIATOR TCB
TCTCRTBL DS    A -            ADDRESS OF THE TCT STORAGE TABLE
TCTIOTBL DS    A -            ADDRESS OF THE TCT I/O TABLE.  TCT I/O
*                             TABLE IS NOT NECESSARILY CONTIGUOUS WITH
*                             THE TCT.
TCTPOOL  DS    0F -           SUBPOOL/LENGTH FOR TCT PROPER
         DS    H -            SUBPOOL IN WHICH THE TCT RESIDES
TCTSZE   DS    H -            SIZE IN BYTES OF THE TCT AND THE TCT
*                             STORAGE TABLES
TCTUTL   DS    A -            ADDRESS OF USER TIME LIMIT ROUTINE
TCTUDATA DS    A -            ADDRESS OF A ONE-WORD PARAMETER LIST
*                             WHICH POINTS TO THE JOB MANAGEMENT
*                             RECORD (JMR)
TCTJMR   DS    A -            ADDRESS OF THE JOB MANAGEMENT RECORD
TCTRSV08 DS    XL4 -          *** TCTUSO FIELD RESERVED IN OS/VS ***
TCTJSTX  DS    F  -           AMOUNT OF TIME THAT JOB OR STEP HAS BEEN
*                             EXTENDED BY USER EXIT IEFUTL (32-BIT
*                             UNSIGNED BINARY NUMBER)
TCTTJLM  DS    F  -           CONTAINS REMAINING JOB TIME (32-BIT
*                             UNSIGNED BINARY NUMBER)
TCTWLMT  DS    F -            RESERVED, ZEROS
TCTLIN   DS    F -            TSO - COUNT OF LINES OF TERMINAL INPUT
TCTLOUT  DS    F -            TSO - COUNT OF LINES OF TERMINAL OUTPUT
TCTAST   DS    F -            THE TIME OF DAY (TO ONE HUNDREDTH OF A
*                             SECOND) THAT DEVICE ALLOCATION STARTED
TCTPPST  DS    F -            THE TIME OF DAY (TO ONE HUNDREDTH OF A
*                             SECOND THAT THE PROBLEM PROGRAM WAS
*                             INITIALLY LOADED INTO MAIN STORAGE
TCTAJS   DS    F  -           ACCUMULATED SESSION SERVICE TIME
TCTACT   DS    F  -           ACCUMULATED ACTIVE TIME
TCTRGNS  DS    F -            TOTAL SWAPS PERFORMED FOR THIS TSO
*                             USER (SWAP-INS + SWAP-OUTS)
TCTSIN   DS    F -            TOTAL PAGES SWAPPED-IN FOR THIS TSO USER
TCTSO USERUT  DS    F -            TOTAL PAGES SWAPPED-OUT FOR THIS TSO
TCTCOMZ  EQU   *-SMFTCT -     LENGTH OF TCT COMMON SECTION
***********************************************************************
*                      TCT STORAGE TABLES                             *
*       A SEPARATE TABLE IS USED TO DESCRIBE EACH TYPE OF STORAGE     *
*       OBTAINED FOR A TASK (PROCESSOR STORAGE (HIERARCHY 0) AND      *
*       LCS (HIERARCHY 1))                                            *
***********************************************************************
TCTCORE  EQU   * -            TCTCRTBL  - START OF TCT STORAGE TABLES
TCTLWM   DS    A -            THE CURRENT HIGHEST ADDRESS ALLOCATED
*                             FROM THE BOTTOM OF THE REGION
TCTHWM   DS    A -            THE CURRENT LOWEST ADDRESS ALLOCATED
*                             FROM THE TOP OF THE REGION
TCTMINC  DS    H -            THE MINIMUM DIFFERENCE (IN 2K BLOCKS)
*                             BETWEEN TCTLWM AND TCTHWM.  THIS FIGURE
*                             REPRESENTS THE UNUSED PORTION OF THE
*                             USER'S REGION.
TCTRSZ   DS    H -            THE ORIGINAL REGION REQUEST EXPRESSED IN
*                             2K BLOCKS
TCTRBA   DS    A -            FOR A V=V PROBLEM PROGRAM, LOWEST ADDRESS
*                             IN PRIVATE AREA.  FOR A V=R PROBLEM
*                             PROGRAM, LOWEST ADDRESS IN REGION.
TCTCREZ  EQU   *-TCTCORE -    LENGTH OF A PROCESSOR STORAGE TABLE
***********************************************************************
*                   HIERARCHY 1 STORAGE TABLE                         *
***********************************************************************
TCTLCS   DS    4F -           STORAGE RESERVED FOR HIERARCHY 1 STORAGE
*                             TABLE
TCTBIG   EQU   *-SMFTCT -     COMBINED LENGTH OF TCT COMMON SECTION AND
*                             STORAGE TABLES
***********************************************************************
*                        TCT INPUT/OUTPUT TABLE                       *
*        THE TCT I/O TABLE IS COMPOSED OF THE TCT I/O LOOKUP TABLE    *
*        AND THE TCT I/O COUNTER TABLE.  THE TCT I/O TABLE IS NOT     *
*        NECESSARILY CONTIGUOUS TO THE TCT.  THE TCTIOTBL FIELD OF    *
*        THE TCT POINTS TO IT.                                        *
***********************************************************************
***********************************************************************
*                        TCT I/O LOOKUP TABLE                         *
*        THE TCT I/O LOOKUP TABLE CONTAINS A COMMON SECTION AND A     *
*        DD LOOKUP TABLE ENTRY FOR EACH DD ENTRY IN THE TIOT.         *
***********************************************************************
TCTTIOT  EQU   * -            BEGINNING OF TCT I/O TABLE
TCTPLEXT DS    0F -           SUBPOOL/LENGTH OF TCT I/O TABLE
         DS    H -            SUBPOOL IN WHICH THE TCT I/O TABLE
*                             RESIDES
TCTSZEXT DS    H -            SIZE IN BYTES OF TCT I/O TABLE
TCTSZLKP DS    H -            NUMBER OF DEVICE ENTRIES IN THE TCT I/O
*                             LOOKUP TABLE TIMES 8
TCTRSV11 DS    XL2 -          RESERVED
TCTCOMIO EQU   *-TCTTIOT -    LENGTH OF TCT I/O TABLE COMMON SECTION
***********************************************************************
*                  DD LOOKUP TABLE ENTRY                              *
*        A DD LOOKUP TABLE ENTRY IS CREATED FOR EACH DD ENTRY IN      *
*        THE TIOT.  THE DD LOOKUP TABLE ENTRIES ARE REFERENCED BY     *
*        THE SYSTEM MANAGEMENT FACILITIES OPTION CODE TO ENTER THE    *
*        TCT I/O COUNTER TABLE AT THE DD ENTRY CONTAINING THE DEVICE  *
*        ENTRY FOR THE ACCESSED DEVICE.                               *
***********************************************************************
TCTIODSP EQU   * -            START OF DD LOOKUP TABLE ENTRY
TCTDCBTD DS    H -            OFFSET FROM THE TIOT ORIGIN TO THE
*                             TIOELNGH FIELD IN THE TIOT ENTRY FOR THE
*                             DD STATEMENT ASSOCIATED WITH THE
*                             ACCESSED DATA SET
TCTIOTSD DS    H -            OFFSET FROM THE TCT I/O TABLE ORIGIN TO
*                             THE DD ENTRY, WITHIN THE TCT I/O COUNTER
*                             TABLE, ASSOCIATED WITH THE ACCESSED DATA
*                             SET
TCTDCBLE DS    F -            END OF TCT I/O LOOKUP TABLE (ZEROS)
***********************************************************************
*                        TCT I/O COUNTER TABLE                        *
*        THE TCT I/O COUNTER TABLE CONSISTS OF ONE DD ENTRY FOR       *
*        EACH DD ENTRY IN THE TIOT                                    *
***********************************************************************
***********************************************************************
*                       DD ENTRY                                      *
*        EACH DD ENTRY CONSISTS OF AN 8-BYTE DEVICE ENTRY REPEATED    *
*        FOR EACH UCB (DEVICE) ASSOCIATED WITH A DD STATEMENT AND     *
*        AN 8-BYTE OUTPUT LIMIT EXTENSION.                            *
***********************************************************************
***********************************************************************
*                      DEVICE ENTRY                                   *
***********************************************************************
TCTDDENT EQU   * -            START OF TCT I/O COUNTER TABLE (DEVICE
*                             ENTRY)
TCTUCBP  DS    H -            ADDRESS OF THE UCB ASSOCIATED WITH THIS
*                             DEVICE
TCTSCTR  DS    FL1 -          NUMBER OF DEVICES ASSOCIATED WITH THIS
*                             DD STATEMENT.  THIS NUMBER REPRESENTS
*                             THE NUMBER OF DEVICE ENTRIES WITHIN THIS
*                             DD ENTRY.  THIS FIELD CONTAINS ZEROS IN
*                             ALL BUT ITS FIRST APPEARANCE IN ANY DD
*                             ENTRY.
TCTFLGS  DS    B -            FLAG BYTE
TCTVAMDS EQU   X'40' -        VAM DATA SET ENTRY.  TCTUCBP FIELD IS
*                             ZERO WHEN THIS BIT IS ONE.
TCTRSV21 EQU   X'20',,C'X' -  RESERVED
TCTRSV22 EQU   X'10',,C'X' -  RESERVED
TCTRSV23 EQU   X'08',,C'X' -  RESERVED
TCTRSV24 EQU   X'04',,C'X' -  RESERVED
TCTRSV25 EQU   X'02',,C'X' -  RESERVED
TCTRSV26 EQU   X'01',,C'X' -  RESERVED
TCTDCTR  DS    F -            COUNTER FOR EXCP'S ISSUED AGAINST THIS
*                             UCB (DEVICE)
***********************************************************************
*                      OUTPUT LIMIT EXTENSION                         *
***********************************************************************
TCTRSV10 DS    XL4 -          *** TCTOUTLM FIELD RESERVED IN OS/VS ***
TCTEXRLD DS    FL1 -          A BINARY NUMBER OF EXTENTS RELEASED BY
*                             THE DADSM RELEASE ROUTINE.  COLLECTED
*                             ONLY IF RLSE WAS SPECIFIED IN THE SPACE
*                             PARAMETER FOR THIS DATA SET.
TCTTKRLD DS    FL3 -          A BINARY NUMBER OF TRACKS RELEASED BY THE
*                             DADSM RELEASE ROUTINE.  COLLECTED ONLY
*                             IF RLSE WAS SPECIFIED IN THE SPACE
*                             PARAMETER FOR THIS DATA SET.
         MEND
./ ADD NAME=TPSYN    0100-02135-02135-1228-00029-00029-00000-VBCMACS
         MACRO
&LABEL   TPSYN &REG
         AIF   (T'&REG EQ 'O').OMIT
         TM    24(R1),MASK02       TEST FOR OVERFLOW RECORD
         BO    BOV&SYSNDX          YES
         TM    24(R1),MASK01       TEST FOR DUPLICATE KEY ERROR
         BO    BDP&SYSNDX          YES
         TM    24(R1),MASK80           NO RECORD FOUND INDIC
         BO    BNF&SYSNDX              YES
         DC    H'0'                    INVALID OP-CODE FOR TP SPIE RTN
BNF&SYSNDX EQU *
         MVI   0(&REG),BN&SYSNDX   PASS BACK CODE FOR NRF ERROR
         B     BEX&SYSNDX          GO TO EXIT
BOV&SYSNDX EQU *
         BR    R14                     RETURN TO NEXT INSTR
BDP&SYSNDX EQU *
         MVI   0(&REG),BD&SYSNDX   PASS BACK CODE FOR DUPLICATE
         B     BEX&SYSNDX          GO TO EXIT
         AGO   .DATA
.OMIT    ANOP
         MNOTE 9,'OMITTED OPERAND - MACRO GENERATION TERMINATED'
         MEXIT
.DATA    ANOP
BD&SYSNDX EQU   C'D'
BN&SYSNDX EQU   C'N'
         DS    0H
BEX&SYSNDX EQU *
         MEXIT
         MEND
./ ADD NAME=UCB      0100-02135-02135-1228-00854-00854-00000-VBCMACS
         MACRO
         UCB   &PREFIX=NO
*/*            U N I T   C O N T R O L   B L O C K                   */
*/*     THE UCB ADDRESS LOCATED FROM THE UCB LOOK UP TABLE POINTS    */
*/*     TO THE COMMON SEGMENT.  THIS ADDRESS MUST HAVE THE PREFIX    */
*/*     ADDRESSABILITY CONSTANT SUBTRACTED FROM IT IN ORDER TO MAP   */
*/*     THE PREFIX FIELDS AND STANDARD FIELDS VIA THIS MACRO.        */
*/*             COMMON EXTENSION                  UCBCMEXT           */
*/*             MAGNETIC TAPE EXTENSION           UCBMT              */
*/*             OPTICAL CHARACTER READER EXT      UCBOCR             */
*/*             3540 DEVICE EXTENSION             UCB3540X   @Z30OP9A*/
         AIF   ('&PREFIX' NE 'YES').UCB001
UCB      DSECT , -                 UCBPTR-512
UCBBGN   EQU   * -
         DS    126F -              RESERVED
UCBPXST  EQU   * -                 START OF USED FIELDS IN PREFIX
*
UCBLOCK  DS    F -                 DEVICE LOCK
UCBIOQ   DS    A -                 ADDRESS OF LAST QUEUING ELEMENT USED
*                                  FOR THIS DEVICE.  ADDRESS OF ERP
*                                  WORK AREA DURING INTERCEPT AND
*                                  ASYNCHRONOUS ATTENTION/DEVICE END
*                                  WITH UNIT CHECK CONDITIONS.  WHEN
*                                  DIRECT ACCESS VOLUME VERIFICATION
*                                  (DAVV) IS WAITING FOR A VOLUME
*                                  MOUNT, THIS FIELD WILL POINT TO THE
*                                  DAVV SRB.
UCBCURPX EQU   *-UCBPXST -         ACTUAL PREFIX DATA LENGTH
UCBPRFX  EQU   *-UCB -             TOTAL PREFIX LENGTH FOR PREFIX
*                                  ADDRESSABILITY
         SPACE 3
.UCB001  ANOP
***********************************************************************
*
*              SYSGEN-INDEPENDENT
*              COMMON SECTION
*
UCBOB    DS    0F
         AIF   ('&PREFIX' EQ 'YES').UCB002
UCBBGN   EQU   * -
.UCB002  ANOP
*
***********************************************************************
*
UCBCMSEG EQU   * -                 START OF COMMON SECTION
UCBJBNR  DS    B -                 FLAG BYTE
UCBVRDEV EQU   X'80' -             UCB FOR VIRTUAL DEVICE
UCBJES3  EQU   X'40' -             ALL VOLUME MOUNTING AND DEVICE
*                                  MANAGEMENT FOR THIS DEVICE IS
*                                  CONTROLLED BY JES3
UCBRV002 EQU   X'20',,C'X' -       RESERVED
UCBRV003 EQU   X'10',,C'X' -       RESERVED
UCBOLDSM EQU   X'08' -             OLTEP COMMUNICATING DIRECTLY WITH
*                                  THE MASS STORAGE CONTROL (MSC),
*                                  NOT THROUGH THE MASS STORAGE SYSTEM
*                                  COMMUNICATOR (MSSC)
*
UCBRSV02 EQU   X'04',,C'X' -       RESERVED
UCBRV011 EQU   X'02',,C'X' -       RESERVED
UCBMONT  EQU   X'01' -             VOLUME TO BE MOUNTED IS TO BE
*                                  RETAINED OR CONTAIN A PASSED DATA
*                                  SET (SET BY DEVICE ALLOCATION OR
*                                  DATA MANAGEMENT FOR )
UCBFL5   DS    B -                 FLAGS
UCBDCC   EQU   X'80' -             DISCONNECT COMMAND CHAIN DEVICE
*
UCBAF    EQU   X'40' -             ATTENTION FOR THIS CONSOLE DEVICE
*                                  IS TO BE PROCESSED BY THE
*                                  COMMUNICATIONS TASK           ICB321
UCBAMV   EQU   X'40' -             SUCCESSFUL COMPARISON CHECKING OF
*                                  THE ACCESS METHOD CATALOG AND THE
*                                  VTOC (VSAM DIRECT ACCESS DEVICES
*                                  ONLY)                         ICB437
UCBSASK  EQU   X'20' -             DEVICE REQUIRES STAND ALONE
*                                  SEEK
UCBVSDR  EQU   X'10' -             DEVICE HAS VARIABLE LENGTH SDR'S
UCBENVRD EQU   X'08' -             DEVICE RETURNS ENVIRONMENTAL
*                                  DATA
UCBNALOC EQU   X'04' -             THIS OFFLINE DEVICE IS BEING USED BY
*                                  A SYSTEM COMPONENT.  THE DEVICE
*                                  STATUS MUST NOT CHANGE TO ONLINE NOR
*                                  WILL IT BE ALLOCATED.  THE LAST
*                                  PATH/CHANNEL/CPU TO THE DEVICE MUST
*                                  NOT BE VARY'ED OFFLINE.  THE DEVICE
*                                  IS UNAVAILABLE FOR USAGE BY ANOTHER
*                                  SYSTEM COMPONENT WHICH PROCESSES
*                                  OFFLINE DEVICES.  TO SET THIS
*                                  INDICATOR ON, A COMPONENT MUST
*                                  OBTAIN VIA ENQ, EXCLUSIVE, SYSTEM
*                                  LEVEL CONTROL OF RESOURCE SYSIEFSD,
*                                  Q4.  SERIALIZATION IS NOT REQUIRED
*                                  TO TURN THIS INDICATOR OFF.
UCBALTCU EQU   X'02' -             DEVICE HAS AN ALTERNATE CONTROL UNIT
*                                  ADDRESS
UCBALTPH EQU   X'01' -             DEVICE HAS AN ALTERNATE PATH
UCBID    DS    C -                 UCB IDENTIFICATION (FF)
UCBSTND  EQU   X'FF' -             STANDARD UCB
UCBSTAT  DS    B -                 DEVICE STATUS
UCBONLI  EQU   X'80' -             DEVICE IS ONLINE
UCBCHGS  EQU   X'40' -             DEVICE STATUS IS TO BE CHANGED FROM
*                                  ONLINE TO OFFLINE, AND EITHER
*                                  ALLOCATION IS ENQUEUED ON DEVICES
*                                  OR THE DEVICE IS ALLOCATED.  (BIT 0
*                                  IS ALSO ON.)
UCBRESV  EQU   X'20' -             THE MOUNT STATUS OF THE VOLUME ON
*                                  THIS DEVICE IS RESERVED
UCBUNLD  EQU   X'10' -             UNLOAD OPERATOR COMMAND HAS BEEN
*                                  ADDRESSED TO THIS DEVICE.  THE
*                                  DEVICE IS NOT YET UNLOADED.
UCBALOC  EQU   X'08' -             DEVICE IS ALLOCATED
UCBPRES  EQU   X'04' -             THE MOUNT STATUS OF THE VOLUME ON
*                                  THIS DEVICE IS PERMANENTLY RESIDENT
UCBSYSR  EQU   X'02' -             SYSTEM RESIDENCE DEVICE OR
*                                  PRIMARY CONSOLE OR
*                                  ACTIVE CONSOLE
UCBDADI  EQU   X'01' -             STANDARD TAPE LABELS HAVE BEEN
*                                  VERIFIED FOR THIS TAPE VOLUME
*                                  OR SECONDARY CONSOLE OR
*                                  CONSOLE STATUS CHANGING
UCBCHAN  DS    0FL2 -              BINARY CHANNEL/UNIT ADDRESS
UCBCHA   DS    FL1 -               BINARY CHANNEL ADDRESS OF LAST
*                                  STARTED I/O OPERATION
UCBUA    DS    FL1 -               BINARY UNIT ADDRESS
UCBSFLS  DS    0BL2 -              DEVICE STATUS FLAGS
UCBFLA   DS    BL1 -               I/O SUPERVISOR FLAG BYTE A
UCBFL1   EQU   UCBFLA -                ALIAS
UCBBSY   EQU   X'80' -             DEVICE IS BUSY
UCBBUSYD EQU   UCBBSY -                ALIAS
UCBNRY   EQU   X'40' -             DEVICE NOT READY
UCBNOTRD EQU   UCBNRY -                ALIAS
UCBPST   EQU   X'20' -             POST FLAG (ASSOC IOQE)
UCBUSING EQU   UCBPST -                ALIAS
UCBPSNS  EQU   X'10' -             PENDING SENSE OPERATION
UCBCUB   EQU   X'08' -             CONTROL UNIT BUSY
UCBNOTRC EQU   UCBCUB -                ALIAS
UCBSAP   EQU   X'04' -             STAND ALONE PROCESS ON DEVICE ACTIVE
*                                  (EG., RESERVE)
UCBACTV  EQU   X'02' -             CHANNEL PROGRAM ACTIVE ON DEVICE
*
UCBQISCE EQU   X'01' -             DEVICE QUIESCED
UCBFLB   DS    BL1 -               I/O SUPERVISOR FLAG BYTE B
UCBIORST EQU   X'80' -             I/O RESTART VIA ALTERNATE CPU
*                                  RECOVERY HAS FACTORED DEVICE OUT
*                                  OF CONFIGURATION BECAUSE OF
*                                  NON-ACCESSABILITY.  ALL INCOMING
*                                  I/O REQUESTS ARE INTERCEPTED AND
*                                  MARKED IN PERMANENT ERROR WITH A
*                                  COMPLETION CODE OF X'51'.
*                                  HOWEVER, IF CHANNEL RECONFIGURATION
*                                  HARDWARE (CRH) IS ACTIVE AND CRH
*                                  WILL BE USED TO ACCESS THE DEVICE
*                                  ASSOCIATED WITH THE UCB, THIS BIT
*                                  WILL BE ON IN EVERY UCB THAT HAS
*                                  OUTSTANDING I/O ACROSS A CRH PATH.
*
UCBASNS  EQU   X'40' -             SENSE ACTIVE ON DEVICE
UCBSPST  EQU   X'20' -             SENSE POST INDICATOR
UCBRESVH EQU   X'10' -             DEVICE RESERVED INDICATOR
UCBCRHRV EQU   X'08' -             RESERVED PATH THROUGH A CHANNEL
*                                  RECONFIGURATION HARDWARE (CRH)
*                                  CONNECTION
UCBCRHSN EQU   X'04' -             IF 1, SENSE PENDING FROM INOPERATIVE
*                                  CPU.  IF 0, SENSE PENDING FROM
*                                  OPERATIVE CPU.  BIT IS SET ONLY WHEN
*                                  CHANNEL RECONFIGURATION HARDWARE
*                                  (CRH) IS ACTIVE.
UCBVALPH EQU   X'02' -             PATH VALIDATION
UCBFLB7  EQU   X'01',,C'X' -       RESERVED
UCBCHM   DS    0B -                PATH STATUS MASK FOR THIS DEVICE
*
UCBCHM1  DS    B -                 SAME AS UCBCHM
UCBPTH0  EQU   X'C0' -             PATHS FROM CPU 0
UCBPPA   EQU   X'80' -             PRIMARY PATH CPU 0
UCBSPA   EQU   X'40' -             SECONDARY PATH CPU 0
UCBPTH1  EQU   X'30' -             PATHS FROM CPU 1
UCBPPB   EQU   X'20' -             PRIMARY PATH CPU 1
UCBSPB   EQU   X'10' -             SECONDARY PATH CPU 1
UCBRV014 EQU   X'08',,C'X' -       RESERVED
UCBRV015 EQU   X'04',,C'X' -       RESERVED
UCBRV016 EQU   X'02',,C'X' -       RESERVED
UCBRV017 EQU   X'01',,C'X' -       RESERVED
UCBCNT   DS    FL1 -               COUNT OF QUEUED REQUESTS WAITING
*                                  FOR DEVICE
UCBLCI   DS    FL1 -               INCREMENT WHICH, WHEN MULTIPLIED BY
*                                  8, BECOMES AN INDEX TO THE LOGICAL
*                                  CHANNEL TABLE (LCHTAB)
UCBCPU   DS    XL1 -               LAST SIO TO DEVICE ISSUED FROM THIS
*                                  CPUID
UCBWGT   DS    B -                 FLAGS
UCBIN    EQU   X'80' -             SYSIN
UCBOUT   EQU   X'40' -             SYSOUT
UCBPUB   EQU   X'20' -             ASSUMED THAT THIS DEVICE WILL BE
*                                  ALLOCATED FOR A PUBLIC VOLUME
*                                  REQUEST
UCBREW   EQU   X'10' -             REWIND COMMAND HAS BEEN ADDRESSED TO
*                                  THIS MAGNETIC DEVICE BY I/O SUPPORT
UCBMTPXP EQU   X'08' -             MULTIPLE EXPOSURE DEVICE
UCBVORSN EQU   X'04' -             VARY COMMAND OPERATOR REASON
*                                  INDICATOR
UCBVHRSN EQU   X'02' -             VARY COMMAND HIERARCHY REASON
*                                  INDICATOR
UCBRV029 EQU   X'01',,C'X' -       RESERVED
UCBNAME  DS    CL3 -               UNIT NAME (EBCDIC)
UCBTYP   DS    0CL4 -              DEVICE TYPE
UCBTBYT1 DS    B -                 MODEL BITS
UCB1FEA0 EQU   X'80' -             BIT 0
UCB1FEA1 EQU   X'40' -             BIT 1
UCB1FEA2 EQU   X'20' -             BIT 2
UCB1FEA3 EQU   X'10' -             BIT 3
UCB1FEA4 EQU   X'08' -             BIT 4
UCB1FEA5 EQU   X'04' -             BIT 5
UCBD1600 EQU   X'04' -             1600 BPI                      ICB475
UCB1FEA6 EQU   X'02' -             BIT 6
UCBD6250 EQU   X'02' -             6250 BPI                      ICB475
UCB1FEA7 EQU   X'01' -             BIT 7
UCBTBYT2 DS    B -                 OPTION FLAGS
UCB2OPT0 EQU   X'80' -             FLAG 0
UCB2OPT1 EQU   X'40' -             FLAG 1
UCB2OPT2 EQU   X'20' -             FLAG 2
UCBDUDN1 EQU   X'20' -             DUAL DENSITY 800/1600 BPI     ICB475
UCBRR    EQU   X'20' -             THIS DEVICE IS SHARABLE BETWEEN
*                                  TWO CPU'S (DIRECT ACCESS)
UCB2OPT3 EQU   X'10' -             FLAG 3
UCBDUDN2 EQU   X'10' -             DUAL DENSITY 1600/6250 BPI    ICB475
UCBRPS   EQU   X'10' -             ROTATIONAL POSITION SENSING (RPS)
*                                  DEVICE (DIRECT ACCESS)
UCB2OPT4 EQU   X'08' -             FLAG 4
UCBRWTAU EQU   X'08' -             READ/WRITE TAPE CONTROL
UCBRVDEV EQU   X'08' -             IF 0, REAL DEVICE.  IF 1, VIRTUAL
*                                  DEVICE.  (DIRECT ACCESS)
*
UCB2OPT5 EQU   X'04' -             FLAG 5
UCB2OPT6 EQU   X'02' -             FLAG 6
UCBVLPWR EQU   X'02' -             VOLUME REQUIRES ALTERNATE POWER
*                                  SOURCE DEVICE
UCB2OPT7 EQU   X'01' -             FLAG 7
UCBDVPWR EQU   X'01' -             DEVICE HAS ALTERNATE POWER SOURCE
*
UCBDVCLS DS    0B -                SAME AS UCBTBYT3
UCBTBYT3 DS    B -                 CLASS BITS
UCB3TAPE EQU   X'80' -             TAPE
UCB3COMM EQU   X'40' -             COMMUNICATIONS
UCB3CTC  EQU   X'41' -             CHANNEL-TO-CHANNEL ADAPTER
UCB3DACC EQU   X'20' -             DIRECT ACCESS
UCB3DISP EQU   X'10' -             DISPLAY
UCB3UREC EQU   X'08' -             UNIT RECORD
UCB3CHAR EQU   X'04' -             CHARACTER READER
UCBRSV10 EQU   X'02',,C'X' -       RESERVED
UCBRSV11 EQU   X'01',,C'X' -       RESERVED
UCBUNTYP DS    0C -                SAME AS UCBTBYT4
UCBTBYT4 DS    C -                 DEVICE CODE
UCBDSM   EQU   X'42' -             MASS STORAGE CONTROL (MSC) (3851)
*
UCB42AD1 EQU   X'11' -             2702 CONTROL UNIT WITH TYPE 1
*                                  ADAPTOR
UCB3211  EQU   X'09' -             3211 PRINTER
UCB3400  EQU   X'03' -             3400 MAGNETIC TAPE
UCB2400  EQU   X'01' -             2400 SERIES MAGNETIC TAPE
*                                  DEVICE                        ICB376
UCBEXTPT DS    0A -                ADDRESS OF COMMON UCB EXTENSION
*
UCBFLC   DS    BL1 -               I/O SUPERVISOR FLAG BYTE C
UCBATTP  EQU   X'80' -             ATTENTION PENDING
UCBWAA   EQU   X'40' -             WORK AREA APPENDED
UCBUDE   EQU   X'20' -             UNSOLICITED DEVICE END RECEIVED
*
UCBITF   EQU   X'10' -             INTERCEPT CONDITION
UCBIVRS  EQU   X'08' -             INTERVENTION REQUIRED MESSAGE
*                                  ISSUED
UCBIVRR  EQU   X'04' -             INTERVENTION REQUIRED MESSAGE
*                                  IS NEEDED
UCBTICBT EQU   X'02' -             CHANNEL END AND/OR DEVICE END
*                                  OR MOUNT CONDITION PENDING.
UCBDDRSW EQU   X'01' -             DDR SWITCH PENDING ON THIS
*                                  DEVICE
UCBEXTP  DS    AL3 -               ADDRESS OF COMMON UCB EXTENSION
*
*
SRTEJBNR EQU   UCBJBNR -           ALIAS
SRTESTAT EQU   UCBSTAT -           ALIAS
SRTEONLI EQU   UCBONLI -           ALIAS
SRTECHGS EQU   UCBCHGS -           ALIAS
SRTERESV EQU   UCBRESV -           ALIAS
SRTEALOC EQU   UCBALOC -           ALIAS
SRTEPRES EQU   UCBPRES -           ALIAS
SRTESYSR EQU   UCBSYSR -           ALIAS
SRTEDADI EQU   UCBDADI -           ALIAS
UCBFL2   EQU   UCBFL1 -            ALIAS (UCBCHA WAS ONCE UCBFL1)
*
***********************************************************************
*
*        DEVICE-DEPENDENT UCB SEGMENTS
*
UCBDEV   EQU   *
*
***********************************************************************
*
*   DIRECT ACCESS DEVICE SEGMENT
*
         ORG   UCBDEV -            DEVICE-DEPENDENT SEGMENT
*
*        UCBVOLI, UCBSTAB AND UCBDMCT ARE SAME IN TAPE SEGMENT AS
*        IN DIRECT ACCESS SEGMENT
*
***********************************************************************
*
UCBVTOC  DS    CL4 -               RELATIVE ADDRESS OF VTOC FOR THIS
*                                  VOLUME, IN FORM TTR0
UCBVOLI  DS    CL6 -               VOLUME SERIAL NUMBER
UCBSTAB  DS    BL1 -               VOLUME STATUS
UCBBSVL  EQU   X'80' -             VOLUME DEMOUNTABLE BY DATA
*                                  MANAGEMENT (DIRECT ACCESS)
*
UCBDVSHR EQU   X'80' -             DEVICE NOT SHARABLE AMONG SEVERAL
*                                  CPU'S (3420 MAGNETIC TAPE DEVICES
*                                  ONLY)
UCBPGFL  EQU   X'40' -             UCB IS OPEN AND IS BEING USED AS A
*                                  PAGE FILE
UCBPRSRS EQU   X'20' -             DURING VOLUME ATTRIBUTE PROCESSING
*                                  THIS BIT IS USED BOTH TO DENOTE
*                                  UCB'S THAT WERE MARKED PERMANENTLY
*                                  RESIDENT PRIOR TO GETTING CONTROL
*                                  AND TO IDENTIFY DEVICES THAT WERE
*                                  SELECTED BY THE OPERATOR FOR
*                                  MOUNTING VOLUMES  (DIRECT ACCESS)
*
UCBBALB  EQU   X'20' -             ADDITIONAL VOLUME LABEL PROCESSING
*                                  (TAPE)
UCBBPRV  EQU   X'10' -             PRIVATE - VOLUME USE STATUS
UCBBPUB  EQU   X'08' -             PUBLIC - VOLUME USE STATUS
UCBBSTR  EQU   X'04' -             STORAGE - VOLUME USE STATUS
*                                  (DIRECT ACCESS)
*                                  THE VOLUME MOUNTED HAS AN AMERICAN
*                                  NATIONAL STANDARD LABEL  (TAPE)
UCBSHAR  EQU   X'02' -             VOLUME SHAREABLE AMONG JOB STEPS
*
UCBBNUL  EQU   X'01' -             CONTROL VOLUME - A CATALOG DATA SET
*                                  IS ON THIS VOLUME  (DIRECT ACCESS)
*                                  IF THE MULTIPLE CONSOLE SUPPORT
*                                  OPTION IS IN THE SYSTEM, DEMOUNT OR
*                                  MOUNT MESSAGES HAVE BEEN ISSUED AND
*                                  THE MESSAGE ID'S ARE AT OFFSETS 40
*                                  THROUGH 45.  OPEN WILL DELETE THE
*                                  MESSAGES AND TURN THIS BIT OFF.
*                                  (TAPE)
UCBDMCT  DS    XL1 -               VOLUME USE BYTE
UCBMOUNT EQU   X'80' -             IF 0, A MOUNT VERIFICATION HAS BEEN
*                                  PERFORMED.  IF 1, A MOUNT REQUEST
*                                  HAS BEEN ISSUED.  (DIRECT ACCESS)
*                                  FOR TAPE, THE FOLLOWING MEANINGS
*                                  APPLY.
*                                  NORMAL SCHEDULER PROCESSING - IF 0,
*                                  NO VOLUME HAS BEEN MOUNTED.  IF 1,
*                                  A VOLUME HAS BEEN MOUNTED BUT NO
*                                  VOLUME LABEL PROCESSING HAS BEEN
*                                  PERFORMED.
*                                  SL OPEN ROUTINE - IF 0, STANDARD
*                                  VOLUME LABEL AND CORRECT SERIAL
*                                  NUMBER HAVE BEEN VERIFIED.  IF 1,
*                                  VOLUME LABEL IS NOT STANDARD FORMAT
*                                  OR SERIAL NUMBER IS NOT CORRECT.
*                                  (A MOUNT MESSAGE HAS BEEN ISSUED.)
*                                  NSL OPEN ROUTINE - IF 0,
*                                  NON-STANDARD VOLUME LABEL HAS BEEN
*                                  VERIFIED.  IF 1, VOLUME LABEL IS NOT
*                                  STANDARD FORMAT.  (CONTROL PASSES TO
*                                  THE PROCESSING PROGRAM'S
*                                  NON-STANDARD LABEL PROCESSING
*                                  ROUTINE.)  VOLUME LABEL IS STANDARD
*                                  FORMAT.  (CONTROL REMAINS WITH THE
*                                  OPEN ROUTINE.  A MOUNT MESSAGE HAS
*                                  BEEN ISSUED.)
*                                  BLP OPEN ROUTINE - IF 0, VOLUME
*                                  LABEL HAS NOT BEEN PROCESSED.
UCBDMC   EQU   X'7F' -             NUMBER OF DCB'S OPEN FOR THIS VOLUME
UCBDATP  EQU   * -                 END OF COMMON DIRECT ACCESS/TAPE
*                                  AREA
UCBSQC   DS    FL1 -               NUMBER OF RESERVE MACRO INSTRUCTIONS
*                                  ISSUED
UCBFL4   DS    BL1 -               DIRECT ACCESS FLAG BYTE
UCBDAVV  EQU   X'80' -             DIRECT ACCESS VOLUME VERIFICATION
*                                  IN CONTROL (DAVV)
UCBWDAV  EQU   X'40' -             DAVV WAITING FOR MOUNT
UCBRV028 EQU   X'20',,C'X' -       RESERVED
UCBDSS   EQU   X'10' -             READ HOME ADDRESS AND READ RECORD
*                                  ZERO OPERATIONS HAVE BEEN PERFORMED
*                                  BY DYNAMIC SUPPORT SYSTEM (DSS)
*
UCBRV065 EQU   X'08',,C'X' -       RESERVED
UCBFL45  EQU   X'04',,C'X' -       RESERVED
UCBFL46  EQU   X'02',,C'X' -       RESERVED
UCBFL47  EQU   X'01',,C'X' -       RESERVED
UCBUSER  DS    FL1 -               NUMBER OF CURRENT USERS
UCBRES1A DS    XL1 -               RESERVED
UCBBASE  DS    A -                 ADDRESS OF BASE EXPOSURE UCB
UCBNEXP  DS    A -                 BASE - ADDRESS OF LAST STARTED
*                                  EXPOSURE
*                                  NON-BASE - ADDRESS OF NEXT
*                                  EXPOSURE IN THE RING
*                                  THIS ADDRESS POINTS TO THE
*                                  MULTIPROCESSING PREFIX
*
***********************************************************************
*
*   MAGNETIC TAPE SEGMENT
*
         ORG   UCBDEV -            DEVICE-DEPENDENT SEGMENT
*
*        UCBVOLI, UCBSTAB AND UCBDMCT ARE SAME IN TAPE SEGMENT AS
*        IN DIRECT ACCESS SEGMENT
*
***********************************************************************
*
UCBFSCT  DS    H -                 DATA SET SEQUENCE COUNT
UCBFSEQ  DS    H -                 DATA SET SEQUENCE NUMBER
         DS    CL8 -               UCBVOLI, UCBSTAB AND UCBDMCT AS IN
*                                  DIRECT ACCESS SEGMENT
UCBFSER  DS    CL6 -               BEFORE OPEN, MESSAGE ID'S.  SEE
*                                  UCBSTAB BIT 7.  AFTER OPEN, DATA
*                                  SET SERIAL NUMBER
UCBRES1B DS    XL1 -               RESERVED
UCBTFL1  DS    B -                 FLAG BYTE (TAPE DEVICES ONLY)
UCBNLTP  EQU   X'80' -             TAPE VOLUME DOES NOT CONTAIN
*                                  LABELS
UCBNSLTP EQU   X'40' -             TAPE CONTAINS NON-STANDARD
*                                  LABELS
UCBRV038 EQU   X'20',,C'X' -       RESERVED
UCBRV005 EQU   X'10',,C'X' -       RESERVED
UCBRV006 EQU   X'08',,C'X' -       RESERVED
UCBRV007 EQU   X'04',,C'X' -       RESERVED
UCBRV008 EQU   X'02',,C'X' -       RESERVED
UCBRV009 EQU   X'01',,C'X' -       RESERVED
UCBXTN   DS    0A -                ADDRESS OF THE MAGNETIC TAPE UCB
*                                  EXTENSION
UCBVOPT  DS    BL1 -               VOLUME STATISTICS OPTION BITS
UCBESV   EQU   X'80' -             ERROR STATISTICS BY VOLUME (ESV)
*                                  RECORDS KEPT
UCBEVA   EQU   X'40' -             ERROR VOLUME ANALYSIS (EVA) RECORDS
*                                  KEPT
UCBESVC  EQU   X'20' -             IF 0, ESV RECORDS SENT TO SYS1.MAN
*                                  (X OR Y) DATA SET.
*                                  IF 1, ESV RECORDS SENT TO CONSOLE.
*
UCBERPC  EQU   X'10' -             AN ERROR RECOVERY PROCEDURE HAS
*                                  CONTROL
UCBESVE  EQU   X'08' -             AN ESV RECORD HAS BEEN ISSUED FOR
*                                  THIS VOLUME BECAUSE OF AN EOV
*                                  CONDITION
UCBRSV20 EQU   X'04',,C'X' -       RESERVED
UCBRSV21 EQU   X'02',,C'X' -       RESERVED
UCBRSV22 EQU   X'01',,C'X' -       RESERVED
UCBXTNB  DS    AL3 -               ADDRESS OF THE MAGNETIC TAPE UCB
*                                  EXTENSION
*
SRTEVOLI EQU   UCBVOLI -           ALIAS
SRTESTAB EQU   UCBSTAB -           ALIAS
SRTEBSVL EQU   UCBBSVL -           ALIAS
SRTEBPRV EQU   UCBBPRV -           ALIAS
SRTEBPUB EQU   UCBBPUB -           ALIAS
SRTEBSTR EQU   UCBBSTR -           ALIAS
SRTEDMCT EQU   UCBDMCT -           ALIAS
SRTEFSCT EQU   UCBFSCT -           ALIAS
SRTEFSEQ EQU   UCBFSEQ -           ALIAS
SRTEUSER EQU   UCBUSER -           ALIAS
*
***********************************************************************
*
*             UNIT RECORD WITH
*             UNIVERSAL CHARACTER SET (1403, 3211)
*             OR OPTICAL CHARACTER READER (3886)
*             OR 3540 DEVICE                                   @Z30OP9A
*             UCB SEGMENT
*
         ORG   UCBDEV -            DEVICE-DEPENDENT SEGMENT
*
***********************************************************************
*
UCBXTADR DS    A -                 ADDRESS OF UCS UCB EXTENSION (1403
*                                  OR 3211) OR ADDRESS OF OPTICAL
*                                  CHARACTER READER UCB EXTENSION
*                                  (3886) OR ADDRESS OF 3540 DEVICE
*                                  UCB EXTENSION (3540)
*
*
***********************************************************************
*
*             GRAPHICS EXCEPT 3270
*             UCB SEGMENT
*
         ORG   UCBDEV -            DEVICE-DEPENDENT SEGMENT
*
***********************************************************************
*
UCBSTART DS    H -                 LAST START ADDRESS
UCBOPEN  DS    FL1 -               NUMBER OF DCB'S THAT ARE CURRENTLY
*                                  OPEN FOR THIS DEVICE
UCBGCB   DS    C -                 GRAPHIC CONTROL BYTE USED FOR
*                                  ATTENTION HANDLING
UCBTEB   DS    A -                 ADDRESS OF TASK ENTRY (TE) BLOCK
UCBSNS   DS    XL4 -               SENSE INFORMATION
UCBBTA   DS    0A -                ADDRESS OF BUFFER TABLE
UCBDI    DS    FL1 -               DEVICE OR DEVICES ON A CONTROL UNIT
*                                  TO WHICH BUFFER SECTIONS ARE
*                                  ASSIGNED
UCBBTB   DS    AL3 -               ADDRESS OF BUFFER TABLE
*
***********************************************************************
*
*             3270 GRAPHICS
*             UCB SEGMENT
*
         ORG   UCBDEV -            DEVICE-DEPENDENT SEGMENT      ICB480
*
***********************************************************************
*
UCBAOF   DS    0BL2 -              ADDITIONAL OPTIONAL FEATURES.  AN
*                                  EXTENSION OF THE OPTIONAL FEATURES
*                                  BYTE OF THE UCBTYP FIELD.     ICB480
UCBAOF1  DS    B -                 FIRST BYTE OF UCBAOF          ICB480
UCBOFMCR EQU   X'80' -             MAGNETIC CARD READER ADAPTER -
*                                  FOR 3277 ONLY                 ICB480
UCBOFSP  EQU   X'40' -             SELECTOR PEN - FOR 3277 ONLY  ICB480
UCBOFNL  EQU   X'20' -             NUMERIC LOCK - FOR 3277 ONLY  ICB480
UCBRSV64 EQU   X'10',,C'X' -       RESERVED                      ICB480
UCBRSV65 EQU   X'08',,C'X' -       RESERVED                      ICB480
UCBRSV66 EQU   X'04',,C'X' -       RESERVED                      ICB480
UCBRSV67 EQU   X'02',,C'X' -       RESERVED                      ICB480
UCBRSV68 EQU   X'01',,C'X' -       RESERVED                      ICB480
UCBAOF2  DS    B -                 SECOND BYTE OF UCBAOF         ICB480
UCBRSV69 EQU   X'80',,C'X' -       RESERVED                      ICB480
UCBRSV70 EQU   X'40',,C'X' -       RESERVED                      ICB480
UCBRSV71 EQU   X'20',,C'X' -       RESERVED                      ICB480
UCBRSV72 EQU   X'10',,C'X' -       RESERVED                      ICB480
UCBRSV73 EQU   X'08',,C'X' -       RESERVED                      ICB480
UCBRSV74 EQU   X'04',,C'X' -       RESERVED                      ICB480
UCBRSV75 EQU   X'02',,C'X' -       RESERVED                      ICB480
UCBRSV76 EQU   X'01',,C'X' -       RESERVED                      ICB480
UCBATNCT DS    FL1 -               ATTENTION COUNT.  THE NUMBER OF
*                                  ATTENTIONS NOT SERVICED IN THE LINE
*                                  GROUP.  PRESENT ONLY IF THE DEVICE
*                                  INDEX FIELD IS 1.  OTHERWISE, THIS
*                                  FIELD IS RESERVED.            ICB480
         DS    B -                 UCBGCB - CONTROL BYTE.  USED FOR
*                                  ATTENTION HANDLING FLAGS      ICB480
UCBOLTEP EQU   X'80' -             OLTEP IN CONTROL OF THE DEVICE
*                                                                ICB480
UCBRSV77 EQU   X'40',,C'X' -       RESERVED                      ICB480
UCBRSV78 EQU   X'20',,C'X' -       RESERVED                      ICB480
UCBRSV79 EQU   X'10',,C'X' -       RESERVED                      ICB480
UCBRTIAC EQU   X'08' -             READ TI ACTIVE
UCBRIPND EQU   X'04' -             READ INITIAL PENDING          ICB480
UCBSKPFG EQU   X'02' -             SKIP FLAG                     ICB480
UCBATRCD EQU   X'01' -             ATTENTION RECEIVED FROM THE
*                                  DEVICE                        ICB480
UCBIRB   DS    0A -                ADDRESS OF THE IRB USED FOR
*                                  SCHEDULING THE SECOND LEVEL
*                                  ATTENTION ROUTINE             ICB480
UCBGRAF  DS    B -                 GRAPHICS STATUS FLAGS (BTAM)
UCBOIP   EQU   X'80' -             OPEN IS IN PROGRESS
UCBDRO   EQU   X'40' -             DEVICE READY IN OPEN
UCBDRNO  EQU   X'20' -             DEVICE READY - NOT IN OPEN
UCBBTAM  EQU   X'10' -             USE BTAM - IGG019UP
UCBUPM   EQU   X'08' -             USE PROVIDED MODULE
UCBRPND  EQU   X'04' -             READY PROCESSING NOT DONE
UCBDWNR  EQU   X'02' -             DEVICE WENT NOT READY
UCBRV039 EQU   X'01' -             RESERVED - BTAM
UCBIRBA  DS    AL3 -               ADDRESS OF THE IRB USED FOR
*                                  SCHEDULING THE SECOND LEVEL
*                                  ATTENTION ROUTINE
UCBLDNCA DS    0A -                ADDRESS OF 3270 WORK AREA
*                                  ESTABLISHED BY VTAM
UCBRDYQ  DS    0A -                ASYNCHRONOUS READY NOTIFICATION IRB
*                                  ADDRESS  (BTAM)
UCBINRLN DS    0FL1 -              SAME AS UCBIRLN
UCBIRLN  DS    FL1 -               INITIALIZED RLN.  THE RELATIVE LINE
*                                  NUMBER (RLN) OF THE IOB INITIALIZED
*                                  FOR A READ INITIAL.  IF 0, NO READ
*                                  INITIAL IS OUTSTANDING.  PRESENT
*                                  ONLY IF THE DEVICE INDEX FIELD IS 1.
*                                  OTHERWISE, THIS FIELD IS RESERVED.
*                                                                ICB480
UCBLDNCB DS    0AL3 -              ADDRESS OF 3270 WORK AREA
*                                  ESTABLISHED BY VTAM
UCBRDYQA DS    AL3 -               ASYNCHRONOUS READY NOTIFICATION IRB
*                                  ADDRESS  (BTAM)
UCBCTLNK DS    0A -                SAME AS UCBCTLNA BELOW        ICB480
UCBRLN   DS    FL1 -               DEVICE INDEX.  INDEX TO THE DEB UCB
*                                  ADDRESS FIELD FOR THIS DEVICE.
*                                  THIS VALUE IS ALSO THE RELATIVE
*                                  LINE NUMBER.                  ICB480
UCBCTLNA DS    AL3 -               CONTROL BLOCK LINK.  IF THE DEVICE
*                                  INDEX FIELD IS 1, THIS FIELD
*                                  CONTAINS THE ADDRESS OF THE DEB FOR
*                                  THE LINE GROUP.  IF THE DEVICE INDEX
*                                  FIELD IS BETWEEN 2 AND 255
*                                  INCLUSIVE, THIS FIELD CONTAINS THE
*                                  ADDRESS OF THE UCB WITH A DEVICE
*                                  INDEX OF 1.                   ICB480
*
***********************************************************************
*
*             3704, 3705 TELEPROCESSING DEVICE
*             UCB SEGMENT
*
         ORG   UCBDEV -            DEVICE-DEPENDENT SEGMENT
*
***********************************************************************
*
UCBRV040 DS    A -                 RESERVED FOR USE AS TELEPROCESSING
*                                  EXTENSION POINTER
UCBICNCB DS    A -                 POINTER TO VTAM'S ICNCB
*
***********************************************************************
*
*             CHANNEL-TO-CHANNEL (CTC) DEVICE
*             UCB SEGMENT
*
         ORG   UCBDEV -            DEVICE-DEPENDENT SEGMENT
*
***********************************************************************
*
UCBCTCAD DS    A -                 ADDRESS OF AN SRB/IOSB TO BE USED
*                                  FOR SENSE COMMAND BYTE BY IECTCATN
*
UCBCTCF1 DS    B -                 CHANNEL-TO-CHANNEL (CTC) DEVICE FLAG
*                                  BYTE
UCBRV042 DS    XL3 -               RESERVED
*
***********************************************************************
*
*             3851 DEVICE
*             UCB SEGMENT
*
         ORG   UCBDEV -            DEVICE-DEPENDENT SEGMENT
*
***********************************************************************
*
UCBIOSBA DS    A -                 ADDRESS OF IOSB.  SET BY IOS FOR
*                                  ERROR CONDITIONS.
UCBRV066 DS    A -                 RESERVED
*
***********************************************************************
*
*       UNIT CONTROL BLOCK EXTENSIONS
*
***********************************************************************
*
*             COMMON UCB EXTENSION
*
*        THIS EXTENSION IS POINTED TO BY THE UCBEXTPT FIELD IN THE
*        COMMON SEGMENT AND IS NOT CONTIGUOUS TO THE UCB.
*
UCBCMEXT DSECT , -
*
***********************************************************************
*
UCBETI   DS    FL1 -               A BINARY NUMBER USED BY THE EXIT
*                                  EFFECTOR ROUTINE TO COMPLETE THE
*                                  8-BYTE NAME OF AN IBM-SUPPLIED
*                                  ERROR ROUTINE FOR THIS DEVICE
UCBSTI   DS    FL1 -               INCREMENT WHICH, WHEN MULTIPLIED BY
*                                  10, BECOMES AN INDEX TO THE
*                                  STATISTICS TABLE (STATAB)
UCBDTI   DS    FL1 -               INDEX TO THE DEVICE TABLE
UCBATI   DS    FL1 -               INDEX TO THE ATTENTION TABLE (ANTAB)
*                                  OR OPTIONAL JOB ENTRY SUBSYSTEM
*                                  (JES) FLAG BYTE
UCBRSV04 EQU   X'80',,C'X' -       RESERVED
UCBRSV05 EQU   X'40',,C'X' -       RESERVED
UCBRSV06 EQU   X'20',,C'X' -       RESERVED
UCBRSV07 EQU   X'10',,C'X' -       RESERVED
UCBRSV08 EQU   X'08',,C'X' -       RESERVED
UCBRSV09 EQU   X'04',,C'X' -       RESERVED
UCBHALI  EQU   X'02' -             OPTIONAL JOB ENTRY SUBSYSTEM (JES)
*                                  ALLOCATION INDICATOR
UCBHPDV  EQU   X'01' -             OPTIONAL JOB ENTRY SUBSYSTEM (JES)
*                                  PSEUDO-DEVICE
UCBSNSCT DS    FL1 -               COUNT OF SENSE BYTES PRESENTED
*                                  BY THIS DEVICE
UCBFLP1  DS    B -                 FLAG BYTE
UCBNSRCH EQU   X'80' -             THE CURRENTLY ALLOCATED VOLUME WAS
*                                  SPECIFICALLY REQUESTED BY VOLUME
*                                  SERIAL NUMBER.  IT IS NOT AVAILABLE
*                                  FOR ASSIGNMENT BY OPEN/EOV FOR A
*                                  NON-SPECIFIC VOLUME REQUEST.
UCBSHRUP EQU   X'40' -             SHAREABLE WHEN IN UNIPROCESSOR MODE
*
UCBRV031 EQU   X'20',,C'X' -       RESERVED
UCBRV032 EQU   X'10',,C'X' -       RESERVED
UCBRV033 EQU   X'08',,C'X' -       RESERVED
UCBRV034 EQU   X'04',,C'X' -       RESERVED
UCBRV035 EQU   X'02',,C'X' -       RESERVED
UCBRV036 EQU   X'01',,C'X' -       RESERVED
UCBRV041 DS    CL2 -               RESERVED
UCBCCWOF DS    H -                 OFFSET TO CCW PREFIX
UCBPMSK  DS    BL2 -               PATH MASK FOR MESSAGES ISSUED
UCBMFCNT DS    H -                 MEASUREMENT FACILITIES TOTAL DEVICE
*                                  SIO COUNT.  DURING NIP UCB
*                                  INITIALIZATION, USED FOR PREVIOUSLY
*                                  TESTED INDICATOR.
UCBASID  DS    H -                 ASID OF THE MEMORY TO WHICH THIS
*                                  DEVICE IS ALLOCATED
UCBRV043 DS    CL1 -               RESERVED
UCBWTOID DS    CL3 -               WTO MESSAGE IDENTIFIER
*                                                                YM6828
*
***********************************************************************
*
*             MAGNETIC TAPE
*             UCB EXTENSION
*
*        THIS EXTENSION IS POINTED TO BY THE UCBXTN FIELD OF THE
*        UCB AND IS NOT CONTIGUOUS TO THE UCB.
*
UCBMT    DSECT , -                 UCBXTN -> UCBMT
*
***********************************************************************
*
UCBCTD   DS    H -                 SERIAL NUMBER IN BINARY OF TAPE
*                                  DRIVE UPON WHICH THE VOLUME WAS
*                                  CREATED
UCBTRT   DS    FL1 -               TEMPORARY READ ERROR THRESHOLD (IF
*                                  0, EVA IS NOT IN EFFECT).  A BINARY
*                                  NUMBER FROM 1 THROUGH 255 AS
*                                  SELECTED AT SYSGEN TIME ON THE
*                                  SCHEDULR MACRO BY EVA=(N1,N2) WHERE
*                                  N1 = TEMPORARY READ ERROR THRESHOLD.
*
UCBTWT   DS    FL1 -               TEMPORARY WRITE ERROR THRESHOLD (IF
*                                  0, EVA IS NOT IN EFFECT).  A BINARY
*                                  NUMBER FROM 1 THROUGH 255 AS
*                                  SELECTED AT SYSGEN TIME ON THE
*                                  SCHEDULR MACRO BY EVA=(N1,N2) WHERE
*                                  N2 = TEMPORARY WRITE ERROR
*                                  THRESHOLD.
UCBTR    DS    FL1 -               THE NUMBER (BINARY) OF TEMPORARY
*                                  READ ERRORS THAT HAVE OCCURRED
*
UCBTW    DS    FL1 -               THE NUMBER (BINARY) OF TEMPORARY
*                                  WRITE ERRORS THAT HAVE OCCURRED
*
UCBSIO   DS    H -                 THE NUMBER (BINARY) OF START I/O
*                                  OPERATIONS THAT HAVE OCCURRED
UCBPR    DS    FL1 -               THE NUMBER (BINARY) OF PERMANENT
*                                  READ ERRORS THAT HAVE OCCURRED
*
UCBPW    DS    FL1 -               THE NUMBER (BINARY) OF PERMANENT
*                                  WRITE ERRORS THAT HAVE OCCURRED
*
UCBNB    DS    FL1 -               THE NUMBER (BINARY) OF NOISE BLOCKS
*                                  THAT HAVE BEEN ENCOUNTERED
UCBMS    DS    CL1 -               MODE SET OPERATION CODE FOR DATA
*                                  BLOCKS ON A 3420 MAGNETIC TAPE UNIT
*
UCBERG   DS    H -                 THE NUMBER (BINARY) OF ERASE GAPS
*                                  THAT HAVE BEEN ENCOUNTERED
UCBCLN   DS    H -                 THE NUMBER (BINARY) OF CLEANER
*                                  ACTIONS THAT HAVE OCCURRED
*
***********************************************************************
*
*            OPTICAL CHARACTER READER (3886)
*            UCB EXTENSION
*
*        THIS EXTENSION IS POINTED TO BY THE UCBXTADR FIELD OF THE
*        UCB AND IS NOT CONTIGUOUS TO THE UCB.
*
UCBOCR   DSECT , -                 UCBXTADR -> UCBOCR
*
***********************************************************************
*
UCBFRID  DS    CL4 -               CURRENT FORMAT RECORD ID (FRID)
*                                  LOADED
UCBRDATA DS    XL4 -               COMMAND DATA
*
***********************************************************************
*
*            3540 DEVICE                                       @Z30OP9A
*            UCB EXTENSION                                     @Z30OP9A
*
*        THIS EXTENSION IS POINTED TO BY THE UCBXTADR FIELD OF THE
*        UCB AND IS NOT CONTIGUOUS TO THE UCB.                 @Z30OP9A
*
UCB3540X DSECT , -                 UCBXTADR -> UCB3540X
*                                                              @Z30OP9A
*
***********************************************************************
*
UCBVLSER DS    CL6 -               3540 VOLID
UCBDKBYT DS    B -                 FLAG BYTE
UCBDKAMX EQU   X'80' -             IBM-SUPPLIED DISKETTE READER,
*                                  DISKETTE WRITER OR COPY/RESTORE
*                                  UTILITIES ARE USING THIS 3540
*                                  DEVICE
UCBVLVER EQU   X'40' -             VOLUME VERIFICATION IS REQUIRED FOR
*                                  CERTAIN INTERVENTION REQUIRED
*                                  CONDITIONS WHILE 3540 DISKETTE
*                                  UTILITIES ARE USING THE DEVICE
*
UCBRV067 EQU   X'20',,C'X' -       RESERVED                    @Z30OP9A
UCBRV068 EQU   X'10',,C'X' -       RESERVED                    @Z30OP9A
UCBRV069 EQU   X'08',,C'X' -       RESERVED                    @Z30OP9A
UCBRV070 EQU   X'04',,C'X' -       RESERVED                    @Z30OP9A
UCBRV071 EQU   X'02',,C'X' -       RESERVED                    @Z30OP9A
UCBRV072 EQU   X'01',,C'X' -       RESERVED                    @Z30OP9A
UCBRV073 DS    C -                 RESERVED                    @Z30OP9A
*
***********************************************************************
*
*              UNIT RECORD WITH
*              UNIVERSAL CHARACTER SET (1403, 3211)
*              UCB EXTENSION
*
*        THIS EXTENSION IS POINTED TO BY THE UCBXTADR FIELD OF THE
*        UCB AND IS NOT CONTIGUOUS TO THE UCB.
*
UCBUCS   DSECT , -                 UCBXTADR -> UCBUCS
*
***********************************************************************
*
UCBUCSID DS    CL4 -               UCS IMAGE IDENTIFICATION IN BUFFER
UCBUCSOP DS    B -                 FORMAT OF UCS IMAGE IN BUFFER
*                                  (O FOR OPTION)
UCBUCSO1 EQU   X'80' -             UCS IMAGE IS A DEFAULT IMAGE
UCBUCSO2 EQU   X'40' -             UCS IMAGE IS IN FOLD MODE
UCBRSV39 EQU   X'20',,C'X' -       RESERVED
UCBRSV40 EQU   X'10',,C'X' -       RESERVED
UCBRSV41 EQU   X'08',,C'X' -       RESERVED
UCBRSV42 EQU   X'04',,C'X' -       RESERVED
UCBRSV43 EQU   X'02',,C'X' -       RESERVED
UCBUCSPE EQU   X'01' -             UCS IMAGE HAS PARITY ERROR (3211)
UCBFCBOP DS    B -                 RESERVED (1403) OR FCB OPTIONS
*                                  (3211) (O FOR OPTION)
UCBFCBO1 EQU   X'80' -             FCB IMAGE IS A DEFAULT IMAGE
UCBRSV44 EQU   X'40',,C'X' -       RESERVED
UCBRSV45 EQU   X'20',,C'X' -       RESERVED
UCBRSV46 EQU   X'10',,C'X' -       RESERVED
UCBRSV47 EQU   X'08',,C'X' -       RESERVED
UCBRSV48 EQU   X'04',,C'X' -       RESERVED
UCBRSV49 EQU   X'02',,C'X' -       RESERVED
UCBRSV50 EQU   X'01',,C'X' -       RESERVED
UCBRSV51 DS    X -                 RESERVED
UCBERCNT DS    FL1 -               CONTAINS A COUNT OF THE ERRORS THAT
*                                  HAVE OCCURRED.  THE COUNT, WHICH MAY
*                                  WRAP AROUND, IS WRITTEN IN STANDARD
*                                  OBR RECORDS (ONE PER ERROR) AND IN
*                                  NEW DEVICE-DEPENDENT OBR RECORDS (0
*                                  TO 3 PER ERROR) AND SERVE TO RELATE
*                                  TO EACH OTHER THE STANDARD AND
*                                  DEVICE-DEPENDENT OBR RECORDS THAT
*                                  PERTAIN TO EACH ERROR  (3211)
UCBFCBID DS    CL4 -               THE FCB IMAGE IDENTIFICATION
UCBERADR DS    A -                 THE ADDRESS OF THE ERP LOGOUT AREA
         MEND
./ ADD NAME=XPRNT    0100-02135-02135-1228-00004-00004-00000-VBCMACS
         MACRO
&LABEL   XPRNT &IOAREA
&LABEL   CALL  XPRNT,(&IOAREA)
         MEND
./ ADD NAME=XREAD    0100-02135-02135-1228-00004-00004-00000-VBCMACS
         MACRO
&LABEL   XREAD &IOAREA
&LABEL   CALL  XREAD,(&IOAREA)
         MEND
