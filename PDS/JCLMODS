         TITLE '*** JCLMODS: MODIFY LINK JCL/CONTROL  ***'
JCLMODS CSECT
*********************************************************************
* READS A FILE OF LINKEDIT JCL AND CONTROL STATEMENTS PREPARED      *
* BY RUNNING THE PDS UTILITY IN BATCH AND WRITING ITS SYSTSPRT      *
* OUTPUT TO A RECFM-FB,LRECL=80 DATASET. PROCESSING IS AS FOLLOWS:  *
* A. SHIFT ALL INPUT RECORDS LEFT 1 BYTE TO ELIMINATE CARRIAGE      *
*    CONTROL.                                                       *
* B. READ AND DROP DATA RECORDS UNTIL THE //       PARM='           *
*    1. USE THE PARM DATA TO DETERMINE THE OUTPUT DATASET:          *
*       A. 'NCAL,MAP,LIST,LET'                                      *
*       B. 'NCAL,MAP,LIST,LET,OVLY'                                 *
*       C. 'NCAL,MAP,LIST,LET,REUS'                                 *
*       D. 'NCAL,MAP,LIST,LET,TEST'                                 *
*       E. 'NCAL,MAP,LIST,LET,RENT,REUS'                            *
*       F. 'NCAL,MAP,LIST,LET,RENT,REUS,REFR'                       *
*       G. ALL OTHER PARM VALUES                                    *
* C. READ AND DROP THE //SYSUT1, //SYSPRINT, //SYSLIB, //SYSLMOD,   *
*    AND //SYSLIN DD STATEMENTS.                                    *
* D. WRITE TO FILE A-F AS DETERMINED IN B.1. ABOVE:                 *
*    1. INCLUDE CTLLIB(REPLACES)                                    *
*    2. ALL CONTROL STATEMENTS UNTIL A BLANK LINE IS READ           *
* E. REPEAT STEPS A-E UNTIL END OF FILE.                            *
* F. CLOSE OUTPUT FILES AND EXIT                                    *
*                                                                   *
* AUTHOR R THORNTON APRIL 2001                                      *
*********************************************************************
*
*********************************************************************
*        SAVE REGISTERS, SET UP BASE REGS, CHAIN SAVE AREAS         *
*********************************************************************
         USING JCLMODS,R3,R4
         STM   R14,R12,12(R13)         SAVE CALLER'S REGS
         LR    R3,R15                  SET UP BASE FIRST BASE REG
         LA    R4,4095(R3)             SET UP SECOND
         LA    R4,1(R4)                    BASE REGISTER
         LA    R15,MYSAVE              POINT TO MY REGISTER SAVE AREA
         ST    R15,8(R13)              SET LSA IN CALLER'S SAVE
         ST    R13,4(R15)              SET HSA IN MY SAVE AREA
         LR    R13,R15                 SET UP SAVE AREA POINTER
         B     OPENS                   BRANCH AROUND CONSTANTS
         DC    CL8'JCLMODS'            PROGRAM NAME IDENTIFIER
         DC    CL8'&SYSDATE'           ASSEMBLY DATE
         DC    CL8'&SYSTIME'           ASSEMBLY TIME
MYSAVE   DS    18F                     MY REGISTER SAVE AREA
*********************************************************************
*        OPEN FILES, GET CONTROL RECORD ARRAY STORAGE               *
*********************************************************************
OPENS    OPEN  (OUTPUTA,OUTPUT,OUTPUTB,OUTPUT,OUTPUTC,OUTPUT)
         OPEN  (OUTPUTD,OUTPUT,OUTPUTE,OUTPUT,OUTPUTF,OUTPUT)
         OPEN  (SYSPRINT,OUTPUT,LINKDATA)
         STORAGE OBTAIN,LENGTH=80000 GET CONTROL RECORD STORAGE
         ST    R1,CNTLTBLA         SAVE ITS ADDRESS
         A     R1,CNTLEND          COMPUTE END ADDRESS
         ST    R1,CNTLEND          SAVE END ADDRESS
*********************************************************************
*             MAINLINE ROUTINE                                      *
*********************************************************************
MAINLINE BAS   R9,GETIN                READ INPUT RECORD
         CLC   LINKCOL1(7),=CL7'** MAP ' IS IT THE MAP HEADER?
         BNE   MAINLINE                NO, SKIP IT
         CLC   MEMBER,LINKCOL1+12      MEMBER NAMES ASCEND?
         BNL   EOJ                     NO, END OF VALID DATA
         MVC   MEMBER,LINKCOL1+12      YES, SAVE THE MEMBER NAME
         TRT   MEMBER(1),VALCHAR       FIRST CHARACTER VALID?
         BNZ   EOJ                     NO, PAST GOOD DATA
         CLI   MEMBER,C'Z'             FIRST CHARACTER MUST BE ALFA
         BH    EOJ                     NO, PAST GOOD DATA
         LA    R1,7                    MAX LENGTH CODE
         LA    R15,MEMBER+7            POINT TO LAST NAME CHARACTER
SCANLEFT CLI   0(R15),C' '             CHARACTER IS BLANK?
         BNE   CHKVAL                  NO
         BCTR  R15,0                   BACK UP 1 IN MEMBER NAME
         BCT   R1,SCANLEFT             LOOP TO FIND RHE
CHKVAL   EX    R1,EXTRT                CHECK VALID NAME
         BNZ   EOJ                     NO, PAST VALID MEMBERS
         BAS   R9,GETIN                READ INPUT RECORD
         CLC   LINKCOL1(7),=CL7'//LKED ' THIS START OF LINK JCL?
         BE    READPARM                YES
         MVC   PRTERR,MISSLKED         NO, MOVE IN ERROR MESSAGE
         BAL   R9,PRINT                GO PRINT THE ERROR
         MVI   RC,8                    SET RC=8
         B     MAINLINE                GO TO NEXT MEMBER
READPARM BAS   R9,GETIN                READ PARM='... RECORD
         CLC   LINKCOL1(15),=CL15'//       PARM=''' IS IT PARM?
         BE    GOTPARM                 YES
         MVC   PRTERR,MISSPARM         NO, MOVE IN ERROR MESSAGE
         BAL   R9,PRINT                GO PRINT THE ERROR
         MVI   RC,8                    SET RC=8
         B     MAINLINE                GO TO NEXT MEMBER
EXTRT    TRT   MEMBER(1),VALCHAR       EXECUTED TRT
GOTPARM  LA    R12,OUTPUTA             ASSUME OUTPUTA
         CLC   LINKCOL1+15(17),=CL17'NCAL,MAP,LIST,LET' VALID START?
         BNE   BADPARM                 NO, USE FILE G
         CLC   LINKCOL1+32(2),=CL2''' ' OK FOR FILE A?
         BE    SAVEDCBA                YES
         LA    R12,OUTPUTB             ASSUME OUTPUTB
         CLC   LINKCOL1+32(7),=CL7',OVLY'' ' OK FOR FILE B?
         BE    SAVEDCBA                YES
         LA    R12,OUTPUTC             ASSUME OUTPUTC
         CLC   LINKCOL1+32(7),=CL7',REUS'' ' OK FOR FILE C?
         BE    SAVEDCBA                YES
         LA    R12,OUTPUTD             ASSUME OUTPUTD
         CLC   LINKCOL1+32(7),=CL7',TEST'' ' OK FOR FILE D?
         BE    SAVEDCBA                YES
         LA    R12,OUTPUTE             ASSUME OUTPUTE
         CLC   LINKCOL1+32(12),=CL12',RENT,REUS'' ' OK FOR FILE E?
         BE    SAVEDCBA                YES
         LA    R12,OUTPUTF             ASSUME OUTPUTF
         CLC   LINKCOL1+32(17),=CL17',RENT,REUS,REFR'' ' OK FILE F?
         BE    SAVEDCBA                YES
BADPARM  MVC   PRTERR,UNKNPARM         NO, MOVE IN ERROR MESSAGE
         BAL   R9,PRINT                GO PRINT THE ERROR
         MVI   RC,8                    SET RC=8
         B     MAINLINE                GO TO NEXT MEMBER
SAVEDCBA ST    R12,DCBADDR             SAVE DCB ADDRESS
SKIP1    BAL   R9,GETIN                GET NEXT INPUT RECORD
         CLC   LINKCOL1(9),=CL9'//SYSUT1 ' GOT SYSUT1?
         BE    SKIP2                   YES, SKIP IT
         MVC   PRTERR,MISSUT1          NO, MOVE IN ERROR MESSAGE
         BAL   R9,PRINT                GO PRINT THE ERROR
         MVI   RC,8                    SET RC=8
         B     MAINLINE                GO TO NEXT MEMBER
SKIP2    BAL   R9,GETIN                READ //SYSPRINT DD
         CLC   LINKCOL1(11),=CL11'//SYSPRINT ' IS IT //SYSPRINT?
         BE    SKIP3                   YES
         MVC   PRTERR,MISSYSPR         NO, MOVE IN ERROR MESSAGE
         BAL   R9,PRINT                GO PRINT THE ERROR
         MVI   RC,8                    SET RC=8
         B     MAINLINE                GO TO NEXT MEMBER
SKIP3    BAL   R9,GETIN                READ //SYSLIB DD
         CLC   LINKCOL1(9),=CL9'//SYSLIB ' IS IT THE //SYSLIB?
         BE    SKIP4                   YES
         MVC   PRTERR,MISSLIB          NO, MOVE IN ERROR MESSAGE
         BAL   R9,PRINT                GO PRINT THE ERROR
         MVI   RC,8                    SET RC=8
         B     MAINLINE                GO TO NEXT MEMBER
SKIP4    BAL   R9,GETIN                READ THE //SYSLMOD DD
         CLC   LINKCOL1(10),=CL10'//SYSLMOD ' IS IT THE //SYSLMOD?
         BE    SKIP5                   YES
         MVC   PRTERR,MISSMOD          NO, MOVE IN ERROR MESSAGE
         BAL   R9,PRINT                GO PRINT THE ERROR
         MVI   RC,8                    SET RC=8
         B     MAINLINE                GO TO NEXT MEMBER
SKIP5    BAL   R9,GETIN                READ THE //SYSLIN DD
         CLC   LINKCOL1(9),=CL9'//SYSLIN ' IS IT THE //SYSLIN?
         BE    STRTCNTL                YES
         MVC   PRTERR,MISSLIN          NO, MOVE IN ERROR MESSAGE
         BAL   R9,PRINT                GO PRINT THE ERROR
         MVI   RC,8                    SET RC=8
         B     MAINLINE                GO TO NEXT MEMBER
STRTCNTL L     R1,CNTLTBLA       SET CONTROL STMT TBL PTR
         ST    R1,CURRCNTL             SET CONTROL STMT TBL PTR
         MVI   0(R1),X'FF'             SET CONTROL STMT TBL PTR
         L     R1,MODTBLA              INITIALIZE
         ST    R1,CURRMOD                   MODULE NAME
         MVI   0(R1),X'FF'                     TABLE
         AP    OUTCNT,=P'1'            ADD 1 TO OUTPUT COUNTER
         MVI   ENDCTL,0                RESET END SWITCH
         MVI   HASOPD,0                RESET IGZEOPD SWITCH
READCNTL BAL   R9,GETIN                READ NEXT LINKEDIT CONTROL STMT
         CLC   LINKCOL1(9),=CL9' INCLUDE ' INCLUDE STATEMENT?
         BE    SAVECNTL                YES
         CLC   LINKCOL1(7),=CL7' ORDER ' ORDER STATEMENT?
         BNE   CHKMODE                 NO
         BAL   R9,SCANORDR             YES
         CLI   DROPORDR,1              DROP THE ORDER STATEMENT?
         BE    READCNTL                YES
         B     SAVECNTL                NO, SAVE THE STATEMENT
CHKMODE  CLC   LINKCOL1(6),=CL6' MODE ' MODE STATEMENT?
         BE    SAVECNTL                YES
         CLC   LINKCOL1(7),=CL7' ENTRY ' ENTRY STATEMENT?
         BE    SAVECNTL                YES
         CLC   LINKCOL1(6),=CL9' NAME ' NAME STATEMENT?
         BNE   CHKSTCD                 NO
         MVI   ENDCTL,1                SET END SWITCH
         B     SAVECNTL                YES
CHKSTCD  CLC   LINKCOL1(9),=CL9' SETCODE ' SETCODE STATEMENT?
         BE    SAVECNTL                YES
         CLC   LINKCOL1(8),=CL8' INSERT ' INSERT STATEMENT?
         BE    SAVECNTL                YES
         CLC   LINKCOL1(9),=CL9' OVERLAY ' OVERLAY STATEMENT?
         BE    SAVECNTL                YES
BADCNTL  MVC   PRTERR,BADLKCTL         NO, MOVE IN ERROR MESSAGE
         BAL   R9,PRINT                GO PRINT THE ERROR
         MVI   RC,8                    SET RC=8
         MVC   PRTERR,LINKCOL1         PRINT THE INPUT STATEMENT,
         BAL   R9,PRINT0                 AS WELL
         B     MAINLINE                GO TO NEXT MEMBER
SAVECNTL L     R1,CURRCNTL             POINT TO CONTROL STATEMENT TABLE
         C     R1,CNTLEND              PAST END OF TABLE?
         BNL   TOOMNYCT                YES, ERROR
         MVC   0(80,R1),LINKCOL1       SAVE THIS INPUT RECORD
         LA    R1,80(R1)               ADVANCE TO NEXT TBL ENTRY
         MVI   0(R1),X'FF'             SET TABLE END
         ST    R1,CURRCNTL             UPDATE CURRENT TBL ADDR
         CLI   ENDCTL,1                END OF CONTROL STATEMENTS?
         BNE   READCNTL                LOOP THRU ALL CONTROL
         BAL   R9,PROCESS              YES
         B     MAINLINE                LOOP THRU ALL CONTROL
TOOMNYCT MVC   PRTERR,TBFULLC          TABLE FULL ERROR MESSAGE
         BAL   R9,PRINT                GO PRINT THE ERROR
         MVI   RC,8                    SET RC=8
         B     MAINLINE                GO TO NEXT MEMBER
*********************************************************************
* READ NEXT RECORD FROM THE LINKDATA FILE                           *
*********************************************************************
PROCESS  ST    R9,PR9                  SAVE RETURN ADDRESS
         CLI   HASOPD,1                MODULE CONTAINS IGZEOPD?
         BNE   INCLMODS                NO
         MVC   OUTREC,REPLEOPD         YES, INSERT REPLACE IGZEOPD
         BAL   R9,PUTOUT               WRITE IT TO OUTPUT FILE
INCLMODS L     R12,MODTBLA             POINT TO MODULE NAME TABLE
MODSEND  CLI   0(R12),X'FF'            END OF MODULE TABLE?
         BE    WRTSTMTS                YES
         MVC   OUTREC+1(15),=CL15'INCLUDE LEMODS('
         MVC   OUTREC+16(8),0(R12)     MODULE NAME TO OUTREC
         CLI   OUTREC+23,C' '          7-CHARACTER NAME?
         BE    SET7PRN                 YES
         MVI   OUTREC+24,C')'          NO, 8-BYTE NAME
         B     WRTMODN                 CONTINUE
SET7PRN  MVI   OUTREC+23,C')'          SET END OF 7-BYTE NAME
WRTMODN  BAL   R9,PUTOUT               GO WRITE THE MODULE INCLUDE
         LA    R12,8(R12)              STEP TO NEXT MODULE NAME
         B     MODSEND                 LOOP THRU ALL NAMES IN TABLE
WRTSTMTS L     R12,CNTLTBLA            POINT TO 1ST CONTROL STATEMENT
CSEND    CLI   0(R12),X'FF'            END OF CONTROL STATEMENTS?
         BE    PRXIT                   YES, ALL THRU
         MVC   OUTREC,0(R12)           MOVE STATEMENT TO OUTREC
         BAL   R9,PUTOUT               WRITE TO OUTPUT FILE
         LA    R12,80(R12)             ADVANCE TO NEXT STATEMENT
         B     CSEND                   LOOP TO WRITE ALL CTL STMTS
PRXIT    L     R9,PR9                  GET RETURN ADDRESS
         BR    R9                      EXIT
*********************************************************************
* READ NEXT RECORD FROM THE LINKDATA FILE                           *
*********************************************************************
GETIN    GET   LINKDATA,LINKREC        READ NEXT RECORD
         MVC   LINKCL72,BLANKS         CLEAR OVERFLOW FOR SCANS
         AP    INPCOUNT,=P'1'          INCREMENT COUNTER
         BR    R9                      RETURN TO CALLER
*********************************************************************
*             WRITE OUTPUT RECORD SUBROUTINE                        *
*********************************************************************
PUTOUT   ST    R9,PO9                  SAVE RETURN ADDRESS
         L     R9,DCBADDR              POINT TO THE DCB FOR OUTPUT
         PUT   0(R9),OUTREC            WRITE OUTPUT RECORD
         MVC   OUTREC,BLANKS           CLEAR OUTPUT RECORD AREA
         L     R9,PO9                  GET RETURN ADDRESS
         BR    R9                      RETURN TO CALLER
*********************************************************************
*             PRINT SUBROUTINE                                      *
*********************************************************************
PRINT    MVC   PRTMEM,MEMBER           MEMBER NAME TO PRINT LINE
         MVC   PRTNBR,=X'40206B2020206B202021' EDIT WORD
         ED    PRTNBR,INPCOUNT         EDIT INPUT LINE NBR TO PRINT
PRINT0   PUT   SYSPRINT,PRTLINE        WRITE PRINT LINE
         MVC   PRTLINE,BLANKS          CLEAR PRINT LINE
         BR    R9                      RETURN
*********************************************************************
* ORDER STATEMENT SCAN ROUTINE. THE INPUT RECORD IS SCANNED FOR THE *
* LETTER "I". WHEN FOUND, THE ADDRESS OF THE LETTER "I" IS PUT IN   *
* R10, AND THE SEARCH ROUTINE IS PERFORMED TO SEE IF AN IGZ... OR AN*
* ILBO... NAME HAS BEEN FOUND. IF A MATCHING TABLE ENTRY WAS FOUND, *
* THE NAME IS CHECKED FOR IGZEOPD. IF NOT IGZEOPD, THE NAME IS ADDED*
* TO THE MODTABLE. IF IGZEOPD IS FOUND, A SWITCH IS SET SHOWING THAT*
* IT WAS FOUND, AND THE NAME IS ERASED FROM THE ORDER STATEMENT.    *
*********************************************************************
SCANORDR ST    R9,SO9                  SAVE RETURN ADDRESS
         MVI   DROPORDR,0              CLEAR DROP SWITCH
         LA    R10,LINKCOL1+6          POINT PAST "ORDER"
SOSCAN   TRT   0(64,R10),TRTI          LOOK FOR A LETTER "I"
         BZ    SOXIT                   NOT FOUND, EXIT
         LR    R10,R1                  COPY THE "I"'S ADDRESS
         BAL   R9,SEARCH               GO SEARCH FOR MODULE NAME
         CLI   FOUND,1                 FOUND A NAME?
         BE    SOCHKNM                 YES
         CLI   IGZILB,1                NO, WAS IT AN IGZ/ILB?
         BNE   SOSTEP                  NO
         MVC   NOTENAME,0(R10)         IGZ/ILB NAME TO PRINT LINE
         MVC   PRTERR,NOTEMSG          NOTE TO PRINT LINE
         BAL   R9,PRINT                GO PRINT THE NOTE
SOSTEP   LA    R10,1(R10)              STEP PAST THE "I"
         B     SOSCAN                  CONTINUE SCAN
SOCHKNM  CLC   0(7,R10),=CL8'IGZEOPD'  IS IT IGZEOPD?
         BNE   SOPUTIN                 NO
         MVI   HASOPD,1                YES, SHOW MODULE CONTAINS IT
         MVC   0(64,R10),8(R10)        ERASE IGZEOPD FROM THE ORDER
         CLI   0(R10),C' '             DID ANYTHING FOLLOW IGZEOPD?
         BNE   SOSCAN                  YES
         LR    R1,R10                  POINT TO
         BCTR  R1,0                       PRECEDING BYTE
         CLI   0(R1),C','              PRECEDING BYTE IS A COMMA?
         BNE   SONOTCMA                NO
         MVI   0(R1),C' '              YES, BLANK IT OUT
         B     SOSCAN                  CONTINUE SCAN
SONOTCMA CLC   LINKCOL1+8(64),BLANKS   ANY OPERANDS LEFT ON STMT?
         BNE   SOSCAN                  YES
         MVI   DROPORDR,1              NO, SET DROP SWITCH
         B     SOSCAN                  CONTINUE SCAN
SOPUTIN  L     R1,CURRMOD              POINT TO CURRENT MOD NAME ENTRY
         C     R1,MODENDA              PAST END OF TABLE?
         BNL   SOOVER                  YES, ERROR
         MVC   0(8,R1),0(R10)          MODULE NAME TO TABLE
         CLI   7(R1),C','              8-BYTE NAME?
         BNE   SOUPD                   YES
         MVI   7(R1),C' '              NO, WIPE FOLLOWING COMMA
SOUPD    LA    R1,8(R1)                STEP TO NEXT ENTRY
         ST    R1,CURRMOD              UPDATE CURRENT TBL ADDR
         MVI   0(R1),X'FF'             SET NEW TBL END BYTE
         LA    R10,8(R10)              ADVANCE TO NEXT LOC
         B     SOSCAN                  CONTINUE SCANNING
SOOVER   MVC   PRTERR,TBFULLM          TABLE FULL ERROR MESSAGE
         BAL   R9,PRINT                GO PRINT THE ERROR
         MVI   RC,8                    SET RC=8
         B     MAINLINE                GO TO NEXT MEMBER
SOXIT    L     R9,SO9                  GET RETURN ADDRESS
         BR    R9                      EXIT
*********************************************************************
* TABLE SEARCH ROUTINE. ON ENTRY, R9 IS THE RETURN ADDRESS, AND R10 *
* IS THE ADDRESS OF A LETTER "I" WHICH WAS FOUND IN THE LINKREC AREA*
* BY A TRT SCAN. THIS ROUTINE FIRST CHECKS TO SEE IF THE LETTER "I" *
* IS A 7 OR 8 BYTE WORD DELIMITED BY BLANKS OR COMMAS. IF IT IS, AND*
* IT BEGINS WITH THE LETTERS "IGZ" OR "ILBO", A TABLE IS SEARCHED.  *
* IF A MATCH IS FOUND, THE FOUND SWITCH IS SET TO 1, OTHERWISE IT   *
* IS SET TO 0.                                                      *
*********************************************************************
SEARCH   STM   R9,R11,SCHSAVE          SAVE REGS
         MVI   FOUND,0                 ASSUME NOT FOUND
         MVI   IGZILB,0                CLEAR SWITCH
         LA    R9,7                    ASSUME 7-BYTE WORD
         CLI   7(R10),C' '             IS IT 7-BYTES?
         BE    SCHCKPRE                YES
         CLI   7(R10),C','             IS IT 7-BYTES?
         BE    SCHCKPRE                YES
         LA    R9,8                    ASSUME 8-BYTE WORD
         CLI   8(R10),C' '             IS IT AN 8-BYTE WORD?
         BE    SCHCKPRE                YES
         CLI   8(R10),C','             IS IT AN 8-BYTE WORD?
         BNE   SCHXIT                  NO, RETURN WITH NOT FOUND
SCHCKPRE BCTR  R10,0                   BACK UP 1 BYTE BEFORE THE "I"
         CLI   0(R10),C' '             WORD IS PRECEDED BY BLANK?
         BE    SCHCKPFX                YES
         CLI   0(R10),C','             NO, PRECEDED BY COMMA?
         BNE   SCHXIT                  NO, EXIT W/ NOT FOUND
SCHCKPFX CLC   1(3,R10),=CL3'IGZ'      IS IT AN IGZ NAME?
         BNE   CHKILBO                 NO
         MVI   IGZILB,1                INDICATE IGZ/ILBO FOUND
         SH    R9,=H'4'                SET ARGUMENT LENGTH CODE
         LA    R10,4(R10)              SET ARGUMENT ADDRESS
         L     R11,IGZTBL4A            ASSUME 4 BYTE TABLE
         CH    R9,=H'3'                IS IT 7 BYTES?
         BE    SRCHTABL                YES
         L     R11,IGZTBL5A            SET UP 5 BYTE TABLE
         B     SRCHTABL                GO  SEARCH TABLE
CHKILBO  CLC   1(4,R10),=CL4'ILBO'     IS IT AN ILBO NAME?
         BNE   SCHXIT                  NO, RETURN W/ NOT FOUND
         MVI   IGZILB,1                INDICATE IGZ/ILBO FOUND
         SH    R9,=H'5'                SET ARGUMENT LENGTH CODE
         LA    R10,5(R10)              SET ARGUMENT ADDRESS
         L     R11,ILBTBL3A            ASSUME 3 BYTE TABLE
         CH    R9,=H'2'                IS IT 7 BYTES?
         BE    SRCHTABL                YES
         L     R11,ILBTBL4A            SET UP 4 BYTE TABLE
SRCHTABL CLI   0(R11),X'FF'            END OF TABLE?
         BE    SCHXIT                  YES, NOT FOUND
         EX    R9,SRCHCMPR             ARG = TBL?
         BH    SCHXIT                  NOT FOUND IF TBL HIGH
         BE    SCHFND                  BRANCH IF EQUAL
         LA    R11,1(R9,R11)           STEP TO NEXT TABLE ENTRY
         B     SRCHTABL                CONTINUE SEARCH
SCHFND   MVI   FOUND,1                 FOUND EQUAL, SET FOUND SWITCH
SCHXIT   LM    R9,R11,SCHSAVE          RESTORE REGS USED
         BR    R9                      RETURN
SRCHCMPR CLC   0(1,R11),0(R10)         TABLE:ARG (EXECUTED INST)
*********************************************************************
*             END OF JOB                                            *
*********************************************************************
EOJ      ZAP   INPCOUNT,OUTCNT         SET OUTPUT COUNT TO NBR MBRS
         MVC   MEMBER,=CL8'TOTAL'      IDENTIFY COUNTER
         MVC   PRTERR,EOJMSG           MOVE MESSAGE
         BAL   R9,PRINT                PRINT EOJ MESSAGE
         CLOSE (OUTPUTA,,OUTPUTB,,OUTPUTC) CLOSE
         CLOSE (OUTPUTD,,OUTPUTE,,OUTPUTF)  FILES
         CLOSE (SYSPRINT,,LINKDATA)
         L     R13,4(R13)              POINT TO CALLER'S SAVE AREA
         LM    R14,R12,12(R13)         RESTORE RETURN REG: R14
         LA    R15,0                   SET RETURN CODE
         ORG   *-1
RC       DC    X'00'                   RETURN CODE
         ORG
         BR    R14                     RETURN
*********************************************************************
*        STORAGE AND FILE AREAS                                     *
*********************************************************************
*
DBLWD    DS    D                       DOUBLEWORD WORK AREA
DCBADDR  DC    A(0)                    ADDRESS OF OUTPUT DCB
SCHSAVE  DS    3F                      SAVE AREA FOR SEARCH ROUTINE
PO9      DC    A(0)                    PUTOUT ROUTINE EXIT ADDRESS
PR9      DC    A(0)                    PROCESS ROUTINE EXIT ADDRESS
SO9      DC    A(0)                    SCANORDR RETURN ADDRESS
CURRMOD  DC    A(0)                    CURRENT MODULE NAME
MODTBLA  DC    A(MODTABLE)             MODULE NAME TABLE ADDRESS
MODENDA  DC    A(MODTBEND)             MODULE NAME TABLE END ADDRESS
IGZTBL4A DC    A(IGZTBL4)              ADDRESS OF IGZTBL4
IGZTBL5A DC    A(IGZTBL5)              ADDRESS OF IGZTBL5
ILBTBL3A DC    A(ILBOTBL3)             ADDRESS OF ILBOTBL3
ILBTBL4A DC    A(ILBOTBL4)             ADDRESS OF ILBOTBL4
CNTLTBLA DC    A(0)                    ADDRESS OF CONTROL RECORD ARRAY
CNTLEND  DC    F'80000'                END OF CONTROL ARRAY
CURRCNTL DC    A(0)                    CURRENT CONTROL ARRAY ADDR
MEMBER   DC    CL8' '                  CURRENT MEMBER NAME
INPCOUNT DC    PL4'0'                  INPUT RECORD COUNTER
OUTCNT   DC    PL4'0'                  OUTPUT MEMBER COUNTER
BLANKS   DC    CL133' '                BLANKS
FOUND    DC    X'00'                   FOUND SWITCH (0=NOT FOUND)
IGZILB   DC    X'00'                   FOUND IGZ... OR ILBO... NAME
ENDCTL   DC    X'00'                   END OF CONTROL STATEMENTS
HASOPD   DC    X'00'                   1=MODULE CONTAINS IGZEOPD
DROPORDR DC    X'00'                   1=DROP THIS ORDER STATEMENT
*
PRTLINE  DS    0CL80                   PRINT LINE
PRTMEM   DS    CL8                       MEMBER NAME
         DC    CL1' '
PRTNBR   DS    CL10                      INPUT LINE NUMBER
         DC    CL1' '
PRTERR   DC    CL60' '                   ERROR MESSAGE TEXT
*
TBFULLC  DC    CL60'OVER 1,000 CONTROL STATEMENTS, DROPPED MEMBER'
EOJMSG   DC    CL60'MEMBERS WRITTEN TO OUTPUT FILES'
MISSPARM DC    CL60'MISSING PARM= JCL STATEMENT, DROPPED MEMBER'
MISSLKED DC    CL60'MISSING //LKED EXEC JCL STATEMENT, DROPPED MEMBER'
UNKNPARM DC    CL60'UNRECOGNIZED PARM ON EXEC, DROPPED MEMBER'
MISSUT1  DC    CL60'MISSING //SYSUT1 DD STATEMENT, DROPPED MEMBER'
MISSYSPR DC    CL60'MISSING //SYSPRINT DD STATEMENT, DROPPED MEMBER'
MISSLIB  DC    CL60'MISSING //SYSLIB DD STATEMENT, DROPPED MEMBER'
MISSMOD  DC    CL60'MISSING //SYSLMOD DD STATEMENT, DROPPED MEMBER'
MISSLIN  DC    CL60'MISSING //SYSLIN DD STATEMENT, DROPPED MEMBER'
BADLKCTL DC    CL41'BAD LINKEDIT CONTROL STATEMENT, PARTIALLY'
         DC    CL19' WRITTEN MEMBER'
TBFULLM  DC    CL41'OVER 300 COBOL LIBRARY NAMES, PARTIALLY W'
         DC    CL19'RITTEN MEMBER'
NOTEMSG  DC    CL39'THE FOLLOWING IGZ/ILB ROUTINE IS NOT IN'
         DC    CL12' THE TABLE: '
NOTENAME DC    CL8' '
         DC    CL1' '
*
LINKREC  DS    0CL80                    INPUT RECORD
         DS    CL1                        CARRIAGE CONTROL
LINKCOL1 DS    CL1                          STATEMENT COLUMN 1
         DS    CL70
LINKCL72 DC    CL100' '                 OVERFLOW AREA FOR SCANS
*
OUTREC   DC    CL80' '                    OUTPUT RECORD
*
REPLEOPD DC    CL80' REPLACE IGZEOPD'
*
VALCHAR  DC    256X'FF'                SCAN FOR INVALID NAME CHARACTERS
         ORG   VALCHAR+C'@'
         DC    X'00'                   @ IS OK
         ORG   VALCHAR+C'#'
         DC    X'00'                   # IS OK
         ORG   VALCHAR+C'$'
         DC    X'00'                   $ IS OK
         ORG   VALCHAR+C'A'
         DC    9X'00'                  A-I ARE OK
         ORG   VALCHAR+C'J'
         DC    9X'00'                  J-R ARE OK
         ORG   VALCHAR+C'S'
         DC    8X'00'                  S-Z ARE OK
         ORG   VALCHAR+C'0'
         DC    10X'00'                 0-9 ARE OK
         ORG
*
TRTI     DC    256X'00'      SCAN FOR THE LETTER "I"
         ORG   TRTI+C'I'
         DC    X'FF'         STOP ON "I"
         ORG
*
*********************************************************************
*             DCB'S                                                 *
*********************************************************************
OUTPUTA  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUTA,                       X
               RECFM=FB,LRECL=80
OUTPUTB  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUTB,                       X
               RECFM=FB,LRECL=80
OUTPUTC  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUTC,                       X
               RECFM=FB,LRECL=80
OUTPUTD  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUTD,                       X
               RECFM=FB,LRECL=80
OUTPUTE  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUTE,                       X
               RECFM=FB,LRECL=80
OUTPUTF  DCB   DSORG=PS,MACRF=PM,DDNAME=OUTPUTF,                       X
               RECFM=FB,LRECL=80
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               RECFM=FB,LRECL=80
LINKDATA DCB   DSORG=PS,MACRF=GM,DDNAME=LINKDATA,EODAD=EOJ,            X
               RECFM=FB,LRECL=80
         LTORG
JCLMODS CSECT
*********************************************************************
*             TABLES                                                *
*********************************************************************
IGZTBL4  DC    CL4'CACP'
         DC    CL4'CACS'
         DC    CL4'CANE'
         DC    CL4'CANF'
         DC    CL4'CA2D'
         DC    CL4'CBID'
         DC    CL4'CBUG'
         DC    CL4'CCCO'
         DC    CL4'CCLS'
         DC    CL4'CCTL'
         DC    CL4'CCVB'
         DC    CL4'CDIF'
         DC    CL4'CDSP'
         DC    CL4'CD2A'
         DC    CL4'CFDP'
         DC    CL4'CFDW'
         DC    CL4'CFPW'
         DC    CL4'CGDR'
         DC    CL4'CIDB'
         DC    CL4'CINS'
         DC    CL4'CIN1'
         DC    CL4'CIN2'
         DC    CL4'CIPS'
         DC    CL4'CIVL'
         DC    CL4'CKCL'
         DC    CL4'CLNK'
         DC    CL4'CMSF'
         DC    CL4'CMST'
         DC    CL4'CONV'
         DC    CL4'CSCH'
         DC    CL4'CSMV'
         DC    CL4'CSPA'
         DC    CL4'CSPC'
         DC    CL4'CSSN'
         DC    CL4'CSTG'
         DC    CL4'CTCO'
         DC    CL4'CULE'
         DC    CL4'CUST'
         DC    CL4'CVIN'
         DC    CL4'CVMO'
         DC    CL4'CXDI'
         DC    CL4'CXFR'
         DC    CL4'CXMU'
         DC    CL4'CXPR'
         DC    CL4'EABN'
         DC    CL4'EABX'
         DC    CL4'EBRG'
         DC    CL4'EBST'
         DC    CL4'ECKP'
         DC    CL4'ECMS'
         DC    CL4'EDBR'
         DC    CL4'EDBW'
         DC    CL4'EDTE'
         DC    CL4'EINP'
         DC    CL4'EMSG'
         DC    CL4'ENRI'
         DC    CL4'ENRT'
         DC    CL4'EOPD'
         DC    CL4'EOPT'
         DC    CL4'EOUT'
         DC    CL4'EPRM'
         DC    CL4'EPTV'
         DC    CL4'EQBL'
         DC    CL4'EQOC'
         DC    CL4'ERRE'
         DC    CL4'ESAT'
         DC    CL4'ESMG'
         DC    CL4'ESNP'
         DC    CL4'ESPM'
         DC    CL4'ESTA'
         DC    CL4'ETRM'
         DC    CL4'ETUN'
         DC    CL4'EVAM'
         DC    CL4'EVEX'
         DC    CL4'EVIO'
         DC    CL4'EVOC'
         DC    CL4'EVOP'
         DC    CL4'EVSV'
         DC    4X'FF'
IGZTBL5  DC    CL5'CONVX'
         DC    CL5'TCAM2'
         DC    CL5'TCAM4'
         DC    CL5'TCM21'
         DC    CL5'TCM41'
         DC    CL5'TCM42'
         DC    5X'FF'
ILBOTBL3 DC    CL3'ABN'
         DC    CL3'ACP'
         DC    CL3'ACS'
         DC    CL3'ANE'
         DC    CL3'ANF'
         DC    CL3'ATB'
         DC    CL3'BEG'
         DC    CL3'BID'
         DC    CL3'BIE'
         DC    CL3'BII'
         DC    CL3'BUG'
         DC    CL3'CHN'
         DC    CL3'CJS'
         DC    CL3'CKP'
         DC    CL3'CLS'
         DC    CL3'CMM'
         DC    CL3'CT1'
         DC    CL3'CVB'
         DC    CL3'DBE'
         DC    CL3'DBG'
         DC    CL3'DCI'
         DC    CL3'DSP'
         DC    CL3'DSS'
         DC    CL3'DTE'
         DC    CL3'D01'
         DC    CL3'D10'
         DC    CL3'D11'
         DC    CL3'D12'
         DC    CL3'D13'
         DC    CL3'D14'
         DC    CL3'D20'
         DC    CL3'D21'
         DC    CL3'D22'
         DC    CL3'D23'
         DC    CL3'D24'
         DC    CL3'D25'
         DC    CL3'D26'
         DC    CL3'EFL'
         DC    CL3'ERR'
         DC    CL3'ETB'
         DC    CL3'EXT'
         DC    CL3'FLW'
         DC    CL3'FPW'
         DC    CL3'GDO'
         DC    CL3'GPW'
         DC    CL3'IDB'
         DC    CL3'IDR'
         DC    CL3'IDT'
         DC    CL3'IFB'
         DC    CL3'IFD'
         DC    CL3'INS'
         DC    CL3'INT'
         DC    CL3'ITB'
         DC    CL3'IVL'
         DC    CL3'LBL'
         DC    CL3'MRG'
         DC    CL3'MSC'
         DC    CL3'MSG'
         DC    CL3'NBL'
         DC    CL3'NED'
         DC    CL3'NTR'
         DC    CL3'OCR'
         DC    CL3'PRM'
         DC    CL3'PTV'
         DC    CL3'QIO'
         DC    CL3'QSS'
         DC    CL3'QSU'
         DC    CL3'REC'
         DC    CL3'RNT'
         DC    CL3'SAM'
         DC    CL3'SCD'
         DC    CL3'SCH'
         DC    CL3'SDB'
         DC    CL3'SGM'
         DC    CL3'SMG'
         DC    CL3'SMV'
         DC    CL3'SND'
         DC    CL3'SNT'
         DC    CL3'SPA'
         DC    CL3'SPI'
         DC    CL3'SPN'
         DC    CL3'SQA'
         DC    CL3'SRT'
         DC    CL3'SRV'
         DC    CL3'SSN'
         DC    CL3'STG'
         DC    CL3'STI'
         DC    CL3'STN'
         DC    CL3'STR'
         DC    CL3'STT'
         DC    CL3'SYN'
         DC    CL3'TC0'
         DC    CL3'TC2'
         DC    CL3'TC3'
         DC    CL3'TEF'
         DC    CL3'TRN'
         DC    CL3'UST'
         DC    CL3'UTB'
         DC    CL3'VCO'
         DC    CL3'VIO'
         DC    CL3'VMO'
         DC    CL3'VOC'
         DC    CL3'VTR'
         DC    CL3'WAT'
         DC    CL3'WTB'
         DC    CL3'XDI'
         DC    CL3'XMU'
         DC    CL3'XPR'
         DC    3X'FF'
ILBOTBL4 DC    CL4'COM0'
         DC    4X'FF'
*
MODTABLE DS    300CL8                  MODULE NAME TABLE
MODTBEND DS    CL8                     END OF MODULE NAME TABLE
*********************************************************************
*             REGISTER EQUATES                                      *
*********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
